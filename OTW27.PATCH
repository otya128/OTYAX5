diff -u OTW.TXT OTW27
--- OTW.TXT
+++ OTW27
@@ -198,6 +198,8 @@
  OTW_IMAGE_INITARRAY
  WIN_WID[0]=&Hdeadbeef
 END
+VAR WIN_ROOTWND
+VAR WIN_ROOTWND2
 DIM IMAGE_PTR[0]
 DIM IMAGE_HEIGHT[0]
 DIM IMAGE_WIDTH[0]
@@ -250,6 +252,10 @@
 VAR MENUCTL
 VAR MENU_STYLE_SEPARATOR
 VAR MENU_SEPARATOR_HEIGHT
+VAR MENU_STYLE_CHILD
+VAR MENU_CHILD_MARK_W
+VAR MENU_CHILD_MARK_H
+VAR MENU_NOTIFID
 DEF OTW_MENU_INITARRAY
  PrintConsoleln "Init menu..."
  MENU_ITEMMAX=256
@@ -261,6 +267,9 @@
  MENU_ISTYLE=NewArray(MENU_ITEMMAX)
  MENU_STYLE_SEPARATOR=1
  MENU_SEPARATOR_HEIGHT=4
+ MENU_STYLE_CHILD=2
+ MENU_CHILD_MARK_W=4
+ MENU_CHILD_MARK_H=4
  MENU_IVAR=NewArray(MENU_ITEMMAX)
  OTW_INITLIST MENU_INEXT
  MENU_ITEMFREE=1
@@ -278,6 +287,7 @@
  MENU_NEXT=MENU_ITEM
  OTW_INITLIST MENU_NEXT
  MENU_FREE=1
+ MENU_NOTIFID=&HDEADFEED
  VAR E
 END
 'FILE
@@ -289,10 +299,12 @@
  ASSOC_TYP$=NewArray$(0)
  ASSOC_EXT$=NewArray$(0)
  ASSOC_NAME$=NewArray$(0)
+ ASSOC_LEN=0
  VAR E=AssociateFile("*","","EDITORSEL")
  E=AssociateFile("*","TXT","TXTED")
  E=AssociateFile("*","PRG","PRGED")
  E=AssociateFile("*","MML","MPLAY")
+ E=AssociateFile("*","LNK","LINKOPEN")
  E=AssociateFile("/","","OTYFIL")
 END
 DEF GetAssociatedIndex(TYP$,EXT$)
@@ -338,7 +350,7 @@
  VAR EXT$=GetFileExtension$(F$)
  VAR PRG$=GetAssociatedProgram$(TYPE$,EXT$)
  VAR PRC
- NewProcess PRG$,F$ OUT PRC,E
+ NewProcess PRG$,EscapeArg$(F$) OUT PRC,E
  IF E THEN RETURN E
  RETURN 0
 END
@@ -438,7 +450,7 @@
  NewControl "LABEL" OUT CTL_LABELCTL,E
  NewControl "VSCRBAR" OUT CTL_VSCRBARCTL,E
  CTL_PAINTHANDLER=0
- CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
+' CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
  CTL_RBTNUPHANDLER=3
@@ -504,6 +516,8 @@
  E=SetControlMouseMoveHandler(MENUCTL,"MenuMouseMove")
  E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
  E=SetControlChFocusHandler(MENUCTL,"MenuChFocus")
+ E=SetControlNotifHandler(MENUCTL,"MenuNotif")
+ E=SetControlDeleteHandler(MENUCTL,"MenuDelete")
 
 
  OTW_CTL_LIST
@@ -600,12 +614,24 @@
  VAR NIM=IM AND 4095
  IM_ID[NIM]=0
  IM_NEXT[NIM]=IM_FREE
- CALL IM_DEL_HANDLER$[NIM],IM
+ IF CHKCALL(IM_DEL_HANDLER$[NIM])THEN
+  CALL IM_DEL_HANDLER$[NIM],IM
+ ENDIF
  IM_KEY_HANDLER$[NIM]=""
  IM_DEL_HANDLER$[NIM]=""
  ERR=0
  IM_FREE=NIM
 END
+DEF DeleteAllIM OUT ERR
+ VAR L=LEN(IM_ID)-1,I
+ ERR=0
+ FOR I=0TO L
+  VAR ID=IM_ID[I]
+  IF!ID THEN CONTINUE
+  ERR=DeleteIM(ID<<12 OR I)
+  IF ERR THEN RETURN
+ NEXT
+END
 COMMON DEF NewIM OUT IM,ERR
  IM=IM_FREE
  IF!IM THEN
@@ -965,15 +991,33 @@
 COMMON DEF ShowContextMenu MENU,WND
  VAR X=GetMouseX()
  VAR Y=GetMouseY()
- ShowMenuXY MENU AND 4095,WND,X,Y
+ ShowMenuXY MENU,WND,X,Y
 END
 COMMON DEF ShowMenu MENU,WND
  NOIMPL FORMAT$("NOIMPL ShowMenu %D,%D",MENU,WND)
 END
-DEF ShowMenuXY MENU,WND,X,Y
+COMMON DEF ShowMenuXY2 MENU,WND,X,Y
+ IF!CheckMenu(MENU)THEN RETURN
+ Y=Y-MENU_HEIGHT[MENU AND 4095]
+ ShowMenuXY MENU,WND,X,Y
+END
+COMMON DEF ShowMenuXY MENU,WND,X,Y
+ IF!CheckMenu(MENU)THEN RETURN
+ MENU=MENU AND 4095
+ VAR PARENT=WIN_ROOTWND'GetRootWindow()
+ VAR PW=GetWindowWidth(PARENT)
+ VAR PH=GetWindowHeight(PARENT)
+ VAR WIDTH=MENU_WIDTH[MENU]
+ VAR HEIGHT=MENU_HEIGHT[MENU]
+ IF Y+HEIGHT>=PH THEN
+  Y=PH-HEIGHT
+ ENDIF
+ IF X+WIDTH >=PW THEN
+  X=PW-WIDTH
+ ENDIF
  VAR W=WND AND NUWIDMASK
  VAR E
- NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWindow(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],PARENT,WindowFrontFlag()OUT MENU_NUWID[MENU],E
  VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
  SetWindowVar MENU_NUWID[MENU],0,MENU
  MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
@@ -985,6 +1029,34 @@
  VAR W=WND AND NUWIDMASK
  ShowMenuXY MENU,WND,WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W]
 END
+DEF ShowSubMenu PMENU,MENU,Y
+ IF!CheckMenu(MENU)THEN RETURN
+ PMENU=PMENU AND 4095
+ MENU=MENU AND 4095
+ VAR WND=NUWIDToWND(MENU_NUWID[PMENU])
+ VAR X=GetWindowWidth(WND)
+ INC X,WIN_AX[MENU_NUWID[PMENU]]
+ INC Y,WIN_AY[MENU_NUWID[PMENU]]
+ VAR PARENT=WIN_ROOTWND'GetRootWindow()
+ VAR PW=GetWindowWidth(PARENT)
+ VAR PH=GetWindowHeight(PARENT)
+ VAR WIDTH=MENU_WIDTH[MENU]
+ VAR HEIGHT=MENU_HEIGHT[MENU]
+ IF Y+HEIGHT>=PH THEN
+  Y=PH-HEIGHT
+ ENDIF
+ IF X+WIDTH >=PW THEN
+  X=PW-WIDTH
+ ENDIF
+ VAR W=WND AND NUWIDMASK
+ VAR E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],PARENT,WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
+ SetWindowVar MENU_NUWID[MENU],0,MENU
+ MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
+ MENU_SHOW[MENU]=MENU_SHOW[PMENU]'WND
+ WIN_ACTIVENUWID=MENU_NUWID[MENU]
+END
 DEF NewMenuItem(STR$,PREV,STYLE)
  VAR I=MENU_ITEMFREE
  IF!I THEN RETURN 0
@@ -1021,18 +1093,22 @@
   INC MENU_HEIGHT[N],8
  ENDIF
  '3 IS MENU WIDTH
- IF MENU_WIDTH[N]<LEN(STR$)*8+3THEN
-  MENU_WIDTH[N]=LEN(STR$)*8+3
+ VAR W=LEN(STR$)*8+3
+ IF STYLE AND MENU_STYLE_CHILD THEN
+  W=W+MENU_CHILD_MARK_W
  ENDIF
+ IF MENU_WIDTH[N]<W THEN
+  MENU_WIDTH[N]=W
+ ENDIF
 END
 COMMON DEF AddMenuItemSeparator MENU
  AddMenuItemStyle MENU,"",0,MENU_STYLE_SEPARATOR'STYLE
 END
 COMMON DEF AddSubMenuItem MENU,STR$,SUBMENU
- AddMenuItem MENU,STR$,0
+ AddMenuItemStyle MENU,STR$,0,MENU_STYLE_CHILD
  VAR N=MENU AND 4095
  IF!MENU_LAST[N]THEN RETURN
- MENU_ICHILD[MENU_LAST[N]]=SUBMENU AND 4095
+ MENU_ICHILD[MENU_LAST[N]]=SUBMENU' AND 4095
 END
 COMMON DEF CheckMenu(MENU)
  RETURN MENU_ID[MENU AND 4095]==MENU>>12
@@ -1040,26 +1116,49 @@
 DEF MenuLMouseUp WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
  IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
-  VOID SendNotifWindow(GetWindowGroupOwner(WND),0,MENU_IVAR[MENU_SEL[M]])
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_NOTIFID,MENU_IVAR[MENU_SEL[M]])
  ENDIF
  VOID DeleteWindow(WND)
  VOID ActiveWindow(MENU_SHOW[M])
  MENU_SHOW[M]=0
 END
-DEF MenuChFocus WND,C,T,F,_
+DEF MenuChFocus WND,C,T,F,FWND
  IF!F THEN
+  IF IsControlExtend(GetControl(FWND),MENUCTL)THEN RETURN
+  VAR OWNER=GetWindowGroupOwner(WND)
+  WHILE IsControlExtend(GetControl(OWNER),MENUCTL)
+   VAR OW2=GetWindowGroupOwner(OWNER)
+   VOID DeleteWindow(OWNER)
+   OWNER=OW2
+  WEND
   VAR M=GetWindowVar(WND,0)
   VOID DeleteWindow(WND)
  ' VOID ActiveWindow(MENU_SHOW[M])
   MENU_SHOW[M]=0
  ENDIF
 END
+COMMON DEF MenuNotifID()
+ RETURN MENU_NOTIFID
+END
+DEF MenuNotif WND,C,T,NID,I
+ VAR M=GetWindowVar(WND,0)
+ IF NID==MENU_NOTIFID THEN
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_NOTIFID,I)
+  VOID DeleteWindow(WND)
+ ENDIF
+END
+DEF MenuDelete WND,C,T,_,__
+ VAR M=GetWindowVar(WND,0)
+ MENU_SEL[M]=0
+END
 DEF MenuMouseMove WND,C,T,X,Y
  VAR SX=2
  VAR M=GetWindowVar(WND,0)
  VAR I=MENU_ITEM[M],Y1=2,Y2=Y1
  VAR OS=MENU_SEL[M]
  VAR BEG,G,SELF=0'SELECT FLAG
+ VAR W=GetWindowWidth(WND)
+
  WHILE I
   IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
    INC Y2,MENU_SEPARATOR_HEIGHT
@@ -1074,14 +1173,30 @@
    BEG=1
    GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,GetSelectionColor()
    GPRINTWindow WND,SX,Y1,MENU_INAME$[I],GetSelectionTextColor()
+   IF MENU_ICHILD[I]THEN
+    GTRIWindow WND,W-SX-2,Y1+2,W-SX-2,Y1+6,W-SX,Y1+4,GetSelectionTextColor()
+    VAR IC=MENU_ICHILD[I]
+    IF CheckMenu(IC)THEN
+     ShowSubMenu M,IC,Y1
+    ENDIF
+   ENDIF
    G=0
    ENDIF
    IF!OS THEN BREAK
   ELSE
    IF I==OS THEN
+    IF MENU_ICHILD[OS]THEN
+     IC=MENU_ICHILD[OS]
+     IF CheckMenu(IC)THEN
+      VOID DeleteWindow(NUWIDToWND(MENU_NUWID[IC AND 4095]))
+     ENDIF
+    ENDIF
     IF!BEG&&GBeginWindow(WND)THEN :'BREAK
     GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,WIN_BKGND
     GPRINTWindow WND,SX,Y1,MENU_INAME$[I],&HFF000000
+   IF MENU_ICHILD[I]THEN
+    GTRIWindow WND,W-SX-2,Y1+2,W-SX-2,Y1+6,W-SX,Y1+4,#BLACK
+   ENDIF
     OS=0
     IF BEG THEN BREAK
     BEG=1
@@ -1112,13 +1227,24 @@
  GLINEWindow WND,1,1,1,H-2,RGB(255,255,255)
  VAR M=GetWindowVar(WND,0)
  VAR I=MENU_ITEM[M],Y=2
+ VAR SEL=MENU_SEL[M]
  WHILE I
   IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
    GLINEWindow WND,SX+1,Y+1,W-SX-1,Y+1,RGB(128,128,128)
    GLINEWindow WND,SX+1,Y+2,W-SX-1,Y+2,-1
    INC Y,MENU_SEPARATOR_HEIGHT
   ELSE
-   GPRINTWindow WND,SX,Y,MENU_INAME$[I],&HFF000000
+   VAR TC
+   IF SEL==I  THEN
+    GFILLWindow WND,SX,Y,MENU_WIDTH[M]-SX,Y+7,GetSelectionColor()
+    TC=GetSelectionTextColor()
+   ELSE
+    TC=#BLACK
+   ENDIF
+   IF MENU_ICHILD[I]THEN
+    GTRIWindow WND,W-SX-2,Y+2,W-SX-2,Y+6,W-SX,Y+4,TC
+   ENDIF
+   GPRINTWindow WND,SX,Y,MENU_INAME$[I],TC
    INC Y,8
   ENDIF
   I=MENU_INEXT[I]
@@ -1167,8 +1293,6 @@
  IF!CheckWindow(WND)THEN RETURN 0
  RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
 END
-VAR WIN_ROOTWND
-VAR WIN_ROOTWND2
 COMMON DEF GetRootWindow()
  RETURN WIN_ROOTWND2
 END
@@ -1329,7 +1453,7 @@
  IF (FLG AND 512)!=512THEN
   WindowOnCreate WND,CTL,0,0
  ENDIF
- VOID ActiveWindow(WND)
+ VOID FocusWindow(WND)
 END
 DEF InitWindow WND,ARG1,ARG2
  IF!CheckWindow(WND)THEN RETURN
@@ -1372,7 +1496,7 @@
  ENDIF
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
 'SPANIM SP,"S",-60,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
- SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+'''''' SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSHOW SP
  SPVAR SP,0,WND
  OTW_SPSORT
@@ -1803,8 +1927,14 @@
   WIN_GPARENT[NUWID]=0
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
-  IF WIN_GROUP[NUWID]THEN 
-   NOIMPL "DeleteWindow - Group"
+  IF WIN_GROUP[NUWID]THEN
+   VAR G=WIN_GROUP[NUWID]
+   WHILE G
+    VAR ERR=DeleteWindow(NUWIDToWND(G))
+    IF ERR THEN RETURN ERR
+    G=WIN_GNEXT[G]
+   WEND
+    WIN_GROUP[NUWID]=0
   ENDIF
   
  ENDIF
@@ -1882,7 +2012,8 @@
   ENDIF
   RepaintAllWindow WND,0,0,0,0
  ENDIF
- VAR G=WIN_GROUP[NUWID],E=ActiveWindow(WND)
+ VAR G=WIN_GROUP[NUWID],E
+ VAR HASMODAL
  WHILE G
   IF WIN_STYLE[G]AND WIN_STYLE_MODAL THEN
    BEEP 
@@ -1890,9 +2021,11 @@
     SPANIM WIN_SP[NUWID]AND 511,6,-10,RGB(128,128,128),-10,RGB(255,255,255)
    ENDIF
    E=FrontWindow(NUWIDToWND(G))
+   HASMODAL=TRUE
   ENDIF
   G=WIN_GNEXT[G]
  WEND
+ IF!HASMODAL THEN E=ActiveWindow(WND)
  RETURN 0
 END
 
@@ -2146,7 +2279,7 @@
  VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
 ' VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
 
- IF!NXT THEN RETURN 'WIN_
+' IF!NXT THEN RETURN 'WIN_
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
   IF WIN_SP[NUWID]THEN
@@ -3053,8 +3186,14 @@
   C=WIN_MENU[NUWID]AND 4095
   VAR I=MENU_ITEM[C]
   VAR X=0
+  VAR S=MENU_SEL[C]
   WHILE I
-   GPRINTWindow WND,X,-9,MENU_INAME$[I],RGB(0,0,0)
+   IF S==I THEN
+    GFILLWindow WND,X,-10,X+LEN(MENU_INAME$[I])*8+2,-2,GetSelectionColor()
+    GPRINTWindow WND,X,-9,MENU_INAME$[I],GetSelectionTextColor()
+   ELSE
+    GPRINTWindow WND,X,-9,MENU_INAME$[I],RGB(0,0,0)
+   ENDIF
    X=X+LEN(MENU_INAME$[I])*8+4
    I=MENU_INEXT[I]
   WEND
@@ -3142,6 +3281,7 @@
  ENDIF
  IF!IsFocusWindow(WND)THEN RETURN
  IF X&&Y>11&&Y<21&&WIN_MENU[NUWID]THEN
+  WindowFrameMenu WND,X,Y
   IF BTN AND CTL_BTNUPFLG THEN
    VAR C=WIN_MENU[NUWID]AND 4095
    IF MENU_ICHILD[MENU_SEL[C]]THEN
@@ -3238,6 +3378,10 @@
   OTW_INITSP 0
  ENDIF
  IF!IsActiveWindow(WND)THEN RETURN
+ WindowFrameMenu WND,X,Y
+END
+DEF WindowFrameMenu WND,X,Y
+ VAR NUWID=WND AND NUWIDMASK
  IF!WIN_MENU[NUWID]THEN RETURN
  VAR C=WIN_MENU[NUWID]AND 4095
  IF!(X&&Y>11&&Y<21)THEN
@@ -4270,12 +4414,25 @@
 VAR OTW_KY2
 VAR OTW_USEBTN
 VAR OTW_USEMEM
+VAR OTW_EXITFLG
+VAR OTW_EXITTIME
+COMMON DEF ExitWin()
+ VAR ERR=DeleteWindow(WIN_ROOTWND2)
+ IF ERR THEN RETURN ERR
+ ERR=DeleteAllIM()
+ IF ERR THEN RETURN ERR
+ OTW_EXITFLG=TRUE
+ OTW_EXITTIME=MAINCNT+60
+ OTW_INIT=FALSE
+ RETURN ERR
+END
 COMMON DEF S_OTW S
  BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
-  KEY 1,"KEY OFF"
+' KEY 1,"KEY OFF"
+  OTW_EXITFLG=0
   OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
   WIN_BTNBACK=RGB(192,192,192)
@@ -4287,7 +4444,7 @@
   PrintConsole "=================="+LF$()
   PrintConsole "Ver 5.0-26"+LF$()
 ' BEEP 94,-1000
-  VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77'34
+  VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77+"V10"'34
   M1$=":1"+G$+"T140<<C8 C8&C2."
   M2$=":2"+G$+"T140<G8 G8&G2."
   M3$=":3"+G$+"T140<E8 E8&E2."
@@ -4339,6 +4496,9 @@
   GCLS RGB(0,224,224)
   GCLS RGB(0,128,128)
   'GCLS RGB(191,191,191)
+  GPUTCHR 0,0,"otya window system 5.0",2,4
+  GPUTCHR 0,240-8,"One moment please...",1,1
+  GPUTCHR 1,240-8,"One moment please...",1,1
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
  ' GCLS RGB(0,192,128)
@@ -4425,7 +4585,7 @@
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
   CLS
   LOCATE 0,29
-  NewProcess"LAUNCHER","" OUT E,E
+' NewProcess"LAUNCHER","" OUT E,E
   NewProcess"TESTIM","" OUT E,E
   NewProcess"ODE","" OUT E,E
  ENDIF
@@ -4664,9 +4824,17 @@
    OTW_OLDBTN=BTN
   ENDIF
  ENDIF
+ IF OTW_EXITFLG&&OTW_EXITTIME>=MAINCNT THEN
+  OTW_EXIT
+ ENDIF
 ' ExitProcess 1
 RETURN
 END
+DEF OTW_EXIT
+ ACLS
+ ExitProcess 0
+ RETURN
+END
   '2     3     4
   ' 
   ' 
@@ -7053,6 +7221,9 @@
 '==================
 VAR OTYDOCCOLOR_CTL
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
+ IF CW==MenuNotifID()THEN
+  RETURN
+ ENDIF
  VAR N$=GetWindowName$(CW)
  IF N$=="B"THEN
   RTESetBold GetWindowVar(WND,0),F
@@ -7305,6 +7476,7 @@
 VAR OTYFIL_MFIL
 VAR OTYFIL_MUPD
 VAR OTYFIL_MNEWFOL
+VAR OTYFIL_MNEWTXT
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
 DIM OTYFILICODIR[0]
@@ -7455,13 +7627,24 @@
  NewWindow GetTextBoxControl(),"",NAME,11,W-NAME,8,WND,0 OUT NAMEW,E
  VAR BW=24
  NewWindow GetButtonControl(),"OK",(W-BW) DIV 2,22,BW,10,WND,0 OUT W2,E
- SetWindowName WND,"New Folder"
+ IF A1 THEN
+  SetWindowVar WND,1,A1
+  SetWindowName WND,"New File"
+ ELSE
+  SetWindowName WND,"New Folder"
+ ENDIF
  SetWindowVar WND,0,NAMEW
 END
 COMMON DEF OTYFILNEWFOLNOTIF WND,CTL,T,A1,A2
  IF CheckWindow(A1)&&IsControlExtend(GetControl(A1),GetButtonControl())THEN
+  VAR FLG=GetWindowVar(WND,1)
   VAR FOLNAME$=GetWindowName$(GetWindowVar(WND,0))
-  VAR ERR=NewDir(FOLNAME$)
+  VAR ERR
+  IF FLG THEN
+   SaveFile FOLNAME$,"" OUT ERR
+  ELSE
+   ERR=NewDir(FOLNAME$)
+  ENDIF
   IF ERR THEN
    VOID MessageBox(WND,"Files","error:0x"+HEX$(ERR,8),MessageBoxOK())
    RETURN
@@ -7640,11 +7823,11 @@
  ENDIF
  void(repaintWindow(WND))
 END
-DEF OTYFIL_NEWFOL WND
- VAR E=NewModalDialogBox(OTYFILNEWFOLCTL,"",40+15*8+4,40,WND)
+DEF OTYFIL_NEWFOL WND,FLG
+ VAR E=NewDialogBoxWithArg(OTYFILNEWFOLCTL,"",40+15*8+4,40,WND,TRUE,FLG,0)
 END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
- IF!ID THEN
+ IF ID==MenuNotifID() THEN
   IF POS==OTYFIL_MOPEN THEN
    OTYFIL_OPEN WND
    RETURN
@@ -7678,9 +7861,13 @@
    RETURN
   ENDIF
   IF POS==OTYFIL_MNEWFOL THEN
-   OTYFIL_NEWFOL WND
+   OTYFIL_NEWFOL WND,0
    RETURN
   ENDIF
+  IF POS==OTYFIL_MNEWTXT THEN
+   OTYFIL_NEWFOL WND,1
+   RETURN
+  ENDIF
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -7756,13 +7943,18 @@
  OTYFIL_MFIL=8
  OTYFIL_MUPD=9
  OTYFIL_MNEWFOL=10
+ OTYFIL_MNEWTXT=11
+ VAR NEWMENU
+ NewMenu OUT NEWMENU,E
+ AddMenuItem NEWMENU,"Folder",OTYFIL_MNEWFOL
+ AddMenuItem NEWMENU,"Text",OTYFIL_MNEWTXT
  AddMenuItem MENU,"Open",OTYFIL_MOPEN
  AddMenuItem MENU,"Copy",OTYFIL_MCOPY
  AddMenuItem MENU,"Cut",OTYFIL_MCUT
  AddMenuItem MENU,"Paste",OTYFIL_MPASTE
  AddMenuItem MENU,"Delete",OTYFIL_MDEL
  AddMenuItem MENU,"Rename",OTYFIL_MREN
- AddMenuItem MENU,"New Folder",OTYFIL_MNEWFOL
+ AddSubMenuItem MENU,"New",NEWMENU
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  OTYFIL_CONTEXTMENU=MENU
  NewMenu OUT MENU,E
@@ -8453,7 +8645,21 @@
 DIM TB_TASKLIST$[0]
 DIM TB_TASKLIST_WND[0]
 DIM TB_TASKLIST_TW[0]
+VAR TSKBAR_MENU_EXIT
+VAR TSKBAR_WV_MENU
+VAR TSKBAR_WV_PRGITEMS
 COMMON DEF TSKBARNotificationHandler WND,C,T,CW,__
+ IF CW==MenuNotifID()THEN
+  IF __==TSKBAR_MENU_EXIT THEN
+   void ExitWin()
+   RETURN
+  ENDIF
+  IF 0 THEN DIM ARY[0]
+  ARY=GetSBArray(GetWindowVar(WND,TSKBAR_WV_PRGITEMS))
+  IF 0<=__&&__<LEN(ARY)THEN
+   VOID ExecFile(GetString$(ARY[__]))
+  ENDIF
+ ENDIF
  VAR I
  FOR I=0TO LEN(TB_TASKLIST_WND)-1
   IF TB_TASKLIST_WND[I]==CW THEN
@@ -8461,6 +8667,10 @@
    RETURN
   ENDIF
  NEXT
+ IF GetWindowName$(CW)==""THEN
+  ShowMenuXY2 GetWindowVar(WND,TSKBAR_WV_MENU),WND,0,GetWindowY(WND)
+'  ShowContextMenu GetWindowVar(WND,TSKBAR_WV_MENU),WND
+ ENDIF
 END
 COMMON DEF TSKBARP WND,C,T,CW,_
  IF GBeginWindow(WND)THEN RETURN
@@ -8471,6 +8681,44 @@
  GLINEWindow WND,0,1,W,1,RGB(255,255,255)
  IF GEndWindow(WND)THEN RETURN
 END
+DEF TSKBAR_CONTRUCTMENU PRG$,ARY OUT MENU
+ IF 0 THEN DIM DIR$[0]
+ VAR ERR
+ GetFiles PRG$ OUT DIR$,ERR
+ IF ERR THEN MENU=0RETURN
+ NewMenu OUT MENU,ERR
+ IF ERR THEN RETURN
+ VAR I
+ FOR I=0TO LEN(DIR$)-1
+  IF DIR$[I]=="/.."THEN CONTINUE
+  VAR I$=MID$(DIR$[I],1,LEN(DIR$[I]))
+  VAR PATH$=CombinePath$(PRG$,I$)
+  IF DIR$[I][0]=="/"THEN
+   VAR CMENU
+   TSKBAR_CONTRUCTMENU PATH$,ARY OUT CMENU
+   AddSubMenuItem MENU,I$,CMENU
+  ELSE
+   VAR EXT$=GetFileExtension$(I$)
+   ToUpper EXT$
+   IF EXT$=="LNK"THEN
+    VAR RESULT$
+    LoadFile PATH$ OUT RESULT$,ERR
+    IF 0 THEN DIM K$[0],V$[0]
+    LoadConfigFile RESULT$ OUT K$,V$
+    VAR N=FindArray(K$,"name")
+    VAR F=FindArray(K$,"function")
+    IF N!=-1THEN
+     I$=V$[N]
+    ENDIF
+    AddMenuItem MENU,I$,LEN(ARY)
+    PUSH ARY,AllocString(PATH$)
+   ELSE
+    AddMenuItem MENU,I$,LEN(ARY)
+    PUSH ARY,AllocString(PATH$)
+   ENDIF
+  ENDIF
+ NEXT
+END
 COMMON DEF I_TSKBAR
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -8482,6 +8730,9 @@
   NewControl "TSKBAR" OUT TSKBARCTL,E
   E=SetControlPainter(TSKBARCTL,"TSKBARP")
   E=SetControlNotificationHandler(TSKBARCTL,"TSKBARNotificationHandler")
+  TSKBAR_MENU_EXIT=&H1178
+  TSKBAR_WV_MENU=1
+  TSKBAR_WV_PRGITEMS=2
  ENDIF
  VAR SW=GetWindowWidth(GetRootWindow())
  VAR SH=GetWindowHeight(GetRootWindow())
@@ -8496,13 +8747,26 @@
  TB_TASKLIST$=NewArray$(TCM)
  TB_TASKLIST_WND=NewArray(TCM)
  TB_TASKLIST_TW=NewArray(TCM)
-  NewWindow GetToggleButtonControl(),"",1,3,TSX-3,11,WND,0OUT TW,E
+ NewWindow GetButtonControl(),"",1,3,TSX-3,11,WND,0OUT TW,E
  FOR TC=0TO TCM-1
   NewWindow GetToggleButtonControl(),"Task"+STR$(TC),TSKW*TC+TC*2+TSX,3,TSKW,11,WND,WindowHideFlag()OUT TW,E
   SetButtonAlignLeft TW
   TB_TASKLIST_WND[TC]=TW
  NEXT
  SetWindowVar WND,0,TW
+ VAR PRG$=CombinePath$(GetHomeDir$(),"programs")
+ VAR MENU,PMENU
+ NewMenu OUT MENU,E
+ DIM ARY[0]
+ TSKBAR_CONTRUCTMENU PRG$,ARY OUT PMENU
+ AddMenuItem MENU,"",-1
+ AddSubMenuItem MENU,"Program",PMENU
+ AddMenuItemSeparator MENU
+ AddMenuItem MENU,"Exit",TSKBAR_MENU_EXIT
+ SetWindowVar WND,TSKBAR_WV_MENU,MENU
+ VAR ARYI=AllocSBArray()
+ SetSBArray ARYI,ARY
+ SetWindowVar WND,TSKBAR_WV_PRGITEMS,ARYI
 END
 DEF UPDATE_TSKBAR
  VAR TSKW=84,TC,TSX=24,TCM=LEN(TB_TASKLIST_TW)
@@ -8567,10 +8831,10 @@
 VAR TSKBAR_TIMER
 VAR TSKBAR_CWND
 COMMON DEF L_TSKBAR
- IF TSKBAR_TIMER!=MAINCNT THEN
+ IF TSKBAR_TIMER!=MAINCNT DIV 10THEN
   UPDATE_TSKBAR
 '  TSKBAR_CWND=OCW
-  TSKBAR_TIMER=MAINCNT DIV 100
+  TSKBAR_TIMER=MAINCNT DIV 10
  ENDIF
  VAR E=UpdateWindow(GetProcessVar())
  IF E THEN ExitProcess 0
@@ -9191,8 +9455,13 @@
  ENDIF
  VAR IM,ERR
  NewIM OUT IM,ERR
+ IF ERR THEN
+  ExitProcess ERR
+  RETURN
+ ENDIF
  ERR=SetIMKeyHandler(IM,"TESTIM_KEY")
  SetProcessVar IM
+ KEY 1,"KEY OFF"
 END
 COMMON DEF L_TESTIM
  VAR X,Y,MMM
@@ -9210,6 +9479,7 @@
  IF!MMM THEN OTW_ENKEY_STATE=0
  IF ProcessIM(GetProcessVar())THEN
   VOID DeleteIM(GetProcessVar())
+  ExitProcess 0
  ENDIF
 END
 VAR OTWTERMCTL
@@ -9585,4 +9855,85 @@
 COMMON DEF L_ODE
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 0
 END
+COMMON DEF I_LINKOPEN
+ VAR CMD$,FIL$,I
+ GetCommandArg GetProcessArgs$(),I OUT CMD$,I
+ GetCommandArg GetProcessArgs$(),I OUT FIL$,I
+ IF I!=-1THEN
+  VAR C2$=GetProcessArgs$()
+  C2$=MID$(C2$,I,LEN(C2$))
+ ENDIF
+ VAR ERR
+ VAR RESULT$
+ LoadFile FIL$ OUT RESULT$,ERR
+ IF ERR THEN
+  ExitProcess ERR
+  RETURN
+ ENDIF
+ IF 0 THEN DIM K$[0],V$[0]
+ LoadConfigFile RESULT$ OUT K$,V$
+ VAR F=FindArray(K$,"function")
+ IF F!=-1THEN
+  VAR P
+  NewProcess V$[F],C2$ OUT P,ERR
+  ExitProcess ERR
+  RETURN
+ ENDIF
+ ExitProcess 1
+END
+COMMON DEF L_LINKOPEN
+END
 
+VAR OTWBENCHCTL
+VAR OTWBENCH_MENU_NEW
+COMMON DEF OTWBENCHNOTIF WND,C,T,A1,A2
+ IF A1==MenuNotifID()THEN
+  IF A2==OTWBENCH_MENU_NEW THEN
+   SetWindowVar WND,0,0
+   SetWindowVar WND,1,0
+   SetWindowVar WND,2,TRUE
+   VOID RepaintWindow(WND)
+  ENDIF
+ ENDIF
+END
+COMMON DEF OTWBENCHPAINTER WND,C,T,XY,WH
+ VAR E=CallBaseControlHandler(WND,C,T,XY,WH)
+ IF GetWindowVar(WND,2)THEN
+  VAR M=GetWindowVar(WND,0)
+  IF!M THEN
+   M=MILLISEC+2000
+   SetWindowVar WND,0,M
+  ENDIF
+  IF M>=MILLISEC THEN
+   VOID RepaintWindow(WND)
+  ENDIF
+  SetWindowVar WND,1,GetWindowVar(WND,1)+1
+ ENDIF
+ IF GBeginWindow(WND)THEN RETURN
+  GPRINTWindow WND,0,0,STR$(GetWindowVar(WND,1)),#BLACK
+ IF GEndWindow(WND)THEN RETURN
+END
+COMMON DEF I_OTWBENCH
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWBENCHCTL THEN
+  ExtendControl "Benchmark",GetWindowControl() OUT OTWBENCHCTL,E
+  E=SetControlPainter(OTWBENCHCTL,"OTWBENCHPAINTER")
+  E=SetControlNotifHandler(OTWBENCHCTL,"OTWBENCHNOTIF")
+  OTWBENCH_MENU_NEW=1
+ ENDIF
+ VAR MENU
+ NewTopLevelStyleWindow OTWBENCHCTL,"Benchmark",128,64,WINDOWMENUSTYLE() OUT WND,E
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"New",OTWBENCH_MENU_NEW
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ SetProcessVar WND
+END
+COMMON DEF L_OTWBENCH
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
