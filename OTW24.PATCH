diff -u OTW.TXT OTW24
--- OTW.TXT
+++ OTW24
@@ -440,7 +440,7 @@
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
- E=SetControlFramePainter(CTL_WINDOWCTL,"WindowPainter")
+ E=SetControlFramePainter(CTL_WINDOWCTL,"WindowFramePainter")
  E=SetControlLMouseDownHandler(CTL_WINDOWCTL,"WindowLMouseDown")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
@@ -1992,6 +1992,7 @@
      OTW_CLIPWindow B
      MOVEF=1
     ENDIF
+   VOID RepaintWindow(NUWIDTOWND(B))
     IF WIN_CHILD[B]THEN
      B=WIN_CHILD[B]
      CONTINUE
@@ -2006,6 +2007,7 @@
     ENDIF
     B=WIN_NEXT[B]
    WEND
+   VOID RepaintWindow(WND)
    RepaintAllWindow NUWIDToWND(WIN_PARENT[NUWID]),OX,OY,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -2025,6 +2027,7 @@
  WIN_HEIGHT[NUWID]=H
  OTW_CLIPWindow NUWID
  OTW_CLIPCHILD NUWID
+ RepaintAllWindow WND,0,0,0,0
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],OW,OH
 'WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
@@ -2740,6 +2743,13 @@
  E=GENDWindow(WND)
 END
 DEF WindowPainter WND,CTL,TYPE,A1,A2
+ WindowFramePainter WND,CTL,TYPE,A1,A2
+ VAR E=ReGBeginWindow(WND)
+ IF!E THEN
+  GCLSWindow WND,WIN_BACKGND[WND AND NUWIDMASK]
+ ENDIF
+END
+DEF WindowFramePainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  VAR NUWID=WND AND NUWIDMASK
@@ -2755,7 +2765,7 @@
  VAR C=WIN_BKGND
  DEC H,SH
  DEC W,SW
- GCLSWindow WND,WIN_BACKGND[NUWID]
+ 'GCLSWindow WND,WIN_BACKGND[NUWID]
  GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
@@ -8198,6 +8208,15 @@
 COMMON DEF L_IMGVIEW
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+DIM CMATRIX[4,4]
+DEF CONVDITHERCOLOR X,Y,R,G,B OUT RGB
+ VAR PX=X MOD 4
+ VAR PY=Y MOD 4
+ IF CMATRIX[PX,PY]>=R THEN R=0 ELSE R=255
+ IF CMATRIX[PX,PY]>=G THEN G=0 ELSE G=255
+ IF CMATRIX[PX,PY]>=B THEN B=0 ELSE B=255
+ RGB=RGB(R,G,B)
+END
 COMMON DEF COLORPAINT WND,CTL,TYP,XY,WH
  VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH)
  VAR X=XY AND 65535,Y=XY>>16
@@ -8217,7 +8236,9 @@
  ?"AAAAA",X,Y,W,H
  FOR Y1=Y TO H
   FOR X1=X TO W
-   VAR C=RGB(255,X1*(255/W1),Y1*(255/H1),0)
+   VAR XC=X1*(255/W1)
+   VAR YC=Y1*(255/H1)
+   VAR C=CONVDITHERCOLOR(X1,Y1,255-YC,XC,YC-XC)'RGB(255,X1*(255/W1),Y1*(255/H1),255)
    IF X1==X THEN C=-1
    IF Y1==Y THEN C=-1
    IF X1==H THEN C=-1
@@ -8236,8 +8257,19 @@
  ENDIF
  VAR WND,E
  IF!COLORCTL THEN
-  ExtendControl "COLOR",GetWindowControl() OUT COLORCTL,E
+  CMATRIX=NewArray2(4,4)
+  COPY CMATRIX,"@CMATRIX"
+  VAR I
+  FOR I=0TO 15
+  CMATRIX[I DIV 4,I MOD 4]=CMATRIX[I DIV 4,I MOD 4]*16'DIV 2' 2'8
+  NEXT
+  ExtendControl "COLOR-DITHER",GetWindowControl() OUT COLORCTL,E
   E=SetControlPainter(COLORCTL,"COLORPAINT")
+@CMATRIX
+DATA 00,08,02,10
+DATA 12,04,14,06
+DATA 03,11,01,09
+DATA 15,07,13,05
  ENDIF
  NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
  SetWindowBackColor WND,0
