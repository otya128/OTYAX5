ACLS
OPTION STRICT
OPTION DEFINT
VAR LF$=CHR$(10)
@OTYAX
GOSUB @OTYAXINIT
GOSUB @OTYAX_MAIN
?"OK
END
'しょきかルーチン
@OTYAXINIT
 ?"OTYAX 5.0
 GOSUB @OTYAXERRORINIT
 GOSUB @OTYAXPROCESSINIT
 GOSUB @OTYAXFILEINIT
 VAR FIRSTPID=0
 VAR FIRSTNUPID=0
 VAR RUNPID
 NewProcess "SH","" OUT FIRSTPID,FIRSTNUPID,RUNPID
 RUNPID=0
RETURN

@OTYAXERRORINIT
 VAR SUCCESS=0
 VAR ERROR_ERROR=1
 VAR ERROR_NOIMPL=2
RETURN
@OTYAXPROCESSINIT
 VAR PROCESS_MAX=128
 DIM PRC_NAME$[PROCESS_MAX]
 DIM PRC_ARGS$[PROCESS_MAX]
 DIM PRC_PID[PROCESS_MAX]
 DIM PRC_STDOUT[PROCESS_MAX]
 DIM PRC_NSTDOUT[PROCESS_MAX]
 DIM PRC_STDERR[PROCESS_MAX]
 DIM PRC_NSTDERR[PROCESS_MAX]
 DIM PRC_STDIN[PROCESS_MAX]
 DIM PRC_NSTDIN[PROCESS_MAX]
 DIM PRC_NEXT[PROCESS_MAX]
 DIM PRC_CHILD[PROCESS_MAX]
 DIM PRC_PARENT[PROCESS_MAX]
 DIM PRC_FLG[PROCESS_MAX]
 VAR PRC_FLG_INIT=1
 VAR PIDCNT=0
 VAR PRC_FREE=1
 _INITFREEPRIC
 DEF _INITFREEPRIC
  VAR I
  FOR I=1 TO PROCESS_MAX-2
   PRC_NEXT[I]=I+1
  NEXT
 END
 VAR RUNNUPID=0
 VAR ERROR_NEW_PROC=8931
RETURN
@OTYAXFILEINIT
 VAR FILES_MAX=1024
 DIM FILES_PID[FILES_MAX]
 DIM FILES_FID[FILES_MAX]
 DIM FILES_NAME$[FILES_MAX]
 DIM FILES_DATA[FILES_MAX]
 DIM FILES_WRITER$[FILES_MAX]
 DIM FILES_READER$[FILES_MAX]
 DIM FILES_CLOSE$[FILES_MAX]
 DIM FILES_NEXT[FILES_MAX]
 VAR ERROR_NOFILE=7676
 VAR ERROR_NOPENFILE=794
 VAR ERROR_NOALLOCFILE=1192
 VAR FILES_FREE=1
 VAR FILES_FIDCNT=0
 _INITFREEFIL
 DEF _INITFREEFIL
  VAR I
  FOR I=1 TO FILES_MAX-2
   FILES_NEXT[I]=I+1
  NEXT
 END
 VAR OTYAX_STDOUT_OPENER$="OUTCONSOLE_OPEN"
 VAR OTYAX_STDIN_OPENER$="INCONSOLE_OPEN"
RETURN

@OTYAX_MAIN
 IF RUNNUPID THEN
  IF PRC_FLG[RUNNUPID] AND PRC_FLG_INIT THEN
   CALL "I_"+PRC_NAME$[RUNNUPID]
   PRC_FLG[RUNNUPID]=PRC_FLG[RUNNUPID] XOR PRC_FLG_INIT
   PRC_NAME$[RUNNUPID]="L_"+PRC_NAME$[RUNNUPID]
  ELSE 
   CALL PRC_NAME$[RUNNUPID]
  ENDIF
  IF PRC_CHILD[RUNNUPID] THEN
   RUNNUPID=PRC_CHILD[RUNNUPID]
  ELSE 
   IF PRC_NEXT[RUNNUPID] THEN
    RUNNUPID=PRC_NEXT[RUNNUPID]
   ELSE
    RUNNUPID=PRC_PARENT[RUNNUPID]
   ENDIF
  ENDIF
 ELSE
  RUNNUPID=FIRSTNUPID
 ENDIF
 GOTO @OTYAX_MAIN
RETURN
'OTYAX PROCESS API
DEF NewProcess NAME$,ARGS$ OUT PID,NUPID,E
 IF PRC_FREE==0 THEN @ERROR
 IF !CHKCALL("I_"+NAME$) THEN @ERROR
 IF !CHKCALL("L_"+NAME$) THEN @ERROR
 INC PIDCNT
 PID=PIDCNT
 NUPID=PRC_FREE
 PRC_FREE=PRC_NEXT[PRC_FREE]
 PRC_NAME$[NUPID]=NAME$
 PRC_ARGS$[NUPID]=ARGS$
 'VAR 
 VAR C=PRC_CHILD[RunNUPID]
 PRC_CHILD[RunNUPID]=NUPID
 PRC_NEXT[NUPID]=C
 PRC_FLG[NUPID]=PRC_FLG_INIT
 IF RUNNUPID THEN
  'TODO:IMPL
 ELSE
  OutConsoleOpen OUT PRC_STDOUT[NUPID],PRC_NSTDOUT[NUPID],E
  InConsoleOpen OUT PRC_STDIN[NUPID],PRC_NSTDIN[NUPID],E
 ENDIF
 E=SUCCESS
 RETURN
 @ERROR
 PID=0
 NUPID=0
 E=ERROR_NEW_PROC
END
'OTYAX FILE API
DEF FileOpen(NAME$)
 RETURN 0
END
DEF FileWrite(FID,NUFID,DAT$)
 IF FILES_FID[NUFID]!=FID THEN
  RETURN ERROR_NOPENFILE
 ENDIF
 VAR E=CALL(FILES_WRITER$[NUFID],NUFID,DAT$)
 RETURN SUCCESS
END
DEF FileRead FID,NUFID,LEN OUT DAT$,E
 IF CheckFID(FID,NUFID) THEN
  E=ERROR_NOPENFILE
  RETURN
 ENDIF
 IF !LEN THEN RETURN
 CALL FILES_READER$[NUFID],NUFID,LEN OUT DAT$,E
 E=SUCCESS
END
DEF AllocFile OUT FID,NUFID,E
 IF FILES_FREE==0 THEN
  E=ERROR_NOALLOCFILE
  RETURN
 ENDIF
 INC FILES_FIDCNT
 NUFID=FILES_FREE
 FILES_FID[NUFID]=FILES_FIDCNT
 FID=FILES_FIDCNT
 FILES_FREE=FILES_NEXT[FILES_FREE]
 E=SUCCESS
END
'FIDがせいじょうならSUCCESS
DEF CheckFID(FID,NUFID)
 RETURN FILES_FID[NUFID]!=FID
END
DEF SetWriter(FID,NUFID,FUNC$)
 IF CheckFID(FID,NUFID) THEN RETURN ERROR_NOFILE
 FILES_WRITER$[NUFID]=FUNC$
 RETURN SUCCESS
END
DEF SetReader(FID,NUFID,FUNC$)
 IF CheckFID(FID,NUFID) THEN RETURN ERROR_NOFILE
 FILES_READER$[NUFID]=FUNC$
 RETURN SUCCESS
END
DEF OutConsoleOpen OUT FID,NUFID,E
 AllocFile OUT FID,NUFID,E
 E=SETWRITER(FID,NUFID,"CONSOLEWRITERSTR")
END
DEF InConsoleOpen OUT FID,NUFID,E
 AllocFile OUT FID,NUFID,E
 E=SETREADER(FID,NUFID,"CONSOLEREADERSTR")
END
DEF ConsoleWriterStr(NUFID,DAT$)
 'VAR 
 VAR L=LEN(DAT$)-1
 VAR I
 ?DAT$;
' FOR I=0 TO L
'  VAR D$=MID$(DAT$,I,1)
'   PRINT D$;
' NEXT
 RETURN SUCCESS
END
DEF ConsoleReaderStr NUFID,LEN OUT DAT$,E
 DAT$=INKEY$()
 E=SUCCESS
 IF!LEN(DAT$) THEN
  RETURN
 ENDIF
 VAR K$,I
 FOR I=0TO LEN-2
  K$=INKEY$()
  IF !LEN(K$)THEN RETURN
  DAT$=DAT$+K$
 NEXT
END
DEF PRINTCONSOLE STR$
 VAR E=FileWrite(PRC_STDOUT[RUNNUPID],PRC_NSTDOUT[RUNNUPID],STR$)
END
DEF INKEYCONSOLE$(LEN)
 VAR STR$,E
 FileRead PRC_STDIN[RUNNUPID],PRC_NSTDIN[RUNNUPID],LEN OUT STR$,E
 RETURN STR$
END
'OTYAX APPS
DEF I_SH
 PrintConsole "OTYAX SH"+LF$
END
DEF L_SH
 PrintConsole INKEYCONSOLE$(128)
END
