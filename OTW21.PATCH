diff -u OTW.TXT OTW21
--- OTW.TXT
+++ OTW21
@@ -4,7 +4,8 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
-VAR WIN_BKGND
+VAR WIN_BKGND,WIN_BTNBACK
+VAR OTW_ENABLE_SHADOW
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOVWINNUWID
 '1:MOV
@@ -244,6 +245,8 @@
 VAR MENU_IDCNT
 VAR MENU_FREE
 VAR MENUCTL
+VAR MENU_STYLE_SEPARATOR
+VAR MENU_SEPARATOR_HEIGHT
 DEF OTW_MENU_INITARRAY
  PrintConsoleln "Init menu..."
  MENU_ITEMMAX=256
@@ -253,6 +256,8 @@
  MENU_ICHILD=NewArray(MENU_ITEMMAX)
  MENU_IPARENT=NewArray(MENU_ITEMMAX)
  MENU_ISTYLE=NewArray(MENU_ITEMMAX)
+ MENU_STYLE_SEPARATOR=1
+ MENU_SEPARATOR_HEIGHT=4
  MENU_IVAR=NewArray(MENU_ITEMMAX)
  OTW_INITLIST MENU_INEXT
  MENU_ITEMFREE=1
@@ -334,6 +339,7 @@
 VAR CTL_DRPDWNCTL
 
 VAR CTL_LSTBOXCTL
+VAR CTL_DRPDWNBOXCTL
 'CONTROL STYLE
 'クリックしてもFOCUSしない
 VAR CTL_STYLE_NCFOCUS
@@ -427,10 +433,15 @@
  E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
  E=SetControlChFocusHandler(MENUCTL,"MenuChFocus")
 
+
+ OTW_CTL_LIST
  NewControl "DROPDOWNLIST" OUT CTL_DRPDWNCTL,E
  E=SetControlPainter(CTL_DRPDWNCTL,"DropDownListPainter")
- E=SetControlMouseMoveHandler(CTL_DRPDWNCTL,"DropDownListMouseMove")
- OTW_CTL_LIST
+ E=SetControlLMouseDownHandler(CTL_DRPDWNCTL,"DropDownListLMD")
+ E=SetControlLMouseUpHandler(CTL_DRPDWNCTL,"DropDownListLMU")
+
+ ExtendControl "DROPDOWNLISTBOX",GetListBoxControl() OUT CTL_DRPDWNBOXCTL,E
+ E=SetControlChFocusHandler(CTL_DRPDWNBOXCTL,"DropDownListBoxChFocus")
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
  CTL_CID[0]=&Hdeadbeef
@@ -457,6 +468,7 @@
  E=SetControlLMouseDownHandler(CTL_LSTBOXCTL,"ListBoxLMD")
  E=SetControlLDoubleClickHandler(CTL_LSTBOXCTL,"ListBoxLMD")
  E=SetControlDeleteHandler(CTL_LSTBOXCTL,"ListBoxDelete")
+ E=SetControlResizeHandler(CTL_LSTBOXCTL,"ListBoxResize")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -503,6 +515,9 @@
 COMMON DEF GetNumUpDownControl()
  RETURN CTL_NUMUPDWNCTL
 END
+COMMON DEF GetDropDownListControl()
+ RETURN CTL_DRPDWNCTL
+END
 'CONTROL
 COMMON DEF FindControl(NAME$)
  VAR I
@@ -588,6 +603,16 @@
  CTL_HANDLER$[CTL AND 4095,CTL_LBTNDWNHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlRMouseUpHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_RBTNUPHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlRMouseDownHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_RBTNDWNHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlClickFrameHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
@@ -685,7 +710,7 @@
 COMMON DEF ClipboardContainsText()
  RETURN CLPBRDCTXT
 END
-COMMON DEF ClipboardGetText()
+COMMON DEF ClipboardGetText$()
  IF CLPBRDCTXT THEN RETURN CLPBRD$
  RETURN ""
 END
@@ -724,21 +749,30 @@
  INC MENU_IDCNT
  E=0
  MENU_ID[MENU_FREE]=MENU_IDCNT
- MENU_HEIGHT[MENU_FREE]=1
- MENU_WIDTH[MENU_FREE]=2
+ MENU_HEIGHT[MENU_FREE]=4
+ MENU_WIDTH[MENU_FREE]=0
  MENU=MENU_FREE OR MENU_IDCNT<<12
  MENU_FREE=MENU_NEXT[MENU_FREE]
 END
 COMMON DEF SetMenuBar MENU,WND
  NOIMPL FORMAT$("NOIMPL SetMenuBar %D,%D",MENU,WND)
 END
+'===
+'ShowContextMenu
+'MOUSEノCOORDニMENUヲSHOW
+'===
+COMMON DEF ShowContextMenu MENU,WND
+ VAR X=GetMouseX()
+ VAR Y=GetMouseY()
+ ShowMenuXY MENU AND 4095,WND,X,Y
+END
 COMMON DEF ShowMenu MENU,WND
  NOIMPL FORMAT$("NOIMPL ShowMenu %D,%D",MENU,WND)
 END
-DEF ShowMenu_ MENU,WND,X,Y
+DEF ShowMenuXY MENU,WND,X,Y
  VAR W=WND AND NUWIDMASK
  VAR E
- NewWindow MENUCTL,"",WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W],MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
  VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
  SetWindowVar MENU_NUWID[MENU],0,MENU
  MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
@@ -746,6 +780,10 @@
  WIN_ACTIVENUWID=MENU_NUWID[MENU]
 ' MENU_SEL[C],WND,X-1,0
 END
+DEF ShowMenu_ MENU,WND,X,Y
+ VAR W=WND AND NUWIDMASK
+ ShowMenuXY MENU,WND,WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W]
+END
 DEF NewMenuItem(STR$,PREV,STYLE)
  VAR I=MENU_ITEMFREE
  IF!I THEN RETURN
@@ -755,15 +793,20 @@
  MENU_IPARENT[I]=PREV
  MENU_ITEMFREE=MENU_INEXT[I]
  MENU_INEXT[I]=0
+ MENU_ISTYLE[I]=STYLE
  RETURN I
 END
 COMMON DEF GetWindowMenu(WND)
  RETURN WIN_MENU[WND AND NUWIDMASK]
 END
 COMMON DEF AddMenuItem MENU,STR$,IVAR
+ AddMenuItemStyle MENU,STR$,IVAR,0'STYLE
+END
+'COMMON?
+DEF AddMenuItemStyle MENU,STR$,IVAR,STYLE
  IF!CheckMenu(MENU)THEN RETURN
  VAR N=MENU AND 4095
- VAR I=NewMenuItem(STR$,MENU_LAST[N],0)
+ VAR I=NewMenuItem(STR$,MENU_LAST[N],STYLE)
  IF!MENU_LAST[N]THEN
   MENU_LAST[N]=I
   MENU_ITEM[N]=I
@@ -771,12 +814,18 @@
   MENU_LAST[N]=I
  ENDIF
  MENU_IVAR[I]=IVAR
- INC MENU_HEIGHT[N],8
- IF MENU_WIDTH[N]<LEN(STR$)*8THEN
-  MENU_WIDTH[N]=LEN(STR$)*8
+ IF STYLE AND MENU_STYLE_SEPARATOR THEN
+  INC MENU_HEIGHT[N],MENU_SEPARATOR_HEIGHT
+ ELSE
+  INC MENU_HEIGHT[N],8
  ENDIF
+ '3 IS MENU WIDTH
+ IF MENU_WIDTH[N]<LEN(STR$)*8+3THEN
+  MENU_WIDTH[N]=LEN(STR$)*8+3
+ ENDIF
 END
 COMMON DEF AddMenuItemSeparator MENU
+ AddMenuItemStyle MENU,"",0,MENU_STYLE_SEPARATOR'STYLE
 END
 COMMON DEF AddSubMenuItem MENU,STR$,SUBMENU
  AddMenuItem MENU,STR$,0
@@ -805,48 +854,72 @@
  ENDIF
 END
 DEF MenuMouseMove WND,C,T,X,Y
+ VAR SX=2
  VAR M=GetWindowVar(WND,0)
- VAR I=MENU_ITEM[M],Y1=1,Y2=1
+ VAR I=MENU_ITEM[M],Y1=2,Y2=Y1
  VAR OS=MENU_SEL[M]
- VAR BEG,G
+ VAR BEG,G,SELF=0'SELECT FLAG
  WHILE I
+  IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
+   INC Y2,MENU_SEPARATOR_HEIGHT
+   GOTO @SKIP
+  ENDIF
   INC Y2,8
   IF Y1<=Y&&Y2>Y THEN
+   SELF=1
    IF OS!=I&&!G THEN 
    MENU_SEL[M]=I
    IF!BEG&&GBeginWindow(WND)THEN :'BREAK
    BEG=1
-   GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(0,0,255)
-   GPRINTWindow WND,1,Y1,MENU_INAME$[I],-1
+   GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,RGB(0,0,255)
+   GPRINTWindow WND,SX,Y1,MENU_INAME$[I],-1
    G=0
    ENDIF
    IF!OS THEN BREAK
   ELSE
    IF I==OS THEN
     IF!BEG&&GBeginWindow(WND)THEN :'BREAK
-    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,WIN_BKGND
-    GPRINTWindow WND,1,Y1,MENU_INAME$[I],&HFF000000
+    GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,WIN_BKGND
+    GPRINTWindow WND,SX,Y1,MENU_INAME$[I],&HFF000000
     OS=0
     IF BEG THEN BREAK
     BEG=1
    ENDIF
   ENDIF
+  @SKIP
   Y1=Y2
   I=MENU_INEXT[I]
  WEND
+ IF!SELF THEN
+  MENU_SEL[M]=0
+ ENDIF
  IF BEG THEN BEG=GEndWindow(WND)
 END
 DEF MenuPainter WND,C,T,XY,WH
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,WIN_BKGND
+ VAR SX=2
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  GBOXWindow WND,0,0,W,H,&HFF000000
+ GBOXWindow WND,1,1,W-1,H-1,RGB(128,128,128)
+ 
+ GLINEWindow WND,0,0,W-1,0,WIN_BKGND
+ GLINEWindow WND,0,0,0,H-1,WIN_BKGND
+ 
+ GLINEWindow WND,1,1,W-2,1,RGB(255,255,255)
+ GLINEWindow WND,1,1,1,H-2,RGB(255,255,255)
  VAR M=GetWindowVar(WND,0)
- VAR I=MENU_ITEM[M],Y=1
+ VAR I=MENU_ITEM[M],Y=2
  WHILE I
-  GPRINTWindow WND,1,Y,MENU_INAME$[I],&HFF000000
-  INC Y,8
+  IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
+   GLINEWindow WND,SX+1,Y+1,W-SX-1,Y+1,RGB(128,128,128)
+   GLINEWindow WND,SX+1,Y+2,W-SX-1,Y+2,-1
+   INC Y,MENU_SEPARATOR_HEIGHT
+  ELSE
+   GPRINTWindow WND,SX,Y,MENU_INAME$[I],&HFF000000
+   INC Y,8
+  ENDIF
   I=MENU_INEXT[I]
  WEND
  VAR E=GEndWindow(WND)
@@ -1073,12 +1146,29 @@
 DEF SPAllocWindow WND
  INC OTW_TOPLEVELCNT
  VAR SP=2,NUWID=WND AND NUWIDMASK
+ IF TRUE THEN
+  VAR SP2
+  SPSET 2,511,0 OUT SP
+  IF OTW_ENABLE_SHADOW THEN
+   SPSET 2,511,0 OUT SP2
+   SPVAR SP,1,SP2
+   SPLINK SP2,SP
+   SPSCALE SP2,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+   SPCOLOR SP2,RGB(128,063,063,063)
+   SPOFS SP2,3,3,1
+   SPSHOW SP2
+   SPVAR SP2,0,WND
+  ENDIF
+  WIN_SP[NUWID]=SP OR 512
+ ELSE
+ 'FOR 3.0.X?
  WHILE SPVAR(SP,0)
   SP=(SP+1)MOD 255
  WEND
  WIN_SP[NUWID]=SP OR 512
  'SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
  SPSET SP,0
+ ENDIF
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
  SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSHOW SP
@@ -1331,7 +1421,7 @@
  WindowOnCreate WND,CTL
  VOID ActiveWindow(WND)
 END
-COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
+COMMON DEF NewDialogBoxWithArg(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,A1,A2)
  IF!CheckControl(CTL)THEN
   RETURN CTL_INVALIDID
  ENDIF
@@ -1344,14 +1434,18 @@
  VAR WND,E
  IF AX<0THEN AX=0
  IF AY<0THEN AY=0
- NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag() OUT WND,E
+ NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag()OR 512 OUT WND,E
  IF FLAG THEN
   WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
  ENDIF
  IF E THEN RETURN E
+ InitWindow WND,A1,A2
  E=JoinWindowGroup(OWNER,WND)
  RETURN E
 END
+COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
+ RETURN NewDialogBoxWithArg(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,0,0)
+END
 COMMON DEF NewModalDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER)
  RETURN NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,1)
 END
@@ -1410,6 +1504,10 @@
  WIN_NAME$[NUWID]=""
  IF WIN_SP[NUWID]THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
+  IF OTW_ENABLE_SHADOW THEN
+   SPVAR SPVAR(WIN_SP[NUWID]AND 511,1),0,0
+   SPCLR SPVAR(WIN_SP[NUWID]AND 511,1)
+  ENDIF
   SPCLR WIN_SP[NUWID]AND 511
   WIN_SP[NUWID]=0
   DEC OTW_TOPLEVELCNT
@@ -1624,9 +1722,14 @@
  IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN
   WIN_HIDE[NUWID]=FALSE
   WIN_STYLE[NUWID]=WIN_STYLE[NUWID] AND NOT WIN_STYLE_HIDE
+  IF WIN_SP[NUWID]THEN
+   OTW_SPSHOW NUWID
+   OTW_SPCHR NUWID
+  ENDIF
  ELSE
   RETURN 0
  ENDIF
+ OTW_DrawMap NUWID
  RETURN RepaintWindow(WND)
 END
 COMMON DEF HideWindow(WND)
@@ -1635,6 +1738,9 @@
  IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN RETURN 0
  WIN_HIDE[NUWID]=TRUE
  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_HIDE
+ IF WIN_SP[NUWID]THEN
+  OTW_SPHIDE NUWID 
+ ENDIF
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -1737,7 +1843,6 @@
   GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_BKGND
   GCOPY OTW_GP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   OTW_SPCHR NUWID
-  OTW_DrawMap WIN_PARENT[NUWID]
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  '   B=WIN_CHILD[NXT]
@@ -1793,6 +1898,7 @@
  OTW_CLIPWindow NUWID
  OTW_CLIPCHILD NUWID
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+'WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
 DEF MoveResizeWindowF(WND,X,Y,W,H)
@@ -1868,6 +1974,19 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF RMouseUpWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_RBTNUPHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
+DEF RMouseDownWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_RBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
+DEF RDoubleClickWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ 'FIXME:RDBLCLK
+ RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
 DEF MouseMoveWindowOnFrame(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
@@ -1879,6 +1998,14 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
+DEF RMouseDownWindowOnFrame(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_RBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
+DEF RMouseUpWindowOnFrame(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_RBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
 DEF MouseLeaveWindowOnFrame(WND)
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMMOUSEMVHANDLER,CTL_LEAVEFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
@@ -1939,6 +2066,7 @@
   DEC WIN_MSGCNT[NUWID,TYPE]
  ENDIF
  IF S2!=WIN_MSGS[NUWID]THEN BREAK
+ BREAK
  WEND
  RETURN 0
 END
@@ -2011,6 +2139,18 @@
 'RETURN WIN_FY[WND AND NUWIDMASK]
  RETURN WIN_Y[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]
 END
+'ROOT WINDOWからの ぜっだいざびょう
+COMMON DEF GetWindowAX(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+'RETURN WIN_FX[WND AND NUWIDMASK]
+ RETURN WIN_AX[WND AND NUWIDMASK]+WIN_FW1[WND AND NUWIDMASK]-WIN_AX[WIN_ROOTWND2 AND NUWIDMASK]-WIN_FW1[WIN_ROOTWND2 AND NUWIDMASK]
+END
+'ROOT WINDOWからの ぜっだいざびょう
+COMMON DEF GetWindowAY(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+'RETURN WIN_FY[WND AND NUWIDMASK]
+ RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WIN_ROOTWND2 AND NUWIDMASK]-WIN_FH1[WIN_ROOTWND2 AND NUWIDMASK]
+END
 COMMON DEF GetWindowVar(WND,I)
  RETURN WIN_VAR[WND AND NUWIDMASK,I]
 END
@@ -2023,6 +2163,14 @@
 COMMON DEF IsFocusWindow(WND)
  RETURN(WND AND NUWIDMASK)==WIN_ACTIVENUWID
 END
+COMMON DEF FocusWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR OLD=WIN_ACTIVENUWID
+ WIN_ACTIVENUWID=WND AND NUWIDMASK
+ IF OLD==WIN_ACTIVENUWID THEN RETURN 0
+ VAR E=SendChFocusWindow(NUWIDToWND(OLD),FALSE,WND)
+ E=SendChFocusWindow(WND,TRUE,NUWIDToWND(OLD)) RETURN 0
+END
 COMMON DEF IsActiveWindow(WND)
  VAR N=(WND AND NUWIDMASK)
  VAR P=WIN_ACTIVENUWID
@@ -2032,6 +2180,12 @@
  WEND
  RETURN 0
 END
+COMMON DEF GetMouseX()
+ RETURN OTW_MOUSEX
+END
+COMMON DEF GetMouseY()
+ RETURN OTW_MOUSEY
+END
 VAR WIN_DRAGHANDLER$
 VAR WIN_DRAGHANDLER_A1
 VAR WIN_DRAGHANDLER_A2
@@ -2060,6 +2214,22 @@
  WIN_DRAGHANDLER_WND=0
  RETURN 0
 END
+VAR CAPTURE_WND
+COMMON DEF GetCapture()
+ RETURN CAPTURE_WND
+END
+COMMON DEF SetCapture(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ VAR OLD=CAPTURE_WND
+ CAPTURE_WND=WND
+ RETURN OLD
+END
+COMMON DEF ReleaseCapture(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ IF CAPTURE_WND!=WND THEN RETURN 0
+ CAPTURE_WND=0
+ RETURN 1
+END
 VAR OTW_MOUSECLIPX
 VAR OTW_MOUSECLIPY
 VAR OTW_MOUSECLIPX2
@@ -2216,10 +2386,31 @@
  RETURN 0
 END
 DEF OTW_SPCHR NUWID
- SPSCALE WIN_SP[NUWID] AND 511,1,1
- SPCHR WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
- SPOFS WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID]
+ VAR SP=WIN_SP[NUWID]AND 511
+ IF OTW_ENABLE_SHADOW THEN
+  VAR SP2=SPVAR(SP,1)
+  SPSCALE SP2,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+ ENDIF
+ SPSCALE SP,1,1
+ SPCHR SP,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
+ SPOFS SP,WIN_RX[NUWID],WIN_RY[NUWID]
 END
+DEF OTW_SPSHOW NUWID
+ VAR SP=WIN_SP[NUWID]AND 511
+ IF OTW_ENABLE_SHADOW THEN
+  VAR SP2=SPVAR(SP,1)
+  SPSHOW SP2
+ ENDIF
+ SPSHOW SP
+END
+DEF OTW_SPHIDE NUWID
+ VAR SP=WIN_SP[NUWID]AND 511
+ IF OTW_ENABLE_SHADOW THEN
+  VAR SP2=SPVAR(SP,1)
+  SPHIDE SP2
+ ENDIF
+ SPHIDE SP
+END
 COMMON DEF GPSETWindow WND,X,Y,COL
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2455,6 +2646,7 @@
  SplitInt POS OUT X,Y
  VAR W=GetWindowFrameWidth(WND)
  VAR NUWID=WND AND NUWIDMASK
+ OTW_MOVWINFLG=0
  IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
   '2     3     4
   ' 
@@ -2686,7 +2878,7 @@
  ENDIF
  SPHIDE OTW_MOVWINSP
  MouseClipDef
- OTW_MOVWINFLG=0
+ 'OTW_MOVWINFLG=0
 END
 COMMON DEF IsOwnerDrawWindow(WND)
  RETURN !!(WIN_STYLE[WND AND NUWIDMASK]AND WIN_STYLE_OWNERDRAW)
@@ -2740,7 +2932,7 @@
  VAR B1=RGB(0,0,0)
  VAR B2=-1
  IF TG THEN SWAP B1,B2
- GFILLWindow W,0,0,WI,HE,RGB(192,192,192)
+ GFILLWindow W,0,0,WI,HE,WIN_BTNBACK
  VAR TX
  ON ALIGN GOTO @CENTER,@RIGHT,@LEFT,@DEFAULT
  @CENTER
@@ -2763,14 +2955,17 @@
  ENDIF
 END
 DEF ButtonLMouseUP W,C,T,X,Y
+ IF GetWindowVar(W,1)THEN
  VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
  SetWindowVar W,1,FALSE
  VOID RepaintWindow(W)
+ ENDIF
 'ButtonPainter W,C,T,0,0
 END
 DEF ButtonLMouseDown W,C,T,X,Y
  SetWindowVar W,1,TRUE
  VOID RepaintWindow(W)
+ VOID SetCapture(W)
 'ButtonPainter W,C,T,0,0
 END
 DEF ToggleButtonLMouseUP W,C,T,X,Y
@@ -2783,6 +2978,7 @@
  VAR F=GetWindowVar(W,1)
  SetWindowVar W,1,!F
  VOID RepaintWindow(W)
+ VOID SetCapture(W)
 'ButtonPainter W,C,T,0,0
 END
 COMMON DEF SetButtonAlignLeft WND
@@ -3050,6 +3246,13 @@
 '5:POS
 '6:LEN
 '7:SEL
+COMMON DEF AddArrayListBoxItem WND,ITEM$
+ VAR L=LEN(ITEM$)-1
+ VAR I
+ FOR I=0TO L
+  AddListBoxItem WND,ITEM$[I]
+ NEXT
+END
 COMMON DEF AddListBoxItem WND,ITEM$
  VAR L=GetWindowVar(WND,2)'
  IF!LISTSTR_FREE THEN RETURN
@@ -3069,8 +3272,15 @@
  IF LEN>S THEN DEC LEN,S ELSE LEN=0
  SetScrollBarSize GetWindowVar(WND,4),LEN
 END
+DEF LISTBOX_ADJUSTSCRBAR WND
+ VAR LEN=GetWindowVar(WND,6)
+ VAR S=(GetWindowHeight(WND)-2)DIV 8
+ IF LEN>S THEN DEC LEN,S ELSE LEN=0
+ VAR SCR=GetWindowVar(WND,4)
+ SetScrollBarSize SCR,LEN
+END
 DEF ListBoxLMD WND,CT,T,X,Y
- VAR W=GetWindowWidth(WND)
+ VAR W=GetWindowWidth(WND)-1
  VAR H=GetWindowHeight(WND)
  IF X<=0||Y<=0||X>=W||Y>=H THEN RETURN
  VAR V=GetWindowVar(WND,3)
@@ -3173,6 +3383,14 @@
  GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  E=GEndWindow(WND)
 END
+COMMON DEF ListBoxResize WND,CTL,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ LISTBOX_ADJUSTSCRBAR WND
+ VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+END
 COMMON DEF GetListBoxSelectedText$(WND)
  VAR S=GetWindowVar(WND,7)
  IF!S THEN RETURN""
@@ -3181,6 +3399,89 @@
 COMMON DEF SetChItemListBoxNotif WND,F
  SetWindowVar WND,6,F
 END
+DEF DrawButton WND,X,Y,W,H,PUSHF
+ GFILLWINDOW WND,X,Y,X+W,Y+H,WIN_BTNBACK
+ VAR B1C=RGB(255,255,255)
+ VAR B2C=RGB(0,0,0)
+ IF PUSHF THEN SWAP B1C,B2C
+ GBOXWINDOW WND,X,Y,X+W,Y+H,B1C
+ GLINEWINDOW WND,X,Y+H,X+W,Y+H,B2C
+ GLINEWINDOW WND,X+W,Y,X+W,Y+H,B2C
+ SetWindowDrawPos WND,X+1+PUSHF,Y+1+PUSHF
+END
+DEF DropDownListBtn WND,F
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ VAR BTNW=8
+ VAR BTNH=H
+ DrawButton WND,W-BTNW,H-BTNH,BTNW,BTNH,F
+ GTRIWindow WND,1,5,BTNW-3,5,(BTNW-2) DIV 2,BTNH-4,RGB(0,0,0)
+ GFILLWindow WND,2,2,BTNW-4,4,RGB(0,0,0)
+END
+COMMON DEF DropDownListPainter WND,CT,T,A1,A2
+ IF GBEGINWINDOW(WND)THEN RETURN
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ GCLSWINDOW WND,-1
+ VAR LSTBOX=GetWindowVar(WND,0)
+ IF LSTBOX THEN
+  VAR TXT$=GetListBoxSelectedText$(LSTBOX)
+  GPRINTWINDOW WND,2,2,TXT$,RGB(0,0,0)
+ ENDIF
+ VAR BTNW=8
+ VAR BTNH=H
+ GBOXWINDOW WND,0,0,W-BTNW-1,H,RGB(0,0,0)
+ DropDownListBtn WND,FALSE
+ IF GENDWINDOW(WND)THEN RETURN
+END
+COMMON DEF DropDownListLMD WND,CT,T,X,Y
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ VAR BTNW=8
+ VAR BTNH=H
+ IF W-BTNW<=X THEN
+  IF GBEGINWINDOW(WND)THEN RETURN
+  DropDownListBtn WND,TRUE
+  IF GENDWINDOW(WND)THEN RETURN
+  ShowDropDownListBox WND
+ ENDIF
+END
+COMMON DEF DropDownListLMU WND,CT,T,X,Y
+ IF GBEGINWINDOW(WND)THEN RETURN
+ DropDownListBtn WND,FALSE
+ IF GENDWINDOW(WND)THEN RETURN
+END
+COMMON DEF GetDropDownListBox(WND)
+ VAR LSTBOX=GetWindowVar(WND,0)
+ IF!LSTBOX THEN
+  VAR E
+  NewWindow CTL_DRPDWNBOXCTL,"",0,0,0,0,GetRootWND(),0 OUT LSTBOX,E
+  IF E THEN @ERR
+  SetWindowVar WND,0,LSTBOX
+  IF JoinWindowGroup(WND,LSTBOX) THEN @ERR
+ ENDIF
+ RETURN LSTBOX
+ @ERR
+ RETURN 0
+END
+DEF ShowDropDownListBox WND
+ VAR LSTBOX=GetDropDownListBox(WND)
+ VAR X=GetWindowAX(WND)
+ VAR Y=GetWindowAY(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR H=64
+ INC Y,GetWindowHeight(WND)
+ IF MoveResizeWindow(LSTBOX,X,Y,W,H)||FrontWindow(LSTBOX)||ShowWindow(LSTBOX)||FocusWindow(LSTBOX)THEN @ERR
+ RETURN
+ @ERR
+ RETURN
+END
+COMMON DEF DropDownListBoxChFocus WND,CT,T,F,A2
+ IF!F THEN
+  IF HideWindow(WND)THEN RETURN
+  VOID RepaintWindow(GetParentWindow(WND))
+ ENDIF
+END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
@@ -3190,7 +3491,15 @@
 COMMON DEF SetScrollBarSize W,SIZ
  SetWindowVar W,1,SIZ
  VOID RepaintWindow(W)
+ VAR POS=GetWindowVar(W,2)
+ IF POS>SIZ THEN
+  SetWindowVar W,2,SIZ
+  VOID SendNotifWindow(GetParentWindow(W),W,SIZ)
+ ENDIF
 END
+COMMON DEF GetScrollBarSize(W)
+ RETURN GetWindowVar(W,1)
+END
 COMMON DEF IncScrollBarSize W
  SetWindowVar W,1,GetWindowVar(W,1)+1
  VOID RepaintWindow(W)
@@ -3199,6 +3508,9 @@
  SetWindowVar W,2,POS
  VOID RepaintWindow(W)
 END
+COMMON DEF GetScrollBarPosition(W)
+ RETURN GetWindowVar(W,2)
+END
 DEF VSCRBARPainter W,_,T,XY,WH
  IF GBEGINWindow(W)THEN RETURN
  GCLSWindow W,WIN_BKGND
@@ -3246,6 +3558,7 @@
 END
 DEF VSCRBARLMouseUP W,C,T,X,Y
  SetWindowVar W,3,8
+ VOID ReleaseCapture(W)
 END
 DEF VSCRBARLMouseDown W,C,T,X,Y
  VAR ID=GetWindowVar(W,3)
@@ -3260,6 +3573,7 @@
    ENDIF
    SetWindowVar W,3,ID
   ENDIF
+  VOID SetCapture(W)
   VOID LMouseDownWindow(W)
  ELSE
   SetWindowVar W,3,0
@@ -3280,7 +3594,9 @@
  IF ID==1THEN
   VAR _Y=POS'Y
   IF!SIZ THEN RETURN
-  Y=(Y-9)/((GetWindowHeight(W)-28)/SIZ)
+  VAR __TEMP__#=((GetWindowHeight(W)-28)/SIZ)
+  IF!__TEMP__# THEN RETURN'?
+  Y=(Y-9)/__TEMP__#
   IF Y<0THEN Y=0
   IF Y>SIZ THEN Y=SIZ
   IF Y==_Y THEN RETURN
@@ -3442,7 +3758,9 @@
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
+  WIN_BTNBACK=RGB(192,192,192)
   VAR FM=FREEMEM
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
@@ -3583,7 +3901,7 @@
   PrintConsoleln FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
   CLS
   LOCATE 0,29
-  NewProcess"LAUNCHER","" OUT E,E,E
+  NewProcess"LAUNCHER","" OUT E,E
  ENDIF
 RETURN
 END
@@ -3609,6 +3927,7 @@
 VAR OTW_OLDBTN
 VAR OTW_OLDBTNF
 VAR OLDMOVEMOUSEWINDOW
+VAR OTW_SMOOTH_MOVE_WINDOW
 COMMON DEF L_OTW
  VAR MOVEMOUSE
  UpdateMouse
@@ -3617,14 +3936,17 @@
  VAR NUWID,E
  VAR BTN=UpdateButton()
  IF MOVEMOUSE||BTN THEN
-'  IF WIN_DRAGHANDLER_USE THEN
-'   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
-'ENDIF
+  IF OTW_SMOOTH_MOVE_WINDOW THEN
+   IF WIN_DRAGHANDLER_USE THEN
+    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+ ENDIF
+  ENDIF
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
  IF BTN THEN
   'LEFT MOUSE DOWN
   IF BTN AND OTW_LMOUSEDWN THEN
+   CAPTURE_WND=0
    VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
    IF WIN_ACTIVENUWID!=OA THEN
@@ -3665,17 +3987,85 @@
     CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
     E=ClearWindowDragHandler()
    ELSE
+    VAR NUWIDRAW=NUWID AND 32767
+    IF NUWIDRAW!=(WIN_ACTIVENUWID AND 32767)&&CAPTURE_WND==NUWIDToWND(WIN_ACTIVENUWID)THEN
+     IF NUWID AND WIN_FRAMEFLG THEN
+      E=LMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
+      E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     ELSE
+      E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     ENDIF
+    ELSE
+     IF NUWID AND WIN_FRAMEFLG THEN
+      E=LMouseUpWindowOnFrame(NUWIDToWND(NUWIDRAW))
+      E=LMouseUpWindow(NUWIDToWND(NUWIDRAW))
+     ELSE
+      E=LMouseUpWindow(NUWIDToWND(NUWID))
+     ENDIF
+    ENDIF
+   ENDIF
+   CAPTURE_WND=0
+  ENDIF
+  
+  
+  '=====R=====
+  IF BTN AND OTW_RMOUSEDWN THEN
+   CAPTURE_WND=0
+   OA=WIN_ACTIVENUWID
+   WIN_ACTIVENUWID=NUWID
+   IF WIN_ACTIVENUWID!=OA THEN
+    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
+    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
+   ENDIF
+   F=MAINCNT
+   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
+    OTW_LCLKWND=0
     IF NUWID AND WIN_FRAMEFLG THEN
-     E=LMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
-     E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     'TODO:Double Click
+     
+     E=RMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+     WIN_ACTIVENUWID=NUWID AND 32767
     ELSE
-     E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     IF LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,CTL_LDBLCLKHANDLER])THEN
+      E=RDoubleClickWindow(NUWIDToWND(NUWID))
+     ELSE
+      E=RMouseDownWindow(NUWIDToWND(NUWID))
+     ENDIF
     ENDIF
+   ELSE
+    OTW_LCLKWND=NUWID
+    OTW_LCLKF=F
+    OTW_DBLCLKX=OTW_MOUSEX
+    OTW_DBLCLKY=OTW_MOUSEY
+   IF NUWID AND WIN_FRAMEFLG THEN
+    E=RMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+    
+    WIN_ACTIVENUWID=NUWID AND 32767
+   ELSE
+    E=RMouseDownWindow(NUWIDToWND(NUWID))
    ENDIF
+   ENDIF
   ENDIF
+
+  IF BTN AND OTW_RMOUSEUP THEN
+    CAPTURE_WND=0
+    IF NUWID AND WIN_FRAMEFLG THEN
+     E=RMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
+     E=RMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+    ELSE
+     E=RMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+    ENDIF
+  ENDIF
+  '===========
+  
+  
+  
  ENDIF
  IF MOVEMOUSE THEN
   MoveWindowSP FALSE
+  IF CAPTURE_WND THEN
+   E=MouseMoveWindow(CAPTURE_WND AND NUWIDMASK)
+  ELSE
   IF OLDMOVEMOUSEWINDOW!=NUWID THEN
    IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
     E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
@@ -3689,6 +4079,7 @@
    E=MouseMoveWindowOnFrame(NUWID AND 32767)
   ENDIF
   OLDMOVEMOUSEWINDOW=NUWID
+  ENDIF
  ENDIF
 ' IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
@@ -3919,8 +4310,22 @@
  IF ITEM>=LAUNCHERLEN||ITEM<0THEN
   RETURN
  ENDIF
- NewProcess LAUNCHERITEM$[ITEM],"" OUT E,E,E
+ NewProcess LAUNCHERITEM$[ITEM],"" OUT E,E
 END
+COMMON DEF LauncherResize WND,CTL,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ VOID ResizeWindow(CW,W,H)
+END
+COMMON DEF LauncherNotif WND,CTL,T,A1,A2
+ IF A2==0THEN
+  VAR PROC$=GetListBoxSelectedText$(A1)
+  VAR E
+  NewProcess PROC$,"" OUT E,E
+ ENDIF
+END
 COMMON DEF I_LAUNCHER
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -3929,10 +4334,12 @@
  ENDIF
  IF LAUNCHERCTL THEN
   VAR WND,E
-  NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",80,LAUNCHERLEN*8 OUT WND,E
+  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,64,WINDOWRESIZABLESTYLE() OUT WND,E
   SetProcessVar WND
+  NewWindow GetListBoxControl(),"",0,0,80,64,WND,0 OUT WND,E
+  AddArrayListBoxItem WND,LAUNCHERITEM$
  ELSE
-  LAUNCHERLEN=10
+  LAUNCHERLEN=11
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -3944,9 +4351,12 @@
   LAUNCHERITEM$[7]="OTYFIL"
   LAUNCHERITEM$[8]="OTYDOC"
   LAUNCHERITEM$[9]="MPLAY"
+  LAUNCHERITEM$[10]="CLIPBRD"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
-  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
-  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
+'  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
+'  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
+  E=SetControlNotifHandler(LAUNCHERCTL,"LauncherNotif")
+  E=SetControlResizeHandler(LAUNCHERCTL,"LauncherResize")
   I_LAUNCHER
  ENDIF
 END
@@ -3961,8 +4371,8 @@
 VAR WCLOCKBC2
 VAR WCLOCKTIM
 COMMON DEF RunNotificationHandler W,C,T,V,A2
- VAR PID,NUPID,E
- NewProcess GetWindowName$(GetChildWindow(GetParentWindow(V))),"" OUT PID,NUPID,E
+ VAR PRC,E
+ NewProcess GetWindowName$(GetChildWindow(GetParentWindow(V))),"" OUT PRC,E
  IF E THEN BEEP
 END
 COMMON DEF I_WCLOCK
@@ -4183,6 +4593,7 @@
  SetWindowVar WND,3,1
  SetWindowVar WND,0,X
  SetWindowVar WND,1,Y
+ VOID SetCapture(WND)
 END
 COMMON DEF PaintLUP WND,CTL,T,X,Y
  SetWindowVar WND,3,0
@@ -4209,7 +4620,7 @@
   ExitProcess 1
   RETURN
  ENDIF
- VAR PTR=RND(256)+1'malloc(64*64)
+ VAR PTR=malloc(64*64)
  IF!PTR THEN BEEP:ExitProcess 1RETURN
  VAR WND,E
  IF!PAINTCTL THEN
@@ -4239,18 +4650,23 @@
 VAR TXTBOXEX_MAXCTL
 VAR TXTBOXEX_CFREE
 DIM TXTBOXEX_CLINE[0]
+DIM TXTBOXEX_CMODE[0]
 DIM TXTBOXEX_CNEXT[0]
+DIM TXTBOXEX_CFIRST[0]
+DIM TXTBOXEX_CSELLINE1[0]
+DIM TXTBOXEX_CSELPOS1[0]
+DIM TXTBOXEX_CSELLINE2[0]
+DIM TXTBOXEX_CSELPOS2[0]
+DIM TXTBOXEX_CISSEL[0]
+DIM TXTBOXEX_CISSELING[0]
 COMMON DEF GetTextBoxExControl()
  RETURN TXTBOXEXCTL
 END
 COMMON DEF SetTextBoxExPRGMode WND,FLG
- VAR G=ABS(GetWindowVar(WND,7))
- IF FLG THEN
-  SetWindowVar WND,7,G OR -2147483648
- ELSE
-  SetWindowVar WND,7,G AND 2147483647
- ENDIF
+ VAR CTL=GetWindowVar(WND,7)
+ SetTextBoxExMode CTL,FLG
 END
+VAR TextBoxEx_MENU
 COMMON DEF INIT_TXTBOXEX
  VAR E
  IF!TXTEDCTL THEN
@@ -4262,7 +4678,10 @@
   E=SetControlCreateHandler(TXTBOXEXCTL,"TextBoxExCreate")
   E=SetControlNotifHandler(TXTBOXEXCTL,"TextBoxExNotif")
   E=SetControlLMouseDownHandler(TXTBOXEXCTL,"TextBoxExLMD")
+  E=SetControlLMouseUpHandler(TXTBOXEXCTL,"TextBoxExLMU")
+  E=SetControlRMouseDownHandler(TXTBOXEXCTL,"TextBoxExRMD")
   E=SetControlResizeHandler(TXTBOXEXCTL,"TextBoxResize")
+  E=SetControlMouseMoveHandler(TXTBOXEXCTL,"TextBoxExMMOVE")
   TXTBOXEX_LINESIZ=10000'1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -4272,10 +4691,28 @@
   TXTBOXEX_MAXCTL=100'1024
   TXTBOXEX_CNEXT=NewArray(TXTBOXEX_MAXCTL)
   TXTBOXEX_CLINE=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CMODE=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CFIRST=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELLINE1=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELPOS1=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELLINE2=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELPOS2=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CISSEL=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CISSELING=NewArray(TXTBOXEX_MAXCTL)
   VAR I
   FOR I=1TO TXTBOXEX_LINESIZ-2
    TXTBOXEX_NEXT[I]=I+1
   NEXT
+  FOR I=1TO TXTBOXEX_MAXCTL-2
+   TXTBOXEX_CNEXT[I]=I+1
+  NEXT
+  TXTBOXEX_CFREE=1
+  NewMenu OUT TextBoxEx_MENU,E
+  AddMenuItem TextBoxEx_MENU,"Copy",1
+  AddMenuItem TextBoxEx_MENU,"Cut",2
+  AddMenuItem TextBoxEx_MENU,"Paste",3
+  AddMenuItemSeparator TextBoxEx_MENU
+  AddMenuItem TextBoxEx_MENU,"Select all",3
  ENDIF
 END
 DEF TXTED_NewCTL(WND)
@@ -4283,7 +4720,7 @@
  IF!R THEN RETURN 0
  TXTBOXEX_CFREE=TXTBOXEX_CNEXT[TXTBOXEX_CFREE]
  TXTBOXEX_CLINE[R]=1
-' SetWindowVar
+ RETURN TXTBOXEX_CFREE
 END
 DEF TXTED_NewLINE(V$,P)
  VAR R=TXTBOXEX_FREE
@@ -4324,26 +4761,112 @@
  RETURN 0
 END
 
-COMMON DEF TextBoxExLMD WND,CTL,T,X,Y
+COMMON DEF TextBoxExMMOVE WND,CTL,T,X,Y
+ IF GetCapture()!=WND THEN
+  RETURN
+ ENDIF
+ VAR MF
+ IF Y<0&&TXTED_UpCursor(WND)THEN
+  MF=TRUE
+ ENDIF
+ 
+ VAR H=GetWindowHeight(WND)
+ IF Y>H&&TXTED_DownCursor(WND)THEN
+  MF=TRUE
+ ENDIF
+ IF MF THEN
+  TextBoxExRepaint WND
+  RETURN
+ ENDIF
+ VAR LINE,POS,OL,OP
+ GetWindowVar WND,2 OUT OL
+ GetWindowVar WND,3 OUT OP
+ VAR LINEOBJ
+ TEXTBOXEX_GETLINEPOS WND,X,Y OUT LINE,POS,LINEOBJ
+ VAR BOX=GetWindowVar(WND,7)
+ SetWindowVar WND,2,LINEOBJ
+ SetWindowVar WND,3,POS
+ TXTBOXEX_CSELLINE2[BOX]=LINE
+ TXTBOXEX_CSELPOS2[BOX]=POS
+ TXTBOXEX_CISSEL[BOX]=TRUE
+ TXTBOXEX_CISSELING[BOX]=TRUE
+ IF LINE==OL&&POS==OP THEN RETURN
+ VOID RepaintWindow(WND)
+END
+COMMON DEF TextBoxExLMU WND,CTL,T,X,Y
+ VOID ReleaseCapture(WND)
+ VAR BOX=GetWindowVar(WND,7)
+ TXTBOXEX_CISSELING[BOX]=FALSE
+END
+DEF TEXTBOXEX_GETLINEPOS WND,X,Y OUT LINE,POS,V
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- IF!X||!Y||X>=W||Y>=H THEN RETURN
- VAR V=GetWindowVar(WND,1),Y1=1,Y2
+' IF!X||!Y||X>=W||Y>=H THEN RETURN
+ V=GetWindowVar(WND,1)
+ VAR Y1=1,Y2
+ LINE=TXTBOXEX_CLINE[GETWINDOWVar(WND,7)]
+ VAR OV
+' IF X<33THEN RETURN
  WHILE V
+  OV=V
+  LINE=LINE+1
   Y2=Y1+8
   IF Y>=Y1&&Y<Y2 THEN
-   SetWindowVar WND,2,V
-   VOID RepaintWindow(WND)
-   SetWindowVar WND,3,(X-1) DIV 8
    BREAK
   ENDIF
   INC Y1,8
   V=TXTBOXEX_NEXT[V]
  WEND
+ POS=MAX(0,(X-1-32) DIV 8)
+ IF!V THEN V=OV
 END
+COMMON DEF TextBoxExLMD WND,CTL,T,X,Y
+ VAR LINE,POS
+ VAR OL,OP
+ GetWindowVar WND,2 OUT OL
+ GetWindowVar WND,3 OUT OP
+ VAR LINEOBJ
+ TEXTBOXEX_GETLINEPOS WND,X,Y OUT LINE,POS,LINEOBJ
+ VAR BOX=GetWindowVar(WND,7)
+ TXTBOXEX_CISSEL[BOX]=FALSE
+ TXTBOXEX_CISSELING[BOX]=FALSE
+ IF OL==LINE&&OP==POS THEN
+ ELSE
+  SetWindowVar WND,2,LINEOBJ
+  SetWindowVar WND,3,POS
+  VOID RepaintWindow(WND)
+ ENDIF
+ TXTBOXEX_CSELLINE1[BOX]=LINE
+ TXTBOXEX_CSELPOS1[BOX]=POS
+ TXTBOXEX_CSELLINE2[BOX]=LINE
+ TXTBOXEX_CSELPOS2[BOX]=POS
+ VOID SetCapture(WND)
+END
+COMMON DEF TextBoxExRMD WND,CTL,T,X,Y
+ ShowContextMenu TextBoxEx_MENU,WND
+END
+DEF TEXTBOXEX_MENU WND,ID
+ ON ID GOTO @UNK,@COPY,@CUT,@PASTE
+ @UNK
+ ?"UNK
+ RETURN
+ @COPY
+ @CUT
+'?TEXTBOXEXGETSELECTEDTEXT(WND)
+ TextBoxExCopy WND
+ RETURN
+ @PASTE
+ TextBoxExPaste WND
+END
 COMMON DEF TextBoxExNotif WND,CTL,T,_,POS
- VAR F=GetWindowVar(WND,7)
- VAR SA=POS-(F AND 2147483647)
+ 'MENU
+ IF _==0 THEN
+  TEXTBOXEX_MENU WND,POS
+  RETURN
+ ENDIF
+ VAR BOX=GetWindowVar(WND,7)
+ VAR F=GetTextBoxExLine(BOX)
+ VAR SA=POS-F
  VAR I
  IF!SA THEN RETURN
  VAR V=GetWindowVar(WND,1)
@@ -4359,11 +4882,7 @@
    V=TXTBOXEX_PREV[V]
   NEXT
  ENDIF
- IF F<0THEN
-  SetWindowVar WND,7,POS OR -2147483648
- ELSE
-  SetWindowVar WND,7,POS
- ENDIF
+ SetTextBoxExLine BOX,POS
  SetWindowVar WND,1,V
  TextBoxExRepaint WND
 END
@@ -4371,7 +4890,29 @@
  VAR SCR,E
  VAR W=GetWindowWidth(WND),
  NewVScrollBar WND,0 OUT SCR,E
+ VAR C=TXTED_NewCTL(WND)
+ SetWindowVar WND,7,C
+ SetTextBoxExLine C,0
+ TXTBOXEX_CFIRST[C]=0
+ TXTBOXEX_CISSEL[C]=0
+ TXTBOXEX_CISSELING[C]=0
+ TXTBOXEX_CSELLINE1[C]=0
+ TXTBOXEX_CSELPOS1[C]=0
+ TXTBOXEX_CSELLINE2[C]=0
+ TXTBOXEX_CSELPOS2[C]=0
 END
+DEF GetTextBoxExMode(CTL)
+ RETURN TXTBOXEX_CMODE[CTL]
+END
+DEF SetTextBoxExMode CTL,L
+ TXTBOXEX_CMODE[CTL]=L
+END
+DEF GetTextBoxExLine(CTL)
+ RETURN TXTBOXEX_CLINE[CTL]
+END
+DEF SetTextBoxExLine CTL,L
+ TXTBOXEX_CLINE[CTL]=L
+END
 DEF TextBoxResize WND,CTL,T,A1,WH
  VAR W,H
  SplitInt WH OUT W,H
@@ -4387,7 +4928,8 @@
 END
 COMMON DEF TextBoxExRepaint WND
  VAR E=GBeginWindow(WND)
- VAR SH=GetWindowVar(WND,7)<0
+ VAR BOX=GetWindowVar(WND,7)
+ VAR SH=GetTextBoxExMode(BOX)
  IF SH THEN
   GCLSWindow WND,RGB(0,0,0)
  ELSE
@@ -4408,8 +4950,18 @@
  VAR TC=RGB(0,0,0)
  IF SH THEN TC=-1
  VAR Y=1,X=32,PL,LC
- VAR LINE=(GetWindowVar(WND,7)AND 2147483647),_
+ VAR LINE=GetTextBoxExLine(BOX),_
  VAR M0=MAINCNT
+ IF TXTBOXEX_CISSEL[BOX]THEN
+  VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
+  VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
+  VAR SELPOS1=TXTBOXEX_CSELPOS1[BOX]
+  VAR SELPOS2=TXTBOXEX_CSELPOS2[BOX]
+  IF SELLINE1>SELLINE2 THEN
+   SWAP SELLINE1,SELLINE2
+   SWAP SELPOS1,SELPOS2
+  ENDIF
+ ENDIF
  WHILE 1
   INC LINE
   V$=TXTBOXEX_VAL$[L]
@@ -4426,6 +4978,16 @@
   IF !_ THEN _=&H6E
   INC LS$,CHR$(&HE100+_)
   GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
+  IF LINE>SELLINE1&&LINE<SELLINE2 THEN
+   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+  ENDIF
+  IF LINE==SELLINE1&&LINE==SELLINE2 THEN
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+  ELSEIF LINE==SELLINE1 THEN
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+  ELSEIF LINE==SELLINE2 THEN
+   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+  ENDIF
   IF SH THEN
    TXTED_PRGPRINT WND,X,Y,V$
   ELSE
@@ -4466,6 +5028,11 @@
    C=TXTBOXEX_PREV[C]
    IF L==C THEN
      SetWindowVar WND,1,L
+    VAR BOX=GetWindowVar(WND,7)
+    VAR LINE=GetTextBoxExLine(BOX)-1
+    SetTextBoxExLine BOX,LINE
+    SetScrollBarPosition GetChildWindow(WND),LINE
+
    ENDIF
    SetWindowVar WND,2,C
    RETURN 1
@@ -4479,6 +5046,10 @@
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
      SetWindowVar WND,1,L
+     VAR BOX=GetWindowVar(WND,7)
+     VAR LINE=GetTextBoxExLine(BOX)+1
+     SetTextBoxExLine BOX,LINE
+     SetScrollBarPosition GetChildWindow(WND),LINE
     ENDIF
    ENDIF
    C=TXTBOXEX_NEXT[C]
@@ -4488,7 +5059,10 @@
   RETURN 0
 END
 COMMON DEF TextBoxExButton WND,CTL,T,BTN,_
+ VAR BOX=GetWindowVar(WND,7)
+ IF TXTBOXEX_CISSELING[BOX]THEN RETURN
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
+ TXTBOXEX_CISSEL[BOX]=0
  IF!BTN THEN SetWindowVar WND,5,0RETURN
  IF MAINCNT-F<R THEN RETURN
 
@@ -4543,10 +5117,14 @@
 END
 COMMON DEF TextBoxExKey WND,CTL,T,KEY,_
  VAR C=GetWindowVar(WND,2)
+ VAR BOX=GetWindowVar(WND,7)
+ IF TXTBOXEX_CISSELING[BOX]THEN RETURN
+ TXTBOXEX_CISSEL[BOX]=0
  IF!C THEN
   C=TXTED_NewLINE("",0)
   SetWindowVar WND,1,C
   SetWindowVar WND,2,C
+  TXTBOXEX_CFIRST[BOX]=C
   IF!C THEN RETURN
  ENDIF
  VAR X=GetWindowVar(WND,3)
@@ -4561,8 +5139,11 @@
    IF P THEN
     VAR L=GetWindowVar(WND,1)
     VAR V$=TXTBOXEX_VAL$[C]
-    SetWindowVar WND,2,TXTED_DeleteLine(C)
-    L=GetWindowVar(WND,2)
+    L=TXTED_DeleteLine(C)
+    IF C==TXTBOXEX_CFIRST[BOX]THEN
+     TXTBOXEX_CFIRST[BOX]=L
+    ENDIF
+    SetWindowVar WND,2,L
     TXTBOXEX_VAL$[L]=LEFT$(TXTBOXEX_VAL$[L],LEN(TXTBOXEX_VAL$[L])-1)
     SetWindowVar WND,3,LEN(TXTBOXEX_VAL$[L])
     INC TXTBOXEX_VAL$[L],MID$(V$,X,LEN(V$)-X)
@@ -4582,10 +5163,19 @@
    IF GetWindowVar(WND,6)==C THEN
     L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
+     VAR LINE=GetTextBoxExLine(BOX)+1
+     SetTextBoxExLine BOX,LINE
+     VAR SCRBAR=GetChildWindow(WND)
+     IF GetScrollBarSize(SCRBAR)<LINE THEN
+      SetScrollBarSize SCRBAR,LINE
+     ENDIF
+     SetScrollBarPosition SCRBAR,LINE
      SetWindowVar WND,1,L
     ENDIF
    ENDIF
   ELSE
+'   X=MIN(MAX(LEN(TXTBOXEX_VAL$[C]),-80),X)
+'   SetWindowVar WND,3,X
    TXTBOXEX_VAL$[C]=InsertStr$(TXTBOXEX_VAL$[C],X,K$)
    SetWindowVar WND,3,X+1
   ENDIF
@@ -4593,6 +5183,7 @@
  TextBoxExRepaint WND
 END
 COMMON DEF TextBoxExSetText WND,TXT$
+ VAR BOX=GetWindowVar(WND,7)
  VAR C=GetWindowVar(WND,1),I,J
  IF C THEN
   I=C
@@ -4617,6 +5208,7 @@
   IF!OC THEN
    SetWindowVar WND,1,C
    SetWindowVar WND,2,C
+   TXTBOXEX_CFIRST[BOX]=C
    OC=1
   ENDIF
   IF!C THEN BREAK
@@ -4627,29 +5219,194 @@
   C=TXTED_NewLINE("",C)
   SetWindowVar WND,1,C
   SetWindowVar WND,2,C
+  TXTBOXEX_CFIRST[BOX]=C
  ENDIF
  VAR S=L+CEIL((GetWindowHeight(WND)-2)/8)
  IF S<0THEN S=0
  SetScrollBarSize GetChildWindow(WND),S
  SetScrollBarPosition GetChildWindow(WND),0
- VAR F=GetWindowVar(WND,7)
- IF F<0THEN
-  SetWindowVar WND,7,-2147483648
- ELSE
-  SetWindowVar WND,7,0
- ENDIF
+ SetTextBoxExLine BOX,0
  VOID RepaintWindow(WND)
 END
 COMMON DEF TextBoxExGetText WND OUT TXT$
- TXT$=""
- VAR C=GetWindowVar(WND,1)
-
-
+ TXT$=""+""
+ VAR BOX=GetWindowVar(WND,7)
+ VAR C=TXTBOXEX_CFIRST[BOX]
  WHILE C
   PUSH TXT$,TXTBOXEX_VAL$[C]
   C=TXTBOXEX_NEXT[C]
  WEND
 END
+COMMON DEF TextBoxExCopy WND
+ VAR TXT$
+ TextBoxExGetSelectedText WND OUT TXT$
+ ClearClipboard
+ ClipboardSetText TXT$
+END
+COMMON DEF TextBoxExPaste WND
+ IF!ClipboardContainsText()THEN RETURN
+ VAR TXT$=ClipboardGetText$()
+ TextBoxExSetSelectedText WND,TXT$
+END
+'TXT$->LINEOBJ
+DEF TEXTBOXEX_PARSETXT TXT$ OUT LINEFIRST,LINELAST,LINECOUNT
+ VAR I,J
+ VAR C=0
+ VAR OC=0,L
+ VAR LF$=LF$()
+ WHILE 1
+  INC L
+  J=INSTR(I,TXT$,LF$)
+  IF LEN(TXT$)==I THEN BREAK
+  IF J==-1THEN J=LEN(TXT$)-1
+  C=TXTED_NewLINE(MID$(TXT$,I,J-I+1),C)
+  IF!OC THEN
+   LINEFIRST=C
+   OC=TRUE
+  ENDIF
+  IF!C THEN BREAK
+  IF I==LEN(TXT$)-1THEN BREAK
+  I=J+1
+ WEND
+ IF!LEN(TXT$)THEN
+  C=TXTED_NewLINE("",C)
+  LINEFIRST=C
+ ENDIF
+ LINELAST=C
+ TXTBOXEX_NEXT[C]=0
+ LINECOUNT=L
+END
+'RET:LINE
+DEF TEXTBOXEX_REMOVESELECTEDTEXT WND OUT L,CX
+ VAR BOX=GetWindowVar(WND,7)
+ IF!TXTBOXEX_CISSEL[BOX]THEN
+  L=GetWindowVar(WND,2)
+  CX=GetWindowVar(WND,3)
+  RETURN
+ ENDIF
+ TXTBOXEX_CISSEL[BOX]=FALSE
+ VAR C=TXTBOXEX_CFIRST[BOX]
+ VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
+ VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
+ VAR SELPOS1=TXTBOXEX_CSELPOS1[BOX]
+ VAR SELPOS2=TXTBOXEX_CSELPOS2[BOX]
+ IF SELLINE1>SELLINE2 THEN
+  SWAP SELLINE1,SELLINE2
+  SWAP SELPOS1,SELPOS2
+ ENDIF
+ VAR LINE
+ CX=SELPOS1
+ WHILE C
+  INC LINE
+  IF SELLINE1==LINE THEN
+   L=C
+  ENDIF
+  IF SELLINE1==LINE&&SELLINE2==LINE THEN
+   IF SELPOS2<SELPOS1 THEN
+    SWAP SELPOS2,SELPOS1
+   ENDIF
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   TXTBOXEX_VAL$[C]=RemoveStr$(TXTBOXEX_VAL$[C],SELPOS1,SELPOS2-SELPOS1)
+   CX=MIN(CX,LEN(TXTBOXEX_VAL$[C])-1)
+   BREAK
+  ELSEIF SELLINE1==LINE THEN
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   IF SELPOS1 THEN
+    TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],SELPOS1-1)
+   ELSE
+    TXTBOXEX_VAL$[C]=""
+   ENDIF
+   CX=MIN(CX,MAX(LEN(TXTBOXEX_VAL$[C])-1,0))
+  ELSEIF SELLINE2==LINE THEN
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   TXTBOXEX_VAL$[C]=RIGHT$(TXTBOXEX_VAL$[C],LEN(TXTBOXEX_VAL$[C])-SELPOS2-1)
+   BREAK
+  ELSEIF SELLINE1<LINE THEN
+   C=TXTED_DeleteLine(C)
+   CONTINUE
+  ENDIF
+  C=TXTBOXEX_NEXT[C]
+ WEND
+END
+COMMON DEF TextBoxExSetSelectedText WND,TXT$
+ VAR _1,_3,_2,LF$=LF$()
+ TEXTBOXEX_PARSETXT TXT$ OUT _1,_2,_3
+ IF _1==0THEN RETURN
+ VAR T1$=TXTBOXEX_VAL$[_1]
+ VAR LASTLF
+ IF LEN(T1$)&&T1$[LEN(T1$)-1]==LF$THEN
+  LASTLF=TRUE
+ ENDIF
+ VAR T2$=TXTBOXEX_VAL$[_2]
+ VAR LASTLF2
+ IF LEN(T2$)&&T2$[LEN(T2$)-1]==LF$THEN
+  LASTLF2=TRUE
+ ENDIF
+ VAR C
+ VAR CX
+ TEXTBOXEX_REMOVESELECTEDTEXT WND OUT C,CX
+ IF LASTLF THEN
+  VAR MATSUO$=MID$(TXTBOXEX_VAL$[C],CX,LEN(TXTBOXEX_VAL$[C])-CX)
+  TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],CX)+T1$
+  IF!LASTLF2 THEN
+   TXTBOXEX_VAL$[_2]=TXTBOXEX_VAL$[_2]+MATSUO$
+  ELSE
+   VOID TXTED_NewLine(MATSUO$,C)
+  ENDIF
+ ELSE
+  TXTBOXEX_VAL$[C]=InsertStr$(TXTBOXEX_VAL$[C],CX,T1$)
+ ENDIF
+ IF _1==_2 THEN
+  VOID TXTED_DeleteLine(_1)
+  RETURN
+ ENDIF
+ _1=TXTBOXEX_NEXT[_1]
+ VAR CN=TXTBOXEX_NEXT[C]
+ TXTBOXEX_NEXT[C]=_1
+ TXTBOXEX_PREV[_1]=C
+ TXTBOXEX_NEXT[_2]=CN
+ TXTBOXEX_PREV[CN]=_2
+ VOID RepaintWindow(WND)
+RETURN
+
+END
+COMMON DEF TextBoxExGetSelectedText WND OUT TXT$
+ TXT$=""+""
+ VAR BOX=GetWindowVar(WND,7)
+ VAR C=TXTBOXEX_CFIRST[BOX]
+ VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
+ VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
+ VAR SELPOS1=TXTBOXEX_CSELPOS1[BOX]
+ VAR SELPOS2=TXTBOXEX_CSELPOS2[BOX]
+ IF SELLINE1>SELLINE2 THEN
+  SWAP SELLINE1,SELLINE2
+  SWAP SELPOS1,SELPOS2
+ ENDIF
+ VAR LINE
+ WHILE C
+  INC LINE
+  IF SELLINE1==LINE&&SELLINE2==LINE THEN
+   IF SELPOS2<SELPOS1 THEN
+    SWAP SELPOS2,SELPOS1
+   ENDIF
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   TXT$=MID$(TXTBOXEX_VAL$[C],SELPOS1,SELPOS2-SELPOS1)
+   BREAK
+  ELSEIF SELLINE1==LINE THEN
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   PUSH TXT$,MID$(TXTBOXEX_VAL$[C],SELPOS1,LEN(TXTBOXEX_VAL$[C])-SELPOS1)
+  ELSEIF SELLINE2==LINE THEN
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   PUSH TXT$,MID$(TXTBOXEX_VAL$[C],0,SELPOS2)
+   BREAK
+  ELSEIF SELLINE1<LINE THEN
+   PUSH TXT$,TXTBOXEX_VAL$[C]
+  ENDIF
+  C=TXTBOXEX_NEXT[C]
+ WEND
+END
 '===syntax highlighting===
 'HashSet
 VAR RTXTEDTRUE
@@ -4787,7 +5544,8 @@
      NEXT
      BREAK
     ENDIF
-    DEC X,8
+    GPUTCHRWindow WND,X-8,Y,S,RGB(255,255,255)
+    DEC I
     BREAK
    NEXT
    CONTINUE
@@ -4804,17 +5562,26 @@
 '===End text editor===
 COMMON DEF TXTEDNOTIF W,C,T,A1,A2
  IF A2==4THEN
-  VOID SaveFileDialog(W,"TXT")
+  VOID SaveFileDialog(W,"TXT",1)
  ENDIF
  IF A2==2THEN
-  VOID OpenFileDialog(W,"TXT")
+  VOID OpenFileDialog(W,"TXT",0)
  ENDIF
  IF A2==1THEN
   TextBoxExSetText GetWindowVar(W,0),LF$()
  ENDIF
 END
-COMMON DEF TXTEDSTRNOTIF W,C,T,A1,A2$
+COMMON DEF TXTEDSTRNOTIF W,C,T,ID,A2$
+ ON ID GOTO @OPEN,@SAVE
+ RETURN
+ @OPEN
  TextBoxExSetText GetWindowVar(W,0),LoadFile$(RIGHT$(A2$,LEN(A2$)-1))
+ RETURN
+ @SAVE
+ VAR T$
+ TextBoxExGetText GetWindowVar(W,0) OUT T$
+ SaveFile$ RIGHT$(A2$,LEN(A2$)-1),T$
+ RETURN
 END
 COMMON DEF TXTEDRESIZE WND,C,T,A1,WH
  VAR W,H
@@ -4986,6 +5753,9 @@
   E=SetControlKeyHandler(OTYDOCCTL,"OTYDocKey")
   E=SetControlButtonHandler(OTYDOCCTL,"OTYDocButton")
   E=SetControlChFocusHandler(OTYDOCCTL,"OTYDocChFocus")
+  E=SetControlCreateHandler(OTYDOCCTL,"OTYDocCreate")
+  E=SetControlResizeHandler(OTYDOCCTL,"OTYDocResize")
+  E=SetControlLMouseDownHandler(OTYDOCCTL,"OTYDocLMouseUp")
   OTYDOC_LINESIZ=1024
   OTYDOC_VAL$=NewArray$(OTYDOC_LINESIZ)
   OTYDOC_LINE=NewArray(OTYDOC_LINESIZ)
@@ -5138,11 +5908,24 @@
 END
 '====EVENT HANDLER====
 COMMON DEF OTYDocCreate WND,CTL,TYPE,A1,A2
+ VAR SCR,E
+ VAR W=GetWindowWidth(WND),
+ NewVScrollBar WND,0 OUT SCR,E
 END
+COMMON DEF OTYDocResize WND,C,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+END
 COMMON DEF OTYDocPainter WND,CTL,TYPE,A1,A2
  OTYDOCRepaint WND
 END
 DEF OTYDOCRepaint WND
+ OTYDOCRepaintSEL WND,FALSE,0,0
+END
+DEF OTYDOCRepaintSEL WND,SEL_FLG,SX,SY
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,RGB(255,255,255)
  VAR W=GetWindowWidth(WND)
@@ -5202,7 +5985,7 @@
     CONTINUE
    ENDIF
    IF  C<128THEN
-    RICHTEXTWindow WND,X-SZ/8,Y+YSZ-SZ,C,ST,SZ,COL
+    RICHTEXTWindow WND,X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,COL
    ELSE
     RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
    ENDIF
@@ -5216,6 +5999,9 @@
    ENDIF
 '   ?HEX$(COL)
    IF  C<128THEN INC X,SZ*6/8 ELSE INC X,SZ
+   IF SEL_FLG THEN
+    
+   ENDIF
    IF X+SZ>=W THEN
     X=1
     INC Y,YSZ
@@ -5253,7 +6039,12 @@
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
 END
+DEF OTYDOC_CLK X,Y
 
+END
+COMMON DEF OTYDocLMouseUp WND,CTL,TYPE,X,Y
+ ?X,Y
+END
 DEF OTYDOC_UpCursor(WND)
   VAR D=GetWindowVar(WND,0)
   VAR C=OTYDOC_CurLine[D]
@@ -5899,6 +6690,17 @@
  INC X,12
  NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNR,E
  INC X,12
+ VAR DRP
+ NewWindow GetDropDownListControl(),"",X,0,56,11,WND,0 OUT DRP,E
+ VAR LST=GetDropDownListBox(DRP)
+ AddListBoxItem LST,"H1"
+ AddListBoxItem LST,"H2"
+ AddListBoxItem LST,"H3"
+ AddListBoxItem LST,"H4"
+ AddListBoxItem LST," xxx"
+ AddListBoxItem LST,"1. xxx"
+ AddListBoxItem LST,"'quote'"
+ INC X,56
  SetWindowVar WND,1,BTNL
  SetWindowVar WND,2,BTNC
  SetWindowVar WND,3,BTNR
@@ -6138,13 +6940,16 @@
   RETURN
  ENDIF
  IF ID==1THEN
-  VOID OpenFileDialog(WND,"TXT")
+  VOID OpenFileDialog(WND,"TXT",0)
   RETURN
  ENDIF
  IF ID==3THEN
   VOID DeleteWindow(WND)
   RETURN
  ENDIF
+ IF ID==4THEN
+  VAR E=NewModalDialogBox(MPLAYABOUTCTL,"ABOUT",128,40,WND)
+ ENDIF
 END
 COMMON DEF MPLAYSNOTIF W,C,T,A1,A2$
  SetWindowName GetWindowVar(W,0),RIGHT$(A2$,LEN(A2$)-1)
@@ -6182,7 +6987,55 @@
 COMMON DEF L_MPLAY
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
-
+DEF GETBGMLIST()
+ DIM BGM$[43]
+ COPY BGM$,@BGMNAME
+ RETURN BGM$
+@BGMNAME
+DATA "Kung-Fu POP"
+DATA "With stealthy steps"
+DATA "Flat out run"
+DATA "Nostalgia TECHNO"
+DATA "Feel easy"
+DATA "Have a good time"
+DATA "Relief"
+DATA "Exciting days"
+DATA "Skipping march"
+DATA "Valiant departure"
+DATA "Important thing"
+DATA "Chasing at 'Ooedo'"
+DATA "Funny land"
+DATA "Step on the accelerator"
+DATA "Experiment"
+DATA "New discovery"
+DATA "Thinking time"
+DATA "Mischievous boy"
+DATA "Float"
+DATA "Sound of the surf"
+DATA "Sound of the surf2"
+DATA "Spy movie"
+DATA "Calculating"
+DATA "Take Off!"
+DATA "The evening moon."
+DATA "Sensibility"
+DATA "Pure water"
+DATA "Strategy"
+DATA "cure"
+DATA "Intense battle"
+DATA "Keen competition"
+DATA "Heat uuuup!!"
+DATA "Rise with force"
+DATA "Bright blue"
+DATA "Storyteller"
+DATA "Return trip"
+DATA "High spirits"
+DATA "Welcome to the party"
+DATA "Funky claps"
+DATA "Night surfer"
+DATA "Ready to FLY"
+DATA "We are heroes"
+DATA "Pure water2"
+END
 'Init common dialogs
 VAR CTL_FILDIA
 DEF OTW_FileDialog
@@ -6193,15 +7046,26 @@
  E=SetControlNotifHandler(CTL_FILDIA,"FileDialogNotif")
 END
 COMMON DEF FileDialogNotif WND,C,T,W,__
- IF __==ListBoxChItem()THEN
+ VAR ISSAVE=GetWindowVar(WND,1)
+ IF ISSAVE&&__==ListBoxChItem()THEN
   SetWindowName GetWindowVar(WND,2),GetListBoxSelectedText$(W)
   VOID RepaintWindow(GetWindowVar(WND,2))
   RETURN
  ENDIF
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
-  VAR SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
-  IF!LEN(SEL$)THEN RETURN
-  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),1,SEL$)
+  VAR SEL$
+  IF ISSAVE THEN
+   SEL$=GetWindowName$(GetWindowVar(WND,2))
+   IF!LEN(SEL$)THEN RETURN
+   IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
+    SEL$="*"+SEL$
+   ENDIF
+  ELSE
+   SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
+   IF!LEN(SEL$)THEN RETURN
+  ENDIF
+  VAR ID=GetWindowVar(WND,3)
+  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,SEL$)
   VOID DeleteWindow(WND)
  ELSE
   IF GetWindowName$(W)=="Cancel"THEN
@@ -6209,7 +7073,7 @@
   ENDIF
  ENDIF
 END
-COMMON DEF FileDialogCreate WND,C,T,_,__
+COMMON DEF FileDialogCreate WND,C,T,ID,__
  VAR E,L
  NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
  DIM F$[0]
@@ -6235,23 +7099,24 @@
   SetWindowVar WND,2,L
   SetChItemListBoxNotif WND,F
  ENDIF
+ SetWindowVar WND,3,ID
 END
-COMMON DEF SaveFileDialog(OWNER,TYPE$)
+COMMON DEF SaveFileDialog(OWNER,TYPE$,ID)
  IF!CTL_FILDIA THEN
   OTW_FileDialog
  ENDIF
  IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
  VAR TITLE$=TYPE$
- VAR E=NewModalDialogBox(CTL_FILDIA,"Save "+TYPE$,170,74,OWNER)
+ VAR E=NewDialogBoxWithArg(CTL_FILDIA,"Save "+TYPE$,170,74,OWNER,TRUE,ID,0)
  RETURN E
 END
-COMMON DEF OpenFileDialog(OWNER,TYPE$)
+COMMON DEF OpenFileDialog(OWNER,TYPE$,ID)
  IF!CTL_FILDIA THEN
   OTW_FileDialog
  ENDIF
  IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
  VAR TITLE$=TYPE$
- VAR E=NewModalDialogBox(CTL_FILDIA,"Open "+TYPE$,170,64,OWNER)
+ VAR E=NewDialogBoxWithArg(CTL_FILDIA,"Open "+TYPE$,170,64,OWNER,TRUE,ID,0)
  RETURN E
 END
 
@@ -6436,7 +7301,7 @@
  IF!ODSKCTL THEN
   ExtendControl "ODSK",GetWindowControl() OUT ODSKCTL,E
  ENDIF
- NewTopLevelWindow ODSKCTL,"Desktop",256,128 OUT WIN_ROOTWND2,E
+ NewTopLevelStyleWindow ODSKCTL,"Desktop",256,128,WINDOWRESIZABLESTYLE() OUT WIN_ROOTWND2,E
  SetProcessVar WIN_ROOTWND2
 END
 COMMON DEF L_ODSK
@@ -6698,4 +7563,77 @@
  VAR E=UpdateWindow(GetProcessVar())
  IF E THEN ExitProcess 0
 END
+VAR CLIPBRDCTL
+VAR CLIPBRD_MENU_UPDATE
+VAR CLIPBRD_MENU_ABOUT
+COMMON DEF CLIPBRDNOTIF WND,CTL,TYP,A1,A2
+ IF A2==CLIPBRD_MENU_UPDATE THEN
+  VOID RepaintWindow(WND)
+ ENDIF
+END
+DEF SUGOIGPRINTWindow WND,X,Y,W,H,TXT$,COL
+ W=W DIV 8
+ H=H DIV 8
+ VAR I,J
+ VAR LF$=LF$()
+ WHILE 1
+  VAR T$=MID$(TXT$,I,W)
+  VAR LFPOS=INSTR(T$,LF$)
+  IF LFPOS!=-1THEN
+   T$=MID$(T$,0,LFPOS)
+   I=I+LFPOS+1
+  ELSE
+   I=I+W
+  ENDIF
+  GPRINTWindow WND,X,Y,T$,COL
+  J=J+1
+  IF H<J THEN RETURN
+  Y=Y+8
+ WEND
+END
+COMMON DEF CLIPBRDPAINTER WND,CTL,TYP,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
+ 
+ IF GBeginWindow(WND)THEN RETURN
+ IF ClipboardContainsText()THEN
+  GCLSWindow WND,-1
+ ELSE
+  GCLSWindow WND,GetBackColor()
+ ENDIF
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ IF ClipboardContainsText()THEN
+  VAR TXT$=ClipboardGetText$()
+  SUGOIGPRINTWindow WND,0,0,W,H,TXT$,RGB(0,0,0)
+ ELSE
+ ENDIF
+ E=GEndWindow(WND)
+END
+COMMON DEF I_CLIPBRD
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!CLIPBRDCTL THEN
+  ExtendControl "ClipBook Viewer",GetWindowControl() OUT CLIPBRDCTL,E
+  E=SetControlPainter(CLIPBRDCTL,"CLIPBRDPAINTER")
+  E=SetControlNotifHandler(CLIPBRDCTL,"CLIPBRDNOTIF")
+ ENDIF
+ VAR MENU
+ NewTopLevelStyleWindow CLIPBRDCTL,"ClipBook Viewer",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE() OUT WND,E
+ NewMenu OUT MENU,E
+ CLIPBRD_MENU_UPDATE=1
+ AddMenuItem MENU,"Update",CLIPBRD_MENU_UPDATE
+ AddSubMenuItem GetWindowMenu(WND),"View",MENU
+ NewMenu OUT MENU,E
+ CLIPBRD_MENU_ABOUT=2
+ AddMenuItem MENU,"About",CLIPBRD_MENU_ABOUT
+ AddSubMenuItem GetWindowMenu(WND),"Help",MENU
+ SetProcessVar WND
+END
+COMMON DEF L_CLIPBRD
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
