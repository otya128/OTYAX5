diff -u OTW.TXT OTW1F
--- OTW.TXT
+++ OTW1F
@@ -107,6 +107,7 @@
 VAR WIN_STYLE_RESIZ
 VAR WIN_STYLE_TRANS
 VAR WIN_STYLE_HIDE
+VAR WIN_STYLE_OWNERDRAW
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -128,6 +129,7 @@
  WIN_STYLE_RESIZ=2
  WIN_STYLE_TRANS=4
  WIN_STYLE_HIDE=8
+ WIN_STYLE_OWNERDRAW=16
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -328,6 +330,7 @@
 VAR CTL_TXTBOXCTL
 VAR CTL_LABELCTL
 VAR CTL_VSCRBARCTL
+VAR CTL_NUMUPDWNCTL
 
 VAR CTL_LSTBOXCTL
 'CONTROL STYLE
@@ -410,6 +413,12 @@
  E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
 
+ ExtendControl "NUMUPDWN",CTL_TXTBOXCTL OUT CTL_NUMUPDWNCTL,E
+ E=SetControlLMouseUpHandler(CTL_NUMUPDWNCTL,"NumUpDownLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_NUMUPDWNCTL,"NumUpDownLMouseDown")
+ E=SetControlPainter(CTL_NUMUPDWNCTL,"NumUpDownPainter")
+ E=SetControlKeyHandler(CTL_NUMUPDWNCTL,"NumUpDownKey")
+ E=SetControlCreateHandler(CTL_NUMUPDWNCTL,"NumUpDownCreate")
  'MENU
  NewControl"POPUPMENU" OUT MENUCTL,E
  E=SetControlPainter(MENUCTL,"MenuPainter")
@@ -486,6 +495,9 @@
 COMMON DEF GetListBoxControl()
  RETURN CTL_LSTBOXCTL
 END
+COMMON DEF GetNumUpDownControl()
+ RETURN CTL_NUMUPDWNCTL
+END
 'CONTROL
 COMMON DEF FindControl(NAME$)
  VAR I
@@ -783,7 +795,7 @@
  IF!F THEN
   VAR M=GetWindowVar(WND,0)
   VOID DeleteWindow(WND)
-  VOID ActiveWindow(MENU_SHOW[M])
+ ' VOID ActiveWindow(MENU_SHOW[M])
   MENU_SHOW[M]=0
  ENDIF
 END
@@ -845,8 +857,8 @@
 COMMON DEF JoinWindowGroup(WND,WND2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  IF!CheckWindow(WND2)THEN RETURN WIN_INVALIDID
- VAR NW1=WND AND NUWIDMASK
- VAR NW2=WND2 AND NUWIDMASK
+ VAR NW1=WND AND NUWIDMASK'OW
+ VAR NW2=WND2 AND NUWIDMASK'CW
  IF WIN_GROUP[NW1]THEN
   VAR NW3=WIN_GROUP[NW1]
   WIN_GNEXT[NW2]=WIN_GROUP[NW1]
@@ -859,6 +871,19 @@
 COMMON DEF LeaveWindowGroup WND
  NOIMPL "LeaveWindowGroup"
 END
+COMMON DEF GetWindowGroupMember(WND)
+ RETURN NUWIDToWND(WIN_GROUP[WND AND NUWIDMASK])
+END
+COMMON DEF GetNextWindowGroupMember(WND)
+ VAR NXT=WIN_GNEXT[WND AND NUWIDMASK]
+ IF!NXT THEN RETURN 0
+ RETURN NUWIDToWND(NXT)
+END
+COMMON DEF GetPrevWindowGroupMember(WND)
+ VAR PRV=WIN_GNEXT[WND AND NUWIDMASK]
+ IF!PRV THEN RETURN 0
+ RETURN NUWIDToWND(PRV)
+END
 COMMON DEF GetWindowGroupOwner(WND)
  IF!CheckWindow(WND)THEN RETURN 0
  RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
@@ -883,6 +908,9 @@
 COMMON DEF WindowHideFlag()
  RETURN 4
 END
+COMMON DEF WindowOwnerDrawFlag()
+ RETURN 8
+END
 DEF WindowOnCreate WND,CTL,ARG1,ARG2
  VAR NUCID=CTL AND 4095
  IF LEN(CTL_HANDLER$[NUCID,CTL_CREATEHANDLER])THEN
@@ -1016,6 +1044,9 @@
   SPAllocWindow WND
  ENDIF
  WIN_BACKGND[NUWID]=WIN_BKGND
+ IF (FLG AND 8)==8THEN
+  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_OWNERDRAW
+ ENDIF
  IF (FLG AND 512)!=512THEN
   WindowOnCreate WND,CTL,0,0
  ENDIF
@@ -1837,6 +1868,11 @@
  IF LEN(CTL_HANDLER$[CTL AND 4095,TYPE])THEN CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
  RETURN 0
 END
+COMMON DEF CallControlHandler(WND,CTL,TYPE,A1,A2)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ IF LEN(CTL_HANDLER$[CTL AND 4095,TYPE])THEN CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
+ RETURN 0
+END
 COMMON DEF PeekWindowEvent(WND)
  IF!CheckWindow(WND)THEN RETURN -1
  VAR NUWID=WND AND NUWIDMASK
@@ -1849,6 +1885,9 @@
  IF WIN_GROUP[NUWID]THEN
   VAR G=WIN_GROUP[NUWID]
   WHILE G
+   'TODO:TORIAEZU STACK OVERFLOW TAISAKU
+   'IF G==WIN_GROUP[NUWID]THEN BREAK
+   IF G==NUWID THEN BREAK
    IF UpdateWindow(G OR WIN_WID[G]<<12)THEN BREAK
    G=WIN_GNEXT[G]
   WEND
@@ -1952,6 +1991,9 @@
 COMMON DEF SetWindowVar WND,I,V
  WIN_VAR[WND AND NUWIDMASK,I]=V
 END
+COMMON DEF GetControl(WND)
+ RETURN WIN_CTL[WND AND NUWIDMASK]
+END
 COMMON DEF IsFocusWindow(WND)
  RETURN(WND AND NUWIDMASK)==WIN_ACTIVENUWID
 END
@@ -2036,6 +2078,12 @@
 VAR GB_WND
 VAR WING_SX
 VAR WING_SY
+COMMON DEF SetWindowDrawPos WND,X,Y
+ IF!CheckWindow(WND)THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK
+ WING_SX=X+WIN_FX[NUWID]
+ WING_SY=Y+WIN_FY[NUWID]
+END
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -2184,6 +2232,9 @@
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GTRI X+AX,Y+AY,X2+AX,Y2+AY,X3+AX,Y3+AY,COL
 END
+COMMON DEF GCOPYWindow WND,X1,Y1,X2,Y2,X3,Y3,MODE
+ GCOPY X1+WING_SX,Y1+WING_SY,X2+WING_SX,Y2+WING_SY,X3+WING_SX,Y3+WING_SY,MODE
+END
 COMMON DEF GLOADWindow WND,X,Y,W,H,IMG[],FLG,MODE
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2281,6 +2332,12 @@
  VAR I
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
+COMMON DEF GPUTCHRSizeWindow WND,X,Y,A,SX,SY,COL
+ GPUTCHR X+WING_SX,Y+WING_SY,CHR$(A),SX,SY,COL
+END
+COMMON DEF GPUTCHRSize1Window WND,X,Y,A,S,COL
+ GPUTCHR X+WING_SX,Y+WING_SY,CHR$(A),S,S,COL
+END
 COMMON DEF GPUTCHRBWindow WND,X,Y,A,COL,BC
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2602,6 +2659,44 @@
  MouseClipDef
  OTW_MOVWINFLG=0
 END
+COMMON DEF IsOwnerDrawWindow(WND)
+ RETURN !!(WIN_STYLE[WND AND NUWIDMASK]AND WIN_STYLE_OWNERDRAW)
+END
+COMMON DEF IsCheckedButton(WND)
+ VAR CTL=GetControl(WND)
+ IF IsControlExtend(CTL,CTL_BUTTONCTL)THEN
+  IF GetWindowVar(WND,1)THEN
+   RETURN TRUE
+  ENDIF
+ ENDIF
+ RETURN FALSE
+END
+COMMON DEF UnCheckButton WND
+ VAR CTL=GetControl(WND)
+ IF IsControlExtend(CTL,CTL_BUTTONCTL)THEN
+  IF GetWindowVar(WND,1)THEN
+   SetWindowVar WND,1,FALSE
+   VOID RepaintWindow(WND)
+  ENDIF
+ ENDIF
+END
+COMMON DEF CheckButton WND
+ VAR CTL=GetControl(WND)
+ IF IsControlExtend(CTL,CTL_BUTTONCTL)THEN
+  IF!GetWindowVar(WND,1)THEN
+   SetWindowVar WND,1,TRUE
+   VOID RepaintWindow(WND)
+  ENDIF
+ ENDIF
+END
+COMMON DEF UnCheckButtonsGroup WND
+ VAR MEMBER=GetWindowGroupMember(WND)
+ WHILE MEMBER
+  UnCheckButton MEMBER
+  ?MEMBER,GetWindowName$(MEMBER)
+  MEMBER=GetNextWindowGroupMember(MEMBER)
+ WEND
+END
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
  IF E THEN RETURN
@@ -2617,30 +2712,45 @@
  GBOXWindow W,0,0,WI,HE,B1
  GLINEWindow W,0,0,0,HE-1,B2
  GLINEWindow W,0,0,WI-1,0,B2
- E=GEndWindow(W)
+ IF!IsOwnerDrawWindow(W)THEN
+  E=GEndWindow(W)
+ ELSE
+  SetWindowDrawPos W,1+TG,1+TG
+ ENDIF
 END
 DEF ButtonLMouseUP W,C,T,X,Y
  VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
  SetWindowVar W,1,FALSE
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 DEF ButtonLMouseDown W,C,T,X,Y
  SetWindowVar W,1,TRUE
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 DEF ToggleButtonLMouseUP W,C,T,X,Y
  VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,1))
 'SetWindowVar W,1,FALSE
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 DEF ToggleButtonLMouseDown W,C,T,X,Y
  VAR F=GetWindowVar(W,1)
  SetWindowVar W,1,!F
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 'PlainTextBox
+COMMON DEF SetTextBoxOwnerDraw WND,FLG
+ SetWindowVar WND,7,FLG
+END
 DEF TextBoxPainter W,C,T,A1,A2
- VAR E=GBeginWindow(W)
+ IF GetWindowVar(W,7)THEN
+  VAR E=RepaintWindow(W)'CallControlHandler(W,GetControl(W),T,A1,A2)
+  RETURN
+ ENDIF
+ E=GBeginWindow(W)
  IF E THEN RETURN
  VAR HE=GetWindowHeight(W)
  VAR WI=GetWindowWidth(W)
@@ -2694,6 +2804,146 @@
  
 ' BEEP
 END
+'1F
+COMMON DEF GetNumUpDownValue(WND)
+ UpdateNumUpDown WND
+ RETURN VAL(GetWindowName$(WND))
+END
+'?
+COMMON DEF SetNumUpDownRange WND,MIN,MAX
+ SetWindowVar WND,4,MIN
+ SetWindowVar WND,3,MAX
+ UpdateNumUpDown WND
+END
+COMMON DEF UpdateNumUpDown WND
+ VAR MIN=GetWindowVar(WND,4)
+ VAR MAX=GetWindowVar(WND,3)
+ VAR VAL=VAL(GetWindowName$(WND))
+ 'MIN
+ IF VAL<MIN THEN
+  VAL=MIN
+  SetWindowName WND,STR$(VAL)
+  DrawNumUpDown WND,FALSE
+ ENDIF
+ 'MAX
+ IF VAL>MAX THEN
+  VAL=MAX
+  SetWindowName WND,STR$(VAL)
+  DrawNumUpDown WND,FALSE
+ ENDIF
+END
+DEF NumUpDownCreate WND,CTL,TYPE,X,Y
+ SetTextBoxOwnerDraw WND,TRUE
+ SetWindowVar WND,4,&H80000000
+ SetWindowVar WND,3,&H7FFFFFFF
+END
+DEF NumUpDownLMouseUP WND,CTL,TYPE,X,Y
+ IF ABS(GetWindowVar(WND,6))==1THEN
+  SetWindowVar WND,6,3
+ ELSE
+  SetWindowVar WND,6,0
+ ENDIF
+ VAR W=GetWindowWidth(WND)
+ VAR BW=8
+ VAR H=GetWindowHeight(WND)
+ IF GBeginWindow(WND) THEN RETURN
+ DrawNumUpDownButton WND,7,H/2,W-7,0,FALSE,TRUE
+ DrawNumUpDownButton WND,7,H/2-1,W-7,H/2+1,FALSE,FALSE
+ VAR E=GEndWindow(WND)
+ E=SendNotificationWindow(GetParentWindow(WND),WND,VAL(GetWindowName$(WND)))
+ RETURN
+ E=CallBaseControlHandler(WND,CTL,TYPE,X,Y)
+END
+DEF NumUpDownLMouseDown WND,CTL,TYPE,X,Y
+ VAR BTN=GetWindowVar(WND,6)
+ IF BTN THEN
+  IF BTN!=3THEN
+   VAR FRAME=GetWindowVar(WND,5)
+   IF MAINCNT-FRAME>=4THEN
+    SetWindowVar WND,5,MAINCNT
+    VAR VAL=VAL(GetWindowName$(WND))+BTN
+    'MIN
+    IF VAL<GetWindowVar(WND,4)THEN
+     VAL=GetWindowVar(WND,4)
+    ENDIF
+    'MAX
+    IF VAL>GetWindowVar(WND,3)THEN
+     VAL=GetWindowVar(WND,3)
+    ENDIF
+    SetWindowName WND,STR$(VAL)
+    DrawNumUpDown WND,FALSE
+   ENDIF
+   VOID LMouseDownWindow(WND)
+   RETURN
+  ELSE
+   SetWindowVar WND,6,FALSE
+   RETURN
+  ENDIF
+ ENDIF
+ VAR W=GetWindowWidth(WND)
+ VAR BW=8
+ IF W-BW<=X THEN
+  VAR H=GetWindowHeight(WND)
+  IF GBeginWindow(WND)THEN RETURN
+  IF H/2>=Y THEN
+   'UE
+   DrawNumUpDownButton WND,7,H/2,W-7,0,TRUE,TRUE
+   SetWindowVar WND,6,1
+   VOID LMouseDownWindow(WND)
+   SetWindowVar WND,5,MAINCNT
+  ENDIF
+  IF H/2<=Y THEN
+   DrawNumUpDownButton WND,7,H/2-1,W-7,H/2+1,TRUE,FALSE
+   SetWindowVar WND,6,-1
+   VOID LMouseDownWindow(WND)
+   SetWindowVar WND,5,MAINCNT
+  ENDIF
+  VAR E=GEndWindow(WND)
+  RETURN
+ ENDIF
+ E=CallBaseControlHandler(WND,CTL,TYPE,X,Y)
+END
+DEF DrawNumUpDownButton W,WI,HE,X,Y,PUSH,UPF
+ GFILLWindow W,X,Y,X+WI,Y+HE,RGB(192,192,192)
+ VAR B1=RGB(0,0,0),B2=-1
+ IF PUSH THEN SWAP B1,B2
+ GBOXWindow W,X,Y,X+WI,Y+HE,B1
+ GLINEWindow W,X,Y,X,Y+HE-1,B2
+ GLINEWindow W,X,Y,X+WI-1,Y,B2
+ IF UPF THEN
+  GTRIWindow W,X+2+PUSH,Y+HE-2+PUSH,X+WI-2+PUSH,Y+HE-2+PUSH,X+(WI-2)/2+2+PUSH,Y+2+PUSH,RGB(0,0,0)
+ ELSE
+  GTRIWindow W,X+2+PUSH,Y+2+PUSH,X+WI-2+PUSH,Y+2+PUSH,X+(WI-2)/2+2+PUSH,Y+HE-2+PUSH,RGB(0,0,0)
+ ENDIF
+END
+DEF NumUpDownPainter WND,CTL,TYPE,A1,A2
+ DrawNumUpDown WND,TRUE
+END
+DEF DrawNumUpDown WND,BTNDRAWFLG
+ VAR E=GBeginWindow(WND)
+ IF E THEN RETURN
+ VAR H=GetWindowHeight(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR BW=8
+ GFILLWindow WND,0,0,W-8,H,-1
+ VAR NA$=GetWindowName$(WND)
+ GBOXWindow WND,0,0,W-BW,H,RGB(0,0,0)
+ GPRINTWindow WND,1,(H-8) DIV 2+1,NA$,RGB(0,0,0)
+ VAR BTN=GetWindowVar(WND,6)
+ IF BTNDRAWFLG&&ABS(BTN)!=1THEN
+  DrawNumUpDownButton WND,7,H/2,W-7,0,FALSE,TRUE
+  DrawNumUpDownButton WND,7,H/2-1,W-7,H/2+1,FALSE,FALSE
+ ENDIF
+ E=GEndWindow(WND)
+END
+DEF NumUpDownKey WND,CTL,TYPE,KEY,A2
+ IF KEY>=ASC("0")&&KEY<=ASC("9")||KEY==ASC(BS$())THEN VAR E=CallBaseControlHandler(WND,CTL,TYPE,KEY,A2)
+ IF KEY==&H0DTHEN
+  UpdateNumUpDown WND
+  E=SendNotificationWindow(GetParentWindow(WND),WND,VAL(GetWindowName$(WND)))
+ ENDIF
+
+END
 COMMON DEF SetLabelAlignLeft WND
  SetWindowVar WND,1,0
  VAR E=RepaintWindow(WND)
@@ -3143,13 +3393,13 @@
   PrintConsole "====================="+LF$()
   PrintConsole "Ver 5.0-B"+LF$()
 ' BEEP 94,-1000
-  VAR M1$,M2$,M3$,M4$,M5$,M6$
-  M1$=":1T140<<C8 C8&C2."
-  M2$=":2T140<G8 G8&G2."
-  M3$=":3T140<E8 E8&E2."
-  M4$=":4T140>>>><<G8 G8&G2."
-  M5$=":5T140>>>><<E8 E8&E2."
-  M6$=":6T140>>>><<C8 C8&C2."
+  VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77'34
+  M1$=":1"+G$+"T140<<C8 C8&C2."
+  M2$=":2"+G$+"T140<G8 G8&G2."
+  M3$=":3"+G$+"T140<E8 E8&E2."
+  M4$=":4"+G$+"T140>>>><<G8 G8&G2."
+  M5$=":5"+G$+"T140>>>><<E8 E8&E2."
+  M6$=":6"+G$+"T140>>>><<C8 C8&C2."
   BGMPLAY M1$+M2$+M3$+M4$+M5$+M6$
 '  BEEP 96
   PrintConsole "Loading font..."+LF$()
@@ -4595,32 +4845,42 @@
  RETURN 8
 END
 COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
- VAR I,X2
+ VAR S2=SIZE DIV 8
+ VAR I,X2,BF=0
+' INC Y,SIZE MOD 8
  IF SIZE==8THEN'&&(STYLE AND 3)!=3THEN
   X2=X
   @LOOP1
   IF STYLE AND 2THEN
-   GPAGE OTW_SP,OTW_DP
-   GCLIP 1
-   GFILL 511-8,511-8,511,511,0
-   GPUTCHR 511-8,511-8,C,1,1,COL
-   GPAGE OTW_SP,OTW_BP
-   FOR I=0TO 7
-    GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
-   NEXT
+   IF!BF THEN
+    GPAGE OTW_SP,OTW_DP
+    GCLIP 1
+    GFILL 511-8,511-8,511,511,0
+    GPUTCHR 511-8,511-8,C,1,1,COL
+    GPAGE OTW_SP,OTW_BP
+   ENDIF
+'  FOR I=0TO 7
+'   GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
+'  NEXT
+   'こうそくか
+   GCOPY OTW_DP,511-8,511-8,511,511-5,X+WING_SX+1,Y+WING_SY,0
+   GCOPY OTW_DP,511-8,511-4,511,511,X+WING_SX,Y+WING_SY+4,0
   ELSE
-   GPUTCHRWindow WND,X,Y,C,COL
+   GPUTCHRSize1Window WND,X,Y,C,S2,COL
   ENDIF
   IF STYLE AND 1 THEN
    INC X
    STYLE=STYLE AND NOT 1
+   BF=TRUE
    GOTO @LOOP1
    'GPUTCHRWindow WND,X+1,Y,C,COL
   ENDIF
   X=X2
  ELSE
-  GPUTCHRWindow WND,X,Y,C,COL
-  IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
+  GPUTCHRSize1Window WND,X,Y,C,S2,COL
+  IF STYLE AND 1 THEN
+   GPUTCHRSize1Window WND,X+1,Y,C,S2,COL
+  ENDIF
  ENDIF
  IF STYLE AND 4THEN
   GLINEWindow WND,X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
@@ -4636,6 +4896,10 @@
 DIM OTYDOC_NEXT[0]
 DIM OTYDOC_PREV[0]
 DIM OTYDOC_VAL$[0]
+VAR OTYDOC_LEFT
+VAR OTYDOC_CENTER
+VAR OTYDOC_RIGHT
+DIM OTYDOC_LINESTYLE[0]
 'LINE SIZE
 DIM OTYDOC_SIZE[0]
 VAR OTYDOC_LINESIZ
@@ -4651,6 +4915,7 @@
 DIM OTYDOC_WSIZE2[0]
 DIM OTYDOC_STYLE2[0]
 DIM OTYDOC_COL[0]
+DIM OTYDOC_COL2[0]
 DIM OTYDOC_CX[0]
 
 VAR OTYDOC_BEG$
@@ -4671,6 +4936,10 @@
   OTYDOC_NEXT=NewArray(OTYDOC_LINESIZ)
   OTYDOC_PREV=NewArray(OTYDOC_LINESIZ)
   OTYDOC_SIZE=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_LINESTYLE=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_LEFT=0
+  OTYDOC_CENTER=1
+  OTYDOC_RIGHT=2
   OTYDOC_FREE=1
   VAR I
   FOR I=1TO OTYDOC_LINESIZ-2
@@ -4686,6 +4955,7 @@
   OTYDOC_WSIZE2=NewArray(OTYDOC_WSIZ)
   OTYDOC_STYLE2=NewArray(OTYDOC_WSIZ)
   OTYDOC_COL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_COL2=NewArray(OTYDOC_WSIZ)
   OTYDOC_CX=NewArray(OTYDOC_WSIZ)
   OTYDOC_WFREE=1
   FOR I=1TO OTYDOC_WSIZ-2
@@ -4744,6 +5014,51 @@
  OTYDOC_WFREE=L
  RETURN
 END
+'FONT SIZE と LINE SIZE あわせる(かいぎょうよう)
+DEF OTYDOC_AdjustLine L
+ VAR V$=OTYDOC_VAL$[L]
+ ?"OTYDOC_AdjustLine",L,V$
+ VAR I
+ VAR HASTEXT
+ IF LEN(V$)THEN VAR C=ASC(V$[I])
+ VAR YSZ=8
+ FOR I=0TO LEN(V$)-1
+  IF C==&HB10BTHEN
+   C=ASC(V$[I])
+   IF C==0THEN
+    INC I
+    VAR YSZ2=ASC(V$[I])
+    ?"L,YSZ2,YSZ",L,YSZ2,YSZ
+    'ひどいいれこ
+    'FONTSIZEしていのあと もじがないか うわがきされてたら むこう
+    IF YSZ<YSZ2 THEN
+     FOR I=I+1 TO LEN(V$)
+      IF I<LEN(V$)THEN C=ASC(V$[I])ELSE C=0
+      IF C==&HB10C THEN CONTINUE
+      IF C==&HB10BTHEN
+       IF ASC(V$[I+1])==0THEN YSZ2=0BREAK
+       FOR I=I TO LEN(V$)-1
+        IF ASC(V$[I])==&HB10C THEN BREAK
+       NEXT
+       CONTINUE
+      ENDIF
+      ?CHR$(C),HEX$(C),YSZ2
+      YSZ=MAX(YSZ,YSZ2)
+      BREAK
+     NEXT
+    ENDIF
+'    YSZ=MAX(YSZ,ASC(V$[I]))
+    CONTINUE
+   ENDIF
+  ENDIF
+  HASTEXT=TRUE
+  C=ASC(V$[I])
+ NEXT
+ OTYDOC_SIZE[L]=YSZ
+ IF!HASTEXT THEN YSZ=MAX(YSZ,YSZ2)
+'DIALOG V$
+'DIALOG STR$(YSZ)
+END
 '
 DEF OTYDOC_GetData(WND)
  RETURN GetWindowVar(WND,0)
@@ -4762,7 +5077,6 @@
  GCLSWindow WND,RGB(255,255,255)
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  IF!OTYDOC_GetData(WND)THEN OTYDOC_NewCTL WND
  VAR D=OTYDOC_GetData(WND)
  VAR I=OTYDOC_ShowLine[D]
@@ -4773,11 +5087,16 @@
  VAR SZ=8
  VAR COL=RGB(0,0,0)
  VAR OJ
+ VAR ACX=-100,ACY=-100
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
+?"YSZ",YSZ
+'?YSZ,SZ,Y
   VAR V$=OTYDOC_VAL$[I]
+  VAR LINESTYLE=OTYDOC_LINESTYLE[I]
   VAR A
   VAR L=LEN(V$)-1,J,C
+  SZ=8
   X=1
   FOR J=0TO L
    C=ASC(V$[J])
@@ -4785,8 +5104,10 @@
    IF C==&Hb10bTHEN
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
     ENDIF
    ENDIF
     INC J
@@ -4797,6 +5118,7 @@
     INC J
     A=ASC(V$[J])
     SZ=A
+'    ?"SZ",SZ
     CONTINUE
     @COL'1
     INC J
@@ -4809,23 +5131,54 @@
     ST=A
     CONTINUE
    ENDIF
-   RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
+   IF  C<128THEN
+    RICHTEXTWindow WND,X-SZ/8,Y+YSZ-SZ,C,ST,SZ,COL
+   ELSE
+    RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
+   ENDIF
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
     ENDIF
    ENDIF
 '   ?HEX$(COL)
-   INC X,SZ
+   IF  C<128THEN INC X,SZ*6/8 ELSE INC X,SZ
+   IF X+SZ>=W THEN
+    X=1
+    INC Y,YSZ
+    IF Y+YSZ>=H THEN BREAK
+   ENDIF
   NEXT
   IF I==CL&&CX>L THEN
-   GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+   GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
    OTYDOC_STYLE[D]=ST
+   OTYDOC_COL[D]=RGBToShort(COL)
+   OTYDOC_WSIZE[D]=SZ
   ENDIF
+  IF LINESTYLE==OTYDOC_CENTER THEN
+   'CENTER
+   VAR CENT=(W-2-X)DIV 2
+   GCOPYWindow WND,1,Y,X+1,Y+YSZ,CENT,Y,0
+   IF CENT>1 THEN
+    GFILLWindow WND,1,Y,CENT-1,Y+YSZ,-1
+   ENDIF
+  ENDIF
+  IF LINESTYLE==OTYDOC_RIGHT THEN
+   'RIGHT
+   VAR MOVE=(W-2-X)
+   GCOPYWindow WND,1,Y,X+1,Y+YSZ,MOVE,Y,0
+   IF MOVE>1 THEN
+    GFILLWindow WND,1,Y,MOVE-1,Y+YSZ,-1
+   ENDIF
+  ENDIF
   INC Y,YSZ
+  IF Y+YSZ>=H THEN BREAK
   I=OTYDOC_NEXT[I]
  WEND
+ GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  VAR E=GEndWindow(WND)
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
@@ -4869,6 +5222,61 @@
   ENDIF
   RETURN 0
 END
+DEF OTYDOC_DeleteDup2 C
+ VAR V$=OTYDOC_VAL$[C]
+ VAR CX
+ FOR CX=0TO LEN(V$)-1
+ VAR S0=0,S1=0,S2=0,OC=CX
+ IF ASC(V$[CX])==&HB10BTHEN
+  @LOOP21
+  VAR A=ASC(V$[CX])
+  FOR CX=CX+1 TO LEN(V$)-1
+   IF A==&HB10B THEN
+    A=ASC(V$[CX])
+    IF A==0THEN INC S0:CONTINUE
+    IF A==1THEN INC S1:CONTINUE
+    IF A==2THEN INC S2:CONTINUE
+   ENDIF
+   A=ASC(V$[CX])
+   IF A==&HB10CTHEN BREAK
+  NEXT
+  IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
+  ?S0,S1,S2
+  IF S2||S1||S0 THEN
+   OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX
+  ENDIF
+ ENDIF
+ NEXT
+END
+DEF OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX2
+ VAR I
+ VAR A=ASC(V$[I])
+ FOR I=OC+1 TO CX
+  IF LEN(V$)<=I THEN BREAK
+  IF A==&HB10B THEN
+   A=ASC(V$[I])
+   IF A==0THEN
+    IF S0>1 THEN DEC S0 ELSE CONTINUE
+   ENDIF
+   IF A==1THEN
+    IF S1>1 THEN DEC S1 ELSE CONTINUE
+   ENDIF
+   IF A==2THEN
+    IF S2>1 THEN DEC S2 ELSE CONTINUE
+   ENDIF
+   DEC I
+   WHILE 1
+    A=ASC(V$[I])
+    V$[I]=""
+    DEC CX
+    IF A==&HB10C THEN BREAK
+   WEND
+  ENDIF
+  A=ASC(V$[I])
+  'IF A==&HB10C THEN BREAK
+ NEXT
+ CX2=CX
+END
 COMMON DEF OTYDOCButton WND,CTL,T,BTN,_
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
  IF!BTN THEN SetWindowVar WND,5,0RETURN
@@ -4902,35 +5310,55 @@
   IF CX THEN
    DEC OTYDOC_CX[D]
    DEC CX
-   IF ASC(S$[CX])==&HB10CTHEN
+   IF CX<LEN(S$)&&ASC(S$[CX])==&HB10CTHEN
+   BEEP 
     @LOOP1
     FOR CX=CX TO 0 STEP -1
      IF ASC(S$[CX])==&HB10BTHEN DEC CX:BREAK
     NEXT
-    IF CX<0THEN CX=0
+    VAR CXMF
+    IF CX<0THEN CX=0:CXMF=TRUE
     IF ASC(S$[CX])==&HB10CTHEN @LOOP1
     OTYDOC_CX[D]=CX
+    IF CXMF THEN @___
    ENDIF
    OTYDOCRepaint WND
   ELSE
+   @___
    IF OTYDOC_UpCursor(WND)THEN
-    'VAR C=OTYDOC_CurLine[D]
+    C=OTYDOC_CurLine[D]
     OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
     OTYDOCRepaint WND
+   ELSE
+    OTYDOCRepaint WND
    ENDIF
   ENDIF
+  @_M_M_M_
   U=1
  ENDIF
  IF BTN AND 8THEN
   CX=OTYDOC_CX[D]
   C=OTYDOC_CurLine[D]
   VAR V$=OTYDOC_VAL$[C]
+  VAR S0,S1,S2,OC=CX
   IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN
    @LOOP21
-   FOR CX=CX TO LEN(V$)-1
-    IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
+   VAR A=ASC(V$[CX])
+   FOR CX=CX+1 TO LEN(V$)-1
+    IF A==&HB10B THEN
+     A=ASC(V$[CX])
+     IF A==0THEN INC S0:CONTINUE
+     IF A==1THEN INC S1:CONTINUE
+     IF A==2THEN INC S2:CONTINUE
+    ENDIF
+    A=ASC(V$[CX])
+    IF A==&HB10CTHEN INC CX:BREAK
    NEXT
    IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
+   IF S2||S1||S0 THEN
+    ?S0,S1,S2,OC;"-";CX
+    OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX
+   ENDIF
    OTYDOC_CX[D]=CX
   ENDIF
   INC OTYDOC_CX[D]
@@ -4945,7 +5373,7 @@
    ENDIF
    ENDIF
   ELSE
-   IF ASC(V$[CX])==&HB10BTHEN
+   IF ASC(V$[CX])==&HB10B0THEN
     @LOOP2
     FOR CX=CX TO LEN(V$)-1
      IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
@@ -4957,8 +5385,32 @@
   OTYDOCRepaint WND
   U=1
  ENDIF
- ?OTYDOC_VAL$[OTYDOC_CurLine[D]]'C]
- ?" "*(OTYDOC_CX[D]);""
+ CX=LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]])-1
+ VAR I,LLL
+ FOR I=0TO CX
+  IF I==OTYDOC_CX[D]THEN LLL=CSRX
+  S$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
+  IF ASC(S$[I])==&HB10BTHEN
+   COLOR 2
+   ?OTYDOC_VAL$[OTYDOC_CurLine[D]][I];'C]
+   INC I
+   IF I==OTYDOC_CX[D]THEN LLL=CSRX
+   IF ASC(S$[I])==0THEN ?"<SIZE>";
+   IF ASC(S$[I])==1THEN ?"<COLOR>";
+   IF ASC(S$[I])==2THEN ?"<STYLE>";
+   INC I
+   IF I==OTYDOC_CX[D]THEN LLL=CSRX
+   ?ASC(S$[I]);
+   CONTINUE
+  ELSEIF ASC(S$[I])==&HB10CTHEN
+   COLOR 3
+  ELSE COLOR 15 ENDIF
+  ?OTYDOC_VAL$[OTYDOC_CurLine[D]][I];'C]
+ NEXT
+  IF I==OTYDOC_CX[D]THEN LLL=CSRX
+ ?
+ COLOR 15
+ ?" "*(LLL);""
  IF U THEN
   IF R==0 THEN
    SetWindowVar WND,5,20
@@ -4969,11 +5421,38 @@
  ENDIF
 END
 
+COMMON DEF OTYDOC_TextCheck(V$,I)
+ FOR I=I TO LEN(V$)-1
+  VAR A=ASC(V$[I])
+  IF A==&HB10B THEN
+   FOR I=I TO LEN(V$)-1
+    IF ASC(V$[I])==&HB10CTHEN
+     BREAK
+    ENDIF
+   NEXT
+   CONTINUE
+  ENDIF
+  RETURN TRUE
+ NEXT
+ RETURN FALSE
+END
 COMMON DEF OTYDocKey WND,CTL,TYPE,KEY,A2
  VAR D=OTYDOC_GetData(WND)
  VAR S=OTYDOC_ShowLine[D]
  VAR C=OTYDOC_CurLine[D]
  VAR X=OTYDOC_CX[D]
+ IF!OTYDOC_COL2[D]THEN
+  OTYDOC_COL2[D]=RGBToShort(RGB(0,0,0))
+ ENDIF
+ IF!OTYDOC_COL[D]THEN
+  OTYDOC_COL[D]=RGBToShort(RGB(0,0,0))
+ ENDIF
+ IF!OTYDOC_WSIZE[D]THEN
+  OTYDOC_WSIZE[D]=8
+ ENDIF
+ IF!OTYDOC_WSIZE2[D]THEN
+  OTYDOC_WSIZE2[D]=8
+ ENDIF
  IF!S THEN
   S=OTYDOC_NewLine("",0)
   OTYDOC_ShowLine[D]=S
@@ -4986,27 +5465,48 @@
    DEC OTYDOC_CX[D]
    DEC X
    VAR S$=OTYDOC_VAL$[C]
-   IF ASC(S$[X])==&Hb10cTHEN
-    FOR X=X TO 0 STEP -1
-     IF ASC(S$[X])==&Hb10bTHEN DEC X:BREAK
-    NEXT
-    IF X<0THEN X=0
-    OTYDOC_CX[D]=X
-   ENDIF
+   WHILE 1
+    IF ASC(S$[X])==&Hb10cTHEN
+     FOR X=X TO 0 STEP -1
+      IF ASC(S$[X])==&Hb10bTHEN DEC X:BREAK
+     NEXT
+     IF X<0THEN X=0OTYDOC_CX[D]=X:OTYDOCRepaint WND:RETURN
+     OTYDOC_CX[D]=X
+     CONTINUE
+    ENDIF
+    BREAK
+   WEND
    IF ASC(S$[X])==&Hb10bTHEN
     DEC X
     DEC OTYDOC_CX[D]
+    IF X<0THEN X=0OTYDOC_CX[D]=X:OTYDOCRepaint WND:RETURN
+
    ENDIF
    RemoveStrB OTYDOC_VAL$[C],X,1
+   
+   OTYDOC_AdjustLine C
+  ELSE
+   IF OTYDOC_PREV[C]THEN
+    S$=OTYDOC_VAL$[C]
+    C=OTYDOC_DeleteLine(C)
+    OTYDOC_CurLine[D]=C
+    'SCROLL
+    OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
+    OTYDOC_VAL$[C]=OTYDOC_VAL$[C]+S$
+   ENDIF
   ENDIF
  ELSE
   IF I$==CR$()THEN
-
-   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
+   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
    IF!C2 THEN RETURN
    OTYDOC_VAL$[C]=MID$(OTYDOC_VAL$[C],0,X)
+'  OTYDOC_DeleteDup2 C
+'  OTYDOC_DeleteDup2 C2
+   OTYDOC_AdjustLine C
+   OTYDOC_SIZE[C2]=OTYDOC_WSIZE[C]
+   OTYDOC_AdjustLine C2
    OTYDOC_CurLine[D]=C2
-   OTYDOC_CX[D]=0
+   OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C2])
    IF FALSE THEN 
    SetWindowVar WND,2,C2
    SetWindowVar WND,3,0
@@ -5020,16 +5520,36 @@
    ENDIF
   ELSE
   IF OTYDOC_STYLE[D]!=OTYDOC_STYLE2[D]THEN
-   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+CHR$(&HB10C)+I$+CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)
+   VAR TF=OTYDOC_TextCheck(OTYDOC_VAL$[C],X)
+   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+CHR$(&HB10C)+I$
+   IF TF THEN PUSH I$,CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)
    OTYDOC_STYLE[D]=OTYDOC_STYLE2[D]
    INC OTYDOC_CX[D],4
   ENDIF
+  IF OTYDOC_COL[D]!=OTYDOC_COL2[D]THEN
+   TF=OTYDOC_TextCheck(OTYDOC_VAL$[C],X)
+   I$=CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL2[D])+CHR$(&HB10C)+I$
+   IF TF THEN PUSH I$,CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)
+   OTYDOC_COL[D]=OTYDOC_COL2[D]
+   INC OTYDOC_CX[D],4
+  ENDIF
+  
+  IF OTYDOC_WSIZE[D]!=OTYDOC_WSIZE2[D]THEN
+   TF=OTYDOC_TextCheck(OTYDOC_VAL$[C],X)
+   I$=CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE2[D])+CHR$(&HB10C)+I$
+   IF TF THEN PUSH I$,CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)
+   ?STR$(OTYDOC_WSIZE2[D])
+   OTYDOC_WSIZE[D]=OTYDOC_WSIZE2[D]
+   INC OTYDOC_CX[D],4
+   IF OTYDOC_SIZE[C]<OTYDOC_WSIZE[D]THEN OTYDOC_SIZE[C]=OTYDOC_WSIZE[D]
+  ENDIF
   INC OTYDOC_CX[D]
   IF!LEN(OTYDOC_VAL$[C])THEN
    OTYDOC_VAL$[C]=I$
   ELSE
    InsertStrB OTYDOC_VAL$[C],X,I$
   ENDIF
+   OTYDOC_AdjustLine C
   ENDIF
  ENDIF
  OTYDOCRepaint WND
@@ -5071,6 +5591,29 @@
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextUnderline()
  ENDIF
 END
+COMMON DEF RTESetTextColor WND,COL
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_COL2[D]=RGBToShort(COL)
+END
+COMMON DEF RTESetAlignLeft WND
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_LINESTYLE[OTYDOC_CURLINE[D]]=OTYDOC_LEFT
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetAlignCenter WND
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_LINESTYLE[OTYDOC_CURLINE[D]]=OTYDOC_CENTER
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetAlignRight WND
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_LINESTYLE[OTYDOC_CURLINE[D]]=OTYDOC_RIGHT
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetFontSize WND,SIZE
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_WSIZE2[D]=SIZE
+END
 '==================
 VAR OTYDOCCOLOR_CTL
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
@@ -5091,11 +5634,48 @@
   RTESetUnderline GetWindowVar(WND,0),F
   RETURN
  ENDIF
- IF N$==""THEN
+ IF N$==""THEN
   VAR X=GetWindowX(WND)+GetWindowX(CW),Y=GetWindowY(WND)+GetWindowY(CW)
   OTYDOC_ShowMenu OTYDOCCOLOR_CTL,WND,X,Y,X+GetWindowWidth(CW),Y+GetWindowHeight(CW)
  ENDIF
+ IF N$=="OTYDOCCOLOR"THEN
+  RTESetTextColor GetWindowVar(WND,0),F
+  VOID DeleteWindow(CW)
+ ENDIF
+ IF N$==""THEN
+  VAR BTNL,BTNC,BTNR
+  BTNL=GetWindowVar(WND,1)
+  BTNC=GetWindowVar(WND,2)
+  BTNR=GetWindowVar(WND,3)
+  IF CW==BTNL THEN
+   CheckButton BTNL
+   UnCheckButton BTNR
+   UnCheckButton BTNC
+   RTESetAlignLeft GetWindowVar(WND,0)
+  ENDIF
+  IF CW==BTNC THEN
+   CheckButton BTNC
+   UnCheckButton BTNR
+   UnCheckButton BTNL
+   RTESetAlignCenter GetWindowVar(WND,0)
+  ENDIF
+  IF CW==BTNR THEN
+   CheckButton BTNR
+   UnCheckButton BTNL
+   UnCheckButton BTNC
+   RTESetAlignRight GetWindowVar(WND,0)
+  ENDIF
+'  UnCheckButtonsGroup CW
+ ENDIF
+ IF GetControl(CW)==GetNumUpDownControl()THEN
+  RTESetFontSize GetWindowVar(WND,0),GetNumUpDownValue(CW)
+ ENDIF
 END
+COMMON DEF OTYDOC_WNDRESIZE WND,CTL,TYPE,A1,A2
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ VOID ResizeWindow(GetWindowVar(WND,0),W,H-12)
+END
 '2PX
 '
 '
@@ -5104,7 +5684,7 @@
 COMMON DEF OTYDOC_COLORCREATE WND,CTL,TYP,A1,A2
  VAR E
  NewWindow GetButtonControl(),">>>",1,GetWindowHeight(WND)-10,27,10,WND,0 OUT E,E
- 
+ SetWindowVar WND,0,-1
 END
 COMMON DEF OTYDOC_COLORPAINT WND,CTL,TYP,A1,A2
  VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
@@ -5112,6 +5692,7 @@
  GCLSWindow WND,RGB(200,200,200)
  GBOXWindow WND,0,0,GetWindowWidth(WND),GetWindowHeight(WND),RGB(0,0,0)
  VAR X,Y,C
+ VAR SEL=GetWindowVar(WND,0)
  FOR Y=0TO 3
   FOR X=0TO 3
    VAR RGB
@@ -5122,6 +5703,9 @@
     RGB=GetConsolePalette(C)
     GFILLWindow WND,X*8+2*X+2,Y*8+2*Y+2,X*8+7+2*X+2,Y*8+7+2*Y+2,RGB
    ENDIF
+   IF SEL==C THEN
+    GBOXWindow WND,X*8+2*X+1,Y*8+2*Y+1,X*8+7+2*X+3,Y*8+7+2*Y+3,RGB(255,160,16)
+   ENDIF
    INC C
   NEXT
  NEXT
@@ -5134,18 +5718,63 @@
 COMMON DEF OTYDOC_ColorChFocus WND,CTL,TYP,FLG,FW
  IF!FLG THEN
   IF GetParentWindow(FW)==WND THEN RETURN
+  VAR OWN=GetWindowGroupOwner(WND)
+  IF GetWindowVar(WND,0)!=-1THEN
+   VOID SendNotifWindow(OWN,WND,GetConsolePalette(GetWindowVar(WND,0)))
+   RETURN
+  ENDIF
   VOID DeleteWindow(WND)
  ENDIF
 END
+COMMON DEF OTYDOC_ColorMouseUp WND,CTL,TYP,X,Y
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,X,Y)
+' IF X MOD 10<2THEN RETURN
+' IF Y MOD 10<2THEN RETURN
+ VAR COL=(X DIV 10)+(Y DIV 10)*4
+ IF COL>15THEN RETURN
+ SetWindowVar WND,0,COL
+ OTYDOC_COLORPAINT WND,CTL,TYP,0,0
+END
 COMMON DEF OTYDOC_ShowMenu CTL,WND,X,Y,X2,Y2
  VAR E,MENUWND
  IF CTL==OTYDOCCOLOR_CTL THEN
-  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+2,4*8+2*4+2+8+2,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
+  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+1,4*8+2*4+2+8+1,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
   IF E THEN RETURN
  ENDIF
  E=JoinWindowGroup(WND,MENUWND)
  
 END
+COMMON DEF OTYDOC_LCRPAINT WND,CTL,TYP,_,__
+ IF CallBaseControlHandler(WND,CTL,TYP,_,__)THEN RETURN
+ VAR T=GetWindowVar(WND,7)
+ REPEAT
+  ON T GOTO @LEFT,@CENTER,@RIGHT
+  @LEFT
+   GLINEWindow WND,1,1,8,1,RGB(0,0,0)
+   GLINEWindow WND,1,3,6,3,RGB(0,0,0)
+   GLINEWindow WND,1,5,8,5,RGB(0,0,0)
+   GLINEWindow WND,1,7,6,7,RGB(0,0,0)
+  BREAK
+  @CENTER
+   GLINEWindow WND,1,1,8,1,RGB(0,0,0)
+   GLINEWindow WND,2,3,7,3,RGB(0,0,0)
+   GLINEWindow WND,1,5,8,5,RGB(0,0,0)
+   GLINEWindow WND,2,7,7,7,RGB(0,0,0)
+  BREAK
+  @RIGHT
+   GLINEWindow WND,1,1,8,1,RGB(0,0,0)
+   GLINEWindow WND,3,3,8,3,RGB(0,0,0)
+   GLINEWindow WND,1,5,8,5,RGB(0,0,0)
+   GLINEWindow WND,3,7,8,7,RGB(0,0,0)
+  BREAK
+ UNTIL FALSE
+ VAR E=GEndWindow(WND)
+END
+COMMON DEF OTYDOC_LCRMouseDown WND,CTL,TYP,_,__
+ IF IsCheckedButton(WND)THEN RETURN
+ IF CallBaseControlHandler(WND,CTL,TYP,_,__)THEN RETURN
+END
+VAR OTYDOCLCRBTN_CTL
 COMMON DEF I_OTYDOC
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -5163,9 +5792,20 @@
   E=SetControlCreateHandler(OTYDOCCOLOR_CTL,"OTYDOC_COLORCREATE")
   E=SetControlChFocusHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorChFocus")
   E=SetControlNotifHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorNotif")
+  E=SetControlLMouseDownHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorMouseUp")
+  E=SetControlResizeHandler(OTYDOC_WNDCTL,"OTYDOC_WNDRESIZE")
+  ExtendControl "OTYDOCLCRBUTTON",GetToggleButtonControl() OUT OTYDOCLCRBTN_CTL,E
+  E=SetControlPainter(OTYDOCLCRBTN_CTL,"OTYDOC_LCRPAINT")
+  E=SetControlLMouseDownHandler(OTYDOCLCRBTN_CTL,"OTYDOC_LCRMouseDown")
  ENDIF
- NewTopLevelWindow OTYDOC_WNDCTL,"OTYDOC",256,128 OUT WND,E
- SetProcessVar WND
+ NewTopLevelStyleWindow OTYDOC_WNDCTL,"OTYDOC",256,128,WindowMenuStyle() OR WindowResizableStyle() OUT WND,E
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"New",1
+ AddMenuItem MENU,"Open",2
+ AddMenuItem MENU,"Save",3
+ AddMenuItem MENU,"Save as",4
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU SetProcessVar WND
  VAR DOC,COL
  NewWindow OTYDOCCTL,"OTYDOC",0,12,256,116,WND,0 OUT DOC,E
  SetWindowVar WND,0,DOC
@@ -5174,7 +5814,35 @@
  NewWindow GetToggleButtonControl(),"S",12*2,0,11,11,WND,0 OUT E,E
  NewWindow GetToggleButtonControl(),"U",12*3,0,11,11,WND,0 OUT E,E
  NewWindow GetButtonControl(),"color",12*4,0,11+32,11,WND,0 OUT E,E
- NewWindow GetButtonControl(),"",12*5+32,0,11,11,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"",12*5+32,0,11,11,WND,0 OUT E,E
+ VAR NUM
+ VAR X=12*6+32
+ NewWindow GetLabelControl(),"size",X,2,31,7,WND,0 OUT E,E
+ INC X,32
+ NewWindow GetNumUpDownControl(),"0",X,0,11+8*3,11,WND,0 OUT NUM,E
+ SetNumUpDownRange NUM,8,96
+ INC X,11+8*3+1
+ VAR BTNL,BTNC,BTNR
+ NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNL,E
+ INC X,12
+ NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNC,E
+ INC X,12
+ NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNR,E
+ INC X,12
+ SetWindowVar WND,1,BTNL
+ SetWindowVar WND,2,BTNC
+ SetWindowVar WND,3,BTNR
+ SetWindowVar BTNL,7,0
+ SetWindowVar BTNC,7,1
+ SetWindowVar BTNR,7,2
+ 'TODO:GROUPのかくちょう
+'E=JoinWindowGroup(BTNL,BTNC)
+'E=JoinWindowGroup(BTNL,BTNR)
+'E=JoinWindowGroup(BTNC,BTNL)
+'E=JoinWindowGroup(BTNC,BTNR)
+'E=JoinWindowGroup(BTNR,BTNL)
+'E=JoinWindowGroup(BTNR,BTNC)
+ VOID ActiveWindow(WND)
 END
 COMMON DEF L_OTYDOC
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
