diff -u OTW.TXT OTW13
--- OTW.TXT
+++ OTW13
@@ -588,12 +588,12 @@
    ENDIF
   WEND
  ENDIF
- INC WIN_TopLevelX,WIN_FHEIGHT1
- INC WIN_TopLevelY,WIN_FHEIGHT1
  WIN_FW1[NUWID]=CTL_FW1[NUCID]'WIN_TopLevelX
  WIN_FH1[NUWID]=CTL_FH1[NUCID]'WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
- WIN_AY[NUWID]=WIN_TOPLEVELY-WIN_FHEIGHT1
+ WIN_AY[NUWID]=WIN_TOPLEVELY
+ INC WIN_TopLevelX,WIN_FHEIGHT1
+ INC WIN_TopLevelY,WIN_FHEIGHT1
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -636,6 +636,14 @@
  FOR I=0TO 7
   WIN_VAR[NUWID,I]=0
  NEXT
+ FOR I=0TO 15
+  WIN_MSGCNT[NUWID,I]=0
+ NEXT
+ VAR N=WIN_NEXT[NUWID]
+ VAR P=WIN_PREV[NUWID]
+ IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
+  WIN_CHILD[WIN_PARENT[NUWID]]=N
+ ENDIF
  IF WIN_CHILD[NUWID]THEN
   VAR C=WIN_CHILD[NUWID]
   VAR D
@@ -645,17 +653,12 @@
    C=D
   WEND
  ENDIF
- VAR N=WIN_NEXT[NUWID]
- VAR P=WIN_PREV[NUWID]
  IF N THEN
   WIN_PREV[N]=P
  ENDIF
  IF P THEN
   WIN_NEXT[P]=N
  ENDIF
- IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
-  WIN_CHILD[WIN_PARENT[NUWID]]=N
- ENDIF
  IF WIN_SP[NUWID]THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
   SPCLR WIN_SP[NUWID]AND 511
@@ -1008,7 +1011,7 @@
  VAR S=WIN_MSGE[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
- IF WIN_WID[NUWID]<=0THEN RETURN 0
+ IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
@@ -1019,26 +1022,33 @@
 END
 COMMON DEF UpdateWindow(WND)
  VAR E=UpdateWindowOnly(WND)
- IF E THEN RETURN E
  VAR NUWID=WND AND NUWIDMASK
+ IF E THEN RETURN E
  @END
  VAR B=WIN_CHILD[NUWID]
+ VAR DB=B,PB=NUWID
  WHILE B
+  IF B==NUWID THEN BREAK
   E=UpdateWindowOnly(B OR WIN_WID[B]<<WIDSHIFT)
+  IF E THEN B=DB
+  IF!B THEN B=PB
+  IF WIN_CHILD[B]THEN
+   B=WIN_CHILD[B]
+   CONTINUE
+  ENDIF
   IF!WIN_NEXT[B]THEN
    WHILE B
     B=WIN_PARENT[B]
     IF B==NUWID THEN BREAK
     IF WIN_NEXT[B]THEN BREAK
    WEND
+   IF!B THEN BREAK
    IF B==NUWID THEN BREAK
+   PB=B
    B=WIN_NEXT[B]
    CONTINUE
   ENDIF
-  IF WIN_CHILD[B]THEN
-   B=WIN_CHILD[B]
-   CONTINUE
-  ENDIF
+  DB=B
   B=WIN_NEXT[B]
  WEND 
  RETURN 0
@@ -1476,6 +1486,7 @@
   BEEP 94,-1000
   PrintConsole "Loading font..."+LF$()
   OTW_LOADFONT
+  PrintConsole "Init..........."+LF$()
   OTWRunning=TRUE
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -1492,12 +1503,15 @@
   GPRIO 1023
   GCLS
   GCLS RGB(0,192,0)
+  GCLS 
   VAR I,J
-  FOR J=0TO 3
+  FOR J=0TO 2
    FOR I=0TO 240/4
-    GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)'RGB(0,I*4,0)
+   GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)XOR &HFFFFFF'RGB(0,I*4,0)
+'    GLINE 0,I+60*J,400,I+60*J,RGB(0,I*4,I*4) 
    NEXT
   NEXT
+  
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
   GCLS RGB(0,192,128)
@@ -1552,9 +1566,9 @@
   E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
   NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
-  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
-  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
-  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
+' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
+' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
+' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
   GCLIP 1,0,0,400,240
   VISIBLE 1,1,1,1
@@ -1665,9 +1679,9 @@
   E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
- E=UpdateWindow(TSTWND2)
- E=UpdateWindow(TSTWND)
- E=UpdateWindow(TSTWND3)
+'E=UpdateWindow(TSTWND2)
+'E=UpdateWindow(TSTWND)
+'E=UpdateWindow(TSTWND3)
  OTW_FDIFF=MAINCNT-OTW_FCNT
  IF OTW_FDIFF>1 THEN
   OTW_FPF#=OTW_FPFCNT
@@ -1781,7 +1795,7 @@
   E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
   E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
  ELSE
-  LAUNCHERLEN=6
+  LAUNCHERLEN=7
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -1789,6 +1803,7 @@
   LAUNCHERITEM$[3]="LAUNCHER"
   LAUNCHERITEM$[4]="PAINT"
   LAUNCHERITEM$[5]="TXTED"
+  LAUNCHERITEM$[6]="PRGED"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
   I_LAUNCHER
  ENDIF
@@ -2155,11 +2170,11 @@
 COMMON DEF INIT_TXTBOXEX
  VAR E
  IF!TXTEDCTL THEN
-  ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
   NewControl "TextBoxEx" OUT TXTBOXEXCTL,E
   E=SetControlPainter(TXTBOXEXCTL,"TextBoxExPainter")
   E=SetControlKeyHandler(TXTBOXEXCTL,"TextBoxExKey")
   E=SetControlButtonHandler(TXTBOXEXCTL,"TextBoxExButton")
+  E=SetControlChFocusHandler(TXTBOXEXCTL,"TextBoxExChFocus")
   TXTBOXEX_LINESIZ=1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -2213,6 +2228,9 @@
 COMMON DEF TextBoxExPainter WND,CTL,T,_,__
  TextBoxExRepaint WND
 END
+COMMON DEF TextBoxExChFocus WND,CTL,T,_,__
+ TextBoxExRepaint WND
+END
 COMMON DEF TextBoxExRepaint WND
  VAR E=GBeginWindow(WND)
  GCLSWindow WND,RGB(255,255,255)
@@ -2239,7 +2257,7 @@
    GPRINTWindow WND,X,Y,V$,TC
   ENDIF
   PL=L
-  IF L==C THEN
+  IF L==C&&IsActiveWindow(WND)THEN
    GFILLWindow WND,X+CX*8,Y+7,X+8+CX*8,Y+6,TC
   ENDIF
   L=TXTBOXEX_NEXT[L]
@@ -2248,12 +2266,12 @@
   IF!L THEN
    IF!LEN(V$)||V$[LEN(V$)-1]!=L$THEN
     GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
-    IF PL==C THEN
+    IF PL==C&&IsActiveWindow(WND)THEN
      GFILLWindow WND,CX*8,Y-1,8+CX*8,Y-2,TC
     ENDIF
    ELSE
     GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
-    IF PL==C THEN
+    IF PL==C&&IsActiveWindow(WND)THEN
      GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
     ENDIF
    ENDIF
@@ -2547,12 +2565,34 @@
   RETURN
  ENDIF
  VAR WND,E
+ IF!TXTEDCTL THEN
+  ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
+ ENDIF
  NewTopLevelWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
  SetProcessVar WND
  NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT WND,E
- SetTextBoxExPRGMode WND,TRUE
+'SetTextBoxExPRGMode WND,TRUE
 END
 COMMON DEF L_TXTED
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR PRGEDCTL
+COMMON DEF I_PRGED
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!PRGEDCTL THEN
+  ExtendControl "PRGED",GetWindowControl() OUT PRGEDCTL,E
+ ENDIF
+ NewTopLevelWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
+ SetProcessVar WND
+ NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT WND,E
+ SetTextBoxExPRGMode WND,TRUE
+END
+COMMON DEF L_PRGED
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
