diff -u OTW.TXT OTW33
--- OTW.TXT
+++ OTW33
@@ -7,7 +7,16 @@
 VAR WIN_BKGND,WIN_BTNBACK,WIN_SELCOL,WIN_SELTXTCOL,WIN_WORKSPACECOL
 VAR OTW_ENABLE_SHADOW
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
-VAR OTW_MOVWINNUWID
+VAR OTW_MOVWIN_USEXOR
+VAR OTW_MOVWIN_XOR_INIT
+VAR OTW_MOVWIN_USESP
+VAR OTW_MOVWIN_NUWID
+VAR OTW_MOVWIN_X
+VAR OTW_MOVWIN_Y
+VAR OTW_MOVWIN_DX
+VAR OTW_MOVWIN_DY
+VAR OTW_MOVWIN_W
+VAR OTW_MOVWIN_H
 VAR OTW_CLIPMODE
 '1:MOV
 '2:RESIZE
@@ -308,6 +317,9 @@
 VAR MENU_CHECK_W
 VAR MENU_RADIO_W
 VAR MENU_NOTIFID
+VAR MENU_NOALLOC
+VAR MENU_INVALIDID
+VAR MENU_NOITEM
 DEF OTW_MENU_INITARRAY
  PrintConsoleln "Init menu..."
  MENU_ITEMMAX=1024
@@ -347,7 +359,9 @@
  MENU_CHECK_W=8
  MENU_RADIO_W=8
  MENU_NOTIFID=&HDEADFEED
- VAR E
+ MENU_NOALLOC=&H5001
+ MENU_INVALIDID=&H5002
+ MENU_NOITEM=&H5003
 END
 'FILE
 VAR ASSOC_LEN
@@ -502,7 +516,23 @@
 VAR WINCTL_CAPCY
 VAR WINCTL_MENUCY
 VAR WINCTL_NARROW_CAPCY
-
+VAR WINCTL_HIT_CLS
+VAR WINCTL_HIT_MAX
+VAR WINCTL_HIT_MIN
+VAR WINCTL_HIT_CAP
+'B1  B2  B3
+'  
+'B4    B5
+'  
+'B5  B7  B8
+VAR WINCTL_HIT_B1
+VAR WINCTL_HIT_B2
+VAR WINCTL_HIT_B3
+VAR WINCTL_HIT_B4
+VAR WINCTL_HIT_B5
+VAR WINCTL_HIT_B6
+VAR WINCTL_HIT_B7
+VAR WINCTL_HIT_B8
 DEF OTW_CTL_INITARRAY
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
@@ -575,6 +605,18 @@
  WINCTL_CAPCY=10
  WINCTL_MENUCY=10
  WINCTL_NARROW_CAPCY=5
+ WINCTL_HIT_CLS=1
+ WINCTL_HIT_MAX=2
+ WINCTL_HIT_MIN=3
+ WINCTL_HIT_CAP=4
+ WINCTL_HIT_B1 =5
+ WINCTL_HIT_B2 =6
+ WINCTL_HIT_B3 =7
+ WINCTL_HIT_B4 =8
+ WINCTL_HIT_B5 =9
+ WINCTL_HIT_B6 =10
+ WINCTL_HIT_B7 =11
+ WINCTL_HIT_B8 =12
 
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
@@ -1585,7 +1627,6 @@
  ARY=GetSBArray(IMAGE_PTR[I])
  ERR=0
 END
-VAR MENU_NOALLOC
 COMMON DEF NewMenu OUT MENU,E
  IF !MENU_FREE THEN MENU=0:E=MENU_NOALLOC:RETURN
  INC MENU_IDCNT
@@ -1873,7 +1914,7 @@
  IF!MENU_LAST[N]THEN RETURN
 END
 COMMON DEF CheckMenu(MENU)
- RETURN MENU_ID[MENU AND 4095]==MENU>>12
+ RETURN MENU&&MENU_ID[MENU AND 4095]==MENU>>12
 END
 
 DEF MENU_RADIO_UNCHECK S
@@ -1897,6 +1938,26 @@
  WEND
  
 END
+COMMON DEF EnumerateMenu MENU,C OUT STR$,C2,E
+ IF!CheckMenu(MENU)THEN
+  STR$=""
+  C=0
+  E=MENU_INVALIDID
+ ENDIF
+ VAR N=MENU AND 4095
+ E=0
+ IF C==0THEN
+  C2=MENU_ITEM[N]
+ ELSE
+  C2=MENU_INEXT[C]
+ ENDIF
+ IF C2 THEN
+  STR$=MENU_INAME$[C2]
+ ELSE
+  STR$=""
+  E=MENU_NOITEM
+ ENDIF
+END
 DEF MenuLMouseUp WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
  IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
@@ -3737,6 +3798,22 @@
  if!checkwindow(wnd)then return
  win_name$[wnd and nuwidmask]=name$
 end
+COMMON DEF GetWindowSize WND,FRM OUT W,H,E
+ IF!CheckWindow(WND)THEN
+  E=WIN_INVALIDID
+  W=0
+  H=0
+  RETURN
+ ENDIF
+ VAR NUWID=WND AND NUWIDMASK
+ E=0
+ W=WIN_WIDTH[NUWID]
+ H=WIN_HEIGHT[NUWID]
+ IF!FRM THEN
+  W=W-WIN_FW2[NUWID]
+  H=H-WIN_FH2[NUWID]
+ ENDIF
+END
 COMMON DEF GetWindowWidth(WND)
  IF!CheckWindow(WND)THEN RETURN -1
  RETURN WIN_WIDTH[WND AND NUWIDMASK]-WIN_FW2[WND AND NUWIDMASK]
@@ -4513,6 +4590,9 @@
 'GWGGGGGGGGGgB
 'GgggggggggggB
 'BBBBBBBBBBBBB
+DEF WindowFrame_PtInBox(X,Y,X1,Y1,X2,Y2)
+ RETURN X1<=X&&X2>=X&&Y1<=Y&&Y2>=Y
+END
 DEF WindowFramePainterDrawFrame WND,X1,Y1,X2,Y2,EDGE
  VAR G1=RGB(192,192,192)
  VAR G2=RGB(136,136,136)
@@ -4529,22 +4609,61 @@
   GBOXWindow WND,X1,Y1,X2,Y2,#BLACK
  ENDIF
 END
-DEF NEW_WINDOW_FRAME_PAINTER WND
+DEF NEW_WINDOW_FRAME_PAINTER WND,DRW,MX,MY,FLG OUT HIT
+ HIT=0
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  VAR STYLE=GetWindowStyle(WND)
 
  VAR FW1,FH1,FW2,FH2
  GetWindowFrameSize WND OUT FW1,FH1,FW2,FH2,
- VAR HASBORDER=!HasProp(WND,"WINOLDSTATE")
+ MX=MX-FW1
+ MY=MY-FH1
+ VAR HASBORDER=!(STYLE AND WindowMaximizedStyle())
+ VAR RESIZ=STYLE AND WindowResizableStyle()
+ 'DRAW BORDER
  IF HASBORDER THEN
   VAR BW1,BH1,BW2,BH2
+  VAR BX1=-FW1,BY1=-FH1,BX2=W+FW2,BY2=H+FH2
   CalcWindowBorderSize WND,STYLE OUT BW1,BH1,BW2,BH2
   VAR EDGE=BW1>1
-  WindowFramePainterDrawFrame WND,-FW1,-FH1,W+FW2,H+FH2,EDGE
+  IF DRW THEN
+   WindowFramePainterDrawFrame WND,BX1,BY1,BX2,BY2,EDGE
+  ENDIF
+  IF!RESIZ THEN @NO_RESIZ
+  IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX1+BW1-1,BY2)THEN
+   HIT=WINCTL_HIT_B4
+  ENDIF
+  IF WindowFrame_PtInBox(MX,MY,BX2-BW2+1,BY1,BX2,BY2)THEN
+   HIT=WINCTL_HIT_B5
+  ENDIF
+  IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY1+BH1-1)THEN
+   HIT=WINCTL_HIT_B2
+  ENDIF
+  IF WindowFrame_PtInBox(MX,MY,BX1,BY2-BH2+1,BX2,BY2)THEN
+   HIT=WINCTL_HIT_B7
+  ENDIF
+
+  VAR BOTH_SIZE=8
+  IF HIT>=WINCTL_HIT_B1&&HIT<=WINCTL_HIT_B8 THEN
+   IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX1+BOTH_SIZE,BY1+BOTH_SIZE)THEN
+    HIT=WINCTL_HIT_B1
+   ENDIF
+   IF WindowFrame_PtInBox(MX,MY,BX2-BOTH_SIZE,BY1,BX2,BY1+BOTH_SIZE)THEN
+    HIT=WINCTL_HIT_B3
+   ENDIF
+   IF WindowFrame_PtInBox(MX,MY,BX1,BY2-BOTH_SIZE,BX1+BOTH_SIZE,BY2)THEN
+    HIT=WINCTL_HIT_B6
+   ENDIF
+   IF WindowFrame_PtInBox(MX,MY,BX2-BOTH_SIZE,BY2-BOTH_SIZE,BX2,BY2)THEN
+    HIT=WINCTL_HIT_B8
+   ENDIF
+  ENDIF
+  @NO_RESIZ
  ELSE
  ENDIF
 
+ 'DRAW CAPTION
  VAR CH
  VAR NRRW=STYLE AND WindowNarrowStyle()
  CalcWindowCaptionHeight WND,STYLE OUT CH
@@ -4552,170 +4671,146 @@
  VAR CAPTY1=-FH1+BH1
  VAR CAPTX2=W+FW2-BW2
  VAR CAPTY2=-FH1+BH1+CH-1
- VAR G1=RGB(192,192,192)
- GFILLWindow WND,CAPTX1,CAPTY1,CAPTX2,CAPTY2,RGB(0,0,136)
- IF EDGE THEN
-  GLINEWindow WND,CAPTX1,CAPTY2,CAPTX2,CAPTY2,G1
- ELSE
-  GLINEWindow WND,CAPTX1,CAPTY2,CAPTX2,CAPTY2,#BLACK
+ IF WindowFrame_PtInBox(MX,MY,CAPTX1,CAPTY1,CAPTX2,CAPTY2)THEN
+  HIT=WINCTL_HIT_CAP
  ENDIF
+
+ IF DRW THEN
+  VAR G1=WIN_BKGND
+  GFILLWindow WND,CAPTX1,CAPTY1,CAPTX2,CAPTY2,RGB(0,0,136)
+  IF EDGE THEN
+   GLINEWindow WND,CAPTX1,CAPTY2,CAPTX2,CAPTY2,G1
+  ELSE
+   GLINEWindow WND,CAPTX1,CAPTY2,CAPTX2,CAPTY2,#BLACK
+  ENDIF
+ ENDIF
+ 'DRAW BUTTON
  VAR BW=9
  VAR BH=8
  '_[MARGIN12][MARGIN1]X[MARGIN0]
  VAR MARGIN0=0
  VAR MARGIN1=1
  VAR MARGIN2=0
- VAR BX1=CAPTX2-BW-MARGIN0
- VAR BY1=CAPTY1'+1
- VAR BX2=CAPTX2-MARGIN0
- VAR BY2=BY1+BH
+ BX1=CAPTX2-BW-MARGIN0
+ BY1=CAPTY1'+1
+ BX2=CAPTX2-MARGIN0
+ BY2=BY1+BH
+ 
  IF!NRRW THEN
-  GPRINTWindow WND,CAPTX1,CAPTY1+1,GetWindowName$(WND),#WHITE
+  IF DRW THEN
+   GPRINTWindow WND,CAPTX1,CAPTY1+1,GetWindowName$(WND),#WHITE
 
-  'x button
-  GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
-  GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
-  GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
-  GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
-  '
-  GLINEWindow WND,BX1+1,BY1+1,BX2-3,BY2-2,#BLACK
-  GLINEWindow WND,BX1+2,BY1+1,BX2-2,BY2-2,#BLACK
-  '/
-  GLINEWindow WND,BX2-3,BY1+1,BX1+1,BY2-2,#BLACK
-  GLINEWindow WND,BX2-2,BY1+1,BX1+2,BY2-2,#BLACK
+   'x button
+   GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
+   GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
+   GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
+   GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
+   '
+   GLINEWindow WND,BX1+1,BY1+1,BX2-3,BY2-2,#BLACK
+   GLINEWindow WND,BX1+2,BY1+1,BX2-2,BY2-2,#BLACK
+   '/
+   GLINEWindow WND,BX2-3,BY1+1,BX1+1,BY2-2,#BLACK
+   GLINEWindow WND,BX2-2,BY1+1,BX1+2,BY2-2,#BLACK
+  ENDIF
+  IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
+   HIT=WINCTL_HIT_CLS
+  ENDIF
 
   IF STYLE AND WindowMinMaxStyle()THEN
    'max
    BX1=BX1-BW-MARGIN1-1
    BX2=BX2-BW-MARGIN1-1
-   GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
-   GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
-   GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
-   GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
-   GBOXWindow WND,BX1+1,BY1+1,BX2-2,BY2-2,#BLACK
-   GLINEWindow WND,BX1+1,BY1+2,BX2-2,BY1+2,#BLACK
+   IF DRW THEN
+    GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
+    GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
+    GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
+    GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
+    
+    IF STYLE AND WindowMaximizedStyle()THEN
+     GBOXWindow WND,BX1+3,BY1+1,BX1+7,BY1+5,#BLACK
+     GFILLWindow WND,BX1+2,BY1+4,BX1+4,BY1+6,G1
+     GBOXWindow WND,BX1+1,BY1+3,BX1+5,BY1+7,#BLACK
+    ELSE
+     GBOXWindow WND,BX1+1,BY1+1,BX2-2,BY2-2,#BLACK
+     GLINEWindow WND,BX1+1,BY1+2,BX2-2,BY1+2,#BLACK
+    ENDIF
+   ENDIF
+   IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
+    HIT=WINCTL_HIT_MAX
+   ENDIF
    'min
    BX1=BX1-BW-MARGIN2-1
    BX2=BX2-BW-MARGIN2-1
-   GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
-   GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
-   GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
-   GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
-   GLINEWindow WND,BX1+2,BY2-2,BX2-2,BY2-2,#BLACK
+   IF DRW THEN
+    GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
+    GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
+    GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
+    GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
+    GLINEWindow WND,BX1+2,BY2-2,BX2-2,BY2-2,#BLACK
+   ENDIF
+   IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
+    HIT=WINCTL_HIT_MIN
+   ENDIF
   ENDIF
- ELSE
- 
  ENDIF
-END
-DEF WindowFramePainter WND,CTL,TYPE,A1,A2
- VAR E=GBeginFrameWindow(WND)
- IF E THEN RETURN
- VAR NUWID=WND AND NUWIDMASK
- VAR NUCID=WIN_CTL[NUWID] AND 4095
- VAR FW=WIN_FW1[NUWID]
- VAR FH=WIN_FH1[NUWID]
- VAR H=GetWindowFrameHeight(WND)
- VAR W=GetWindowFrameWidth(WND)
- VAR ISMAXW=!FW
- VAR H2=WIN_HEIGHT[NUWID]-H
- VAR SH=FH-12'CTL_FH1[NUCID]
- VAR NARROW=WIN_STYLE[NUWID]AND WIN_STYLE_NARROW
- IF NARROW THEN
-  SH=FH-6
- ENDIF
- VAR SW=WIN_FW2[NUWID]-2'CTL_FW1[NUCID]-CTL_FW2[NUCID]
- IF WIN_MENU[NUWID]THEN DEC SH,10'TODO:MENU_HEIGHT
- VAR C=WIN_BKGND
- DEC H,SH
- DEC W,SW
- 'GCLSWindow WND,WIN_BACKGND[NUWID]
- VAR FRAMEBKGND=RGB(0,0,199)
- GFILLWindow WND,0,-H+1,W-2,-1,FRAMEBKGND
- VAR CLOSECOLOR=RGB(199,0,0)'RGB(192,192,192)
- VAR CLOSEFC=C'RGB(0,0,0)
- IF!NARROW THEN
-  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
-  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,CLOSECOLOR
-  GLINEWindow WND,W-08-1,-H+3,W-2-1,-H+9,CLOSEFC
-  GLINEWindow WND,W-7-1,-H+3,W-1-1,-H+9,CLOSEFC
-  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,CLOSEFC
-  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,CLOSEFC
-
- ELSE
-  GFILLWindow WND,W-5-1,-H+1,W-1,-H+5,CLOSECOLOR
-  GLINEWindow WND,W-4-1,-H+2,W-3,-H+4,CLOSEFC
-  GLINEWindow WND,W-4-1,-H+4,W-3,-H+2,CLOSEFC
- ENDIF
- GLINEWindow WND,-1,-1,W-2,-1,RGB(0,0,0)
- GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
- 
- IF WIN_STYLE_MINMAX==(WIN_STYLE[NUWID]AND WIN_STYLE_MINMAX)THEN
-  IF FW>1THEN
-   'min max button elements
-   GFILLWindow WND,W-30,-H+1,W-11,-H+10,FRAMEBKGND
-   GBOXWindow WND,W-19,-H+2,W-12,-H+9,C
-   GLINEWindow WND,W-29,-H+9,W-21,-H+9,C
+ 'DRAW MENU
+ IF STYLE AND WindowMenuStyle()THEN
+  VAR MENUC=0
+  VAR MENU=GetWindowMenu(WND)
+  VAR STR$,E
+  VAR MENUY=CAPTY2+1
+  VAR MENUX=0
+  VAR MENU_MARGIN=4
+  IF DRW THEN
+   GFILLWindow WND,MENUX,MENUY,MENUX+W,MENUY+WINCTL_MENUCY,G1
   ENDIF
-  IF ISMAXW THEN
-   'min restore button elements
-   GFILLWindow WND,W-30,-H+1,W-11,-H+10,FRAMEBKGND
-   GBOXWindow WND,W-17,-H+2,W-12,-H+7,C
-   GFILLWindow WND,W-19,-H+9,W-14,-H+4,FRAMEBKGND
-   GBOXWindow WND,W-19,-H+9,W-14,-H+4,C
-   GLINEWindow WND,W-29,-H+9,W-21,-H+9,C
-  ENDIF
- ENDIF
- IF FW>1 THEN
-
-  INC H,SH
-  GLINEWindow WND,-1,-H+1,W-2,-H+1,-1
-  GLINEWindow WND,-2,-H,W-1,-H,RGB(224,224,224)
-  GLINEWindow WND,-1,-H+1,-1,H2-2,-1
-  GLINEWindow WND,-2,-H+1,-2,H2-1,RGB(224,224,224)
-  GLINEWindow WND,W-1,-H+1,W-1,H2-1,RGB(128,128,128)
-  GLINEWindow WND,W,-H,W,H2,RGB(0,0,0)
-  GLINEWindow WND,W-2,H2-1,-1,H2-1,RGB(128,128,128)
-  GLINEWindow WND,W,H2,-2,H2,RGB(0,0,0)
- ENDIF
- IF WIN_MENU[NUWID]THEN
-  GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
-  GFILLWindow WND,0,-10,W-2,-2,WIN_BKGND
-  C=WIN_MENU[NUWID]AND 4095
-  VAR I=MENU_ITEM[C]
-  VAR X=0
-  VAR S=MENU_SEL[C]
-  WHILE I
-   IF S==I THEN
-    GFILLWindow WND,X,-10,X+LEN(MENU_INAME$[I])*8+2,-2,GetSelectionColor()
-    GPRINTWindow WND,X,-9,MENU_INAME$[I],GetSelectionTextColor()
-   ELSE
-    GPRINTWindow WND,X,-9,MENU_INAME$[I],RGB(0,0,0)
+  WHILE 1
+   EnumerateMenu MENU,MENUC OUT STR$,MENUC,E
+   IF!MENUC THEN BREAK
+   IF DRW THEN
+    GPRINTWindow WND,MENUX,MENUY+1,STR$,#BLACK
    ENDIF
-   X=X+LEN(MENU_INAME$[I])*8+4
-   I=MENU_INEXT[I]
+   MENUX=MENUX+LEN(STR$)*8+MENU_MARGIN
   WEND
  ENDIF
- NEW_WINDOW_FRAME_PAINTER WND
+END
+DEF WindowFramePainter WND,CTL,TYPE,A1,A2
+ VAR E=GBeginFrameWindow(WND)
+ IF E THEN RETURN
+ VOID NEW_WINDOW_FRAME_PAINTER(WND,TRUE,0,0,0)
  E=ReGBeginWindow(WND)
 END
-COMMON DEF SetWindowMoveFrame(WND,X,Y,WIDTH,HEIGHT)
+
+COMMON DEF NewWindowMoveFrame(WND,X,Y,WIDTH,HEIGHT,MODE,CALLBACK$)
+ IF SetWindowDragHandler(CALLBACK$,WND,X,Y)THEN RETURN -1
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- IF WIDTH<0||HEIGHT<0THEN RETURN 0
- SPSHOW OTW_MOVWINSP
- SPSCALE OTW_MOVWINSP,WIDTH+1,HEIGHT+1
- VAR AX=GetWindowAX(WND)
- VAR AY=GetWindowAY(WND)
- SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
- SPOFS OTW_MOVWINSP,AX,AY,-256
- SPVAR OTW_MOVWINSP,1,NUWID
- SPVAR OTW_MOVWINSP,2,AX-X
- SPVAR OTW_MOVWINSP,3,AY-Y
- SPOFS OTW_MOVWINSP,AX-X,AY-Y',-256
+ OTW_MOVWINFLG=MODE
+ VAR AX=WIN_AX[NUWID]
+ VAR AY=WIN_AY[NUWID]
+ INC X,AX
+ INC Y,AY
+ OTW_MOVWIN_W=WIN_WIDTH[NUWID]+1
+ OTW_MOVWIN_H=WIN_HEIGHT[NUWID]+1
+ OTW_MOVWIN_NUWID=NUWID
+ OTW_MOVWIN_DX=AX-X
+ OTW_MOVWIN_DY=AY-Y
+ IF OTW_MOVWIN_USESP THEN
+  SPSHOW OTW_MOVWINSP
+  SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+  SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+  SPOFS OTW_MOVWINSP,AX,AY
+ ENDIF
+ MoveWindowSP FALSE
  RETURN 0
 END
 COMMON DEF ClearWindowMoveFrame(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ OTW_MOVWINFLG=0
+ OTW_MOVWIN_XOR_INIT=FALSE
+ IF OTW_MOVWIN_USEXOR THEN
+  OTW_MOVWIN_XORGBOX OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_X+OTW_MOVWIN_W-1,OTW_MOVWIN_Y+OTW_MOVWIN_H-1
+ ENDIF
  SPHIDE OTW_MOVWINSP
  RETURN 0
 END
@@ -4727,158 +4822,50 @@
 DEF WindowLMouseDown WND,CTL,TYPE,A1,A2
 ' VAR E=FrontWindow(WND)
 END
+COMMON DEF WindowDragFrameCallbackEx WND,X,Y,W,H
+ VAR E=MoveResizeWindowF(WND,X,Y,W,H,&H7FFFFFFF,&H7FFFFFFF,&H7FFFFFFF,&H7FFFFFFF)
+ E=FrontWindow(WND)
+ E=ActiveWindow(WND)
+ MouseClipDef
+END
+DEF WindowFrame_HasFlag(FLG,F)
+ RETURN (FLG AND F)==F
+END
 DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
- VAR X,Y
- VAR W=GetWindowFrameWidth(WND)
- VAR NUWID=WND AND NUWIDMASK
- VAR HASMINMAX=WindowMinMaxStyle()==(GetWindowStyle(WND)AND WindowMinMaxStyle())
- SplitInt POS OUT X,Y
- VAR ISCLKMENU=X&&Y>11&&Y<22&&WIN_MENU[NUWID]
  VAR FW1,FH1,FW2,FH2
  GetWindowFrameSize WND OUT FW1,FH1,FW2,FH2,
- VAR ISMAXW=!FW1&&!FW2
- IF BTN AND CTL_DBLFLG THEN
-  IF!HASMINMAX||ISCLKMENU THEN
-   RETURN
-  ENDIF
-  IF ISMAXW THEN
-   VOID RestoreWindow(WND)
-  ELSE
-   VOID MaximizeWindow(WND)
-  ENDIF
+ VAR STYLE=GetWindowStyle(WND)
+ VAR MAX=STYLE AND WindowMaximizedStyle()
+ VAR HASMINMAX=WindowFrame_HasFlag(GetWindowStyle(WND),WindowMinMaxStyle())
+ VAR X,Y
+ SplitInt POS OUT X,Y
+ VAR HIT=NEW_WINDOW_FRAME_PAINTER(WND,FALSE,X,Y,BTN)
+ VAR LCLK=WindowFrame_HasFlag(BTN,CTL_LBTNFLG OR CTL_BTNDWNFLG)
+ VAR LDBL=WindowFrame_HasFlag(BTN,CTL_LBTNFLG OR CTL_DBLFLG)
+ IF LCLK&&HIT==WINCTL_HIT_CLS THEN
+  VOID DeleteWindow(WND)
   RETURN
  ENDIF
- OTW_MOVWINFLG=0
- IF !ISMAXW&&WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
-  '2     3     4
-  ' 
-  ' 
-  '           
-  '5          6
-  '           
-  '           
-  '           
-  '789
-  WHILE 1
-  IF Y<4&&X<4THEN
-   OTW_MOVWINFLG=2'
-   BREAK
-  ENDIF
-  VAR EX=WIN_WIDTH[NUWID]-X
-  VAR EY=WIN_HEIGHT[NUWID]-Y
-  IF EX<4&&Y<4THEN 
-   OTW_MOVWINFLG=4'
-   BREAK
-  ENDIF
-  IF EY<4&&X<4THEN
-   OTW_MOVWINFLG=7'
-   BREAK          '
-  ENDIF
-  IF EX<4&&EY<4THEN
-   OTW_MOVWINFLG=9
-   BREAK
-  ENDIF
-  IF EY<2THEN
-   OTW_MOVWINFLG=8
-   BREAK
-  ENDIF
-  IF EX<2THEN
-   OTW_MOVWINFLG=6
-   BREAK
-  ENDIF
-  IF Y<2THEN
-   OTW_MOVWINFLG=3
-   BREAK
-  ENDIF
-  IF X<2THEN
-   OTW_MOVWINFLG=5
-   BREAK
-  ENDIF
-  BREAK
-  WEND
-  IF OTW_MOVWINFLG>=2THEN
-   VAR AX=WIN_AX[NUWID]
-   VAR AY=WIN_AY[NUWID]
-   INC X,AX
-   INC Y,AY
-   IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
-   SPSHOW OTW_MOVWINSP
-   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
-   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
-   SPOFS OTW_MOVWINSP,AX,AY,-256
-   SPVAR OTW_MOVWINSP,1,NUWID
-   SPVAR OTW_MOVWINSP,2,AX-X
-   SPVAR OTW_MOVWINSP,3,AY-Y
-   VAR PNUWID=WIN_PARENT[NUWID]
-   OTW_MouseClip WIN_FX[PNUWID],WIN_FY[PNUWID],WIN_WIDTH[PNUWID]-WIN_FW2[PNUWID],WIN_HEIGHT[PNUWID]-WIN_FH2[PNUWID]
-   RETURN
-  ENDIF
- ENDIF
- IF!IsFocusWindow(WND)THEN RETURN
- IF ISCLKMENU THEN
-  WindowFrameMenu WND,X,Y
-  IF BTN AND CTL_BTNUPFLG THEN
-   VAR C=WIN_MENU[NUWID]AND 4095
-   IF MENU_ICHILD[MENU_SEL[C]]THEN
-    VAR X1,X2,I=MENU_ITEM[C]
-    WHILE I
-     X1=X2
-     X2=X2+LEN(MENU_INAME$[I])*8+4
-     IF X1<=X&&X2>=X THEN
-      ShowMenu_ MENU_ICHILD[MENU_SEL[C]],WND,X1,0
-      BREAK
-     ENDIF
-     I=MENU_INEXT[I]
-    WEND
-   ENDIF
-  ENDIF
+ IF LCLK&&HIT==WINCTL_HIT_MIN THEN
+  VOID MinimizeWindow(WND)
   RETURN
  ENDIF
- IF X>=W-9THEN
-  IF BTN AND CTL_BTNUPFLG THEN
-   VAR E=DeleteWindow(WND)
+ IF (LDBL&&HIT==WINCTL_HIT_CAP)||(LCLK&&HIT==WINCTL_HIT_MAX)THEN
+  IF MAX THEN
+   VOID RestoreWindow(WND)
+  ELSE
+   VOID MaximizeWindow(WND)
   ENDIF
   RETURN
  ENDIF
- IF HASMINMAX THEN
-  IF X>=W-20THEN
-   IF BTN AND CTL_BTNUPFLG THEN
-    IF ISMAXW THEN
-     VOID RestoreWindow(WND)
-    ELSE
-     VOID MaximizeWindow(WND)
-    ENDIF
-   ENDIF
-   RETURN
-  ENDIF
-  IF X>=W-30THEN
-   IF BTN AND CTL_BTNUPFLG THEN
-    VOID MinimizeWindow(WND)
-   ENDIF
-   RETURN
-  ENDIF
+ IF !MAX&&LCLK&&HIT==WINCTL_HIT_CAP THEN
+  VOID NewWindowMoveFrame(WND,X,Y,GetWindowWidth(WND)+FW1+FW2,GetWindowHeight(WND)+FH1+FH2,1,"WindowDragFrameCallbackEx")
  ENDIF
- IF BTN AND CTL_LBTNFLG THEN
-  IF !ISMAXW&&(BTN AND CTL_BTNDWNFLG) THEN
- '  IF!IsFocusWindow(WND)THEN RETURN
-   OTW_MOVWINFLG=1'MOV
-   AX=WIN_AX[NUWID]
-   AY=WIN_AY[NUWID]
-   INC X,AX
-   INC Y,AY
-   IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
-   SPSHOW OTW_MOVWINSP
-   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
-   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
-   SPOFS OTW_MOVWINSP,AX-X,AY-Y',-256
-   SPLINK OTW_MOVWINSP,OTW_MOUSESP
-   SPVAR OTW_MOVWINSP,1,NUWID
-   SPVAR OTW_MOVWINSP,2,AX-X
-   SPVAR OTW_MOVWINSP,3,AY-Y
-   PNUWID=WIN_PARENT[NUWID]
-   OTW_MouseClip WIN_FX[PNUWID],WIN_FY[PNUWID],WIN_WIDTH[PNUWID]-WIN_FW2[PNUWID],WIN_HEIGHT[PNUWID]-WIN_FH2[PNUWID]
-  ENDIF
+ IF !MAX&&HIT>=WINCTL_HIT_B1&&HIT<=WINCTL_HIT_B8 THEN
+  VOID NewWindowMoveFrame(WND,X,Y,GetWindowWidth(WND)+FW1+FW2,GetWindowHeight(WND)+FH1+FH2,HIT-WINCTL_HIT_B1+2,"WindowDragFrameCallbackEx")
  ENDIF
+ RETURN
+ IF!IsFocusWindow(WND)THEN RETURN
 END
 DEF WindowMMoveFrame WND,CTL,TYPE,ET,XY
  IF ET AND CTL_LEAVEFLG THEN 
@@ -4887,52 +4874,8 @@
  ENDIF
  VAR X,Y
  SplitInt XY OUT X,Y
- VAR NUWID=WND AND NUWIDMASK
- VAR FW1,FH1,FW2,FH2
- GetWindowFrameSize WND OUT FW1,FH1,FW2,FH2,
- VAR ISMAXW=!FW1&&!FW2
- IF !ISMAXW&&(WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ)THEN
-  '
-  '
-  '
-  '  
-  '   
-  IF Y<4&&X<4THEN
-   OTW_INITSP 3
-   RETURN
-  ENDIF
-  VAR EX=WIN_WIDTH[NUWID]-X
-  VAR EY=WIN_HEIGHT[NUWID]-Y
-  IF EX<4&&Y<4THEN 
-   OTW_INITSP 4
-   RETURN
-  ENDIF
-  IF EY<4&&X<4THEN
-   OTW_INITSP 4
-   RETURN
-  ENDIF
-  IF EX<4&&EY<4THEN
-   OTW_INITSP 3
-   RETURN
-  ENDIF
-  IF EY<2THEN
-   OTW_INITSP 1
-   RETURN
-  ENDIF
-  IF EX<2THEN
-   OTW_INITSP 2
-   RETURN
-  ENDIF
-  IF Y<2THEN
-   OTW_INITSP 1
-   RETURN
-  ENDIF
-  IF X<2THEN
-   OTW_INITSP 2
-   RETURN
-  ENDIF
-  OTW_INITSP 0
- ENDIF
+ VOID NEW_WINDOW_FRAME_PAINTER(WND,FALSE,X,Y,ET)
+' RETURN
  IF!IsActiveWindow(WND)THEN RETURN
  WindowFrameMenu WND,X,Y
 END
@@ -5012,18 +4955,21 @@
 END
 COMMON DEF MaximizeWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ SetWindowStyle WND,(GetWindowStyle(WND)AND NOT(WindowMinimizedStyle()OR WindowMaximizedStyle()))OR WindowMaximizedStyle()
  VOID SendChildWindowEvent(WND,WindowMaximizeEvent(),WND)
  VOID SendChildWindowEvent(GetParentWindow(WND),WindowMaximizeEvent(),WND)
  RETURN 0
 END
 COMMON DEF MinimizeWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ SetWindowStyle WND,(GetWindowStyle(WND)AND NOT(WindowMinimizedStyle()OR WindowMaximizedStyle()))OR WindowMinimizedStyle()
  VOID SendChildWindowEvent(WND,WindowMinimizeEvent(),WND)
  VOID SendChildWindowEvent(GetParentWindow(WND),WindowMinimizeEvent(),WND)
  RETURN 0
 END
 COMMON DEF RestoreWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ SetWindowStyle WND,(GetWindowStyle(WND)AND NOT(WindowMinimizedStyle()OR WindowMaximizedStyle()))
  VOID SendChildWindowEvent(WND,WindowRestoreEvent(),WND)
  VOID SendChildWindowEvent(GetParentWindow(WND),WindowRestoreEvent(),WND)
  RETURN 0
@@ -5068,6 +5014,7 @@
   VAR WX,WY,WW,WH
   GetWorkArea GetParentWindow(CWND) OUT WX,WY,WW,WH,
   VOID MoveResizeWindow(CWND,WX,WY,WW-W1-W2,WH-H2-H1)
+
 '  VOID MoveResizeWindowF(CWND,WX,WY,WW,WH,0,H1-2,0,0)
 '  VOID SetSysWindowProperty(CWND,"SHADOW",FALSE)
 
@@ -5135,6 +5082,11 @@
  IF!CheckWindow(WND)THEN RETURN 0
  RETURN WIN_STYLE[WND AND NUWIDMASK]
 END
+COMMON DEF SetWindowStyle WND,STYLE
+ IF!CheckWindow(WND)THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_STYLE[NUWID]=STYLE
+END
 COMMON DEF IsOwnerDrawWindow(WND)
  RETURN !!(WIN_STYLE[WND AND NUWIDMASK]AND WIN_STYLE_OWNERDRAW)
 END
@@ -6284,6 +6236,24 @@
  XORGBOX2 X1,Y1,X2,Y2
  XORGBOX2 X1+1,Y1+1,X2-1,Y2-1
 END
+DEF OTW_MOVWIN_XORGBOX_THICK X1,Y1,X2,Y2
+ OTW_MOVWIN_XORGBOX X1,Y1,X2,Y2
+ OTW_MOVWIN_XORGBOX X1+1,Y1+1,X2-1,Y2-1
+END
+DEF OTW_MOVWIN_XORGBOX X1,Y1,X2,Y2
+ VAR Y=Y1
+ REPEAT
+  GPSET X1,Y,GSPOIT(X1,Y) XOR &HFFFFFF
+  GPSET X2,Y,GSPOIT(X2,Y) XOR &HFFFFFF
+  Y=Y+2
+ UNTIL Y>Y2
+ X2=X2-3
+ REPEAT
+  X1=X1+2
+  GPSET X1,Y1,GSPOIT(X1,Y1) XOR &HFFFFFF
+  GPSET X1,Y2,GSPOIT(X1,Y2) XOR &HFFFFFF
+ UNTIL X1>X2
+END
 DEF XORGBOX2 X1,Y1,X2,Y2
  XORHLINE Y1,X1,X2
  IF Y1==Y2 THEN RETURN
@@ -6591,7 +6561,7 @@
  BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
 END
 COMMON DEF GetWinVer$()
- RETURN "5.0 rev50"
+ RETURN "5.0 rev51"
 END
 COMMON DEF GetWinMemorySize()
  RETURN OTW_USEMEM
@@ -6685,6 +6655,8 @@
   OTW_MOUSE=-1
   OTW_INITSP 5
   OTW_MOVWINSP=2
+  OTW_MOVWIN_USEXOR=TRUE
+  OTW_MOVWIN_USESP=FALSE
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
   SPVAR OTW_MOVWINSP,0,1
@@ -6780,8 +6752,8 @@
  IF MOVEMOUSE||BTN THEN
   IF OTW_SMOOTH_MOVE_WINDOW THEN
    IF WIN_DRAGHANDLER_USE THEN
-    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
- ENDIF
+    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2,OTW_MOVWINFLG
+   ENDIF
   ENDIF
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
@@ -6819,8 +6791,7 @@
   ENDIF
   IF BTN AND OTW_LMOUSEUP THEN
    IF WIN_DRAGHANDLER_USE THEN
-    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
-    E=ClearWindowDragHandler()
+    MoveWindowSP TRUE
    ELSE
     VAR NUWIDRAW=NUWID AND 32767
     IF NUWIDRAW!=(WIN_ACTIVENUWID AND 32767)&&CAPTURE_WND==NUWIDToWND(WIN_ACTIVENUWID)THEN
@@ -6979,10 +6950,22 @@
   '           
   '789
 DEF MoveWindowSP F
+ IF!OTW_MOVWINFLG THEN RETURN
+ IF OTW_MOVWIN_USEXOR THEN
+  IF OTW_MOVWIN_XOR_INIT THEN
+   OTW_MOVWIN_XORGBOX OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_X+OTW_MOVWIN_W-1,OTW_MOVWIN_Y+OTW_MOVWIN_H-1
+  ELSE
+   OTW_MOVWIN_XOR_INIT=TRUE
+  ENDIF
+ ENDIF
+ VAR DX=OTW_MOVWIN_DX
+ VAR DY=OTW_MOVWIN_DY
  IF OTW_MOVWINFLG>=2THEN
-  VAR NW=SPVAR(OTW_MOVWINSP,1)
+  VAR NW=OTW_MOVWIN_NUWID
   VAR W=WIN_WIDTH[NW],H=WIN_HEIGHT[NW]
   VAR X=WIN_AX[NW],Y=WIN_AY[NW]
+  VAR DW=DX+W
+  VAR DH=DY+H
   VAR LTOPH,LTOPW
   VAR RTOPH,RTOPW
   IF OTW_MOVWINFLG==2THEN
@@ -7001,6 +6984,8 @@
      W=WIN_MINW[NW]-1
      X=WIN_AX[NW]+WIN_WIDTH[NW]-W
     ENDIF
+    X=X+DX
+    W=W-DX
    ENDIF
    IF LTOPH THEN
     INC H,Y-OTW_MOUSEY
@@ -7009,6 +6994,8 @@
      H=WIN_MINH[NW]-1
      Y=WIN_AY[NW]+WIN_HEIGHT[NW]-H
     ENDIF
+    Y=Y+DY
+    H=H-DY
    ENDIF
   IF OTW_MOVWINFLG==4THEN
    RTOPH=1RTOPW=1
@@ -7018,6 +7005,7 @@
   ENDIF
    IF RTOPW THEN
     DEC W,X-OTW_MOUSEX+W
+    W=W+DW
     IF W<WIN_MINW[NW]THEN W=WIN_MINW[NW]-1
    ENDIF
    IF RTOPH THEN
@@ -7027,6 +7015,8 @@
      H=WIN_MINH[NW]-1
      Y=WIN_AY[NW]+WIN_HEIGHT[NW]-H
     ENDIF
+    Y=Y+DY
+    H=H-DY
    ENDIF
   VAR LBOTH,LBOTW
   VAR RBOTH,RBOTW
@@ -7043,9 +7033,12 @@
      W=WIN_MINW[NW]-1
      X=WIN_AX[NW]+WIN_WIDTH[NW]-W
     ENDIF
+    X=X+DX
+    W=W-DX
    ENDIF
    IF LBOTH THEN
     DEC H,Y-OTW_MOUSEY+H
+    H=H+DH
     IF H<WIN_MINH[NW]THEN H=WIN_MINH[NW]-1
    ENDIF
   IF OTW_MOVWINFLG==9THEN
@@ -7053,24 +7046,53 @@
   ENDIF
    IF RBOTW THEN
     DEC W,X-OTW_MOUSEX+W
+    W=W+DW
     IF W<WIN_MINW[NW]THEN W=WIN_MINW[NW]-1
    ENDIF
    IF RBOTH THEN
     DEC H,Y-OTW_MOUSEY+H
+    H=H+DH
     IF H<WIN_MINH[NW]THEN H=WIN_MINH[NW]-1
    ENDIF
-  SPOFS OTW_MOVWINSP,X,Y
-  SPSCALE OTW_MOVWINSP,W+1,H+1'TODO:WH
+  IF OTW_MOVWIN_USESP THEN
+   SPOFS OTW_MOVWINSP,X,Y
+   SPSCALE OTW_MOVWINSP,W+1,H+1'TODO:WH
+  ENDIF
+  OTW_MOVWIN_X=X
+  OTW_MOVWIN_Y=Y
+  OTW_MOVWIN_W=W+1
+  OTW_MOVWIN_H=H+1
   IF F THEN
-   'TODO:Move->Resizeでおかしくなる
-   'TODO:MoveResizeWindow
-'   VOID MoveWindow(NUWIDToWND(NW),X,Y)
-'"D
    DEC X,WIN_FX[WIN_PARENT[NW]]
    DEC Y,WIN_FY[WIN_PARENT[NW]]
-   VOID MoveResizeWindowF(NUWIDToWND(NW),X,Y,W,H,&H7FFFFFFF,&H7FFFFFFF,&H7FFFFFFF,&H7FFFFFFF)
+   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,X,Y,W,H
+   VOID ClearWindowMoveFrame(WIN_DRAGHANDLER_WND)
+   VOID ClearWindowDragHandler()
   ENDIF
+ ELSE
+  OTW_MOVWIN_X=OTW_MOUSEX+DX
+  OTW_MOVWIN_Y=OTW_MOUSEY+DY
+  IF OTW_MOVWIN_USESP THEN
+   SPOFS OTW_MOVWINSP,OTW_MOUSEX+DX,OTW_MOUSEY+DY
+  ENDIF
+  IF F THEN
+   VAR PWND=GetParentWindow(WIN_DRAGHANDLER_WND)
+   VAR WIDTH
+   VAR HEIGHT
+   VAR AX=GetWindowAX(PWND)
+   VAR AY=GetWindowAY(PWND)
+   VAR E
+   GetWindowSize WIN_DRAGHANDLER_WND,TRUE OUT WIDTH,HEIGHT,E
+   IF !E THEN
+    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX-AX+DX,OTW_MOUSEY-AY+DY,WIDTH,HEIGHT
+   ENDIF
+   VOID ClearWindowMoveFrame(WIN_DRAGHANDLER_WND)
+   VOID ClearWindowDragHandler()
+  ENDIF
  ENDIF
+ IF OTW_MOVWIN_USEXOR THEN
+  OTW_MOVWIN_XORGBOX OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_X+OTW_MOVWIN_W-1,OTW_MOVWIN_Y+OTW_MOVWIN_H-1
+ ENDIF
 END
 VAR RUNCTL
 COMMON DEF I_RUN
@@ -13689,6 +13711,7 @@
  IF CW==MenuNotifID()THEN
   IF __==TSKBAR_MENU_EXIT THEN
    TSKBAR_ARE
+   STOP
    void ExitWin()
    RETURN
   ENDIF
@@ -15694,8 +15717,7 @@
   IY=IY+IH
   IF IY+IH>=SH THEN IY=ODE_IY:IX=IX+ODE_IW
  NEXT
- 
- IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,1)THEN @END
+ IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,1)THEN RETURN
  @END
  IF GEndWindow(WND)THEN RETURN
 END
@@ -17207,7 +17229,7 @@
  EYESPaint WND
  @ERR
 END
-DEF EYESDrawEye WND,CX,CY,CW,CH
+DEF EYESDrawEye WND,CX,CY,CW,CH,ERASE
  VAR WIDTH=GetWindowWidth(WND)
  VAR HEIGHT=GetWindowHeight(WND)
  VAR EW=WIDTH DIV 2
@@ -17217,12 +17239,19 @@
  VAR EYEW=MIN DIV 8
  
  
- VAR MX=GetMouseX()
- VAR MY=GetMouseY()
+ VAR COLOR=#BLACK
  VAR AX=GetWindowAX(WND)
  VAR AY=GetWindowAY(WND)
- SetWindowVar WND,0,MX
- SetWindowVar WND,1,MY
+ IF!ERASE THEN
+  VAR MX=GetMouseX()
+  VAR MY=GetMouseY()
+  SetWindowVar WND,0,MX
+  SetWindowVar WND,1,MY
+ ELSE
+  GetWindowVar WND,0OUT MX
+  GetWindowVar WND,1OUT MY
+  COLOR=#WHITE
+ ENDIF
 'VAR EYEH=MIN DIV 7
  VAR ACX=AX+CX'absolute center
  VAR ACY=AY+CY'absolute center
@@ -17230,12 +17259,45 @@
  VAR D#=POW((MX-ACX)/(CW/CH),2)+POW(MY-ACY,2)
  VAR D2#=POW((COS(MX#)*CW)/(CW/CH),2)+POW(SIN(MX#)*CH,2)
  IF D2#>D# THEN
-  DrawFilledCircle WND,MX-AX,MY-AY,EYEW,EYEH,#BLACK
+  IF ERASE THEN
+   'FAST!
+   GFILL MX-AX-EYEW DIV 2-1,MY-AY-EYEH DIV 2-1,MX-AX+EYEW DIV 2+1,MY-AY+EYEH DIV 2+1,#WHITE
+   RETURN
+  ENDIF
+  DrawFilledCircle WND,MX-AX,MY-AY,EYEW,EYEH,COLOR
  ELSE
   MX#=ATAN(MY-ACY,(MX-ACX)/(CW/CH))
-  DrawFilledCircle WND,COS(MX#)*CW+CX,SIN(MX#)*CH+CY,EYEW,EYEH,#BLACK
+  IF ERASE THEN
+   'FAST!
+   GFILL COS(MX#)*CW+CX-EYEW DIV 2-1,SIN(MX#)*CH+CY-EYEH DIV 2-1,COS(MX#)*CW+CX+EYEW DIV 2+1,SIN(MX#)*CH+CY+EYEH DIV 2+1,#WHITE
+   RETURN
+  ENDIF
+  DrawFilledCircle WND,COS(MX#)*CW+CX,SIN(MX#)*CH+CY,EYEW,EYEH,COLOR
  ENDIF
 END
+COMMON DEF EYESUpdateEyes WND
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ IF HEIGHT<0THEN RETURN
+ IF GBeginDirect(WND)THEN @ERR
+ GCLIP 1,0,0,WIDTH,HEIGHT
+ GCLS
+ VAR EW=WIDTH DIV 2
+ VAR CX1=EW DIV 2
+ VAR CY1=HEIGHT DIV 2
+ VAR CX2=WIDTH DIV 2+EW/2
+ VAR CY2=HEIGHT/2
+ EYESDrawEye WND,CX1,CY1,EW DIV 4,HEIGHT DIV 4,TRUE
+ EYESDrawEye WND,CX2,CY2,EW DIV 4,HEIGHT DIV 4,TRUE
+ 
+ EYESDrawEye WND,CX1,CY1,EW DIV 4,HEIGHT DIV 4,FALSE
+ EYESDrawEye WND,CX2,CY2,EW DIV 4,HEIGHT DIV 4,FALSE
+
+ IF GCopyDirect(WND,0,0,WIDTH,HEIGHT,0,0,0)THEN:ENDIF
+ IF GEndWindow(WND)THEN @ERR
+ @ERR
+ 
+END
 COMMON DEF EYESPaint WND
  VAR WIDTH=GetWindowWidth(WND)
  VAR HEIGHT=GetWindowHeight(WND)
@@ -17247,7 +17309,7 @@
  VAR EW=WIDTH DIV 2
  VAR CX=EW DIV 2
  VAR CY=HEIGHT DIV 2
- EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4
+ EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4,FALSE
 
  
  VAR MIN=MIN(EW,HEIGHT)
@@ -17255,7 +17317,7 @@
  CX=WIDTH DIV 2+EW/2
  CY=HEIGHT/2
  DrawStrokedCircle WND,CX,CY,EW,HEIGHT,MIN/10,#BLACK
- EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4
+ EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4,FALSE
 
  UpdateMouse
  IF GCopyDirect(WND,0,0,WIDTH,HEIGHT,0,0,0)THEN @ERR
@@ -17279,8 +17341,9 @@
 END
 COMMON DEF L_EYES
  VAR W=GetProcessVar()
- IF GetMouseX()!=GetWindowVar(W,0)||GetMouseY()!=GetWindowVar(W,1)THEN VOID RepaintWindow(W)
- 
+ IF GetMouseX()!=GetWindowVar(W,0)||GetMouseY()!=GetWindowVar(W,1)THEN
+  EYESUpdateEyes W
+ ENDIF
  IF UpdateWindow(W)THEN ExitProcess 1
 END
 VAR WINLISTCTL

