diff -u OTW.TXT OTW34
--- OTW.TXT
+++ OTW34
@@ -5,11 +5,13 @@
 '====================
 'グローバルへんすうのていぎ
 VAR WIN_BKGND,WIN_BTNBACK,WIN_SELCOL,WIN_SELTXTCOL,WIN_WORKSPACECOL
+VAR WIN_ACTVCAPCOL
+VAR WIN_INACTVCAPCOL
 VAR OTW_ENABLE_SHADOW
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
-VAR OTW_MOVWIN_USEXOR
-VAR OTW_MOVWIN_XOR_INIT
 VAR OTW_MOVWIN_USESP
+VAR OTW_MOVWIN_HNDLR$
+VAR OTW_MOVWIN_INIT
 VAR OTW_MOVWIN_NUWID
 VAR OTW_MOVWIN_X
 VAR OTW_MOVWIN_Y
@@ -17,6 +19,10 @@
 VAR OTW_MOVWIN_DY
 VAR OTW_MOVWIN_W
 VAR OTW_MOVWIN_H
+VAR OTW_MOVWIN_SX
+VAR OTW_MOVWIN_SY
+VAR OTW_MOVWIN_SW
+VAR OTW_MOVWIN_SH
 VAR OTW_CLIPMODE
 '1:MOV
 '2:RESIZE
@@ -533,6 +539,11 @@
 VAR WINCTL_HIT_B6
 VAR WINCTL_HIT_B7
 VAR WINCTL_HIT_B8
+
+VAR WINCTL_DRW_ALL
+VAR WINCTL_DRW_CAP
+VAR WINCTL_DRW_BORDER
+VAR WINCTL_DRW_MENU
 DEF OTW_CTL_INITARRAY
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
@@ -602,6 +613,7 @@
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
  E=SetControlChFocusHandler(CTL_WINDOWCTL,"WindowChFocus")
  E=SetControlChildWindowHandler(CTL_WINDOWCTL,"WindowChildWindow")
+ E=SetControlParentWindowHandler(CTL_WINDOWCTL,"WindowParentWindow")
  WINCTL_CAPCY=10
  WINCTL_MENUCY=10
  WINCTL_NARROW_CAPCY=5
@@ -617,6 +629,10 @@
  WINCTL_HIT_B6 =10
  WINCTL_HIT_B7 =11
  WINCTL_HIT_B8 =12
+ WINCTL_DRW_ALL=-1
+ WINCTL_DRW_CAP=1
+ WINCTL_DRW_BORDER=2
+ WINCTL_DRW_MENU=4
 
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
@@ -1652,14 +1668,14 @@
  VAR Y=GetMouseY()
  ShowMenuXY MENU,WND,X,Y
 END
-COMMON DEF ShowMenu MENU,WND
- NOIMPL FORMAT$("NOIMPL ShowMenu %D,%D",MENU,WND)
-END
 COMMON DEF ShowMenuXY2 MENU,WND,X,Y
  IF!CheckMenu(MENU)THEN RETURN
  Y=Y-MENU_HEIGHT[MENU AND 4095]
  ShowMenuXY MENU,WND,X,Y
 END
+COMMON DEF ShowMenu MENU,WND,X,Y
+ ShowMenuXY MENU,WND,GetWindowX(WND)+X,GetWindowY(WND)+Y
+END
 COMMON DEF ShowMenuXY MENU,WND,X,Y
  IF!CheckMenu(MENU)THEN RETURN
  MENU=MENU AND 4095
@@ -1938,10 +1954,11 @@
  WEND
  
 END
-COMMON DEF EnumerateMenu MENU,C OUT STR$,C2,E
+COMMON DEF EnumerateMenu MENU,C OUT STR$,C2,CHILD,E
  IF!CheckMenu(MENU)THEN
   STR$=""
   C=0
+  CHILD=0
   E=MENU_INVALIDID
  ENDIF
  VAR N=MENU AND 4095
@@ -1953,11 +1970,16 @@
  ENDIF
  IF C2 THEN
   STR$=MENU_INAME$[C2]
+  CHILD=MENU_ICHILD[C2]
  ELSE
   STR$=""
   E=MENU_NOITEM
+  CHILD=0
  ENDIF
 END
+COMMON DEF IsMenuWindow(WND)
+ RETURN IsControlExtend(GetControl(WND),MENUCTL)
+END
 DEF MenuLMouseUp WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
  IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
@@ -2220,6 +2242,13 @@
 COMMON DEF CheckWindow(WND)
  RETURN (WND AND NUWIDMASK)>0&&(WND AND NUWIDMASK)<LEN(WIN_WID)&&WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
 END
+DEF ValidateWND(WND)
+ VAR N=WND AND NUWIDMASK
+ IF N>0&&N<LEN(WIN_WID)&&WIN_WID[N]==WND>>WIDSHIFT THEN
+  RETURN N
+ ENDIF
+ RETURN 0
+END
 VAR OTW_TOPLEVELCNT
 COMMON DEF WindowBackFlag()
  RETURN 1
@@ -2254,6 +2283,19 @@
   CALL CTL_HANDLER$[NUCID,CTL_QUERYFRMHANDLER],WND,CTL,CTL_QUERYFRMHANDLER,ARG1,ARG2 OUT W1,H1,W2,H2
  ENDIF
 END
+COMMON DEF QueryWindowFrameSize WND OUT W1,H1,W2,H2,E
+ W1=0
+ H1=0
+ W2=0
+ H2=0
+ VAR N=ValidateWND(WND)
+ IF!N THEN
+  E=WIN_INVALIDID
+  RETURN
+ ENDIF
+ E=0
+ WindowCallQueryFrame WND,WIN_CTL[N],WIN_STYLE[N],0 OUT W1,H1,W2,H2
+END
 DEF WindowOnDelete NUWID
  VAR CTL=WIN_CTL[NUWID]
  VAR NUCID=CTL AND 4095
@@ -3844,6 +3886,15 @@
 'RETURN WIN_FY[WND AND NUWIDMASK]
  RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WIN_ROOTWND2 AND NUWIDMASK]-WIN_FH1[WIN_ROOTWND2 AND NUWIDMASK]
 END
+COMMON DEF GetTrueWindowAX(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_AX[WND AND NUWIDMASK]+WIN_FW1[WND AND NUWIDMASK]-WIN_AX[WIN_ROOTWND AND NUWIDMASK]-WIN_FW1[WIN_ROOTWND AND NUWIDMASK]
+END
+COMMON DEF GetTrueWindowAY(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WIN_ROOTWND AND NUWIDMASK]-WIN_FH1[WIN_ROOTWND AND NUWIDMASK]
+END
+
 'WNDからのWND2のざひょう
 COMMON DEF CalcWindowX(WND2,WND)
  IF!CheckWindow(WND)THEN RETURN -1
@@ -3952,20 +4003,30 @@
  WIN_DRAGHANDLER_WND=0
  RETURN 0
 END
+VAR CAPTURE_WND_FRAME
 VAR CAPTURE_WND
-COMMON DEF GetCapture()
- RETURN CAPTURE_WND
+COMMON DEF GetCapture OUT WND
+ GetCaptureEx OUT WND,
 END
+COMMON DEF GetCaptureEx OUT WND,FRM
+ WND=CAPTURE_WND
+ FRM=CAPTURE_WND_FRAME
+END
 COMMON DEF SetCapture(WND)
+ RETURN SetCaptureEx(WND,FALSE)
+END
+COMMON DEF SetCaptureEx(WND,FRM)
  IF!CheckWindow(WND)THEN RETURN 0
  VAR OLD=CAPTURE_WND
  CAPTURE_WND=WND
+ CAPTURE_WND_FRAME=FRM
  RETURN OLD
 END
 COMMON DEF ReleaseCapture(WND)
  IF!CheckWindow(WND)THEN RETURN 0
  IF CAPTURE_WND!=WND THEN RETURN 0
  CAPTURE_WND=0
+ CAPTURE_WND_FRAME=FALSE
  RETURN 1
 END
 VAR OTW_MOUSECLIPX
@@ -4511,16 +4572,44 @@
  VAR I
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
+DEF GetGAreaWindow WND OUT X,Y,W,H,E
+ VAR NUWID=ValidateWND(WND)
+ IF !NUWID THEN
+  X=0Y=0W=0
+  E=WIN_INVALIDID
+  RETURN
+ ENDIF
+ IF WIN_BEGIN[NUWID]==1 THEN
+  X=WIN_RFX[NUWID]
+  Y=WIN_RFY[NUWID]
+  W=WIN_AFW[NUWID]
+  H=WIN_AFH[NUWID]
+ ELSEIF WIN_BEGIN[NUWID]==2 THEN'FRAME
+  X=WIN_RX[NUWID]
+  Y=WIN_RY[NUWID]
+  W=WIN_AW[NUWID]
+  H=WIN_AH[NUWID]
+ ELSE
+  X=0Y=0W=0
+  E=WIN_EVENTERR
+  RETURN
+ ENDIF
+ E=0
+END
+COMMON DEF ClearGCLIPWindow WND
+ VAR NUWID=WND AND NUWIDMASK,AX,AY,W,H,E
+ GetGAreaWindow WND OUT AX,AY,W,H,E
+ GCLIP 1,AX,AY,AX+W,AY+H
+END
 COMMON DEF GCLIPWindow WND,X1,Y1,X2,Y2
- VAR NUWID=WND AND NUWIDMASK
- VAR AX=WIN_RFX[NUWID]'WIN_FW1[NUWID]
- VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
+ VAR NUWID=WND AND NUWIDMASK,AX,AY,W,H,E
+ GetGAreaWindow WND OUT AX,AY,W,H,E
+ IF E THEN RETURN
  IF X1>X2 THEN SWAP X1,X2
  IF Y1>Y2 THEN SWAP Y1,Y2
- VAR W=WIN_AFW[NUWID]
- VAR H=WIN_AFH[NUWID]
  GCLIP 1,MIN(MAX(AX,WING_SX+X1),AX+W),MIN(MAX(AY,WING_SY+Y1),AY+H),MIN(MAX(AX,WING_SX+X2),AX+W),MIN(MAX(AY,WING_SY+Y2),AY+H)
 END
+
 COMMON DEF GetBackColor()
  RETURN WIN_BKGND
 END
@@ -4543,6 +4632,13 @@
 END
 DEF CalcWindowBorderSize WND,STYLE OUT W1,H1,W2,H2
  'HAS EDGE
+ IF STYLE AND WindowMaximizedStyle() THEN
+  H1=0
+  W1=0
+  H2=0
+  W2=0
+  RETURN
+ ENDIF
  IF STYLE AND 2THEN
   H1=3
   W1=3
@@ -4609,12 +4705,15 @@
   GBOXWindow WND,X1,Y1,X2,Y2,#BLACK
  ENDIF
 END
-DEF NEW_WINDOW_FRAME_PAINTER WND,DRW,MX,MY,FLG OUT HIT
+DEF NEW_WINDOW_FRAME_PAINTER WND,DRW,MX,MY,FLG,BGN OUT HIT,BGNED
  HIT=0
+ BGNED=BGN
+ VAR LCLK=FLG AND CTL_BTNDWNFLG
+ VAR ACTV=IsActiveWindow(WND)
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  VAR STYLE=GetWindowStyle(WND)
-
+ VAR CAPW,CAPF
  VAR FW1,FH1,FW2,FH2
  GetWindowFrameSize WND OUT FW1,FH1,FW2,FH2,
  MX=MX-FW1
@@ -4627,7 +4726,10 @@
   VAR BX1=-FW1,BY1=-FH1,BX2=W+FW2,BY2=H+FH2
   CalcWindowBorderSize WND,STYLE OUT BW1,BH1,BW2,BH2
   VAR EDGE=BW1>1
-  IF DRW THEN
+  IF DRW AND WINCTL_DRW_BORDER THEN
+   IF !BGNED THEN
+    VOID GBeginFrameWindow(WND):BGNED=TRUE
+   ENDIF
    WindowFramePainterDrawFrame WND,BX1,BY1,BX2,BY2,EDGE
   ENDIF
   IF!RESIZ THEN @NO_RESIZ
@@ -4675,9 +4777,18 @@
   HIT=WINCTL_HIT_CAP
  ENDIF
 
- IF DRW THEN
-  VAR G1=WIN_BKGND
-  GFILLWindow WND,CAPTX1,CAPTY1,CAPTX2,CAPTY2,RGB(0,0,136)
+ VAR G1=WIN_BKGND
+ IF DRW AND WINCTL_DRW_CAP THEN
+  IF !BGNED THEN
+   VOID GBeginFrameWindow(WND):BGNED=TRUE
+  ENDIF
+  VAR CAPCOL
+  IF ACTV THEN
+   CAPCOL=WIN_ACTVCAPCOL
+  ELSE
+   CAPCOL=WIN_INACTVCAPCOL
+  ENDIF
+  GFILLWindow WND,CAPTX1,CAPTY1,CAPTX2,CAPTY2,CAPCOL
   IF EDGE THEN
    GLINEWindow WND,CAPTX1,CAPTY2,CAPTX2,CAPTY2,G1
   ELSE
@@ -4695,37 +4806,70 @@
  BY1=CAPTY1'+1
  BX2=CAPTX2-MARGIN0
  BY2=BY1+BH
- 
+ VAR CAPTX2_NOBTN=CAPTX2-1
+ VAR PSH
+ VAR HASMINMAX=STYLE AND WindowMinMaxStyle()
  IF!NRRW THEN
-  IF DRW THEN
+  PSH=0
+  DEC CAPTX2_NOBTN,BW
+  IF HASMINMAX THEN
+   DEC CAPTX2_NOBTN,(BW+1)*2+MARGIN0+MARGIN1+MARGIN2
+  ENDIF
+  VAR BCOL1=#WHITE
+  VAR BCOL2=#BLACK
+  IF DRW AND WINCTL_DRW_CAP THEN
+   GCLIPWindow WND,CAPTX1,CAPTY1+1,CAPTX2_NOBTN-1,CAPTY2
    GPRINTWindow WND,CAPTX1,CAPTY1+1,GetWindowName$(WND),#WHITE
-
+   ClearGCLIPWindow WND
+  ENDIF
+  IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
+   HIT=WINCTL_HIT_CLS
+   PSH=LCLK
+  ENDIF
+  IF PSH||(DRW AND WINCTL_DRW_CAP)THEN
+   IF PSH THEN
+    SWAP BCOL1,BCOL2
+   ENDIF
+   IF !BGNED THEN
+    VOID GBeginFrameWindow(WND)
+    BGNED=TRUE
+   ENDIF
    'x button
    GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
-   GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
-   GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
-   GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
+   INC BX1,PSH:INC BY1,PSH:INC BX2,PSH:INC BY2,PSH
    '
    GLINEWindow WND,BX1+1,BY1+1,BX2-3,BY2-2,#BLACK
    GLINEWindow WND,BX1+2,BY1+1,BX2-2,BY2-2,#BLACK
    '/
    GLINEWindow WND,BX2-3,BY1+1,BX1+1,BY2-2,#BLACK
    GLINEWindow WND,BX2-2,BY1+1,BX1+2,BY2-2,#BLACK
+   DEC BX1,PSH:DEC BY1,PSH:DEC BX2,PSH:DEC BY2,PSH
+   GBOXWindow WND,BX1,BY1,BX2,BY2,BCOL2
+   GLINEWindow WND,BX1,BY1,BX1,BY2-1,BCOL1
+   GLINEWindow WND,BX1,BY1,BX2-1,BY1,BCOL1
   ENDIF
-  IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
-   HIT=WINCTL_HIT_CLS
-  ENDIF
 
-  IF STYLE AND WindowMinMaxStyle()THEN
+  IF HASMINMAX THEN
    'max
    BX1=BX1-BW-MARGIN1-1
    BX2=BX2-BW-MARGIN1-1
-   IF DRW THEN
+   PSH=0
+   IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
+    HIT=WINCTL_HIT_MAX
+    PSH=LCLK
+   ENDIF
+   IF (DRW AND WINCTL_DRW_CAP)||PSH THEN
+    BCOL1=#WHITE
+    BCOL2=#BLACK
+    IF PSH THEN
+     SWAP BCOL1,BCOL2
+    ENDIF
+    IF !BGNED THEN
+     VOID GBeginFrameWindow(WND)
+     BGNED=TRUE
+    ENDIF
     GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
-    GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
-    GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
-    GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
-    
+    INC BX1,PSH:INC BY1,PSH:INC BX2,PSH:INC BY2,PSH
     IF STYLE AND WindowMaximizedStyle()THEN
      GBOXWindow WND,BX1+3,BY1+1,BX1+7,BY1+5,#BLACK
      GFILLWindow WND,BX1+2,BY1+4,BX1+4,BY1+6,G1
@@ -4734,50 +4878,111 @@
      GBOXWindow WND,BX1+1,BY1+1,BX2-2,BY2-2,#BLACK
      GLINEWindow WND,BX1+1,BY1+2,BX2-2,BY1+2,#BLACK
     ENDIF
+    DEC BX1,PSH:DEC BY1,PSH:DEC BX2,PSH:DEC BY2,PSH
+    GBOXWindow WND,BX1,BY1,BX2,BY2,BCOL2
+    GLINEWindow WND,BX1,BY1,BX1,BY2-1,BCOL1
+    GLINEWindow WND,BX1,BY1,BX2-1,BY1,BCOL1
    ENDIF
-   IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
-    HIT=WINCTL_HIT_MAX
-   ENDIF
    'min
    BX1=BX1-BW-MARGIN2-1
    BX2=BX2-BW-MARGIN2-1
-   IF DRW THEN
-    GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
-    GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
-    GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
-    GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
-    GLINEWindow WND,BX1+2,BY2-2,BX2-2,BY2-2,#BLACK
-   ENDIF
+   PSH=0
    IF WindowFrame_PtInBox(MX,MY,BX1,BY1,BX2,BY2)THEN
     HIT=WINCTL_HIT_MIN
+    PSH=LCLK
    ENDIF
+   IF (DRW AND WINCTL_DRW_CAP)||PSH THEN
+    BCOL1=#WHITE
+    BCOL2=#BLACK
+    IF PSH THEN
+     SWAP BCOL1,BCOL2
+    ENDIF
+    IF !BGNED THEN
+     VOID GBeginFrameWindow(WND)
+     BGNED=TRUE
+    ENDIF
+    GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
+    INC BX1,PSH:INC BY1,PSH:INC BX2,PSH:INC BY2,PSH
+    GLINEWindow WND,BX1+2,BY2-2,BX2-2,BY2-2,#BLACK
+    DEC BX1,PSH:DEC BY1,PSH:DEC BX2,PSH:DEC BY2,PSH
+    GBOXWindow WND,BX1,BY1,BX2,BY2,BCOL2
+    GLINEWindow WND,BX1,BY1,BX1,BY2-1,BCOL1
+    GLINEWindow WND,BX1,BY1,BX2-1,BY1,BCOL1
+   ENDIF
   ENDIF
  ENDIF
  'DRAW MENU
  IF STYLE AND WindowMenuStyle()THEN
-  VAR MENUC=0
-  VAR MENU=GetWindowMenu(WND)
-  VAR STR$,E
-  VAR MENUY=CAPTY2+1
-  VAR MENUX=0
-  VAR MENU_MARGIN=4
-  IF DRW THEN
-   GFILLWindow WND,MENUX,MENUY,MENUX+W,MENUY+WINCTL_MENUCY,G1
+  VAR WMENUSEL=GetProp(WND,"WMENUSEL")
+  VAR DESELECT
+  IF !LCLK&&!DRW&&!ACTV&&!IsMenuWindow(GetActiveWindow())THEN
+   IF WMENUSEL THEN
+    DESELECT=TRUE
+   ELSE
+    RETURN
+   ENDIF
   ENDIF
-  WHILE 1
-   EnumerateMenu MENU,MENUC OUT STR$,MENUC,E
-   IF!MENUC THEN BREAK
-   IF DRW THEN
-    GPRINTWindow WND,MENUX,MENUY+1,STR$,#BLACK
+  VAR WMENUSEL_NEW
+  IF !(DRW AND WINCTL_DRW_MENU)&&!BGNED THEN
+   VOID GBeginFrameWindow(WND):BGNED=TRUE
+  ENDIF
+  WindowFrameDrawMenuBar WND,WMENUSEL,CAPTY2,MX,MY,DRW AND WINCTL_DRW_MENU,LCLK OUT WMENUSEL_NEW
+  IF (DESELECT||ACTV)&&WMENUSEL_NEW!=WMENUSEL THEN
+   SetProp WND,"WMENUSEL",WMENUSEL_NEW
+   IF !BGNED THEN
+    VOID GBeginFrameWindow(WND)
+    BGNED=TRUE
    ENDIF
-   MENUX=MENUX+LEN(STR$)*8+MENU_MARGIN
-  WEND
+   WindowFrameDrawMenuBar WND,WMENUSEL_NEW,CAPTY2,MX,MY,TRUE,FALSE OUT WMENUSEL_NEW
+  ENDIF
+  
  ENDIF
 END
+DEF WindowFrameDrawMenuBar WND,WMENUSEL,CAPTY2,MX,MY,DRW,CLK OUT WMENUSEL_NEW
+ WMENUSEL_NEW=0
+ VAR W=GetWindowWidth(WND)
+ VAR G1=GetBackColor()
+ VAR I
+ VAR MENUC
+ VAR MENU=GetWindowMenu(WND)
+ VAR STR$,E
+ VAR MENUY=CAPTY2+1
+ VAR MENUX=0
+ VAR MENU_MARGIN=4
+ IF DRW THEN
+  GCLIPWindow WND,MENUX,MENUY,MENUX+W,MENUY+WINCTL_MENUCY-1
+  GFILLWindow WND,MENUX,MENUY,MENUX+W,MENUY+WINCTL_MENUCY-1,G1
+ ENDIF
+ WHILE 1
+  INC I
+  VAR CHILD
+  EnumerateMenu MENU,MENUC OUT STR$,MENUC,CHILD,E
+  IF!MENUC THEN BREAK
+  VAR ITEMW=LEN(STR$)*8+MENU_MARGIN
+  IF WindowFrame_PtInBox(MX,MY,MENUX,MENUY,MENUX+ITEMW-1,MENUY+WINCTL_MENUCY-1)THEN
+   WMENUSEL_NEW=I
+   IF CLK THEN
+    ShowMenu CHILD,WND,MENUX,MENUY+WINCTL_MENUCY-1
+   ENDIF
+  ENDIF
+  IF DRW THEN
+   VAR TCOL=#BLACK
+   IF WMENUSEL==I THEN
+    TCOL=GetSelectionTextColor()
+    GFILLWindow WND,MENUX,MENUY,MENUX+ITEMW,MENUY+WINCTL_MENUCY-2,GetSelectionColor()
+   ENDIF
+   GPRINTWindow WND,MENUX+MENU_MARGIN DIV 2,MENUY+1,STR$,TCOL
+  ENDIF
+  MENUX=MENUX+ITEMW
+ WEND
+ IF DRW THEN
+  ClearGCLIPWindow WND
+ ENDIF
+END
 DEF WindowFramePainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
- VOID NEW_WINDOW_FRAME_PAINTER(WND,TRUE,0,0,0)
+ NEW_WINDOW_FRAME_PAINTER WND,WINCTL_DRW_ALL,0,0,0,TRUE OUT ,
  E=ReGBeginWindow(WND)
 END
 
@@ -4795,29 +5000,25 @@
  OTW_MOVWIN_NUWID=NUWID
  OTW_MOVWIN_DX=AX-X
  OTW_MOVWIN_DY=AY-Y
- IF OTW_MOVWIN_USESP THEN
-  SPSHOW OTW_MOVWINSP
-  SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
-  SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
-  SPOFS OTW_MOVWINSP,AX,AY
- ENDIF
  MoveWindowSP FALSE
  RETURN 0
 END
 COMMON DEF ClearWindowMoveFrame(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  OTW_MOVWINFLG=0
- OTW_MOVWIN_XOR_INIT=FALSE
- IF OTW_MOVWIN_USEXOR THEN
-  OTW_MOVWIN_XORGBOX OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_X+OTW_MOVWIN_W-1,OTW_MOVWIN_Y+OTW_MOVWIN_H-1
- ENDIF
- SPHIDE OTW_MOVWINSP
+ OTW_MOVWIN_INIT=FALSE
+ CALL OTW_MOVWIN_HNDLR$,OTW_MOVWIN_SX,OTW_MOVWIN_SY,OTW_MOVWIN_SW,OTW_MOVWIN_SH,OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_W,OTW_MOVWIN_H,OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_W,OTW_MOVWIN_H,1
  RETURN 0
 END
 DEF WindowChFocus WND,CTL,TYPE,A1,A2
+ VAR BEG
  IF A1 THEN
   VAR E=FrontWindow(WND)
+  NEW_WINDOW_FRAME_PAINTER WND,WINCTL_DRW_CAP,0,0,0,FALSE OUT ,BEG
+ ELSE
+  NEW_WINDOW_FRAME_PAINTER WND,WINCTL_DRW_CAP,0,0,0,FALSE OUT ,BEG
  ENDIF
+ IF BEG THEN BEG=GEndWindow(WND)
 END
 DEF WindowLMouseDown WND,CTL,TYPE,A1,A2
 ' VAR E=FrontWindow(WND)
@@ -4839,7 +5040,11 @@
  VAR HASMINMAX=WindowFrame_HasFlag(GetWindowStyle(WND),WindowMinMaxStyle())
  VAR X,Y
  SplitInt POS OUT X,Y
- VAR HIT=NEW_WINDOW_FRAME_PAINTER(WND,FALSE,X,Y,BTN)
+ VAR HIT,BGN
+ NEW_WINDOW_FRAME_PAINTER WND,FALSE,X,Y,BTN,FALSE OUT HIT,BGN
+ IF BGN THEN
+  VOID GEndWindow(WND)
+ ENDIF
  VAR LCLK=WindowFrame_HasFlag(BTN,CTL_LBTNFLG OR CTL_BTNDWNFLG)
  VAR LDBL=WindowFrame_HasFlag(BTN,CTL_LBTNFLG OR CTL_DBLFLG)
  IF LCLK&&HIT==WINCTL_HIT_CLS THEN
@@ -4850,7 +5055,7 @@
   VOID MinimizeWindow(WND)
   RETURN
  ENDIF
- IF (LDBL&&HIT==WINCTL_HIT_CAP)||(LCLK&&HIT==WINCTL_HIT_MAX)THEN
+ IF HASMINMAX&&((LDBL&&HIT==WINCTL_HIT_CAP)||(LCLK&&HIT==WINCTL_HIT_MAX))THEN
   IF MAX THEN
    VOID RestoreWindow(WND)
   ELSE
@@ -4870,69 +5075,15 @@
 DEF WindowMMoveFrame WND,CTL,TYPE,ET,XY
  IF ET AND CTL_LEAVEFLG THEN 
   OTW_INITSP 0
-  RETURN
  ENDIF
  VAR X,Y
  SplitInt XY OUT X,Y
- VOID NEW_WINDOW_FRAME_PAINTER(WND,FALSE,X,Y,ET)
 ' RETURN
- IF!IsActiveWindow(WND)THEN RETURN
- WindowFrameMenu WND,X,Y
-END
-DEF WindowFrameMenu WND,X,Y
- VAR NUWID=WND AND NUWIDMASK
- IF!WIN_MENU[NUWID]THEN RETURN
- VAR C=WIN_MENU[NUWID]AND 4095
- IF!(X&&Y>11&&Y<21)THEN
-  IF MENU_SEL[C]THEN X=-1 ELSE RETURN
+ VAR HIT,BGN
+ NEW_WINDOW_FRAME_PAINTER WND,FALSE,X,Y,0,FALSE OUT HIT,BGN
+ IF BGN THEN
+  VOID GEndWindow(WND)
  ENDIF
- IF WIN_MENU[NUWID]THEN
-  VAR I=MENU_ITEM[C]
-  VAR X2=0,X1=0
-  VAR OS=MENU_SEL[C]
-  VAR IN=0,BEG=0,FIND
-  WHILE I
-   X1=X2
-   X2=X2+LEN(MENU_INAME$[I])*8+4
-   IF X1<=X&&X2>=X THEN
-    IF OS==I THEN RETURN
-    IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
-    BEG=1
-    FIND=1
-    GFILLWindow WND,X1,-10,X2-2,-2,GetSelectionColor()
-    GPRINTWindow WND,X1,-9,MENU_INAME$[I],GetSelectionTextColor()
-    MENU_SEL[C]=I
-    IN=1
-    I=MENU_INEXT[I]
-    IF!OS THEN BREAK
-    WHILE I
-     X1=X2
-     X2=X2+LEN(MENU_INAME$[I])*8+4
-     IF I==OS THEN
-      OS=0
-      GFILLWindow WND,X1,-10,X2,-2,WIN_BKGND
-      GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
-      BREAK
-     ENDIF
-     I=MENU_INEXT[I]
-    WEND
-    BREAK
-'   IF!OS THEN BREAK
-   ELSE
-    IF I==OS THEN
-     IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
-     BEG=1
-     OS=0
-     GFILLWindow WND,X1,-10,X2,-2,WIN_BKGND
-     GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
-    IF IN THEN BREAK
-    ENDIF
-   ENDIF
-   I=MENU_INEXT[I]
-  WEND
-  IF BEG THEN BEG=GEndWindow(WND)
-  IF!FIND THEN MENU_SEL[C]=0
- ENDIF
 END
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
  VAR NUWID=WND AND NUWIDMASK
@@ -5061,8 +5212,9 @@
   VAR WX,WY,WW,WH,S$
   S$=WIN_PACK_STATE(WND,W1,H1,W2,H2)
   SetProp$ CWND,"WINOLDSTATE",S$
+  QueryWindowFrameSize WND OUT W1,H1,W2,H2,ERR
   GetWorkArea GetParentWindow(CWND) OUT WX,WY,WW,WH,
-  VOID MoveResizeWindowF(CWND,WX,WY,WW,WH,0,H1-2,0,0)
+  VOID MoveResizeWindowF(CWND,WX,WY,WW,WH,W1,H1,W2,H2)
   VOID SetSysWindowProperty(CWND,"SHADOW",FALSE)
   RETURN
  ELSEIF A1==WindowMinimizeEvent()THEN
@@ -5078,6 +5230,16 @@
  ENDIF
  VOID SendChildWindowEvent(GetParentWindow(WND),A1,CWND)
 END
+DEF WindowParentWindow WND,CTL,T,TYP,A
+ VAR E=CallBaseControlHandler(WND,CTL,T,TYP,A)
+ IF TYP==ParentWindowResizeEvent()THEN
+  VAR WX,WY,WW,WH,W1,H1,W2,H2,ERR
+  QueryWindowFrameSize WND OUT W1,H1,W2,H2,ERR
+  GetWorkArea GetParentWindow(WND) OUT WX,WY,WW,WH,
+  VOID MoveResizeWindowF(WND,WX,WY,WW,WH,W1,H1,W2,H2)
+  RETURN
+ ENDIF
+END
 COMMON DEF GetWindowStyle(WND)
  IF!CheckWindow(WND)THEN RETURN 0
  RETURN WIN_STYLE[WND AND NUWIDMASK]
@@ -6236,12 +6398,205 @@
  XORGBOX2 X1,Y1,X2,Y2
  XORGBOX2 X1+1,Y1+1,X2-1,Y2-1
 END
+DEF OTW_MOVWIN_XORGBOX_THICK1 X1,Y1,X2,Y2
+ VAR X,Y
+ VAR _=Y1 AND 1
+ FOR X=X1 TO X2
+  IF X+_ AND 1 THEN CONTINUE
+  GPSET X,Y1,GSPOIT(X,Y1) XOR &HFFFFFF
+ NEXT
+ FOR X=X1 TO X2
+  IF !(X+_ AND 1) THEN CONTINUE
+  GPSET X,Y1+1,GSPOIT(X,Y1+1) XOR &HFFFFFF
+ NEXT
+ _=Y2 AND 1
+ FOR X=X1 TO X2
+  IF X+_ AND 1 THEN CONTINUE
+  GPSET X,Y2,GSPOIT(X,Y2) XOR &HFFFFFF
+ NEXT
+ FOR X=X1 TO X2
+  IF !(X+_ AND 1) THEN CONTINUE
+  GPSET X,Y2-1,GSPOIT(X,Y2-1) XOR &HFFFFFF
+ NEXT
+
+ _=X1 AND 1
+ FOR Y=Y1+2 TO Y2-2
+  IF Y+_ AND 1 THEN CONTINUE
+  GPSET X1,Y,GSPOIT(X1,Y) XOR &HFFFFFF
+ NEXT
+ FOR Y=Y1+2 TO Y2-2
+  IF !(Y+_ AND 1) THEN CONTINUE
+  GPSET X1+1,Y,GSPOIT(X1+1,Y) XOR &HFFFFFF
+ NEXT
+ _=X2 AND 1
+ FOR Y=Y1+2 TO Y2-2
+  IF Y+_ AND 1 THEN CONTINUE
+  GPSET X2,Y,GSPOIT(X2,Y) XOR &HFFFFFF
+ NEXT
+ FOR Y=Y1+2 TO Y2-2
+  IF !(Y+_ AND 1) THEN CONTINUE
+  GPSET X2-1,Y,GSPOIT(X2-1,Y) XOR &HFFFFFF
+ NEXT
+END
+'FAST
+'
+'      
+'      
+'      
+'
 DEF OTW_MOVWIN_XORGBOX_THICK X1,Y1,X2,Y2
- OTW_MOVWIN_XORGBOX X1,Y1,X2,Y2
- OTW_MOVWIN_XORGBOX X1+1,Y1+1,X2-1,Y2-1
+ VAR X,Y
+ VAR Y1_OFF=Y1 AND 1
+ VAR Y2_OFF=Y2 AND 1
+ VAR X1_OFF=X1 AND 1
+ VAR X2_OFF=X2 AND 1
+ VAR Y1_1=Y1+1
+ VAR Y2_1=Y2-1
+ VAR X1_1=X1+1
+ VAR X2_1=X2-1
+ VAR C1=X1+Y1_OFF AND 1
+ VAR C2=X1+Y2_OFF AND 1
+ IF C1&&C2 THEN
+  X=X1
+  VAR XX=X+1
+  REPEAT
+   GPSET X,Y1_1,GSPOIT(X,Y1_1) XOR &HFFFFFF
+   GPSET XX,Y1,GSPOIT(XX,Y1) XOR &HFFFFFF
+   GPSET X,Y2_1,GSPOIT(X,Y2_1) XOR &HFFFFFF
+   GPSET XX,Y2,GSPOIT(XX,Y2) XOR &HFFFFFF
+   X=X+2
+   XX=XX+2
+  UNTIL X2_1<X
+  IF X2>=X THEN
+   GPSET X,Y2_1,GSPOIT(X,Y2_1) XOR &HFFFFFF
+   GPSET X,Y1_1,GSPOIT(X,Y1_1) XOR &HFFFFFF
+  ENDIF
+ ELSEIF C1&&!C2 THEN
+  X=X1
+  XX=X+1
+  REPEAT
+   GPSET X,Y1_1,GSPOIT(X,Y1_1) XOR &HFFFFFF
+   GPSET XX,Y1,GSPOIT(XX,Y1) XOR &HFFFFFF
+   GPSET X,Y2,GSPOIT(X,Y2) XOR &HFFFFFF
+   GPSET XX,Y2_1,GSPOIT(XX,Y2_1) XOR &HFFFFFF
+   X=X+2
+   XX=XX+2
+  UNTIL X2_1<X
+  IF X2>=X THEN
+   GPSET X,Y1_1,GSPOIT(X,Y1_1) XOR &HFFFFFF
+   GPSET X,Y2,GSPOIT(X,Y2) XOR &HFFFFFF
+  ENDIF
+ ELSEIF !C1&&C2 THEN
+  X=X1
+  XX=X+1
+  REPEAT
+   GPSET X,Y1,GSPOIT(X,Y1) XOR &HFFFFFF
+   GPSET XX,Y1_1,GSPOIT(XX,Y1_1) XOR &HFFFFFF
+   GPSET X,Y2_1,GSPOIT(X,Y2_1) XOR &HFFFFFF
+   GPSET XX,Y2,GSPOIT(XX,Y2) XOR &HFFFFFF
+   X=X+2
+   XX=XX+2
+  UNTIL X2_1<X
+  IF X2>=X THEN
+   GPSET X,Y1,GSPOIT(X,Y1) XOR &HFFFFFF
+   GPSET X,Y2_1,GSPOIT(X,Y2_1) XOR &HFFFFFF
+  ENDIF
+ ELSE'IF !C1&&!C2 THEN
+  X=X1
+  XX=X+1
+  REPEAT
+   GPSET X,Y1,GSPOIT(X,Y1) XOR &HFFFFFF
+   GPSET XX,Y1_1,GSPOIT(XX,Y1_1) XOR &HFFFFFF
+   GPSET X,Y2,GSPOIT(X,Y2) XOR &HFFFFFF
+   GPSET XX,Y2_1,GSPOIT(XX,Y2_1) XOR &HFFFFFF
+   X=X+2
+   XX=XX+2
+  UNTIL X2_1<X
+  IF X2>=X THEN
+   GPSET X,Y1,GSPOIT(X,Y1) XOR &HFFFFFF
+   GPSET X,Y2,GSPOIT(X,Y2) XOR &HFFFFFF
+  ENDIF
+ ENDIF
+ Y2=Y2-2
+ Y2_1=Y2_1-2
+ C1=Y1+2+X1_OFF AND 1
+ C2=Y1+X2_OFF+2 AND 1
+ IF !C1&&!C2 THEN
+  Y=Y1+2
+  VAR YY=Y+1
+  REPEAT
+   GPSET X1,Y,GSPOIT(X1,Y) XOR &HFFFFFF
+   GPSET X1_1,YY,GSPOIT(X1_1,YY) XOR &HFFFFFF
+   GPSET X2,Y,GSPOIT(X2,Y) XOR &HFFFFFF'!C2
+   GPSET X2_1,YY,GSPOIT(X2_1,YY) XOR &HFFFFFF
+   Y=Y+2
+   YY=YY+2
+  UNTIL Y2_1<Y
+  IF Y2>=Y THEN
+   GPSET X1,Y,GSPOIT(X1,Y) XOR &HFFFFFF
+   GPSET X2,Y,GSPOIT(X2,Y) XOR &HFFFFFF'!C2
+  ENDIF
+ ELSEIF !C1&&C2 THEN
+  Y=Y1+2
+  YY=Y+1
+  REPEAT
+   GPSET X1,Y,GSPOIT(X1,Y) XOR &HFFFFFF'!C1
+   GPSET X1_1,YY,GSPOIT(X1_1,YY) XOR &HFFFFFF
+   GPSET X2_1,Y,GSPOIT(X2_1,Y) XOR &HFFFFFF'C2
+   GPSET X2,YY,GSPOIT(X2,YY) XOR &HFFFFFF
+   Y=Y+2
+   YY=YY+2
+  UNTIL Y2_1<Y
+  
+  IF Y2>=Y THEN
+   GPSET X1,Y,GSPOIT(X1,Y) XOR &HFFFFFF'!C1
+   GPSET X2_1,Y,GSPOIT(X2_1,Y) XOR &HFFFFFF'C2
+  ENDIF
+ ELSEIF C1&&!C2 THEN
+  Y=Y1+2
+  YY=Y+1
+  REPEAT
+   GPSET X1_1,Y,GSPOIT(X1_1,Y) XOR &HFFFFFF'C1
+   GPSET X1,YY,GSPOIT(X1,YY) XOR &HFFFFFF
+   GPSET X2,Y,GSPOIT(X2,Y) XOR &HFFFFFF'!C2
+   GPSET X2_1,YY,GSPOIT(X2_1,YY) XOR &HFFFFFF
+   Y=Y+2
+   YY=YY+2
+  UNTIL Y2_1<Y
+  IF Y2>=Y THEN
+   GPSET X1_1,Y,GSPOIT(X1_1,Y) XOR &HFFFFFF'C1
+   GPSET X2,Y,GSPOIT(X2,Y) XOR &HFFFFFF'!C2
+  ENDIF
+ ELSE'IF C1&&C2 THEN
+  Y=Y1+2
+  YY=Y+1
+  REPEAT
+   GPSET X1_1,Y,GSPOIT(X1_1,Y) XOR &HFFFFFF'C1
+   GPSET X1,YY,GSPOIT(X1,YY) XOR &HFFFFFF
+   GPSET X2_1,Y,GSPOIT(X2_1,Y) XOR &HFFFFFF'C2
+   GPSET X2,YY,GSPOIT(X2,YY) XOR &HFFFFFF
+   Y=Y+2
+   YY=YY+2
+  UNTIL Y2_1<Y
+  IF Y2>=Y THEN
+   GPSET X1_1,Y,GSPOIT(X1_1,Y) XOR &HFFFFFF'C1
+   GPSET X2_1,Y,GSPOIT(X2_1,Y) XOR &HFFFFFF'C2
+  ENDIF
+ ENDIF
 END
+'=================
 DEF OTW_MOVWIN_XORGBOX X1,Y1,X2,Y2
+ OTW_MOVWIN_XORGBOX1 X1,Y1,X2,Y2,FALSE
+END
+DEF OTW_MOVWIN_XORGBOX1 X1,Y1,X2,Y2,F
  VAR Y=Y1
+ IF F THEN
+  X1=X1+!(X1 AND 1)
+  Y=Y+!(Y AND 1)
+ ELSE
+  X1=X1+(X1 AND 1)
+  Y=Y+(Y AND 1)
+ ENDIF
  REPEAT
   GPSET X1,Y,GSPOIT(X1,Y) XOR &HFFFFFF
   GPSET X2,Y,GSPOIT(X2,Y) XOR &HFFFFFF
@@ -6561,7 +6916,7 @@
  BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
 END
 COMMON DEF GetWinVer$()
- RETURN "5.0 rev51"
+ RETURN "5.0 rev52"
 END
 COMMON DEF GetWinMemorySize()
  RETURN OTW_USEMEM
@@ -6576,6 +6931,8 @@
   WIN_SELCOL=RGB(0,0,255)
   WIN_SELTXTCOL=RGB(255,255,255)
   WIN_WORKSPACECOL=RGB(96,96,96)
+  WIN_ACTVCAPCOL=RGB(0,0,136)
+  WIN_INACTVCAPCOL=RGB(64,64,64)
   'sound unit
   OTW_CLIPMODE=0
   VAR FM=FREEMEM
@@ -6655,8 +7012,7 @@
   OTW_MOUSE=-1
   OTW_INITSP 5
   OTW_MOVWINSP=2
-  OTW_MOVWIN_USEXOR=TRUE
-  OTW_MOVWIN_USESP=FALSE
+  OTW_MOVWIN_HNDLR$="OTW_MOVWIN_HNDLR_XOR"
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
   SPVAR OTW_MOVWINSP,0,1
@@ -6812,8 +7168,8 @@
    ENDIF
    CAPTURE_WND=0
   ENDIF
-  
-  
+
+
   '=====R=====
   IF BTN AND OTW_RMOUSEDWN THEN
    E=FocusWindow(NUWIDToWND(NUWID AND 32767))
@@ -6854,14 +7210,15 @@
     ENDIF
   ENDIF
   '===========
-  
-  
-  
  ENDIF
  IF MOVEMOUSE THEN
   MoveWindowSP FALSE
   IF CAPTURE_WND THEN
-   E=MouseMoveWindow(CAPTURE_WND AND NUWIDMASK)
+   IF CAPTURE_WND_FRAME THEN
+    E=MouseMoveWindowOnFrame(CAPTURE_WND AND NUWIDMASK)
+   ELSE
+    E=MouseMoveWindow(CAPTURE_WND AND NUWIDMASK)
+   ENDIF
   ELSE
   IF OLDMOVEMOUSEWINDOW!=NUWID THEN
    IF OTW_INSPECTWIN&&(OLDMOVEMOUSEWINDOW AND 32767)!=(NUWID AND 32767) THEN
@@ -6918,7 +7275,7 @@
    OTW_OLDBTN=BTN
   ENDIF
  ENDIF
- 
+
  IF OTW_PRC_CHK==0THEN OTW_PRC_CHK=1
  IF OTW_PRC_CHK>=LEN(WIN_PRC)THEN
   OTW_PRC_CHK=1
@@ -6928,18 +7285,62 @@
   VOID DeleteWindowNUWID(OTW_PRC_CHK)
  ENDIF
  OTW_PRC_CHK=OTW_PRC_CHK+1
- 
- 
+
+
  IF OTW_EXITFLG&&OTW_EXITTIME>=MAINCNT THEN
   OTW_EXIT
  ENDIF
-RETURN
+ RETURN
 END
 DEF OTW_EXIT
  ACLS
  ExitProcess 0
  RETURN
 END
+'STATE:-1 INIT
+'STATE:0 MOVING
+'STATE:1 END
+DEF OTW_MOVWIN_HNDLR_XOR SX,SY,SW,SH,OX,OY,OW,OH,X,Y,W,H,STATE
+ IF STATE==0 THEN
+  IF HARDWARE==0 THEN
+   OTW_MOVWIN_XORGBOX OX,OY,OX+OW-1,OY+OH-1
+  ELSE
+   OTW_MOVWIN_XORGBOX_THICK OX,OY,OX+OW-1,OY+OH-1
+  ENDIF
+ ENDIF
+ IF HARDWARE==0 THEN
+  OTW_MOVWIN_XORGBOX X,Y,X+W-1,Y+H-1
+ ELSE
+  OTW_MOVWIN_XORGBOX_THICK X,Y,X+W-1,Y+H-1
+ ENDIF
+END
+DEF OTW_MOVWIN_HNDLR_SP2 SX,SY,SW,SH,OX,OY,OW,OH,X,Y,W,H,STATE
+ IF STATE==-1THEN
+  SPSHOW OTW_MOVWINSP
+  SPCHR OTW_MOVWINSP,MAX(X,0),MAX(Y,0),W,H
+  SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+ ENDIF
+ IF STATE==-1||STATE==0 THEN
+  SPOFS OTW_MOVWINSP,X,Y
+  SPSCALE OTW_MOVWINSP,W/SW,H/SH
+ ENDIF
+ IF STATE==1 THEN
+  SPHIDE OTW_MOVWINSP
+ ENDIF
+END
+DEF OTW_MOVWIN_HNDLR_SP SX,SY,SW,SH,OX,OY,OW,OH,X,Y,W,H,STATE
+ IF STATE==-1THEN
+  SPSHOW OTW_MOVWINSP
+  SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+ ENDIF
+ IF STATE==-1||STATE==0 THEN
+  SPOFS OTW_MOVWINSP,X,Y
+  SPSCALE OTW_MOVWINSP,W,H
+ ENDIF
+ IF STATE==1 THEN
+  SPHIDE OTW_MOVWINSP
+ ENDIF
+END
   '2     3     4
   ' 
   ' 
@@ -6951,13 +7352,10 @@
   '789
 DEF MoveWindowSP F
  IF!OTW_MOVWINFLG THEN RETURN
- IF OTW_MOVWIN_USEXOR THEN
-  IF OTW_MOVWIN_XOR_INIT THEN
-   OTW_MOVWIN_XORGBOX OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_X+OTW_MOVWIN_W-1,OTW_MOVWIN_Y+OTW_MOVWIN_H-1
-  ELSE
-   OTW_MOVWIN_XOR_INIT=TRUE
-  ENDIF
- ENDIF
+ VAR OX=OTW_MOVWIN_X
+ VAR OY=OTW_MOVWIN_Y
+ VAR OW=OTW_MOVWIN_W
+ VAR OH=OTW_MOVWIN_H
  VAR DX=OTW_MOVWIN_DX
  VAR DY=OTW_MOVWIN_DY
  IF OTW_MOVWINFLG>=2THEN
@@ -7054,10 +7452,6 @@
     H=H+DH
     IF H<WIN_MINH[NW]THEN H=WIN_MINH[NW]-1
    ENDIF
-  IF OTW_MOVWIN_USESP THEN
-   SPOFS OTW_MOVWINSP,X,Y
-   SPSCALE OTW_MOVWINSP,W+1,H+1'TODO:WH
-  ENDIF
   OTW_MOVWIN_X=X
   OTW_MOVWIN_Y=Y
   OTW_MOVWIN_W=W+1
@@ -7068,19 +7462,17 @@
    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,X,Y,W,H
    VOID ClearWindowMoveFrame(WIN_DRAGHANDLER_WND)
    VOID ClearWindowDragHandler()
+   RETURN
   ENDIF
  ELSE
   OTW_MOVWIN_X=OTW_MOUSEX+DX
   OTW_MOVWIN_Y=OTW_MOUSEY+DY
-  IF OTW_MOVWIN_USESP THEN
-   SPOFS OTW_MOVWINSP,OTW_MOUSEX+DX,OTW_MOUSEY+DY
-  ENDIF
   IF F THEN
    VAR PWND=GetParentWindow(WIN_DRAGHANDLER_WND)
    VAR WIDTH
    VAR HEIGHT
-   VAR AX=GetWindowAX(PWND)
-   VAR AY=GetWindowAY(PWND)
+   VAR AX=GetTrueWindowAX(PWND)
+   VAR AY=GetTrueWindowAY(PWND)
    VAR E
    GetWindowSize WIN_DRAGHANDLER_WND,TRUE OUT WIDTH,HEIGHT,E
    IF !E THEN
@@ -7088,10 +7480,18 @@
    ENDIF
    VOID ClearWindowMoveFrame(WIN_DRAGHANDLER_WND)
    VOID ClearWindowDragHandler()
+   RETURN
   ENDIF
  ENDIF
- IF OTW_MOVWIN_USEXOR THEN
-  OTW_MOVWIN_XORGBOX OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_X+OTW_MOVWIN_W-1,OTW_MOVWIN_Y+OTW_MOVWIN_H-1
+ IF OTW_MOVWIN_INIT THEN
+  CALL OTW_MOVWIN_HNDLR$,OTW_MOVWIN_SX,OTW_MOVWIN_SY,OTW_MOVWIN_SW,OTW_MOVWIN_SH,OX,OY,OW,OH,OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_W,OTW_MOVWIN_H,0
+ ELSE
+  OTW_MOVWIN_SX=OTW_MOVWIN_X
+  OTW_MOVWIN_SY=OTW_MOVWIN_Y
+  OTW_MOVWIN_SW=OTW_MOVWIN_W
+  OTW_MOVWIN_SH=OTW_MOVWIN_H
+  CALL OTW_MOVWIN_HNDLR$,OTW_MOVWIN_SX,OTW_MOVWIN_SY,OTW_MOVWIN_SW,OTW_MOVWIN_SH,OX,OY,OW,OH,OTW_MOVWIN_X,OTW_MOVWIN_Y,OTW_MOVWIN_W,OTW_MOVWIN_H,-1
+  OTW_MOVWIN_INIT=TRUE
  ENDIF
 END
 VAR RUNCTL
@@ -15080,7 +15480,7 @@
   ENDIF
   VAR W=RIM_MAXLEN(CAND$)*8+12
   VAR X=MAX(GetWindowX(RIM_WND)+MIN(RW-W,RIM_CALC_X()),0)
-  VAR H=63
+  VAR H=65
   IF RIM_CANDWND THEN
    ClearListBox RIM_CANDWND
    E=MoveResizeWindow(RIM_CANDWND,X,Y,W,H)

