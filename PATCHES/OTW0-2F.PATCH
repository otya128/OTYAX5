diff -u OTW.TXT OTW1
--- OTW.TXT
+++ OTW1
@@ -12,33 +12,37 @@
 '        WINDOW         
 '=======================
 VAR WIN_MAX,WIN_MSGMAX
-VAR WIN_NAME$  [0]
-VAR WIN_UID    [0]
-VAR WIN_X      [0]
-VAR WIN_Y      [0]
-VAR WIN_SX     [0]
-VAR WIN_SY     [0]
-VAR WIN_EWIDTH [0]
-VAR WIN_EHEIGHT[0]
-VAR WIN_WIDTH  [0]
-VAR WIN_HEIGHT [0]
-VAR WIN_AX     [0]
-VAR WIN_AY     [0]
-VAR WIN_CTLID  [0]
-VAR WIN_PID    [0]
-VAR WIN_DATA#  [0]
-VAR WIN_DATA%  [0]
-VAR WIN_DATA$  [0]
-VAR WIN_NEXT   [0]
-VAR WIN_PREV   [0]
-VAR WIN_CHILD  [0]
-VAR WIN_PARENT [0]
-VAR WIN_MSGBUF [0,0]
-DEF OTW_INITARRAY
+DIM WIN_NAME$  [0]
+DIM WIN_WID    [0]
+DIM WIN_X      [0]
+DIM WIN_Y      [0]
+DIM WIN_SX     [0]
+DIM WIN_SY     [0]
+DIM WIN_EWIDTH [0]
+DIM WIN_EHEIGHT[0]
+DIM WIN_WIDTH  [0]
+DIM WIN_HEIGHT [0]
+DIM WIN_AX     [0]
+DIM WIN_AY     [0]
+DIM WIN_CID    [0]
+DIM WIN_NUCID  [0]
+DIM WIN_PID    [0]
+DIM WIN_NUPID  [0]
+DIM WIN_DATA#  [0]
+DIM WIN_DATA%  [0]
+DIM WIN_DATA$  [0]
+DIM WIN_NEXT   [0]
+DIM WIN_PREV   [0]
+DIM WIN_CHILD  [0]
+DIM WIN_PARENT [0]
+DIM WIN_MSGBUF [0,0]
+VAR WIN_FREE
+VAR WIN_WIDCNT
+DEF OTW_WIN_INITARRAY
  WIN_MAX=256
  WIN_MSGMAX=256
  WIN_NAME$     =NEW_ARRAY$(WIN_MAX)
- WIN_UID       =NEW_ARRAY(WIN_MAX)
+ WIN_WID       =NEW_ARRAY(WIN_MAX)
  WIN_X         =NEW_ARRAY(WIN_MAX)
  WIN_Y         =NEW_ARRAY(WIN_MAX)
  WIN_SX        =NEW_ARRAY(WIN_MAX)
@@ -49,8 +53,10 @@
  WIN_HEIGHT    =NEW_ARRAY(WIN_MAX)
  WIN_AX        =NEW_ARRAY(WIN_MAX)
  WIN_AY        =NEW_ARRAY(WIN_MAX)
- WIN_CTLID     =NEW_ARRAY(WIN_MAX)
+ WIN_CID       =NEW_ARRAY(WIN_MAX)
+ WIN_NUCID     =NEW_ARRAY(WIN_MAX)
  WIN_PID       =NEW_ARRAY(WIN_MAX)
+ WIN_NUPID     =NEW_ARRAY(WIN_MAX)
  WIN_DATA#     =NEW_ARRAY#(WIN_MAX)
  WIN_DATA%     =NEW_ARRAY%(WIN_MAX)
  WIN_DATA$     =NEW_ARRAY$(WIN_MAX)
@@ -58,15 +64,159 @@
  WIN_PREV      =NEW_ARRAY(WIN_MAX)
  WIN_CHILD     =NEW_ARRAY(WIN_MAX)
  WIN_PARENT    =NEW_ARRAY(WIN_MAX)
- WIN_MSGBUF    =NEW_ARRAY(WIN_MAX*WIN_MSGMAX)
+ WIN_MSGBUF    =NEW_ARRAY2(WIN_MAX,WIN_MSGMAX)
+ WIN_FREE=1
+ OTW_INITLIST WIN_NEXT
 END
+'=======================
+'CONTROL
+'=======================
+VAR CTL_MAX
+VAR CTL_HANDLER_MAX
+DIM CTL_NAME$   [0]
+DIM CTL_CID     [0]
+DIM CTL_REF     [0]
+DIM CTL_NEXT    [0]
+DIM CTL_HANDLER$[0]
+VAR CTL_FREE
+VAR CTL_CIDCNT
+VAR CTL_PAINTHANDLER
+VAR CTL_WINDOWCID
+VAR CTL_WINDOWNUCID
+DEF OTW_CTL_INITARRAY
+ CTL_MAX=64
+ CTL_HANDLER_MAX=16
+ CTL_NAME$     =NEW_ARRAY$(CTL_MAX)
+ CTL_CID       =NEW_ARRAY(CTL_MAX)
+ CTL_NEXT      =NEW_ARRAY(CTL_MAX)
+ CTL_HANDLER$  =NEW_ARRAY2(CTL_MAX,CTL_HANDLER_MAX)
+ CTL_FREE=1
+ OTW_INITLIST CTL_NEXT
+ VAR E
+ NewControl "WINDOW" OUT CTL_WINDOWCID,CTL_WINDOWNUCID,E
+ CTL_PAINTHANDLER=0
+ E=SetControlPainter(CTL_WINDOWCID,CTL_WINDOWNUCID,"WindowPainter")
+END
+DEF OTW_INITLIST ARY[]
+ VAR I
+ FOR I=1TO LEN(ARY)-1
+  ARY[I]=I+1
+ NEXT
+END
+VAR WIN_NOALLOC
+VAR WIN_INVALIDID
+VAR CTL_NOALLOC
+VAR CTL_INVALIDID
+DEF OTW_INIT_ERR
+ WIN_NOALLOC=1
+ WIN_INVALIDID=2
+ CTL_NOALLOC=201
+ CTL_INVALIDID=202
+END
+COMMON DEF GetWindowControl OUT CID,NUCID
+ CID=CTL_WINDOWCID
+ NUCID=CTL_WINDOWNUCID
+END
+COMMON DEF GetWindowControlCID()
+ RETURN CTL_WINDOWCID
+END
+COMMON DEF GetWindowControlNUCID()
+ RETURN CTL_WINDOWNUCID
+END
+'CONTROL
+COMMON DEF NewControl NAME$ OUT CID,NUCID,ERR
+ IF!CTL_FREE THEN
+  ERR=CTL_NOALLOC
+  CID=-1:NUCID=0
+  RETURN
+ ENDIF
+ INC CTL_CIDCNT
+ ERR=0
+ NUCID=CTL_FREE
+ CID=CTL_CIDCNT
+ CTL_NEXT[NUCID]=0
+ CTL_FREE=CTL_NEXT[CTL_FREE]
+END
+COMMON DEF CheckControl(CID,NUCID)
+ RETURN CTL_CID[NUCID]==CID
+END
+COMMON DEF DeleteControl(CID,NUCID)
+ IF!CheckControl(CID,NUCID) THEN RETURN CTL_INVALIDID
+ CTL_NEXT[NUCID]=CTL_FREE
+ CTL_FREE=NUCID
+ CTL_CID[NUCID]=0
+ CTL_NAME$[NUCID]=""
+ VAR I
+ FOR I=0TO CTL_HANDLER_MAX-1
+  CTL_HANDLER$[I]=""
+ NEXT
+END
+COMMON DEF SetControlPainter(CID,NUCID,HANDLER$)
+ IF!CheckControl(CID,NUCID)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[NUCID,CTL_PAINTHANDLER]=HANDLER$
+ RETURN 0
+END
+'WINDOW
+VAR WIN_ROOTWID
+VAR WIN_ROOTNUWID
+COMMON DEF GetRootWID()
+ RETURN WIN_ROOTWID
+END
+COMMON DEF GetRootNUWID()
+ RETURN WIN_ROOTNUWID
+END
+
+COMMON DEF NewRootWindow CID,NUCID,NAME$,WIDTH,HEIGHT OUT WID,NUWID,ERR
+ IF!CheckControl(CID,NUCID)THEN
+  WID=0
+  NUWID=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ IF!WIN_FREE THEN
+  WID=0
+  NUWID=0
+  ERR=WIN_NOALLOC
+  RETURN
+ ENDIF
+ ERR=0
+ INC WIN_WIDCNT
+ NUWID=WIN_FREE
+ WIN_FREE=WIN_NEXT[WIN_FREE]
+ WID=WIN_WIDCNT
+ WIN_WID[NUWID]=WID
+ WIN_CID[NUWID]=CID
+ WIN_NUCID[NUWID]=NUCID
+ '
+ WIN_X[NUWID]=0
+ WIN_Y[NUWID]=0
+ '
+ WIN_WIDTH[NUWID]=WIDTH
+ WIN_HEIGHT[NUWID]=WIDTH
+ IF!WIN_ROOTNUWID THEN RETURN
+ VAR C=WIN_CHILD[WIN_ROOTNUWID]
+ WIN_CHILD[WIN_ROOTNUWID]=NUWID
+ WIN_NEXT[NUWID]=C
+ WIN_PREV[C]=NUWID
+END
+
+DEF WindowPainter WID,NUWID
+END
+VAR WIN_ROOTCID
+VAR WIN_ROOTNUCID
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
   OTW_INIT=TRUE
-  OTW_INITARRAY
+  OTW_WIN_INITARRAY
+  OTW_CTL_INITARRAY
+  OTW_INIT_ERR
+  
+  VAR E
+  NewControl "DESKTOP" OUT WIN_ROOTCID,WIN_ROOTNUCID,E
+  E=SetControlPainter(WIN_ROOTCID,WIN_ROOTNUCID,"DesktopPainter")
   ACLS
   XSCREEN 2
   GCLS RGB(0,0,255)
@@ -113,6 +263,7 @@
   ENDIF
  ENDIF
 END
-COMMON DEF OTWSAVE VER$
+DEF OTWSAVE VER$
  SAVE"PRG1:OTW"+VER$
 END
+
diff -u OTW.TXT OTW2
--- OTW.TXT
+++ OTW2
@@ -24,8 +24,7 @@
 DIM WIN_HEIGHT [0]
 DIM WIN_AX     [0]
 DIM WIN_AY     [0]
-DIM WIN_CID    [0]
-DIM WIN_NUCID  [0]
+DIM WIN_CTL    [0]
 DIM WIN_PID    [0]
 DIM WIN_NUPID  [0]
 DIM WIN_DATA#  [0]
@@ -35,36 +34,46 @@
 DIM WIN_PREV   [0]
 DIM WIN_CHILD  [0]
 DIM WIN_PARENT [0]
-DIM WIN_MSGBUF [0,0]
+'QUEUE
+DIM WIN_MSGS   [0]
+DIM WIN_MSGE   [0]
+DIM WIN_MSGBUF [0,0,0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
+VAR WIN_MSGARGSIZE
+VAR WIDSHIFT
+VAR NUWIDMASK
 DEF OTW_WIN_INITARRAY
  WIN_MAX=256
- WIN_MSGMAX=256
- WIN_NAME$     =NEW_ARRAY$(WIN_MAX)
- WIN_WID       =NEW_ARRAY(WIN_MAX)
- WIN_X         =NEW_ARRAY(WIN_MAX)
- WIN_Y         =NEW_ARRAY(WIN_MAX)
- WIN_SX        =NEW_ARRAY(WIN_MAX)
- WIN_SY        =NEW_ARRAY(WIN_MAX)
- WIN_EWIDTH    =NEW_ARRAY(WIN_MAX)
- WIN_EHEIGHT   =NEW_ARRAY(WIN_MAX)
- WIN_WIDTH     =NEW_ARRAY(WIN_MAX)
- WIN_HEIGHT    =NEW_ARRAY(WIN_MAX)
- WIN_AX        =NEW_ARRAY(WIN_MAX)
- WIN_AY        =NEW_ARRAY(WIN_MAX)
- WIN_CID       =NEW_ARRAY(WIN_MAX)
- WIN_NUCID     =NEW_ARRAY(WIN_MAX)
- WIN_PID       =NEW_ARRAY(WIN_MAX)
- WIN_NUPID     =NEW_ARRAY(WIN_MAX)
- WIN_DATA#     =NEW_ARRAY#(WIN_MAX)
- WIN_DATA%     =NEW_ARRAY%(WIN_MAX)
- WIN_DATA$     =NEW_ARRAY$(WIN_MAX)
- WIN_NEXT      =NEW_ARRAY(WIN_MAX)
- WIN_PREV      =NEW_ARRAY(WIN_MAX)
- WIN_CHILD     =NEW_ARRAY(WIN_MAX)
- WIN_PARENT    =NEW_ARRAY(WIN_MAX)
- WIN_MSGBUF    =NEW_ARRAY2(WIN_MAX,WIN_MSGMAX)
+ WIN_MSGMAX=64
+ WIN_MSGARGSIZE=3
+ WIDSHIFT=12
+ NUWIDMASK=4095
+ WIN_NAME$     =NewArray$(WIN_MAX)
+ WIN_WID       =NewArray(WIN_MAX)
+ WIN_X         =NewArray(WIN_MAX)
+ WIN_Y         =NewArray(WIN_MAX)
+ WIN_SX        =NewArray(WIN_MAX)
+ WIN_SY        =NewArray(WIN_MAX)
+ WIN_EWIDTH    =NewArray(WIN_MAX)
+ WIN_EHEIGHT   =NewArray(WIN_MAX)
+ WIN_WIDTH     =NewArray(WIN_MAX)
+ WIN_HEIGHT    =NewArray(WIN_MAX)
+ WIN_AX        =NewArray(WIN_MAX)
+ WIN_AY        =NewArray(WIN_MAX)
+ WIN_CTL       =NewArray(WIN_MAX)
+ WIN_PID       =NewArray(WIN_MAX)
+ WIN_NUPID     =NewArray(WIN_MAX)
+ WIN_DATA#     =NewArray#(WIN_MAX)
+ WIN_DATA%     =NewArray%(WIN_MAX)
+ WIN_DATA$     =NewArray$(WIN_MAX)
+ WIN_NEXT      =NewArray(WIN_MAX)
+ WIN_PREV      =NewArray(WIN_MAX)
+ WIN_CHILD     =NewArray(WIN_MAX)
+ WIN_PARENT    =NewArray(WIN_MAX)
+ WIN_MSGS      =NewArray(WIN_MAX)
+ WIN_MSGE      =NewArray(WIN_MAX)
+ WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
 END
@@ -77,25 +86,24 @@
 DIM CTL_CID     [0]
 DIM CTL_REF     [0]
 DIM CTL_NEXT    [0]
-DIM CTL_HANDLER$[0]
+DIM CTL_HANDLER$[0,0]
 VAR CTL_FREE
 VAR CTL_CIDCNT
 VAR CTL_PAINTHANDLER
-VAR CTL_WINDOWCID
-VAR CTL_WINDOWNUCID
+VAR CTL_WINDOWCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
- CTL_NAME$     =NEW_ARRAY$(CTL_MAX)
- CTL_CID       =NEW_ARRAY(CTL_MAX)
- CTL_NEXT      =NEW_ARRAY(CTL_MAX)
- CTL_HANDLER$  =NEW_ARRAY2(CTL_MAX,CTL_HANDLER_MAX)
+ CTL_NAME$     =NewArray$(CTL_MAX)
+ CTL_CID       =NewArray(CTL_MAX)
+ CTL_NEXT      =NewArray(CTL_MAX)
+ CTL_HANDLER$  =NewArray2$(CTL_MAX,CTL_HANDLER_MAX)
  CTL_FREE=1
  OTW_INITLIST CTL_NEXT
  VAR E
- NewControl "WINDOW" OUT CTL_WINDOWCID,CTL_WINDOWNUCID,E
+ NewControl "WINDOW" OUT CTL_WINDOWCTL,E
  CTL_PAINTHANDLER=0
- E=SetControlPainter(CTL_WINDOWCID,CTL_WINDOWNUCID,"WindowPainter")
+ E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -105,43 +113,38 @@
 END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
+VAR WIN_EVENTERR
 VAR CTL_NOALLOC
 VAR CTL_INVALIDID
 DEF OTW_INIT_ERR
  WIN_NOALLOC=1
  WIN_INVALIDID=2
+ WIN_EVENTERR=3
  CTL_NOALLOC=201
  CTL_INVALIDID=202
 END
-COMMON DEF GetWindowControl OUT CID,NUCID
- CID=CTL_WINDOWCID
- NUCID=CTL_WINDOWNUCID
+COMMON DEF GetWindowControl()
+ RETURN CTL_WINDOWCTL
 END
-COMMON DEF GetWindowControlCID()
- RETURN CTL_WINDOWCID
-END
-COMMON DEF GetWindowControlNUCID()
- RETURN CTL_WINDOWNUCID
-END
 'CONTROL
-COMMON DEF NewControl NAME$ OUT CID,NUCID,ERR
+COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
   ERR=CTL_NOALLOC
-  CID=-1:NUCID=0
+  CTL=0
   RETURN
  ENDIF
  INC CTL_CIDCNT
  ERR=0
- NUCID=CTL_FREE
- CID=CTL_CIDCNT
- CTL_NEXT[NUCID]=0
+ CTL=CIDNUCIDToCTL(CTL_FREE,CTL_CIDCNT)
+ CTL_NEXT[CTL AND 4095]=0
  CTL_FREE=CTL_NEXT[CTL_FREE]
 END
-COMMON DEF CheckControl(CID,NUCID)
- RETURN CTL_CID[NUCID]==CID
+COMMON DEF CheckControl(CTL)
+ RETURN CTL_CID[CTL AND 4095]==CTL>>12
 END
-COMMON DEF DeleteControl(CID,NUCID)
- IF!CheckControl(CID,NUCID) THEN RETURN CTL_INVALIDID
+COMMON DEF DeleteControl(CTL)
+ IF!CheckControl(CTL) THEN RETURN CTL_INVALIDID
+ VAR NUCID=CTL AND 4095,CID=CTL>>12
  CTL_NEXT[NUCID]=CTL_FREE
  CTL_FREE=NUCID
  CTL_CID[NUCID]=0
@@ -151,59 +154,84 @@
   CTL_HANDLER$[I]=""
  NEXT
 END
-COMMON DEF SetControlPainter(CID,NUCID,HANDLER$)
- IF!CheckControl(CID,NUCID)THEN RETURN CTL_INVALIDID
- CTL_HANDLER$[NUCID,CTL_PAINTHANDLER]=HANDLER$
+COMMON DEF SetControlPainter(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
  RETURN 0
 END
+DEF CIDNUCIDToCTL(CID,NUCID)
+ RETURN CID<<12OR NUCID
+END
 'WINDOW
-VAR WIN_ROOTWID
-VAR WIN_ROOTNUWID
-COMMON DEF GetRootWID()
- RETURN WIN_ROOTWID
+DEF WIDNUWIDToWND(WID,NUWID)
+ RETURN WID<<12OR NUWID
 END
-COMMON DEF GetRootNUWID()
- RETURN WIN_ROOTNUWID
+VAR WIN_ROOTWND
+COMMON DEF GetRootWND()
+ RETURN WIN_ROOTWND
 END
-
-COMMON DEF NewRootWindow CID,NUCID,NAME$,WIDTH,HEIGHT OUT WID,NUWID,ERR
- IF!CheckControl(CID,NUCID)THEN
-  WID=0
-  NUWID=0
+COMMON DEF CheckWindow(WND)
+ RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
+END
+COMMON DEF NewRootWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+ IF!CheckControl(CTL)THEN
+  WND=0
   ERR=CTL_INVALIDID
   RETURN
  ENDIF
  IF!WIN_FREE THEN
-  WID=0
-  NUWID=0
+  WND=0
   ERR=WIN_NOALLOC
   RETURN
  ENDIF
  ERR=0
  INC WIN_WIDCNT
+ VAR NUWID,WID
  NUWID=WIN_FREE
  WIN_FREE=WIN_NEXT[WIN_FREE]
  WID=WIN_WIDCNT
+ WND=WIDNUWIDToWND(WID,NUWID)
  WIN_WID[NUWID]=WID
- WIN_CID[NUWID]=CID
- WIN_NUCID[NUWID]=NUCID
+ WIN_CTL[NUWID]=CTL
  '
  WIN_X[NUWID]=0
  WIN_Y[NUWID]=0
  '
  WIN_WIDTH[NUWID]=WIDTH
  WIN_HEIGHT[NUWID]=WIDTH
- IF!WIN_ROOTNUWID THEN RETURN
- VAR C=WIN_CHILD[WIN_ROOTNUWID]
- WIN_CHILD[WIN_ROOTNUWID]=NUWID
+ VOID RepaintWindow(WND)
+ IF!WIN_ROOTWND THEN RETURN
+ VAR C=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
+ WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]=NUWID
  WIN_NEXT[NUWID]=C
  WIN_PREV[C]=NUWID
 END
-
-DEF WindowPainter WID,NUWID
+COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF(WIN_MSGS[NUWID]+1)MOD WIN_MSGMAX==WIN_MSGE[NUWID] THEN RETURN WIN_EVENTERR
+ WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],0]=TYPE
+ WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],1]=A1
+ WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],2]=A2
+ INC WIN_MSGS[NUWID]
+ IF WIN_MSGS[NUWID]>=WIN_MSGMAX THEN WIN_MSGS[NUWID]=0
+ RETURN 0
 END
-VAR WIN_ROOTCID
-VAR WIN_ROOTNUCID
+COMMON DEF RepaintWindow(WND)
+ RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
+END
+COMMON DEF UpdateWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
+ ?"A"
+ INC WIN_MSGE[NUWID]
+ IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
+ RETURN 0
+END
+DEF WindowPainter WND
+END
+VAR WIN_ROOTCTL
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   PrintConsole "====================="+LF$()
@@ -215,8 +243,9 @@
   OTW_INIT_ERR
   
   VAR E
-  NewControl "DESKTOP" OUT WIN_ROOTCID,WIN_ROOTNUCID,E
-  E=SetControlPainter(WIN_ROOTCID,WIN_ROOTNUCID,"DesktopPainter")
+  NewControl "DESKTOP" OUT WIN_ROOTCTL,E
+  E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
+  NewRootWindow WIN_ROOTCTL,"",400,240 OUT WIN_ROOTWND,E
   ACLS
   XSCREEN 2
   GCLS RGB(0,0,255)
@@ -233,7 +262,8 @@
 END
 COMMON DEF L_OTW
 ' ?OTW_INIT
-UpdateMouse
+ UpdateMouse
+ VOID UpdateWindow(WIN_ROOTWND)
 ' ExitProcess 1
 RETURN
 END
@@ -263,7 +293,7 @@
   ENDIF
  ENDIF
 END
-DEF OTWSAVE VER$
+COMMON DEF OTWSAVE VER$
  SAVE"PRG1:OTW"+VER$
 END
 
diff -u OTW.TXT OTW3
--- OTW.TXT
+++ OTW3
@@ -229,6 +229,14 @@
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  RETURN 0
 END
+''WINDOW GRAPHIC:
+COMMON DEF WindowGBegin(WND)
+ RETURN 0
+END
+COMMON DEF WindowGPUT WND,X,Y,COL
+END
+COMMON DEF WindowGFILL WND,X,Y,X2,Y2,COL
+END
 DEF WindowPainter WND
 END
 VAR WIN_ROOTCTL
@@ -297,3 +305,14 @@
  SAVE"PRG1:OTW"+VER$
 END
 
+DEF OTW_FONT
+DATA "A"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+END
diff -u OTW.TXT OTW4
--- OTW.TXT
+++ OTW4
@@ -34,6 +34,7 @@
 DIM WIN_PREV   [0]
 DIM WIN_CHILD  [0]
 DIM WIN_PARENT [0]
+DIM WIN_BEGIN  [0]
 'QUEUE
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
@@ -43,12 +44,18 @@
 VAR WIN_MSGARGSIZE
 VAR WIDSHIFT
 VAR NUWIDMASK
+'DRAW PAGE
+VAR OTW_DP
+'BUFFER PAGE
+VAR OTW_BP
 DEF OTW_WIN_INITARRAY
  WIN_MAX=256
  WIN_MSGMAX=64
  WIN_MSGARGSIZE=3
  WIDSHIFT=12
  NUWIDMASK=4095
+ OTW_DP=0
+ OTW_BP=1
  WIN_NAME$     =NewArray$(WIN_MAX)
  WIN_WID       =NewArray(WIN_MAX)
  WIN_X         =NewArray(WIN_MAX)
@@ -71,6 +78,7 @@
  WIN_PREV      =NewArray(WIN_MAX)
  WIN_CHILD     =NewArray(WIN_MAX)
  WIN_PARENT    =NewArray(WIN_MAX)
+ WIN_BEGIN     =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -196,11 +204,14 @@
  '
  WIN_X[NUWID]=0
  WIN_Y[NUWID]=0
+ 
+ WIN_AX[NUWID]=0
+ WIN_AY[NUWID]=0
  '
  WIN_WIDTH[NUWID]=WIDTH
  WIN_HEIGHT[NUWID]=WIDTH
  VOID RepaintWindow(WND)
- IF!WIN_ROOTWND THEN RETURN
+ IF!WIN_ROOTWND THEN WIN_NEXT[NUWID]=0RETURN
  VAR C=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
  WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]=NUWID
  WIN_NEXT[NUWID]=C
@@ -225,20 +236,63 @@
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  ?"A"
+ VAR NUCID=WIN_CTL[NUWID] AND 4095
+ VAR S=WIN_MSGS[NUWID]
+ CALL CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]],WND,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  RETURN 0
 END
-''WINDOW GRAPHIC:
-COMMON DEF WindowGBegin(WND)
+''WINDOW GRAPHIC
+COMMON DEF GBEGINWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
+ WIN_BEGIN[NUWID]=TRUE
+ VAR AX=WIN_AX[NUWID]
+ VAR AY=WIN_AY[NUWID]
+ VAR W=WIN_WIDTH[NUWID]
+ VAR H=WIN_HEIGHT[NUWID]
+ GPAGE OTW_DP,OTW_BP
+ GCLIP 1,AX,AY,AX+W,AY+H
  RETURN 0
 END
-COMMON DEF WindowGPUT WND,X,Y,COL
+COMMON DEF GENDWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF!WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
+ 'ごうせい
+ VAR PNUWID=WIN_NEXT[NUWID]
+ WHILE TRUE
+  IF!PNUWID THEN
+   PNUWID=WIN_PARENT[PNUWID]
+   IF!PNUWID THEN BREAK
+   PNUWID=WIN_NEXT[PNUWID]
+   CONTINUE
+  ENDIF
+  GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
+  PNUWID=WIN_NEXT[PNUWID]
+ WEND
+ GPAGE OTW_DP,OTW_DP
+ VAR AX=WIN_AX[NUWID]
+ VAR AY=WIN_AY[NUWID]
+ VAR W=WIN_WIDTH[NUWID]
+ VAR H=WIN_HEIGHT[NUWID]
+ GCOPY OTW_BP,0,0,W,H,AX,AY,0
+ RETURN 0
 END
-COMMON DEF WindowGFILL WND,X,Y,X2,Y2,COL
+COMMON DEF GPSETWindow WND,X,Y,COL
+ GPSET X,Y,COL
 END
-DEF WindowPainter WND
+COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
+ GFILL X,Y,X2,Y2,COL
 END
+DEF DesktopPainter WND,A1,A2
+ VAR E=GBEGINWindow(WND)
+ IF E THEN RETURN
+ GFILLWindow WND,0,0,32,32,RGB(255,0,0)
+ E=GENDWindow(WND)
+END
 VAR WIN_ROOTCTL
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
@@ -307,12 +361,175 @@
 
 DEF OTW_FONT
 DATA "A"
+DATA "000F0000"
+DATA "00F0F000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0FFFFF00"
+DATA "0F000F00"
+DATA "0F000F00"
 DATA "00000000"
+DATA "B"
+DATA "0FFFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0FFFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0FFFF000"
 DATA "00000000"
+DATA "C"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000F00"
+DATA "00FFF000"
 DATA "00000000"
+DATA "D"
+DATA "0FFF0000"
+DATA "0F00F000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F00F000"
+DATA "0FFF0000"
 DATA "00000000"
+DATA "E"
+DATA "0FFFFF00"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0FFFF000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0FFFFF00"
 DATA "00000000"
+DATA "F"
+DATA "0FFFFF00"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0FFFF000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000000"
 DATA "00000000"
+DATA "G"
+DATA "00FFFF00"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F0FFF00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFFF00"
 DATA "00000000"
+DATA "H"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0FFFFF00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
 DATA "00000000"
+DATA "I"
+DATA "00FFF000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "00FFF000"
+DATA "00000000"
+DATA "J"
+DATA "000FFF00"
+DATA "0000F000"
+DATA "0000F000"
+DATA "0000F000"
+DATA "0000F000"
+DATA "0F00F000"
+DATA "00FF0000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "B"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+DATA "00000000"
+
 END
diff -u OTW.TXT OTW5
--- OTW.TXT
+++ OTW5
@@ -90,11 +90,12 @@
 '=======================
 VAR CTL_MAX
 VAR CTL_HANDLER_MAX
-DIM CTL_NAME$   [0]
-DIM CTL_CID     [0]
-DIM CTL_REF     [0]
-DIM CTL_NEXT    [0]
-DIM CTL_HANDLER$[0,0]
+DIM CTL_NAME$    [0]
+DIM CTL_CID      [0]
+DIM CTL_REF      [0]
+DIM CTL_NEXT     [0]
+DIM CTL_PARENTCTL[0]
+DIM CTL_HANDLER$ [0,0]
 VAR CTL_FREE
 VAR CTL_CIDCNT
 VAR CTL_PAINTHANDLER
@@ -105,6 +106,7 @@
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_CID       =NewArray(CTL_MAX)
  CTL_NEXT      =NewArray(CTL_MAX)
+ CTL_PARENTCTL =NewArray(CTL_MAX)
  CTL_HANDLER$  =NewArray2$(CTL_MAX,CTL_HANDLER_MAX)
  CTL_FREE=1
  OTW_INITLIST CTL_NEXT
@@ -144,9 +146,25 @@
  INC CTL_CIDCNT
  ERR=0
  CTL=CIDNUCIDToCTL(CTL_FREE,CTL_CIDCNT)
- CTL_NEXT[CTL AND 4095]=0
  CTL_FREE=CTL_NEXT[CTL_FREE]
+ CTL_CID[CTL AND 4095]=CTL_CIDCNT
+ CTL_NEXT[CTL AND 4095]=0
 END
+COMMON DEF ExtendControl NAME$,PARENT OUT CTL,ERR
+ IF!CheckControl(PARENT)THEN
+  CTL=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ NewControl NAME$ OUT CTL,ERR
+ IF ERR THEN RETURN
+ VAR NUCID=CTL AND 4095
+ CTL_PARENTCTL[NUCID]=PARENT
+ VAR I,P=PARENT AND 4095
+ FOR I=0TO CTL_HANDLER_MAX-1
+  CTL_HANDLER$[NUCID,I]=CTL_HANDLER$[P,I]
+ NEXT
+END
 COMMON DEF CheckControl(CTL)
  RETURN CTL_CID[CTL AND 4095]==CTL>>12
 END
@@ -181,7 +199,9 @@
 COMMON DEF CheckWindow(WND)
  RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
 END
-COMMON DEF NewRootWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+VAR WIN_TopLevelX
+VAR WIN_TopLevelY
+COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
   ERR=CTL_INVALIDID
@@ -205,17 +225,20 @@
  WIN_X[NUWID]=0
  WIN_Y[NUWID]=0
  
- WIN_AX[NUWID]=0
- WIN_AY[NUWID]=0
+ WIN_AX[NUWID]=WIN_TopLevelX
+ WIN_AY[NUWID]=WIN_TOPLEVELY
  '
  WIN_WIDTH[NUWID]=WIDTH
  WIN_HEIGHT[NUWID]=WIDTH
  VOID RepaintWindow(WND)
  IF!WIN_ROOTWND THEN WIN_NEXT[NUWID]=0RETURN
  VAR C=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
+ WIN_PARENT[NUWID]=WIN_ROOTWND  AND NUWIDMASK
  WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]=NUWID
  WIN_NEXT[NUWID]=C
  WIN_PREV[C]=NUWID
+ WIN_TopLevelX=WIN_TopLevelX+8
+ WIN_TopLevelY=WIN_TopLevelY+8
 END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -235,9 +258,9 @@
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
- ?"A"
  VAR NUCID=WIN_CTL[NUWID] AND 4095
  VAR S=WIN_MSGS[NUWID]
+ ?CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]]
  CALL CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]],WND,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
@@ -254,7 +277,8 @@
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
  GPAGE OTW_DP,OTW_BP
- GCLIP 1,AX,AY,AX+W,AY+H
+ GCLIP 1,0,0,W,H
+ GCLS
  RETURN 0
 END
 COMMON DEF GENDWindow(WND)
@@ -262,23 +286,39 @@
  VAR NUWID=WND AND NUWIDMASK
  IF!WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
  'ごうせい
- VAR PNUWID=WIN_NEXT[NUWID]
+ WIN_PARENT[0]=0
+ WIN_NEXT[0]=0
+ VAR AX=WIN_AX[NUWID]
+ VAR AY=WIN_AY[NUWID]
+ VAR W=WIN_WIDTH[NUWID]
+ VAR H=WIN_HEIGHT[NUWID]
+ VAR PNUWID
+ IF WIN_CHILD[NUWID]THEN
+  PNUWID=WIN_CHILD[NUWID]
+  WHILE PNUWID
+   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
+   PNUWID=WIN_NEXT[PNUWID]
+  WEND
+ ENDIF
+ VAR _NUWID=NUWID
+ PNUWID=WIN_NEXT[NUWID]
  WHILE TRUE
   IF!PNUWID THEN
-   PNUWID=WIN_PARENT[PNUWID]
+   PNUWID=WIN_PARENT[_NUWID]
    IF!PNUWID THEN BREAK
+   _NUWID=PNUWID
    PNUWID=WIN_NEXT[PNUWID]
    CONTINUE
   ENDIF
-  GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
+  GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
+  _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
+ GCLIP 1
  GPAGE OTW_DP,OTW_DP
- VAR AX=WIN_AX[NUWID]
- VAR AY=WIN_AY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+?AX,AY,W,H
  GCOPY OTW_BP,0,0,W,H,AX,AY,0
+DIALOG "A"
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
@@ -287,13 +327,25 @@
 COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
  GFILL X,Y,X2,Y2,COL
 END
+COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
+ GBOX X,Y,X2,Y2,COL
+END
+COMMON DEF GPRINTWindow WND,X,Y,STR$,FWIDTH,FHEIGHT
+ IF FWIDTH==8&&FHEIGHT==8THEN
+  
+ ENDIF
+END
 DEF DesktopPainter WND,A1,A2
  VAR E=GBEGINWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
  E=GENDWindow(WND)
 END
+DEF WindowPainter WND,A1,A2
+END
 VAR WIN_ROOTCTL
+  VAR TSTWND,TSTCTL
+  VAR TSTWND2
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   PrintConsole "====================="+LF$()
@@ -307,7 +359,11 @@
   VAR E
   NewControl "DESKTOP" OUT WIN_ROOTCTL,E
   E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
-  NewRootWindow WIN_ROOTCTL,"",400,240 OUT WIN_ROOTWND,E
+  NewTopLevelWindow WIN_ROOTCTL,"",400,240 OUT WIN_ROOTWND,E
+  ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
+  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
+  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
+  E=SetControlPainter(TSTCTL,"HELLOPainter")
   ACLS
   XSCREEN 2
   GCLS RGB(0,0,255)
@@ -322,10 +378,19 @@
  ENDIF
 RETURN
 END
+COMMON DEF HELLOPainter WND,A1,A2
+ VAR E=GBEGINWindow(WND)
+ IF E THEN RETURN
+ GFILLWindow WND,0,0,64,64,RGB(255,255,0)
+ GBOXWindow WND,0,0,64,64,RGB(128,128,128)
+ E=GENDWindow(WND)
+END
 COMMON DEF L_OTW
 ' ?OTW_INIT
  UpdateMouse
+ VOID UpdateWindow(TSTWND)
  VOID UpdateWindow(WIN_ROOTWND)
+ VOID UpdateWindow(TSTWND2)
 ' ExitProcess 1
 RETURN
 END
@@ -359,7 +424,9 @@
  SAVE"PRG1:OTW"+VER$
 END
 
-DEF OTW_FONT
+DEF OTW_LOADFONT
+' READ C$
+ 
 DATA "A"
 DATA "000F0000"
 DATA "00F0F000"
@@ -450,25 +517,152 @@
 DATA "0F00F000"
 DATA "00FF0000"
 DATA "00000000"
-DATA "B"
+DATA "K"
+DATA "0F000F00"
+DATA "0F00F000"
+DATA "0F0F0000"
+DATA "0FF00000"
+DATA "0F0F0000"
+DATA "0F00F000"
+DATA "0F000F00"
 DATA "00000000"
+DATA "L"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0FFFFF00"
 DATA "00000000"
+DATA "M"
+DATA "0F000F00"
+DATA "0FF0FF00"
+DATA "0F0F0F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
 DATA "00000000"
+DATA "N"
+DATA "0F000F00"
+DATA "0FF00F00"
+DATA "0F0F0F00"
+DATA "0F00FF00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
 DATA "00000000"
+DATA "O"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
 DATA "00000000"
+DATA "P"
+DATA "0FFFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0FFFF000"
+DATA "0F000000"
+DATA "0F000000"
+DATA "0F000000"
 DATA "00000000"
+DATA "Q"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F0F0F00"
+DATA "0F00F000"
+DATA "00FF0F00"
 DATA "00000000"
+DATA "R"
+DATA "0FFFF000"
+DATA "0R000F00"
+DATA "0F000F00"
+DATA "0FFFF000"
+DATA "0F0F0000"
+DATA "0F00F000"
+DATA "0F000F00"
 DATA "00000000"
-DATA "B"
+DATA "S"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000000"
+DATA "00FFF000"
+DATA "00000F00"
+DATA "0F000F00"
+DATA "00FFF000"
 DATA "00000000"
+DATA "T"
+DATA "0FFFFF00"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
 DATA "00000000"
+DATA "U"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
 DATA "00000000"
+DATA "V"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00F0F000"
+DATA "00F0F000"
+DATA "000F0000"
+DATA "000F0000"
 DATA "00000000"
+DATA "W"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "0F0F0F00"
+DATA "0FF0FF00"
+DATA "0F000F00"
 DATA "00000000"
+DATA "X"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00F0F000"
+DATA "000F0000"
+DATA "00F0F000"
+DATA "0F000F00"
+DATA "0F000F00"
 DATA "00000000"
+DATA "Y"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00F0F000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
 DATA "00000000"
+DATA "Z"
+DATA "0FFFFF00"
+DATA "00000F00"
+DATA "0000F000"
+DATA "000F0000"
+DATA "00F00000"
+DATA "0F000000"
+DATA "0FFFFF00"
 DATA "00000000"
-DATA "B"
+DATA "END"
+DATA "a"
 DATA "00000000"
 DATA "00000000"
 DATA "00000000"
@@ -477,59 +671,5 @@
 DATA "00000000"
 DATA "00000000"
 DATA "00000000"
-DATA "B"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "B"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "B"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "B"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "B"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "B"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
 
 END
diff -u OTW.TXT OTW6
--- OTW.TXT
+++ OTW6
@@ -8,6 +8,9 @@
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
+VAR OTW_FNT1[0]'0x20~0x7F
+VAR OTW_FNT2[0]'
+VAR OTW_FNT3[0]'
 '=======================
 '        WINDOW         
 '=======================
@@ -16,10 +19,6 @@
 DIM WIN_WID    [0]
 DIM WIN_X      [0]
 DIM WIN_Y      [0]
-DIM WIN_SX     [0]
-DIM WIN_SY     [0]
-DIM WIN_EWIDTH [0]
-DIM WIN_EHEIGHT[0]
 DIM WIN_WIDTH  [0]
 DIM WIN_HEIGHT [0]
 DIM WIN_AX     [0]
@@ -35,6 +34,7 @@
 DIM WIN_CHILD  [0]
 DIM WIN_PARENT [0]
 DIM WIN_BEGIN  [0]
+DIM WIN_SP     [0]
 'QUEUE
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
@@ -46,6 +46,8 @@
 VAR NUWIDMASK
 'DRAW PAGE
 VAR OTW_DP
+'SHOW PAGE
+VAR OTW_SP
 'BUFFER PAGE
 VAR OTW_BP
 DEF OTW_WIN_INITARRAY
@@ -54,16 +56,10 @@
  WIN_MSGARGSIZE=3
  WIDSHIFT=12
  NUWIDMASK=4095
- OTW_DP=0
- OTW_BP=1
  WIN_NAME$     =NewArray$(WIN_MAX)
  WIN_WID       =NewArray(WIN_MAX)
  WIN_X         =NewArray(WIN_MAX)
  WIN_Y         =NewArray(WIN_MAX)
- WIN_SX        =NewArray(WIN_MAX)
- WIN_SY        =NewArray(WIN_MAX)
- WIN_EWIDTH    =NewArray(WIN_MAX)
- WIN_EHEIGHT   =NewArray(WIN_MAX)
  WIN_WIDTH     =NewArray(WIN_MAX)
  WIN_HEIGHT    =NewArray(WIN_MAX)
  WIN_AX        =NewArray(WIN_MAX)
@@ -79,6 +75,7 @@
  WIN_CHILD     =NewArray(WIN_MAX)
  WIN_PARENT    =NewArray(WIN_MAX)
  WIN_BEGIN     =NewArray(WIN_MAX)
+ WIN_SP        =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -99,6 +96,8 @@
 VAR CTL_FREE
 VAR CTL_CIDCNT
 VAR CTL_PAINTHANDLER
+VAR CTL_LBTNUPHANDLER
+VAR CTL_LBTNDWNHANDLER
 VAR CTL_WINDOWCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
@@ -113,7 +112,10 @@
  VAR E
  NewControl "WINDOW" OUT CTL_WINDOWCTL,E
  CTL_PAINTHANDLER=0
+ CTL_LBTNDWNHANDLER=1
+ CTL_LBTNUPHANDLER=2
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
+ E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -185,6 +187,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlLMouseUpHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_LBTNUPHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
@@ -192,6 +199,9 @@
 DEF WIDNUWIDToWND(WID,NUWID)
  RETURN WID<<12OR NUWID
 END
+DEF NUWIDToWND(NUWID)
+ RETURN WIN_WID[NUWID]<<12OR NUWID
+END
 VAR WIN_ROOTWND
 COMMON DEF GetRootWND()
  RETURN WIN_ROOTWND
@@ -201,6 +211,7 @@
 END
 VAR WIN_TopLevelX
 VAR WIN_TopLevelY
+VAR OTW_TOPLEVELCNT
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -213,6 +224,7 @@
   RETURN
  ENDIF
  ERR=0
+ INC OTW_TOPLEVELCNT
  INC WIN_WIDCNT
  VAR NUWID,WID
  NUWID=WIN_FREE
@@ -221,29 +233,127 @@
  WND=WIDNUWIDToWND(WID,NUWID)
  WIN_WID[NUWID]=WID
  WIN_CTL[NUWID]=CTL
+ WIN_NAME$[NUWID]=NAME$
  '
  WIN_X[NUWID]=0
  WIN_Y[NUWID]=0
  
+ WIN_AX[NUWID]=0
+ WIN_AY[NUWID]=0
  WIN_AX[NUWID]=WIN_TopLevelX
  WIN_AY[NUWID]=WIN_TOPLEVELY
  '
  WIN_WIDTH[NUWID]=WIDTH
- WIN_HEIGHT[NUWID]=WIDTH
+ WIN_HEIGHT[NUWID]=HEIGHT
+ WIN_NEXT[NUWID]=0
+ GCLIP 1,0,240,400,480
  VOID RepaintWindow(WND)
- IF!WIN_ROOTWND THEN WIN_NEXT[NUWID]=0RETURN
- VAR C=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
- WIN_PARENT[NUWID]=WIN_ROOTWND  AND NUWIDMASK
- WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]=NUWID
- WIN_NEXT[NUWID]=C
- WIN_PREV[C]=NUWID
+ IF!WIN_ROOTWND THEN
+  GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
+  GCLIP 1,0,0,400,240
+' SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
+' SPSHOW SP
+' SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],1023
+  RETURN
+ ENDIF
+ 
+ VAR SP=OTW_TOPLEVELCNT,FRAME
+' IF SPVAR(SP,0)THEN
+  WHILE SPVAR(SP,0)
+   SP=(SP+1)MOD 255
+  WEND
+  FRAME=SP+1
+  WHILE SPVAR(FRAME,0)
+   FRAME=(FRAME+1)MOD 255
+  WEND
+' ENDIF
+ WIN_SP[NUWID]=SP OR FRAME<<10
+ VAR ROOTNUWID=WIN_ROOTWND AND NUWIDMASK
+ VAR C=WIN_CHILD[ROOTNUWID],N
+ WIN_PARENT[NUWID]=ROOTNUWID
+ IF!C THEN
+  WIN_CHILD[ROOTNUWID]=NUWID
+ ELSE
+  N=C
+  WHILE 1
+   C=N
+   N=WIN_NEXT[N]
+   IF!N THEN
+    WIN_NEXT[C]=NUWID
+    WIN_PREV[NUWID]=C
+    BREAK
+   ENDIF
+  WEND
+ ENDIF
  WIN_TopLevelX=WIN_TopLevelX+8
  WIN_TopLevelY=WIN_TopLevelY+8
+ WIN_TopLevelX=WIN_TopLevelX+8
+ WIN_TopLevelY=WIN_TopLevelY+8
+ WIN_AX[NUWID]=WIN_TopLevelX
+ WIN_AY[NUWID]=WIN_TOPLEVELY
+ GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
+ GCLIP 1,0,0,400,240
+ SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+ SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
+ SPSHOW SP
+ SPSET FRAME,0
+ SPSCALE FRAME,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
+ SPOFS FRAME,WIN_AX[NUWID]-1,WIN_AY[NUWID]-9,0
+ SPVAR SP,0,WND
+ SPVAR FRAME,0,WND
+ SPCOLOR FRAME,RGB(128,0,0,255)
+ SPCOL FRAME,0,0,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
+ OTW_SPSORT
 END
+COMMON DEF OTW_SPSORT
+ VAR I,Z=0
+ IF OTW_TOPLEVELCNT-1THEN Z=(1023+255)/(OTW_TOPLEVELCNT-1)
+ VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
+'IF!WIN_NEXT[NUWID]THEN I=
+ I=1023+255
+ WHILE NUWID
+  I=I-Z
+  SPOFS WIN_SP[NUWID]AND 1023,,,-255+I
+  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
+  NUWID=WIN_NEXT[NUWID]
+ WEND
+END
+COMMON DEF FrontWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF!WIN_NEXT[NUWID]THEN VOID RepaintWindow(WND) RETURN 0
+ VAR N,C=WIN_NEXT[NUWID]
+  N=C
+  WHILE 1
+   C=N
+   N=WIN_NEXT[N]
+   IF!N THEN
+    WIN_NEXT[C]=NUWID
+    WIN_PREV[NUWID]=C
+    WIN_NEXT[NUWID]=0
+    IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
+     VAR Z,Z2,S
+     SPOFS WIN_SP[NUWID]AND 1023OUT S,S,Z
+     SPOFS WIN_SP[C]AND 1023OUT S,S,Z2
+     SPOFS WIN_SP[NUWID]AND 1023,,,Z2
+     SPOFS WIN_SP[C]AND 1023,,,Z
+     SPOFS WIN_SP[NUWID]>>10,,,Z2+1'1
+     SPOFS WIN_SP[C]>>10,,,Z+1'1
+    ENDIF
+    BREAK
+   ENDIF
+  WEND
+ VOID RepaintWindow(WND)
+ GCLIP 1,0,240,400,480
+ GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
+ GCLIP 1,0,0,400,240
+ RETURN 0
+END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF(WIN_MSGS[NUWID]+1)MOD WIN_MSGMAX==WIN_MSGE[NUWID] THEN RETURN WIN_EVENTERR
+ IF!LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,TYPE])THEN RETURN 0
  WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],0]=TYPE
  WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],1]=A1
  WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],2]=A2
@@ -254,13 +364,19 @@
 COMMON DEF RepaintWindow(WND)
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
+COMMON DEF LMouseUpWindow(WND)
+ RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX,OTW_MOUSEY)
+END
+COMMON DEF LMouseDownWindow(WND)
+ RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX,OTW_MOUSEY)
+END
 COMMON DEF UpdateWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  VAR NUCID=WIN_CTL[NUWID] AND 4095
- VAR S=WIN_MSGS[NUWID]
- ?CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]]
+ VAR S=WIN_MSGE[NUWID]
+ ?"HND";CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]]
  CALL CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]],WND,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
@@ -276,7 +392,7 @@
  VAR AY=WIN_AY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
- GPAGE OTW_DP,OTW_BP
+ GPAGE OTW_SP,OTW_BP
  GCLIP 1,0,0,W,H
  GCLS
  RETURN 0
@@ -288,6 +404,7 @@
  'ごうせい
  WIN_PARENT[0]=0
  WIN_NEXT[0]=0
+ WIN_BEGIN[NUWID]=FALSE
  VAR AX=WIN_AX[NUWID]
  VAR AY=WIN_AY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
@@ -296,7 +413,8 @@
  IF WIN_CHILD[NUWID]THEN
   PNUWID=WIN_CHILD[NUWID]
   WHILE PNUWID
-   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
+GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID]-AX,WIN_AY[PNUWID]-AY,0
+'   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
    PNUWID=WIN_NEXT[PNUWID]
   WEND
  ENDIF
@@ -310,15 +428,21 @@
    PNUWID=WIN_NEXT[PNUWID]
    CONTINUE
   ENDIF
-  GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
+  ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
+'  
+  IF WIN_AX[PNUWID]THEN
+'   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],-WIN_AX[PNUWID],-WIN_AY[PNUWID],0
+  ELSE
+   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
+  ENDIF
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
- GCLIP 1
- GPAGE OTW_DP,OTW_DP
+ GCLIP 1,0,0,400,240
+ GPAGE OTW_SP,OTW_DP
 ?AX,AY,W,H
  GCOPY OTW_BP,0,0,W,H,AX,AY,0
-DIALOG "A"
+'DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
@@ -330,12 +454,24 @@
 COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
  GBOX X,Y,X2,Y2,COL
 END
-COMMON DEF GPRINTWindow WND,X,Y,STR$,FWIDTH,FHEIGHT
- IF FWIDTH==8&&FHEIGHT==8THEN
-  
- ENDIF
+COMMON DEF GPRINTWindow WND,X,Y,STR$
+ VAR L=LEN(STR$)-1,C$,A,BX,BY,I
+ FOR I=0TO L
+  C$=MID$(STR$,I,1)
+  A=ASC(C$)
+  IF A<=&H7F&&A>=&H20THEN
+   A=A-&H20
+   BX=A*8
+   BY=BX/(512-8)
+   GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
+  ELSE
+   GFILL X,Y,X+7,Y+7,-1
+  ENDIF
+  X=X+8
+ NEXT
 END
 DEF DesktopPainter WND,A1,A2
+'RETURN
  VAR E=GBEGINWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
@@ -343,11 +479,34 @@
 END
 DEF WindowPainter WND,A1,A2
 END
+DEF WindowLMouseUP WND,A1,A2
+ VAR E=FrontWindow(WND)
+END
+DEF OTW_INITSP
+ GFILL 408,0,416,8,-1
+ SPDEF 0,408,0,1,1,1
+END
 VAR WIN_ROOTCTL
-  VAR TSTWND,TSTCTL
-  VAR TSTWND2
+VAR TSTWND,TSTCTL
+VAR TSTWND2
+
+VAR OTW_MOUSELBTN
+VAR OTW_MOUSERBTN
+VAR OTW_LMOUSEDWN
+VAR OTW_LMOUSEUP
+VAR OTW_RMOUSEDWN
+VAR OTW_RMOUSEUP
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  'ACLS
+  OTW_DP=4
+  OTW_SP=0
+  OTW_BP=1
+  GPAGE OTW_SP,OTW_DP
+  'GCLS' RGB(0,0,255)
+  OTW_INITSP
+  XSCREEN 2
+
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
@@ -355,52 +514,108 @@
   OTW_WIN_INITARRAY
   OTW_CTL_INITARRAY
   OTW_INIT_ERR
-  
   VAR E
   NewControl "DESKTOP" OUT WIN_ROOTCTL,E
   E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
-  NewTopLevelWindow WIN_ROOTCTL,"",400,240 OUT WIN_ROOTWND,E
+  NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
-  ACLS
-  XSCREEN 2
-  GCLS RGB(0,0,255)
- ' VISIBLE 0,1,1,1
+  OTW_LOADFONT
+  GCLIP 1,0,0,400,240
+  VISIBLE 1,1,1,1
   OTW_MOUSEX=(400-16)/2
   OTW_MOUSEY=(240-16)/2
   OTW_MOUSEX#=(400-16)/2
   OTW_MOUSEY#=(240-16)/2
- '290
+  
+  OTW_MOUSELBTN=32OR 256
+  OTW_MOUSERBTN=16OR 512
+  OTW_LMOUSEDWN=1
+  OTW_LMOUSEUP =2
+  OTW_RMOUSEDWN=4
+  OTW_RMOUSEUP =8
+  
+  '290
   SPSET OTW_MOUSESP,290
-  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
+  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
+  SPHOME OTW_MOUSESP,0,0
+  SPCOL 0,0,0,1,1
  ENDIF
 RETURN
 END
 COMMON DEF HELLOPainter WND,A1,A2
  VAR E=GBEGINWindow(WND)
  IF E THEN RETURN
- GFILLWindow WND,0,0,64,64,RGB(255,255,0)
+ GFILLWindow WND,0,0,64,64,RGB(0,0,0)
  GBOXWindow WND,0,0,64,64,RGB(128,128,128)
+ GPRINTWindow WND,6,1,CHR$(ASC("A")+(WND AND 4095))+"HELLOOOOOOOO"
  E=GENDWindow(WND)
 END
+VAR OTW_OLDMOUSEX
+VAR OTW_OLDMOUSEY
+DEF OTWGetOvMouseNUWID()
+ RETURN RGBToShort(GSPOIT(OTW_MOUSEX,OTW_MOUSEY+240))
+END
+VAR OTW_OLDLMOUSE
+VAR OTW_OLDRMOUSE
 COMMON DEF L_OTW
-' ?OTW_INIT
+ VAR MOVEMOUSE
  UpdateMouse
+ IF OTW_MOUSEX!=OTW_OLDMOUSEX THEN MOVEMOUSE=1
+ IF OTW_MOUSEY!=OTW_OLDMOUSEY THEN MOVEMOUSE=1
+ VAR NUWID,E
+ VAR BTN=UpdateButton()
+ IF MOVEMOUSE||BTN THEN
+  NUWID=OTWGetOvMouseNUWID()
+ ENDIF
+ IF BTN AND OTW_LMOUSEUP THEN
+  E=LMouseUpWindow(NUWIDToWND(NUWID))
+  ?SPHITSP(OTW_MOUSESP)
+  IF WIN_SP[NUWID]THEN
+   
+  ENDIF
+ ENDIF
+ OTW_OLDMOUSEX=OTW_MOUSEX
+ OTW_OLDMOUSEY=OTW_MOUSEY
  VOID UpdateWindow(TSTWND)
  VOID UpdateWindow(WIN_ROOTWND)
  VOID UpdateWindow(TSTWND2)
 ' ExitProcess 1
 RETURN
 END
-VAR OTW_MOUSEOLDX,OTW_MOUSEOLDY,OTW_MOUSEOLDST
+DEF UpdateButton()
+ VAR B=BUTTON()
+ VAR RET=0
+ IF B AND OTW_MOUSELBTN THEN
+  IF!OTW_OLDLMOUSE THEN RET=OTW_LMOUSEDWN
+  OTW_OLDLMOUSE=1
+ ELSE
+  IF OTW_OLDLMOUSE THEN RET=OTW_LMOUSEUP
+  OTW_OLDLMOUSE=0
+ ENDIF
+ IF B AND OTW_MOUSERBTN THEN
+  IF!OTW_OLDRMOUSE THEN RET=OTW_RMOUSEDWN
+  OTW_OLDRMOUSE=1
+ ELSE
+  IF OTW_OLDRMOUSE THEN RET=OTW_RMOUSEUP
+  OTW_OLDRMOUSE=0
+ ENDIF
+ RETURN RET
+END
+VAR OTW_MOUSEOLDX,OTW_MOUSEOLDY
+VAR OTW_MOUSEOLDST
 COMMON DEF UpdateMouse
  VAR S,X,Y
  TOUCH OUT S,X,Y
  IF OTW_MOUSEOLDST AND S THEN
   OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
   OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
+  IF OTW_MOUSEX<0THEN OTW_MOUSEX=0
+  IF OTW_MOUSEY<0THEN OTW_MOUSEY=0
+  IF OTW_MOUSEX>=400THEN OTW_MOUSEX=399
+  IF OTW_MOUSEY>=240THEN OTW_MOUSEY=239
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
    OTW_MOUSEX#=OTW_MOUSEX
    OTW_MOUSEY#=OTW_MOUSEY
@@ -414,6 +629,10 @@
   IF X#!=0 OR Y#!=0 THEN
    OTW_MOUSEX#=OTW_MOUSEX#+X#/2
    OTW_MOUSEY#=OTW_MOUSEY#-Y#/2
+   IF OTW_MOUSEX#<0THEN OTW_MOUSEX#=0
+   IF OTW_MOUSEY#<0THEN OTW_MOUSEY#=0
+   IF OTW_MOUSEX#>=400THEN OTW_MOUSEX#=399
+   IF OTW_MOUSEY#>=240THEN OTW_MOUSEY#=239
    SPOFS OTW_MOUSESP,OTW_MOUSEX#,OTW_MOUSEY#
    OTW_MOUSEX=OTW_MOUSEX#
    OTW_MOUSEY=OTW_MOUSEY#
@@ -423,10 +642,39 @@
 COMMON DEF OTWSAVE VER$
  SAVE"PRG1:OTW"+VER$
 END
-
+'DEF OTW_LOADMOUSE
+' 
+'END
 DEF OTW_LOADFONT
-' READ C$
- 
+ VAR T$=" !"+CHR$(34)+"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghiijklmnopqrstuvwxyz{|}~¢£¦§¨¨©®±´¶ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĊċČčĎďĒēĔĕĖėĘęĞğĠġĢģĦħĪīĮįİıĲĳĶķĹĺĻļĽľŁłŃńŅņŇňŐőŒœŔŕŘřŚśŞşŠšŤťŪūŮůŰűŲųŸŹźŻżŽžƒǅǆǲǳȚț˚;΄΅ΆΈΉΊΌΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώЁАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяё“”†‡…‰※€⇒⇔∀∂∞∴∵⊂⊃⌒☆♀♂♡♧♭、。〃々〆「」『』〒〜〝〟ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろわをんゝゞァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロワヲンヴ・ー仝｀｜"
+ 'LOAD FONT-1
+ VAR C$
+ OTW_FNT1=NewArray3(&H7F-&H20,8,8)
+ GPAGE 0,5
+ VAR X,Y,I,J
+'RETURN
+ RESTORE @FONT
+ VAR C,_$
+ WHILE 1
+  READ C$
+  IF C$=="END"THEN BREAK
+IF LEN(C$)-1 THEN CONTINUE
+?C$;
+  I=ASC(C$)-&H20
+  X=I*8
+  IF I>=512-8THEN X=I MOD 64Y=1
+' GFILL X,Y,X+8,Y+8,0
+  FOR J=0TO 7
+   READ C$
+   FOR I=0TO LEN(C$)-1
+    _$=MID$(C$,I,1)
+    IF _$=="F"THEN C=-1 ELSE C=0
+    GPSET X+I,Y+J,C
+   NEXT
+  NEXT
+ WEND
+ GPAGE 0,0
+@FONT
 DATA "A"
 DATA "000F0000"
 DATA "00F0F000"
@@ -582,8 +830,8 @@
 DATA "00000000"
 DATA "R"
 DATA "0FFFF000"
-DATA "0R000F00"
 DATA "0F000F00"
+DATA "0F000F00"
 DATA "0FFFF000"
 DATA "0F0F0000"
 DATA "0F00F000"
diff -u OTW.TXT OTW7
--- OTW.TXT
+++ OTW7
@@ -50,7 +50,23 @@
 VAR OTW_SP
 'BUFFER PAGE
 VAR OTW_BP
+VAR OTW_WIN_FWIDTH
+VAR OTW_WIN_FHEIGHT
+VAR OTW_WIN_FWIDTH2
+VAR OTW_WIN_FHEIGHT2
+'
+'          
+'
+'          
+'          
+'          
+'          
+'          
+'
+'⇔⇔
+'
 DEF OTW_WIN_INITARRAY
+ OTW_WIN_FHEIGHT=10
  WIN_MAX=256
  WIN_MSGMAX=64
  WIN_MSGARGSIZE=3
@@ -98,6 +114,7 @@
 VAR CTL_PAINTHANDLER
 VAR CTL_LBTNUPHANDLER
 VAR CTL_LBTNDWNHANDLER
+VAR CTL_DRWFRMHANDLER
 VAR CTL_WINDOWCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
@@ -114,6 +131,7 @@
  CTL_PAINTHANDLER=0
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
+ CTL_DRWFRMHANDLER=3
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
 END
@@ -293,10 +311,10 @@
  WIN_AY[NUWID]=WIN_TOPLEVELY
  GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
  GCLIP 1,0,0,400,240
- SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
- SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
+ SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID]-OTW_WIN_FHEIGHT,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1+OTW_WIN_FHEIGHT,1
+ SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID]-OTW_WIN_FHEIGHT,0
  SPSHOW SP
- SPSET FRAME,0
+'SPSET FRAME,0
  SPSCALE FRAME,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
  SPOFS FRAME,WIN_AX[NUWID]-1,WIN_AY[NUWID]-9,0
  SPVAR SP,0,WND
@@ -393,7 +411,7 @@
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
  GPAGE OTW_SP,OTW_BP
- GCLIP 1,0,0,W,H
+ GCLIP 1,AX,AY,AX+W,AY+H
  GCLS
  RETURN 0
 END
@@ -413,7 +431,9 @@
  IF WIN_CHILD[NUWID]THEN
   PNUWID=WIN_CHILD[NUWID]
   WHILE PNUWID
-GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID]-AX,WIN_AY[PNUWID]-AY,0
+   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID],WIN_AY[PNUWID],0
+
+'GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID]-AX,WIN_AY[PNUWID]-AY,0
 '   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
    PNUWID=WIN_NEXT[PNUWID]
   WEND
@@ -430,31 +450,42 @@
   ENDIF
   ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
 '  
-  IF WIN_AX[PNUWID]THEN
-'   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],-WIN_AX[PNUWID],-WIN_AY[PNUWID],0
-  ELSE
-   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
-  ENDIF
+' IF WIN_AX[PNUWID]THEN
+'   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],-WIN_AX[PNUWID]-WIN_WIDTH[PNUWID],-WIN_AY[PNUWID]-WIN_HEIGHT[PNUWID],0
+' ELSE
+'  GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
+' ENDIF
+   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID],WIN_AY[PNUWID],0
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
  GCLIP 1,0,0,400,240
  GPAGE OTW_SP,OTW_DP
 ?AX,AY,W,H
- GCOPY OTW_BP,0,0,W,H,AX,AY,0
-'DIALOG"A
+' GCOPY OTW_BP,0,0,W,H,AX,AY,0
+ GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
+ DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
- GPSET X,Y,COL
+ VAR AX=WIN_AX[WND AND NUWIDMASK]
+ VAR AY=WIN_AY[WND AND NUWIDMASK]
+ GPSET X+AX,Y+AY,COL
 END
 COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
- GFILL X,Y,X2,Y2,COL
+ VAR AX=WIN_AX[WND AND NUWIDMASK]
+ VAR AY=WIN_AY[WND AND NUWIDMASK]
+ GFILL X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
- GBOX X,Y,X2,Y2,COL
+ VAR AX=WIN_AX[WND AND NUWIDMASK]
+ VAR AY=WIN_AY[WND AND NUWIDMASK]
+ GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GPRINTWindow WND,X,Y,STR$
+ VAR AX=WIN_AX[WND AND NUWIDMASK]
+ VAR AY=WIN_AY[WND AND NUWIDMASK]
+ X=X+AX:Y=Y+AY
  VAR L=LEN(STR$)-1,C$,A,BX,BY,I
  FOR I=0TO L
   C$=MID$(STR$,I,1)
@@ -482,13 +513,28 @@
 DEF WindowLMouseUP WND,A1,A2
  VAR E=FrontWindow(WND)
 END
+VAR OTW_MOUSESIZE
 DEF OTW_INITSP
- GFILL 408,0,416,8,-1
+ GPSET 408,0,-1
  SPDEF 0,408,0,1,1,1
+ VAR FORE=RGB(0,0,0)
+ VAR BACK=RGB(255,255,255)
+ GCOLOR BACK'FORE
+ VAR SC#=1,B=416
+ GLINE B,0*SC#,B,14*SC#
+ GLINE B,0*SC#,B+10*SC#,10*SC#
+ GLINE B,14*SC#,B+3*SC#,11*SC#
+ GLINE B+6*SC#,16*SC#,B+3*SC#,11*SC#
+ GLINE B+10*SC#,10*SC#,B+6*SC#,10*SC#
+'GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
+ GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
+ GLINE B+6*SC#,16*SC#,B+7*SC#,16*SC#'7,16
+ SPDEF 290,B,0,10*SC#,18*SC#
 END
 VAR WIN_ROOTCTL
 VAR TSTWND,TSTCTL
 VAR TSTWND2
+VAR TSTWND3
 
 VAR OTW_MOUSELBTN
 VAR OTW_MOUSERBTN
@@ -503,7 +549,8 @@
   OTW_SP=0
   OTW_BP=1
   GPAGE OTW_SP,OTW_DP
-  'GCLS' RGB(0,0,255)
+' GCLS RGB(0,0,255)
+  GCLS 
   OTW_INITSP
   XSCREEN 2
 
@@ -521,6 +568,7 @@
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
+'  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
   OTW_LOADFONT
   GCLIP 1,0,0,400,240
@@ -542,6 +590,8 @@
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
   SPHOME OTW_MOUSESP,0,0
   SPCOL 0,0,0,1,1
+  CLS
+  LOCATE 0,29
  ENDIF
 RETURN
 END
@@ -577,14 +627,46 @@
    
   ENDIF
  ENDIF
+ IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
  OTW_OLDMOUSEY=OTW_MOUSEY
- VOID UpdateWindow(TSTWND)
  VOID UpdateWindow(WIN_ROOTWND)
  VOID UpdateWindow(TSTWND2)
+ VOID UpdateWindow(TSTWND)
+' VOID UpdateWindow(TSTWND3)
 ' ExitProcess 1
 RETURN
 END
+
+DEF DUMP_WND
+ DUMP_WND2 WIN_ROOTWND AND NUWIDMASK,""
+END
+DEF DUMP_WND2 NUW,I$
+ IF!NUW THEN RETURN
+ ?I$;WIN_NAME$[NUW],NUW,WIN_WID[NUW]
+' IF CSRY==29 THEN VAR II$INPUT "";II$
+ DUMP_WND2 WIN_NEXT[NUW],I$
+ IF LEN(I$) THEN
+  VAR NM$=""
+  IF WIN_NEXT[NUW] THEN
+   NM$=""
+  ELSE
+   NM$=""
+  ENDIF
+  IF WIN_NEXT[WIN_PARENT[NUW]]THEN
+   NM$=""+NM$
+  ELSE
+   NM$=" "+NM$
+  ENDIF
+  DUMP_WND2 WIN_CHILD[NUW],MID$(I$,0,LEN(I$)-1)+NM$
+ ELSE
+  IF WIN_CHILD[NUW]THEN
+   DUMP_WND2 WIN_CHILD[NUW],""
+  ELSE
+   DUMP_WND2 WIN_CHILD[NUW],""
+  ENDIF
+ ENDIF
+END
 DEF UpdateButton()
  VAR B=BUTTON()
  VAR RET=0
diff -u OTW.TXT OTW8
--- OTW.TXT
+++ OTW8
@@ -4,7 +4,7 @@
 ' OTYA 3D WINDOW SYSTEM 
 '=======================
 'グローバルへんすうのていぎ
-VAR OTW_INIT,OTW_MOUSESP
+VAR OTW_INIT,OTW_MOUSESP,OTW_MOVWINSP
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
@@ -23,6 +23,10 @@
 DIM WIN_HEIGHT [0]
 DIM WIN_AX     [0]
 DIM WIN_AY     [0]
+DIM WIN_FX     [0]
+DIM WIN_FY     [0]
+DIM WIN_FWIDTH [0]
+DIM WIN_FHEIGHT[0]
 DIM WIN_CTL    [0]
 DIM WIN_PID    [0]
 DIM WIN_NUPID  [0]
@@ -44,17 +48,18 @@
 VAR WIN_MSGARGSIZE
 VAR WIDSHIFT
 VAR NUWIDMASK
+VAR WIN_FRAMEFLG
 'DRAW PAGE
 VAR OTW_DP
 'SHOW PAGE
 VAR OTW_SP
 'BUFFER PAGE
 VAR OTW_BP
-VAR OTW_WIN_FWIDTH
-VAR OTW_WIN_FHEIGHT
-VAR OTW_WIN_FWIDTH2
-VAR OTW_WIN_FHEIGHT2
-'
+VAR WIN_FWIDTH1
+VAR WIN_FHEIGHT1
+VAR WIN_FWIDTH2
+VAR WIN_FHEIGHT2
+'H1
 '          
 '
 '          
@@ -62,16 +67,21 @@
 '          
 '          
 '          
-'
+'H2
 '⇔⇔
+'W1         W2
 '
 DEF OTW_WIN_INITARRAY
- OTW_WIN_FHEIGHT=10
+ WIN_FWIDTH1=1
+ WIN_FHEIGHT1=10
+ WIN_FWIDTH2=1
+ WIN_FHEIGHT2=1
  WIN_MAX=256
  WIN_MSGMAX=64
  WIN_MSGARGSIZE=3
  WIDSHIFT=12
  NUWIDMASK=4095
+ WIN_FRAMEFLG=32768
  WIN_NAME$     =NewArray$(WIN_MAX)
  WIN_WID       =NewArray(WIN_MAX)
  WIN_X         =NewArray(WIN_MAX)
@@ -80,6 +90,10 @@
  WIN_HEIGHT    =NewArray(WIN_MAX)
  WIN_AX        =NewArray(WIN_MAX)
  WIN_AY        =NewArray(WIN_MAX)
+ WIN_FX        =NewArray(WIN_MAX)
+ WIN_FY        =NewArray(WIN_MAX)
+ WIN_FWIDTH    =NewArray(WIN_MAX)
+ WIN_FHEIGHT   =NewArray(WIN_MAX)
  WIN_CTL       =NewArray(WIN_MAX)
  WIN_PID       =NewArray(WIN_MAX)
  WIN_NUPID     =NewArray(WIN_MAX)
@@ -114,7 +128,14 @@
 VAR CTL_PAINTHANDLER
 VAR CTL_LBTNUPHANDLER
 VAR CTL_LBTNDWNHANDLER
+VAR CTL_RBTNUPHANDLER
+VAR CTL_RBTNDWNHANDLER
+VAR CTL_FRMBTNHANDLER
 VAR CTL_DRWFRMHANDLER
+VAR CTL_LBTNFLG
+VAR CTL_RBTNFLG
+VAR CTL_BTNDWNFLG
+VAR CTL_BTNUPFLG
 VAR CTL_WINDOWCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
@@ -131,9 +152,19 @@
  CTL_PAINTHANDLER=0
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
- CTL_DRWFRMHANDLER=3
+ CTL_RBTNUPHANDLER=3
+ CTL_RBTNDWNHANDLER=4
+
+ CTL_FRMBTNHANDLER=5
+ 'A1=,A2=bit16~31Y,Xbit0~15
+ CTL_LBTNFLG=4
+ CTL_RBTNFLG=8
+ CTL_BTNDWNFLG=1
+ CTL_BTNUPFLG=2
+' CTL_DRWFRMHANDLER=3
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
+ E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -210,6 +241,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_LBTNUPHANDLER]=HANDLER$
  RETURN 0
 END
+DEF SetControlClickFrameHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
@@ -263,6 +299,8 @@
  '
  WIN_WIDTH[NUWID]=WIDTH
  WIN_HEIGHT[NUWID]=HEIGHT
+ WIN_FWIDTH[NUWID]=WIDTH
+ WIN_FHEIGHT[NUWID]=HEIGHT
  WIN_NEXT[NUWID]=0
  GCLIP 1,0,240,400,480
  VOID RepaintWindow(WND)
@@ -307,12 +345,20 @@
  WIN_TopLevelY=WIN_TopLevelY+8
  WIN_TopLevelX=WIN_TopLevelX+8
  WIN_TopLevelY=WIN_TopLevelY+8
+ WIN_FX[NUWID]=WIN_TopLevelX
+ WIN_FY[NUWID]=WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
- WIN_AY[NUWID]=WIN_TOPLEVELY
- GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
+ WIN_AY[NUWID]=WIN_TOPLEVELY-WIN_FHEIGHT1
+ 
+' WIN_WIDTH[NUWID]=WIDTH+WIN_FWIDTH+
+' WIN_HEIGHT[NUWID]=HEIGHT
+ 
+ WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+WIN_FHEIGHT1
+ OTW_DrawMap
  GCLIP 1,0,0,400,240
- SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID]-OTW_WIN_FHEIGHT,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1+OTW_WIN_FHEIGHT,1
- SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID]-OTW_WIN_FHEIGHT,0
+' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
+ SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+ SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
  SPSHOW SP
 'SPSET FRAME,0
  SPSCALE FRAME,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
@@ -336,6 +382,12 @@
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
+COMMON DEF OTW_DrawMap NUWID
+ GCLIP 1,0,240,400,480
+ GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
+ GFILL WIN_FX[NUWID],WIN_FY[NUWID]+240,WIN_FX[NUWID]+WIN_FWIDTH[NUWID],WIN_FY[NUWID]+WIN_FHEIGHT[NUWID]+240,ShortToRGB(NUWID)
+ GCLIP 1,0,0,400,240
+END
 COMMON DEF FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -362,9 +414,7 @@
    ENDIF
   WEND
  VOID RepaintWindow(WND)
- GCLIP 1,0,240,400,480
- GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
- GCLIP 1,0,0,400,240
+ OTW_DrawMap
  RETURN 0
 END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
@@ -388,22 +438,90 @@
 COMMON DEF LMouseDownWindow(WND)
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX,OTW_MOUSEY)
 END
+DEF LMouseDownWindowOnFrame(WND)
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+END
+DEF LMouseUpWindowOnFrame(WND)
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+END
+COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL=CTL_PARENTCTL[CTL AND 4095]
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID 
+ CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
+ RETURN 0
+END
 COMMON DEF UpdateWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  VAR NUCID=WIN_CTL[NUWID] AND 4095
  VAR S=WIN_MSGE[NUWID]
- ?"HND";CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]]
- CALL CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]],WND,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ VAR TYPE=WIN_MSGBUF[NUWID,S,0]
+ CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
+ IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
  RETURN 0
 END
+VAR WIN_DRAGHANDLER$
+VAR WIN_DRAGHANDLER_A1
+VAR WIN_DRAGHANDLER_A2
+VAR WIN_DRAGHANDLER_USE
+VAR WIN_DRAGHANDLER_WND
+VAR WIN_DRG_USE
+VAR WIN_DRG_NUSE
+DEF SetWindowDragHandler(NAME$,WND,A1,A2)
+ IF WIN_DRAGHANDLER_USE&&CheckWindow(WIN_DRAGHANDLER_WND)THEN
+  RETURN WIN_DRG_USE
+ ENDIF
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ WIN_DRAGHANDLER_USE=TRUE
+ WIN_DRAGHANDLER$=NAME$
+ WIN_DRAGHANDLER_A1=A1
+ WIN_DRAGHANDLER_A2=A2
+ WIN_DRAGHANDLER_WND=WND
+ RETURN 0
+END
+DEF ClearWindowDragHandler()
+ IF!WIN_DRAGHANDLER_USE THEN RETURN WIN_DRG_NUSE
+ WIN_DRAGHANDLER_USE=FALSE
+ WIN_DRAGHANDLER$=""
+ WIN_DRAGHANDLER_A1=0
+ WIN_DRAGHANDLER_A2=0
+ WIN_DRAGHANDLER_WND=0
+ RETURN 0
+END
 ''WINDOW GRAPHIC
 COMMON DEF GBEGINWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
+ WIN_BEGIN[NUWID]=TRUE
+ VAR AX=WIN_FX[NUWID]
+ VAR AY=WIN_FY[NUWID]
+ VAR W=WIN_WIDTH[NUWID]
+ VAR H=WIN_HEIGHT[NUWID]
+ GPAGE OTW_SP,OTW_BP
+ GCLIP 1,AX,AY,AX+W,AY+H
+ GCLS
+ RETURN 0
+END
+DEF ReGBEGINWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ INC WIN_BEGIN[NUWID]
+ VAR AX=WIN_FX[NUWID]
+ VAR AY=WIN_FY[NUWID]
+ VAR W=WIN_WIDTH[NUWID]
+ VAR H=WIN_HEIGHT[NUWID]
+ GPAGE OTW_SP,OTW_BP
+ GCLIP 1,AX,AY,AX+W,AY+H
+ RETURN 0
+END
+DEF GBEGINFrameWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
  WIN_BEGIN[NUWID]=TRUE
  VAR AX=WIN_AX[NUWID]
@@ -459,32 +577,32 @@
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
- GCLIP 1,0,0,400,240
  GPAGE OTW_SP,OTW_DP
 ?AX,AY,W,H
 ' GCOPY OTW_BP,0,0,W,H,AX,AY,0
  GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
- DIALOG"A
+ GCLIP 1,0,0,400,240
+' DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  GPSET X+AX,Y+AY,COL
 END
 COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  GFILL X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GPRINTWindow WND,X,Y,STR$
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
  VAR L=LEN(STR$)-1,C$,A,BX,BY,I
  FOR I=0TO L
@@ -501,18 +619,66 @@
   X=X+8
  NEXT
 END
-DEF DesktopPainter WND,A1,A2
-'RETURN
+DEF DesktopPainter WND,CTL,TYPE,A1,A2
+RETURN
  VAR E=GBEGINWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
  E=GENDWindow(WND)
 END
-DEF WindowPainter WND,A1,A2
+DEF GetWindowFrameWidth(WND)
+ RETURN WIN_WIDTH[WND AND NUWIDMASK]
 END
-DEF WindowLMouseUP WND,A1,A2
+DEF GetWindowFrameHeight(WND)
+ RETURN WIN_FHEIGHT1
+END
+common def GetWindowName$(wnd)
+ return win_name$[wnd and nuwidmask]
+end
+DEF WindowPainter WND,CTL,TYPE,A1,A2
+ VAR E=GBeginFrameWindow(WND)
+ IF E THEN RETURN
+ GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
+ GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND)
+ E=ReGBeginWindow(WND)
+' E=GEndWindow(WND)
+END
+DEF WindowLMouseUP WND,CTL,TYPE,A1,A2
  VAR E=FrontWindow(WND)
 END
+DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
+ VAR X,Y
+ SplitInt POS OUT X,Y
+ IF BTN AND CTL_LBTNFLG THEN
+  VAR NUWID=WND AND NUWIDMASK
+  IF BTN AND CTL_BTNDWNFLG THEN
+   VAR AX=WIN_AX[NUWID]
+   VAR AY=WIN_AY[NUWID]
+   IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
+   SPSHOW OTW_MOVWINSP
+   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+   SPCOLOR OTW_MOVWINSP,RGB(128,80,208,255)
+   SPOFS OTW_MOVWINSP,AX-X,AY-Y,-256
+   SPLINK OTW_MOVWINSP,OTW_MOUSESP
+   SPVAR OTW_MOVWINSP,1,NUWID
+   SPVAR OTW_MOVWINSP,2,AX-X
+   SPVAR OTW_MOVWINSP,3,AY-Y
+  ELSE
+    ?X,Y
+   IF SPVAR(OTW_MOVWINSP,1)==NUWID THEN
+    ?X,Y
+   ENDIF
+  ENDIF
+ ENDIF
+END
+DEF WindowDragFrame WND,MX,MY,A1X,A2Y
+ 'VAR NUWID=WND AND NUWIDMASK
+ VAR X=MX+A1X
+ VAR Y=MY+A1Y
+ VAR E=MoveWindow(WND,X,Y)
+ SPHIDE OTW_MOVWINSP
+ SPUNLINK OTW_MOVWINSP
+END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
  GPSET 408,0,-1
@@ -549,11 +715,24 @@
   OTW_SP=0
   OTW_BP=1
   GPAGE OTW_SP,OTW_DP
-' GCLS RGB(0,0,255)
   GCLS 
+' GCLS RGB(0,0,255)
   OTW_INITSP
-  XSCREEN 2
-
+  XSCREEN 2,512,2
+  DISPLAY 1
+  VISIBLE 0,0,1,0
+  BGSCREEN 0,25,15
+  BGSCALE 0,20/25,1
+  VAR X,Y,I
+  FOR Y=0TO 14
+   FOR X=0TO 24
+    BGPUT 0,X,Y,I
+    INC I
+   NEXT
+  I=I+7
+  NEXT
+  BGPAGE OTW_DP
+  DISPLAY 0
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
@@ -568,7 +747,7 @@
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
-'  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
+  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
   OTW_LOADFONT
   GCLIP 1,0,0,400,240
@@ -590,16 +769,19 @@
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
   SPHOME OTW_MOUSESP,0,0
   SPCOL 0,0,0,1,1
+  OTW_MOVWINSP=1
+  SPSET OTW_MOVWINSP,0
+  SPHIDE OTW_MOVWINSP
   CLS
   LOCATE 0,29
  ENDIF
 RETURN
 END
-COMMON DEF HELLOPainter WND,A1,A2
- VAR E=GBEGINWindow(WND)
+COMMON DEF HELLOPainter WND,CTL,TYPE,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
+ E=GBEGINWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,0,64,64,RGB(0,0,0)
- GBOXWindow WND,0,0,64,64,RGB(128,128,128)
  GPRINTWindow WND,6,1,CHR$(ASC("A")+(WND AND 4095))+"HELLOOOOOOOO"
  E=GENDWindow(WND)
 END
@@ -620,12 +802,26 @@
  IF MOVEMOUSE||BTN THEN
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
- IF BTN AND OTW_LMOUSEUP THEN
-  E=LMouseUpWindow(NUWIDToWND(NUWID))
-  ?SPHITSP(OTW_MOUSESP)
-  IF WIN_SP[NUWID]THEN
-   
+ IF BTN THEN
+  IF BTN AND OTW_LMOUSEDWN THEN
+   IF NUWID AND WIN_FRAMEFLG THEN
+    E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+   ELSE
+    E=LMouseDownWindow(NUWIDToWND(NUWID))
+   ENDIF
   ENDIF
+  IF BTN AND OTW_LMOUSEUP THEN
+   IF WIN_DRAGHANDLER_USE THEN
+    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+    E=ClearWindowDragHandler()
+   ELSE
+    IF NUWID AND WIN_FRAMEFLG THEN
+     E=LMouseUpWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+    ELSE
+     E=LMouseUpWindow(NUWIDToWND(NUWID))
+    ENDIF
+   ENDIF
+  ENDIF
  ENDIF
  IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
@@ -633,7 +829,7 @@
  VOID UpdateWindow(WIN_ROOTWND)
  VOID UpdateWindow(TSTWND2)
  VOID UpdateWindow(TSTWND)
-' VOID UpdateWindow(TSTWND3)
+ VOID UpdateWindow(TSTWND3)
 ' ExitProcess 1
 RETURN
 END
@@ -678,10 +874,10 @@
   OTW_OLDLMOUSE=0
  ENDIF
  IF B AND OTW_MOUSERBTN THEN
-  IF!OTW_OLDRMOUSE THEN RET=OTW_RMOUSEDWN
+  IF!OTW_OLDRMOUSE THEN RET=RET OR OTW_RMOUSEDWN
   OTW_OLDRMOUSE=1
  ELSE
-  IF OTW_OLDRMOUSE THEN RET=OTW_RMOUSEUP
+  IF OTW_OLDRMOUSE THEN RET=RET OR OTW_RMOUSEUP
   OTW_OLDRMOUSE=0
  ENDIF
  RETURN RET
diff -u OTW.TXT OTW9
--- OTW.TXT
+++ OTW9
@@ -126,6 +126,9 @@
 VAR CTL_FREE
 VAR CTL_CIDCNT
 VAR CTL_PAINTHANDLER
+COMMON DEF RepaintControlEvent()
+ RETURN CTL_PAINTHANDLER
+END
 VAR CTL_LBTNUPHANDLER
 VAR CTL_LBTNDWNHANDLER
 VAR CTL_RBTNUPHANDLER
@@ -354,7 +357,7 @@
 ' WIN_HEIGHT[NUWID]=HEIGHT
  
  WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+WIN_FHEIGHT1
- OTW_DrawMap
+ OTW_DrawMap NUWID
  GCLIP 1,0,0,400,240
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
  SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
@@ -371,18 +374,19 @@
 END
 COMMON DEF OTW_SPSORT
  VAR I,Z=0
- IF OTW_TOPLEVELCNT-1THEN Z=(1023+255)/(OTW_TOPLEVELCNT-1)
+ IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT-1)
  VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
 'IF!WIN_NEXT[NUWID]THEN I=
- I=1023+255
+ I=1022+255
  WHILE NUWID
   I=I-Z
   SPOFS WIN_SP[NUWID]AND 1023,,,-255+I
-  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
+'  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
 COMMON DEF OTW_DrawMap NUWID
+ GPAGE OTW_DP,OTW_DP
  GCLIP 1,0,240,400,480
  GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
  GFILL WIN_FX[NUWID],WIN_FY[NUWID]+240,WIN_FX[NUWID]+WIN_FWIDTH[NUWID],WIN_FY[NUWID]+WIN_FHEIGHT[NUWID]+240,ShortToRGB(NUWID)
@@ -391,13 +395,25 @@
 COMMON DEF FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- IF!WIN_NEXT[NUWID]THEN VOID RepaintWindow(WND) RETURN 0
+ IF!WIN_NEXT[NUWID]THEN RETURN 0
  VAR N,C=WIN_NEXT[NUWID]
   N=C
   WHILE 1
    C=N
    N=WIN_NEXT[N]
    IF!N THEN
+    VAR NUP=WIN_PREV[NUWID]
+    VAR NUN=WIN_NEXT[NUWID]
+    IF NUP THEN
+     WIN_NEXT[NUP]=NUN
+     WIN_PREV[NUN]=NUP
+    ELSE
+     WIN_CHILD[WIN_PARENT[NUWID]]=NUN
+    ENDIF
+    IF NUN THEN
+     IF NUP THEN WIN_NEXT[NUP]=NUN
+     WIN_PREV[NUN]=NUP
+    ENDIF
     WIN_NEXT[C]=NUWID
     WIN_PREV[NUWID]=C
     WIN_NEXT[NUWID]=0
@@ -414,9 +430,39 @@
    ENDIF
   WEND
  VOID RepaintWindow(WND)
- OTW_DrawMap
+ OTW_DrawMap NUWID
  RETURN 0
 END
+COMMON DEF MoveWindow(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ 
+ VAR NUWID=WND AND NUWIDMASK
+ VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
+ VAR NXT=WIN_CHILD[NUWID],B=NXT
+ WIN_AX[NUWID]=WIN_AX[NUWID]+MX
+ WIN_AY[NUWID]=WIN_AY[NUWID]+MY
+ WIN_FX[NUWID]=WIN_FX[NUWID]+MX
+ WIN_FY[NUWID]=WIN_FY[NUWID]+MY
+ VAR E=FrontWindow(WND)
+ IF E THEN RETURN E
+'WHILE 1
+' 
+'WEND
+ NXT=WIN_CHILD[WIN_PARENT[NUWID]]
+ IF!NXT THEN RETURN
+ B=NXT
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
+  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
+  SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
+ ENDIF
+ OTW_DrawMap WIN_PARENT[NUWID]
+ WHILE NXT
+  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
+  OTW_DrawMap NXT
+  NXT=WIN_NEXT[NXT]
+ WEND
+ RETURN 0
+END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -451,6 +497,12 @@
  CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
  RETURN 0
 END
+COMMON DEF PeekWindowEvent(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN -1
+ RETURN WIN_MSGBUF[NUWID,WIN_MSGE[NUWID],0]
+END
 COMMON DEF UpdateWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -545,6 +597,7 @@
  VAR AY=WIN_AY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
+ GCLIP 1,AX,AY,AX+W,AY+H
  VAR PNUWID
  IF WIN_CHILD[NUWID]THEN
   PNUWID=WIN_CHILD[NUWID]
@@ -566,7 +619,7 @@
    PNUWID=WIN_NEXT[PNUWID]
    CONTINUE
   ENDIF
-  ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
+'  ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
 '  
 ' IF WIN_AX[PNUWID]THEN
 '   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],-WIN_AX[PNUWID]-WIN_WIDTH[PNUWID],-WIN_AY[PNUWID]-WIN_HEIGHT[PNUWID],0
@@ -578,11 +631,11 @@
   PNUWID=WIN_NEXT[PNUWID]
  WEND
  GPAGE OTW_SP,OTW_DP
-?AX,AY,W,H
+'?AX,AY,W,H
 ' GCOPY OTW_BP,0,0,W,H,AX,AY,0
- GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
  GCLIP 1,0,0,400,240
-' DIALOG"A
+ GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
+'DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
@@ -674,7 +727,7 @@
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
  'VAR NUWID=WND AND NUWIDMASK
  VAR X=MX+A1X
- VAR Y=MY+A1Y
+ VAR Y=MY+A2Y
  VAR E=MoveWindow(WND,X,Y)
  SPHIDE OTW_MOVWINSP
  SPUNLINK OTW_MOVWINSP
@@ -687,6 +740,7 @@
  VAR BACK=RGB(255,255,255)
  GCOLOR BACK'FORE
  VAR SC#=1,B=416
+ GFILL B,0,B+10*SC#,18*SC#,0
  GLINE B,0*SC#,B,14*SC#
  GLINE B,0*SC#,B+10*SC#,10*SC#
  GLINE B,14*SC#,B+3*SC#,11*SC#
@@ -711,18 +765,28 @@
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   'ACLS
+  XSCREEN 2,512,2
   OTW_DP=4
   OTW_SP=0
   OTW_BP=1
+  GPAGE OTW_SP,OTW_SP
+  GPRIO 1023
+  GCLS
+  GCLS RGB(0,192,0)
   GPAGE OTW_SP,OTW_DP
-  GCLS 
+  GPRIO 1023
+  GCLS RGB(0,192,128)
 ' GCLS RGB(0,0,255)
   OTW_INITSP
-  XSCREEN 2,512,2
+  GPRIO 1023
   DISPLAY 1
-  VISIBLE 0,0,1,0
+  VISIBLE 1,0,0,0
+  ?":LEFT CLICK"
+  ?":RIGHT CLICK(UNUSED)"
+  ?"TOUCH:CURSOR
   BGSCREEN 0,25,15
-  BGSCALE 0,20/25,1
+  BGSCALE 0,20/25,20/25'1
+  GCLS RGB(255,0,0)
   VAR X,Y,I
   FOR Y=0TO 14
    FOR X=0TO 24
@@ -774,6 +838,7 @@
   SPHIDE OTW_MOVWINSP
   CLS
   LOCATE 0,29
+  NewProcess"WCLOCK","" OUT E,E,E
  ENDIF
 RETURN
 END
@@ -833,7 +898,39 @@
 ' ExitProcess 1
 RETURN
 END
-
+VAR WCLOCKWND
+VAR WCLOCKTIM
+COMMON DEF I_WCLOCK
+ VAR E
+  NewTopLevelWindow GetWindowControl(),"CLOCK",64,64 OUT WCLOCKWND,E
+ WCLOCKTIM=MAINCNT/60
+ WCLOCKTIM=WCLOCKTIM*60
+END
+COMMON DEF L_WCLOCK
+ VAR E
+ E=PeekWindowEvent(WCLOCKWND)
+ IF E==RepaintControlEvent()THEN
+  WCLOCK_RP
+  E=UpdateWindow(WCLOCKWND)
+  RETURN
+ ENDIF
+ E=UpdateWindow(WCLOCKWND)
+ IF E THEN RETURN
+ IF MAINCNT-WCLOCKTIM>=60 THEN
+  WCLOCKTIM=MAINCNT/60
+  WCLOCKTIM=WCLOCKTIM*60
+  WCLOCK_RP
+ ENDIF
+ 
+END
+ DEF WCLOCK_RP
+  VAR E
+  E=GBeginWindow(WCLOCKWND)
+  IF E THEN RETURN
+  GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
+  GPRINTWindow WCLOCKWND,0,0,TIME$
+  E=GEndWindow(WCLOCKWND)
+ END
 DEF DUMP_WND
  DUMP_WND2 WIN_ROOTWND AND NUWIDMASK,""
 END
@@ -953,6 +1050,106 @@
  WEND
  GPAGE 0,0
 @FONT
+DATA "0"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F00FF00"
+DATA "0F0F0F00"
+DATA "0FF00F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "1"
+DATA "000F0000"
+DATA "0FFF0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "0FFFFF00"
+DATA "00000000"
+DATA "2"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "00000F00"
+DATA "0000F000"
+DATA "000F0000"
+DATA "00F00000"
+DATA "0FFFFF00"
+DATA "00000000"
+DATA "3"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "00000F00"
+DATA "000FF000"
+DATA "00000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "4"
+DATA "0000F000"
+DATA "000FF000"
+DATA "00F0F000"
+DATA "0F00F000"
+DATA "0F00F000"
+DATA "0FFFFF00"
+DATA "0000F000"
+DATA "00000000"
+DATA "5"
+DATA "0FFFFF00"
+DATA "0F000000"
+DATA "0FFFF000"
+DATA "0F000F00"
+DATA "00000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "6"
+DATA "000FF000"
+DATA "00F00000"
+DATA "0F000000"
+DATA "0FFFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "7"
+DATA "0FFFFF00"
+DATA "0F000F00"
+DATA "0000F000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "00000000"
+DATA "8"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "9"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFFF00"
+DATA "00000F00"
+DATA "00000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA ":"
+DATA "00000000"
+DATA "00000000"
+DATA "000F0000"
+DATA "00000000"
+DATA "00000000"
+DATA "000F0000"
+DATA "00000000"
+DATA "00000000"
+
 DATA "A"
 DATA "000F0000"
 DATA "00F0F000"
diff -u OTW.TXT OTWA
--- OTW.TXT
+++ OTWA
@@ -316,7 +316,7 @@
   RETURN
  ENDIF
  
- VAR SP=OTW_TOPLEVELCNT,FRAME
+ VAR SP=OTW_TOPLEVELCNT+1,FRAME
 ' IF SPVAR(SP,0)THEN
   WHILE SPVAR(SP,0)
    SP=(SP+1)MOD 255
@@ -435,24 +435,25 @@
 END
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
- 
+ IF!X&&!Y THEN RETURN
  VAR NUWID=WND AND NUWIDMASK
  VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
  VAR NXT=WIN_CHILD[NUWID],B=NXT
+ GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
  WIN_AX[NUWID]=WIN_AX[NUWID]+MX
  WIN_AY[NUWID]=WIN_AY[NUWID]+MY
  WIN_FX[NUWID]=WIN_FX[NUWID]+MX
  WIN_FY[NUWID]=WIN_FY[NUWID]+MY
  VAR E=FrontWindow(WND)
  IF E THEN RETURN E
-'WHILE 1
+ 'WHILE 1
 ' 
 'WEND
  NXT=WIN_CHILD[WIN_PARENT[NUWID]]
  IF!NXT THEN RETURN
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
-  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
+  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
   SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
@@ -653,18 +654,18 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
-COMMON DEF GPRINTWindow WND,X,Y,STR$
+COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
- VAR L=LEN(STR$)-1,C$,A,BX,BY,I
+ VAR L=LEN(STR$)-1,C$,A,BX,BY,I,PP=16*COL
  FOR I=0TO L
   C$=MID$(STR$,I,1)
   A=ASC(C$)
   IF A<=&H7F&&A>=&H20THEN
    A=A-&H20
    BX=A*8
-   BY=BX/(512-8)
+   BY=BX/(512-8)+PP
    GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
   ELSE
    GFILL X,Y,X+7,Y+7,-1
@@ -692,7 +693,7 @@
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
- GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND)
+ GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND),15
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
@@ -709,18 +710,13 @@
    VAR AY=WIN_AY[NUWID]
    IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
    SPSHOW OTW_MOVWINSP
-   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
    SPCOLOR OTW_MOVWINSP,RGB(128,80,208,255)
    SPOFS OTW_MOVWINSP,AX-X,AY-Y,-256
    SPLINK OTW_MOVWINSP,OTW_MOUSESP
    SPVAR OTW_MOVWINSP,1,NUWID
    SPVAR OTW_MOVWINSP,2,AX-X
    SPVAR OTW_MOVWINSP,3,AY-Y
-  ELSE
-    ?X,Y
-   IF SPVAR(OTW_MOVWINSP,1)==NUWID THEN
-    ?X,Y
-   ENDIF
   ENDIF
  ENDIF
 END
@@ -738,7 +734,7 @@
  SPDEF 0,408,0,1,1,1
  VAR FORE=RGB(0,0,0)
  VAR BACK=RGB(255,255,255)
- GCOLOR BACK'FORE
+ GCOLOR FORE
  VAR SC#=1,B=416
  GFILL B,0,B+10*SC#,18*SC#,0
  GLINE B,0*SC#,B,14*SC#
@@ -749,7 +745,8 @@
 'GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
  GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
  GLINE B+6*SC#,16*SC#,B+7*SC#,16*SC#'7,16
- SPDEF 290,B,0,10*SC#,18*SC#
+ GPAINT B+1*SC#,2*SC#,BACK,FORE
+ SPDEF 290,B,0,10*SC#,17*SC#
 END
 VAR WIN_ROOTCTL
 VAR TSTWND,TSTCTL
@@ -777,16 +774,20 @@
   GPRIO 1023
   GCLS RGB(0,192,128)
 ' GCLS RGB(0,0,255)
+GCLS 
   OTW_INITSP
   GPRIO 1023
+  'GOTO @_
   DISPLAY 1
-  VISIBLE 1,0,0,0
+  VISIBLE 1,0,1,0
+  LOCATE 0,25
   ?":LEFT CLICK"
   ?":RIGHT CLICK(UNUSED)"
   ?"TOUCH:CURSOR
   BGSCREEN 0,25,15
   BGSCALE 0,20/25,20/25'1
-  GCLS RGB(255,0,0)
+  GCLS 'RGB(255,0,0)
+  BACKCOLOR RGB(0,192,128)
   VAR X,Y,I
   FOR Y=0TO 14
    FOR X=0TO 24
@@ -797,9 +798,12 @@
   NEXT
   BGPAGE OTW_DP
   DISPLAY 0
+  @_
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
+  PrintConsole "Ver 5.0-11"+LF$()
+  BEEP 94,-1000
   OTW_INIT=TRUE
   OTW_WIN_INITARRAY
   OTW_CTL_INITARRAY
@@ -830,12 +834,20 @@
   
   '290
   SPSET OTW_MOUSESP,290
+  SPVAR 0,0,1
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
   SPHOME OTW_MOUSESP,0,0
   SPCOL 0,0,0,1,1
   OTW_MOVWINSP=1
+  SPSET OTW_MOVWINSP,290
+  SPLINK OTW_MOVWINSP,OTW_MOUSESP
+  SPOFS OTW_MOVWINSP,-2,2,-00
+  SPCOLOR OTW_MOVWINSP,RGB(128,0,0,0)
+  SPVAR OTW_MOVWINSP,0,1
+  OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
+  SPVAR OTW_MOVWINSP,0,1
   CLS
   LOCATE 0,29
   NewProcess"WCLOCK","" OUT E,E,E
@@ -846,8 +858,11 @@
  VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  E=GBEGINWindow(WND)
  IF E THEN RETURN
- GFILLWindow WND,0,0,64,64,RGB(0,0,0)
- GPRINTWindow WND,6,1,CHR$(ASC("A")+(WND AND 4095))+"HELLOOOOOOOO"
+ GFILLWindow WND,0,0,64,64,RGB(224,224,224)'RGB(0,0,0)
+ VAR S$="HELLOWORLD",I
+ FOR I=0TO LEN(S$)-1
+  GPRINTWindow WND,6+I*8,1,S$[I],I
+ NEXT
  E=GENDWindow(WND)
 END
 VAR OTW_OLDMOUSEX
@@ -928,7 +943,7 @@
   E=GBeginWindow(WCLOCKWND)
   IF E THEN RETURN
   GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
-  GPRINTWindow WCLOCKWND,0,0,TIME$
+  GPRINTWindow WCLOCKWND,0,0,TIME$,1
   E=GEndWindow(WCLOCKWND)
  END
 DEF DUMP_WND
@@ -1030,6 +1045,10 @@
 'RETURN
  RESTORE @FONT
  VAR C,_$
+ DIM PAL[16]
+ FOR I=0TO 15
+  READ PAL[I]
+ NEXT
  WHILE 1
   READ C$
   IF C$=="END"THEN BREAK
@@ -1044,12 +1063,35 @@
    FOR I=0TO LEN(C$)-1
     _$=MID$(C$,I,1)
     IF _$=="F"THEN C=-1 ELSE C=0
-    GPSET X+I,Y+J,C
+    VAR _Y,_C
+    FOR _Y=0TO 15
+     IF C THEN _C=PAL[_Y]ELSE _C=0
+     GPSET X+I,Y+J+16*_Y,_C
+    NEXT
    NEXT
   NEXT
  WEND
  GPAGE 0,0
 @FONT
+RETURN
+COLOR
+'      AARRGGBB
+DATA &H00000000
+DATA &HFF000000
+DATA &HFF7F0000
+DATA &HFFFF0000
+DATA &HFF007F00
+DATA &HFF00FF00
+DATA &HFF7F7F00
+DATA &HFFFFFF00
+DATA &HFF00007F
+DATA &HFF0000FF
+DATA &HFF7F007F
+DATA &HFFFF00FF
+DATA &HFF007F7F
+DATA &HFF00FFFF
+DATA &HFF7F7F7F
+DATA &HFFFFFFFF
 DATA "0"
 DATA "00FFF000"
 DATA "0F000F00"
diff -u OTW.TXT OTWB
--- OTW.TXT
+++ OTWB
@@ -8,9 +8,10 @@
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
-VAR OTW_FNT1[0]'0x20~0x7F
-VAR OTW_FNT2[0]'
-VAR OTW_FNT3[0]'
+VAR OTW_FNT1[0,0]'0x20~0x7F
+VAR OTW_FNT2[0,0]'
+VAR OTW_FNT3[0,0]'
+VAR OTW_CONSOLEPAL[0]
 '=======================
 '        WINDOW         
 '=======================
@@ -23,6 +24,8 @@
 DIM WIN_HEIGHT [0]
 DIM WIN_AX     [0]
 DIM WIN_AY     [0]
+DIM WIN_AW     [0]
+DIM WIN_AH     [0]
 DIM WIN_FX     [0]
 DIM WIN_FY     [0]
 DIM WIN_FWIDTH [0]
@@ -72,10 +75,11 @@
 'W1         W2
 '
 DEF OTW_WIN_INITARRAY
- WIN_FWIDTH1=1
+ VAR FM=FREEMEM
+ WIN_FWIDTH1=0
  WIN_FHEIGHT1=10
- WIN_FWIDTH2=1
- WIN_FHEIGHT2=1
+ WIN_FWIDTH2=0
+ WIN_FHEIGHT2=0
  WIN_MAX=256
  WIN_MSGMAX=64
  WIN_MSGARGSIZE=3
@@ -90,6 +94,8 @@
  WIN_HEIGHT    =NewArray(WIN_MAX)
  WIN_AX        =NewArray(WIN_MAX)
  WIN_AY        =NewArray(WIN_MAX)
+ WIN_AW        =NewArray(WIN_MAX)
+ WIN_AH        =NewArray(WIN_MAX)
  WIN_FX        =NewArray(WIN_MAX)
  WIN_FY        =NewArray(WIN_MAX)
  WIN_FWIDTH    =NewArray(WIN_MAX)
@@ -112,6 +118,13 @@
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
 END
+'IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+'ExitProcess 1
+'ENDIF
+VAR OTWRunning
+COMMON DEF IsWinRunning()
+ RETURN OTWRunning
+END
 '=======================
 'CONTROL
 '=======================
@@ -119,7 +132,11 @@
 VAR CTL_HANDLER_MAX
 DIM CTL_NAME$    [0]
 DIM CTL_CID      [0]
-DIM CTL_REF      [0]
+DIM CTL_DAT      [0]
+DIM CTL_FW1      [0]
+DIM CTL_FH1      [0]
+DIM CTL_FW2      [0]
+DIM CTL_FH2      [0]
 DIM CTL_NEXT     [0]
 DIM CTL_PARENTCTL[0]
 DIM CTL_HANDLER$ [0,0]
@@ -140,10 +157,16 @@
 VAR CTL_BTNDWNFLG
 VAR CTL_BTNUPFLG
 VAR CTL_WINDOWCTL
+VAR CTL_BUTTONCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
  CTL_NAME$     =NewArray$(CTL_MAX)
+ CTL_DAT       =NewArray(CTL_MAX)
+ CTL_FW1       =NewArray(CTL_MAX)
+ CTL_FH1       =NewArray(CTL_MAX)
+ CTL_FW2       =NewArray(CTL_MAX)
+ CTL_FH2       =NewArray(CTL_MAX)
  CTL_CID       =NewArray(CTL_MAX)
  CTL_NEXT      =NewArray(CTL_MAX)
  CTL_PARENTCTL =NewArray(CTL_MAX)
@@ -152,6 +175,7 @@
  OTW_INITLIST CTL_NEXT
  VAR E
  NewControl "WINDOW" OUT CTL_WINDOWCTL,E
+ NewControl "BUTTON" OUT CTL_BUTTONCTL,E
  CTL_PAINTHANDLER=0
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
@@ -165,9 +189,12 @@
  CTL_BTNDWNFLG=1
  CTL_BTNUPFLG=2
 ' CTL_DRWFRMHANDLER=3
+ E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
+ E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
+ E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -190,6 +217,9 @@
 COMMON DEF GetWindowControl()
  RETURN CTL_WINDOWCTL
 END
+COMMON DEF GetButtonControl()
+ RETURN CTL_BUTTONCTL
+END
 'CONTROL
 COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
@@ -218,6 +248,10 @@
  FOR I=0TO CTL_HANDLER_MAX-1
   CTL_HANDLER$[NUCID,I]=CTL_HANDLER$[P,I]
  NEXT
+ CTL_FW1[NUCID]=CTL_FW1[P]
+ CTL_FH1[NUCID]=CTL_FH1[P]
+ CTL_FW2[NUCID]=CTL_FW2[P]
+ CTL_FH2[NUCID]=CTL_FH2[P]
 END
 COMMON DEF CheckControl(CTL)
  RETURN CTL_CID[CTL AND 4095]==CTL>>12
@@ -228,12 +262,26 @@
  CTL_NEXT[NUCID]=CTL_FREE
  CTL_FREE=NUCID
  CTL_CID[NUCID]=0
+ CTL_FW1[NUCID]=0
+ CTL_FH1[NUCID]=0
+ CTL_FW2[NUCID]=0
+ CTL_FH2[NUCID]=0
+ CTL_DAT[NUCID]=0
  CTL_NAME$[NUCID]=""
  VAR I
  FOR I=0TO CTL_HANDLER_MAX-1
   CTL_HANDLER$[I]=""
  NEXT
 END
+COMMON DEF IsControlExtend(CTL,PARENT)
+ VAR N=CTL AND 4095
+ VAR P=PARENT AND 4095
+ WHILE N
+  IF N==P THEN RETURN 1
+  N=CTL_PARENTCTL[N]AND 4095
+ WEND
+ RETURN 0
+END
 COMMON DEF SetControlPainter(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
@@ -249,6 +297,15 @@
  CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
  RETURN 0
 END
+DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ VAR C=CTL AND 4095
+ CTL_FW1[C]=W1
+ CTL_FH1[C]=H1
+ CTL_FW2[C]=W2
+ CTL_FH2[C]=H2
+ RETURN 0
+END
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
@@ -269,6 +326,88 @@
 VAR WIN_TopLevelX
 VAR WIN_TopLevelY
 VAR OTW_TOPLEVELCNT
+COMMON DEF WindowBackFlag()
+ RETURN 1
+END
+COMMON DEF WindowFrontFlag()
+ RETURN 2
+END
+COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
+  IF!CheckControl(CTL)THEN
+  WND=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ IF!WIN_FREE THEN
+  WND=0
+  ERR=WIN_NOALLOC
+  RETURN
+ ENDIF
+ VAR NC=CTL AND 4095
+ ERR=0
+ INC WIN_WIDCNT
+ VAR NUWID,WID
+ VAR PNUWID=PARENT AND NUWIDMASK
+ NUWID=WIN_FREE
+ WIN_FREE=WIN_NEXT[WIN_FREE]
+ WID=WIN_WIDCNT
+ WND=WIDNUWIDToWND(WID,NUWID)
+ WIN_WID[NUWID]=WID
+ WIN_CTL[NUWID]=CTL
+ WIN_NAME$[NUWID]=NAME$
+ '
+ WIN_X[NUWID]=X
+ WIN_Y[NUWID]=Y
+ 
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AX[PNUWID]+Y '
+ WIN_FX[NUWID]=WIN_AX[NUWID]+CTL_FW1[NC]
+ WIN_FY[NUWID]=WIN_AX[NUWID]+CTL_FH1[NC]
+ WIN_WIDTH[NUWID]=WIDTH
+ WIN_HEIGHT[NUWID]=HEIGHT
+ WIN_FWIDTH[NUWID]=WIDTH+CTL_FW2[NC]
+ WIN_FHEIGHT[NUWID]=HEIGHT+CTL_FH2[NC]
+ WIN_AW[NUWID]=WIDTH
+ WIN_AH[NUWID]=HEIGHT
+ VAR E1=WIN_AX[NUWID]+WIDTH
+ VAR E2=WIN_AX[PNUWID]+WIN_AW[PNUWID]
+ IF E1>E2 THEN
+  DEC WIN_AW[NUWID],E1-E2
+ ENDIF
+ E1=WIN_AY[NUWID]+HEIGHT
+ E2=WIN_AY[PNUWID]+WIN_AH[PNUWID]
+ IF E1>E2 THEN
+  DEC WIN_AH[NUWID],E1-E2
+ ENDIF
+ WIN_NEXT[NUWID]=0
+ WIN_PARENT[NUWID]=PARENT AND NUWIDMASK
+ IF PNUWID THEN 
+  IF FLG AND WindowFrontFlag()THEN
+   IF WIN_CHILD[PNUWID]THEN
+    VAR N
+    WHILE 1
+     IF!WIN_NEXT[N]THEN
+      WIN_NEXT[N]=NUWID
+      WIN_PREV[NUWID]=N
+      BREAK
+     ENDIF
+     N=WIN_NEXT[N]
+    WEND
+   ELSE
+    WIN_CHILD[PNUWID]=N
+   ENDIF
+  ELSE
+   N=WIN_CHILD[PNUWID]
+   WIN_CHILD[PNUWID]=NUWID
+   IF N THEN
+    WIN_NEXT[NUWID]=N
+    WIN_PREV[N]=NUWID
+   ENDIF
+  ENDIF
+ ENDIF
+ VOID RepaintWindow(WND)
+ OTW_DrawMap NUWID
+END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -310,6 +449,8 @@
  IF!WIN_ROOTWND THEN
   GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
   GCLIP 1,0,0,400,240
+  WIN_AW[NUWID]=WIDTH
+  WIN_AH[NUWID]=HEIGHT
 ' SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
 ' SPSHOW SP
 ' SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],1023
@@ -357,6 +498,8 @@
 ' WIN_HEIGHT[NUWID]=HEIGHT
  
  WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+WIN_FHEIGHT1
+ WIN_AW[NUWID]=WIN_WIDTH[NUWID]
+ WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
  OTW_DrawMap NUWID
  GCLIP 1,0,0,400,240
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
@@ -372,7 +515,7 @@
  SPCOL FRAME,0,0,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
  OTW_SPSORT
 END
-COMMON DEF OTW_SPSORT
+DEF OTW_SPSORT
  VAR I,Z=0
  IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT-1)
  VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
@@ -385,8 +528,8 @@
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
-COMMON DEF OTW_DrawMap NUWID
- GPAGE OTW_DP,OTW_DP
+DEF OTW_DrawMap NUWID
+ GPAGE OTW_SP,OTW_DP
  GCLIP 1,0,240,400,480
  GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
  GFILL WIN_FX[NUWID],WIN_FY[NUWID]+240,WIN_FX[NUWID]+WIN_FWIDTH[NUWID],WIN_FY[NUWID]+WIN_FHEIGHT[NUWID]+240,ShortToRGB(NUWID)
@@ -450,11 +593,13 @@
 ' 
 'WEND
  NXT=WIN_CHILD[WIN_PARENT[NUWID]]
- IF!NXT THEN RETURN
+ IF!NXT THEN RETURN'WIN_
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
-  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
-  SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
+  IF WIN_SP[NUWID]THEN
+   SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+   SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
+  ENDIF
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  WHILE NXT
@@ -462,6 +607,31 @@
   OTW_DrawMap NXT
   NXT=WIN_NEXT[NXT]
  WEND
+ 
+ NXT=WIN_CHILD[NUWID]:B=NXT
+ VAR PAX2=WIN_X[NUWID]+WIN_AW[NUWID]
+ VAR PAY2=WIN_Y[NUWID]+WIN_AH[NUWID]
+ WHILE B
+  VAR S=WIN_WIDTH[B]-WIN_AW[B]
+  
+  WIN_AX[B]=WIN_AX[B]+MX
+  WIN_AY[B]=WIN_AY[B]+MY
+  WIN_FX[B]=WIN_FX[B]+MX
+  WIN_FY[B]=WIN_FY[B]+MY
+  VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+  OTW_DrawMap B
+  IF!WIN_NEXT[B]THEN
+   WHILE B
+    B=WIN_PARENT[B]
+    IF B==NUWID THEN BREAK
+    IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+   WEND
+   IF B==NUWID THEN BREAK
+  ENDIF
+  B=WIN_NEXT[B]
+  IF B==NUWID THEN BREAK
+ WEND
+
  RETURN 0
 END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
@@ -479,10 +649,10 @@
 COMMON DEF RepaintWindow(WND)
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
-COMMON DEF LMouseUpWindow(WND)
+DEF LMouseUpWindow(WND)
  RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX,OTW_MOUSEY)
 END
-COMMON DEF LMouseDownWindow(WND)
+DEF LMouseDownWindow(WND)
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX,OTW_MOUSEY)
 END
 DEF LMouseDownWindowOnFrame(WND)
@@ -517,6 +687,24 @@
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
  RETURN 0
 END
+
+DEF GetWindowFrameWidth(WND)
+ RETURN WIN_WIDTH[WND AND NUWIDMASK]
+END
+DEF GetWindowFrameHeight(WND)
+ RETURN WIN_FHEIGHT1
+END
+common def GetWindowName$(wnd)
+ return win_name$[wnd and nuwidmask]
+end
+COMMON DEF GetWindowWidth(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_FWIDTH[WND AND NUWIDMASK]
+END
+COMMON DEF GetWindowHeight(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_FHEIGHT[WND AND NUWIDMASK]
+END
 VAR WIN_DRAGHANDLER$
 VAR WIN_DRAGHANDLER_A1
 VAR WIN_DRAGHANDLER_A2
@@ -546,33 +734,33 @@
  RETURN 0
 END
 ''WINDOW GRAPHIC
-COMMON DEF GBEGINWindow(WND)
+COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
  WIN_BEGIN[NUWID]=TRUE
  VAR AX=WIN_FX[NUWID]
  VAR AY=WIN_FY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
  GCLS
  RETURN 0
 END
-DEF ReGBEGINWindow(WND)
+DEF ReGBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  INC WIN_BEGIN[NUWID]
  VAR AX=WIN_FX[NUWID]
  VAR AY=WIN_FY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
  RETURN 0
 END
-DEF GBEGINFrameWindow(WND)
+DEF GBeginFrameWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
@@ -586,7 +774,7 @@
  GCLS
  RETURN 0
 END
-COMMON DEF GENDWindow(WND)
+COMMON DEF GEndWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF!WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
@@ -596,8 +784,8 @@
  WIN_BEGIN[NUWID]=FALSE
  VAR AX=WIN_AX[NUWID]
  VAR AY=WIN_AY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
  GCLIP 1,AX,AY,AX+W,AY+H
  VAR PNUWID
  IF WIN_CHILD[NUWID]THEN
@@ -654,7 +842,11 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
+COMMON DEF GPRINTWindowCC WND,X,Y,STR$,PAL
+ GPRINTWindow WND,X,Y,STR$,OTW_CONSOLEPAL[PAL]
+END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
+ IF!(COL AND&HFF000000)THEN RETURN
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
@@ -664,11 +856,26 @@
   A=ASC(C$)
   IF A<=&H7F&&A>=&H20THEN
    A=A-&H20
-   BX=A*8
-   BY=BX/(512-8)+PP
-   GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
+'   BX=A*8
+'   BY=BX/(512-8)+PP
+'   GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
+   VAR F=OTW_FNT1[A,1],B=1'&H80000000
+'  ?BIN$(F)
+   FOR BY=Y+7 TO Y+4 STEP -1
+    FOR BX=X+7 TO X STEP -1
+     IF F AND B THEN GPSET BX,BY,COL
+     B=B<<1
+    NEXT
+   NEXT
+   F=OTW_FNT1[A,0]:B=1
+   FOR BY=Y+3 TO Y STEP -1
+    FOR BX=X+7 TO X STEP -1
+     IF F AND B THEN GPSET BX,BY,COL
+     B=B<<1
+    NEXT
+   NEXT
   ELSE
-   GFILL X,Y,X+7,Y+7,-1
+   GFILL X,Y,X+6,Y+6,-1
   ENDIF
   X=X+8
  NEXT
@@ -680,20 +887,11 @@
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
  E=GENDWindow(WND)
 END
-DEF GetWindowFrameWidth(WND)
- RETURN WIN_WIDTH[WND AND NUWIDMASK]
-END
-DEF GetWindowFrameHeight(WND)
- RETURN WIN_FHEIGHT1
-END
-common def GetWindowName$(wnd)
- return win_name$[wnd and nuwidmask]
-end
 DEF WindowPainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
- GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND),15
+ GPRINTWindowCC WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND),15
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
@@ -728,6 +926,12 @@
  SPHIDE OTW_MOVWINSP
  SPUNLINK OTW_MOVWINSP
 END
+DEF ButtonPainter W,C,T,A1,A2
+ VAR E=GBeginWindow(W)
+ IF E THEN RETURN
+ GFILLWindow W,0,0,GetWindowWidth(W),GetWindowHeight(W),RGB(128,128,128)
+ E=GEndWindow(W)
+END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
  GPSET 408,0,-1
@@ -759,8 +963,11 @@
 VAR OTW_LMOUSEUP
 VAR OTW_RMOUSEDWN
 VAR OTW_RMOUSEUP
+VAR OTW_CNT,OTW_FPS,OTW_FPSCNT
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  OTWRunning=TRUE
+  OTW_FPS=1
   'ACLS
   XSCREEN 2,512,2
   OTW_DP=4
@@ -802,7 +1009,7 @@
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
-  PrintConsole "Ver 5.0-11"+LF$()
+  PrintConsole "Ver 5.0-B"+LF$()
   BEEP 94,-1000
   OTW_INIT=TRUE
   OTW_WIN_INITARRAY
@@ -850,7 +1057,7 @@
   SPVAR OTW_MOVWINSP,0,1
   CLS
   LOCATE 0,29
-  NewProcess"WCLOCK","" OUT E,E,E
+ NewProcess"WCLOCK","" OUT E,E,E
  ENDIF
 RETURN
 END
@@ -861,7 +1068,7 @@
  GFILLWindow WND,0,0,64,64,RGB(224,224,224)'RGB(0,0,0)
  VAR S$="HELLOWORLD",I
  FOR I=0TO LEN(S$)-1
-  GPRINTWindow WND,6+I*8,1,S$[I],I
+  GPRINTWindowCC WND,6+I*8,1,S$[I],I
  NEXT
  E=GENDWindow(WND)
 END
@@ -910,19 +1117,37 @@
  VOID UpdateWindow(TSTWND2)
  VOID UpdateWindow(TSTWND)
  VOID UpdateWindow(TSTWND3)
+ VAR _CNT=MAINCNT-OTW_CNT
+ IF _CNT>60 THEN
+  OTW_FPS=OTW_FPSCNT
+  OTW_FPSCNT=0
+  ?OTW_FPS
+  OTW_CNT=MAINCNT
+ ELSE
+  INC OTW_FPSCNT
+ ENDIF
 ' ExitProcess 1
 RETURN
 END
 VAR WCLOCKWND
+VAR WCLOCKBC
 VAR WCLOCKTIM
 COMMON DEF I_WCLOCK
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
  VAR E
   NewTopLevelWindow GetWindowControl(),"CLOCK",64,64 OUT WCLOCKWND,E
  WCLOCKTIM=MAINCNT/60
  WCLOCKTIM=WCLOCKTIM*60
+ 'NewWindow GetButtonControl()
+ NewWindow TSTCTL,"TEST",8,8,64,64,WCLOCKWND,0 OUT WCLOCKBC,E
 END
 COMMON DEF L_WCLOCK
  VAR E
+ E=UpdateWindow(WCLOCKBC)
  E=PeekWindowEvent(WCLOCKWND)
  IF E==RepaintControlEvent()THEN
   WCLOCK_RP
@@ -943,7 +1168,8 @@
   E=GBeginWindow(WCLOCKWND)
   IF E THEN RETURN
   GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
-  GPRINTWindow WCLOCKWND,0,0,TIME$,1
+  GPRINTWindowCC WCLOCKWND,0,0,TIME$,1
+  GPRINTWindowCC WCLOCKWND,0,8,TIME$,1
   E=GEndWindow(WCLOCKWND)
  END
 DEF DUMP_WND
@@ -1017,8 +1243,8 @@
   VAR X#,Y#
   STICK OUT X#,Y#
   IF X#!=0 OR Y#!=0 THEN
-   OTW_MOUSEX#=OTW_MOUSEX#+X#/2
-   OTW_MOUSEY#=OTW_MOUSEY#-Y#/2
+   OTW_MOUSEX#=OTW_MOUSEX#+X#*0.2'/2
+   OTW_MOUSEY#=OTW_MOUSEY#-Y#*0.2'/2
    IF OTW_MOUSEX#<0THEN OTW_MOUSEX#=0
    IF OTW_MOUSEY#<0THEN OTW_MOUSEY#=0
    IF OTW_MOUSEX#>=400THEN OTW_MOUSEX#=399
@@ -1039,25 +1265,34 @@
  VAR T$=" !"+CHR$(34)+"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghiijklmnopqrstuvwxyz{|}~¢£¦§¨¨©®±´¶ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĊċČčĎďĒēĔĕĖėĘęĞğĠġĢģĦħĪīĮįİıĲĳĶķĹĺĻļĽľŁłŃńŅņŇňŐőŒœŔŕŘřŚśŞşŠšŤťŪūŮůŰűŲųŸŹźŻżŽžƒǅǆǲǳȚț˚;΄΅ΆΈΉΊΌΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώЁАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяё“”†‡…‰※€⇒⇔∀∂∞∴∵⊂⊃⌒☆♀♂♡♧♭、。〃々〆「」『』〒〜〝〟ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろわをんゝゞァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロワヲンヴ・ー仝｀｜"
  'LOAD FONT-1
  VAR C$
- OTW_FNT1=NewArray3(&H7F-&H20,8,8)
- GPAGE 0,5
+ OTW_FNT1=NewArray2(&H7F-&H20,2)
+'GPAGE 0,5
  VAR X,Y,I,J
 'RETURN
  RESTORE @FONT
- VAR C,_$
+ VAR C,_$,K
  DIM PAL[16]
+ OTW_CONSOLEPAL=PAL
  FOR I=0TO 15
   READ PAL[I]
  NEXT
  WHILE 1
   READ C$
   IF C$=="END"THEN BREAK
-IF LEN(C$)-1 THEN CONTINUE
-?C$;
+  IF LEN(C$)-1 THEN CONTINUE
+  ?C$;
   I=ASC(C$)-&H20
-  X=I*8
-  IF I>=512-8THEN X=I MOD 64Y=1
+  'X=I*8
+  'IF I>=512-8THEN X=I MOD 64Y=1
 ' GFILL X,Y,X+8,Y+8,0
+  FOR K=0TO 1
+   FOR J=0TO 3
+    READ C
+    OTW_FNT1[I,K]=(OTW_FNT1[I,K]<<8)+C
+   NEXT
+  NEXT
+ WEND
+RETURN
   FOR J=0TO 7
    READ C$
    FOR I=0TO LEN(C$)-1
@@ -1070,7 +1305,7 @@
     NEXT
    NEXT
   NEXT
- WEND
+'WEND
  GPAGE 0,0
 @FONT
 RETURN
@@ -1093,339 +1328,339 @@
 DATA &HFF7F7F7F
 DATA &HFFFFFFFF
 DATA "0"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F00FF00"
-DATA "0F0F0F00"
-DATA "0FF00F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000'"00FFF000"
+DATA &B01000100
+DATA &B01001100
+DATA &B01010100
+DATA &B01100100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "1"
-DATA "000F0000"
-DATA "0FFF0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B00010000
+DATA &B01110000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B01111100
+DATA &B00000000
 DATA "2"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "00000F00"
-DATA "0000F000"
-DATA "000F0000"
-DATA "00F00000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B00000100
+DATA &B00001000
+DATA &B00010000
+DATA &B00100000
+DATA &B01111100
+DATA &B00000000
 DATA "3"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "00000F00"
-DATA "000FF000"
-DATA "00000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B00000100
+DATA &B00011000
+DATA &B00000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "4"
-DATA "0000F000"
-DATA "000FF000"
-DATA "00F0F000"
-DATA "0F00F000"
-DATA "0F00F000"
-DATA "0FFFFF00"
-DATA "0000F000"
-DATA "00000000"
+DATA &B00001000
+DATA &B00011000
+DATA &B00101000
+DATA &B01001000
+DATA &B01001000
+DATA &B01111100
+DATA &B00001000
+DATA &B00000000
 DATA "5"
-DATA "0FFFFF00"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "00000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000000
+DATA &B01111000
+DATA &B01000100
+DATA &B00000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "6"
-DATA "000FF000"
-DATA "00F00000"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00011000
+DATA &B00100000
+DATA &B01000000
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "7"
-DATA "0FFFFF00"
-DATA "0F000F00"
-DATA "0000F000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000100
+DATA &B00001000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "8"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "9"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFFF00"
-DATA "00000F00"
-DATA "00000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111100
+DATA &B00000100
+DATA &B00000100
+DATA &B00111000
+DATA &B00000000
 DATA ":"
-DATA "00000000"
-DATA "00000000"
-DATA "000F0000"
-DATA "00000000"
-DATA "00000000"
-DATA "000F0000"
-DATA "00000000"
-DATA "00000000"
+DATA &B00000000
+DATA &B00000000
+DATA &B00010000
+DATA &B00000000
+DATA &B00000000
+DATA &B00010000
+DATA &B00000000
+DATA &B00000000
 
 DATA "A"
-DATA "000F0000"
-DATA "00F0F000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFFF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B00010000
+DATA &B00101000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "B"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "00000000"
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B00000000
 DATA "C"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "D"
-DATA "0FFF0000"
-DATA "0F00F000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F00F000"
-DATA "0FFF0000"
-DATA "00000000"
+DATA &B01110000
+DATA &B01001000
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01001000
+DATA &B01110000
+DATA &B00000000
 DATA "E"
-DATA "0FFFFF00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000000
+DATA &B01000000
+DATA &B01111000
+DATA &B01000000
+DATA &B01000000
+DATA &B01111100
+DATA &B00000000
 DATA "F"
-DATA "0FFFFF00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000000
+DATA &B01000000
+DATA &B01111000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B00000000
 DATA "G"
-DATA "00FFFF00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F0FFF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFFF00"
-DATA "00000000"
+DATA &B00111100
+DATA &B01000000
+DATA &B01000000
+DATA &B01011100
+DATA &B01000100
+DATA &B01000100
+DATA &B00111100
+DATA &B00000000
 DATA "H"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFFF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01111100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "I"
-DATA "00FFF000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00111000
+DATA &B00000000
 DATA "J"
-DATA "000FFF00"
-DATA "0000F000"
-DATA "0000F000"
-DATA "0000F000"
-DATA "0000F000"
-DATA "0F00F000"
-DATA "00FF0000"
-DATA "00000000"
+DATA &B00011100
+DATA &B00001000
+DATA &B00001000
+DATA &B00001000
+DATA &B00001000
+DATA &B01001000
+DATA &B00110000
+DATA &B00000000
 DATA "K"
-DATA "0F000F00"
-DATA "0F00F000"
-DATA "0F0F0000"
-DATA "0FF00000"
-DATA "0F0F0000"
-DATA "0F00F000"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01001000
+DATA &B01010000
+DATA &B01100000
+DATA &B01010000
+DATA &B01001000
+DATA &B01000100
+DATA &B00000000
 DATA "L"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01111100
+DATA &B00000000
 DATA "M"
-DATA "0F000F00"
-DATA "0FF0FF00"
-DATA "0F0F0F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01101100
+DATA &B01010100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "N"
-DATA "0F000F00"
-DATA "0FF00F00"
-DATA "0F0F0F00"
-DATA "0F00FF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01100100
+DATA &B01010100
+DATA &B01001100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "O"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "P"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "00000000"
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B00000000
 DATA "Q"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F0F0F00"
-DATA "0F00F000"
-DATA "00FF0F00"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01010100
+DATA &B01001000
+DATA &B00110100
+DATA &B00000000
 DATA "R"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "0F0F0000"
-DATA "0F00F000"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B01010000
+DATA &B01001000
+DATA &B01000100
+DATA &B00000000
 DATA "S"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000000"
-DATA "00FFF000"
-DATA "00000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000000
+DATA &B00111000
+DATA &B00000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "T"
-DATA "0FFFFF00"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01111100
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "U"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "V"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00F0F000"
-DATA "00F0F000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00101000
+DATA &B00101000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "W"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F0F0F00"
-DATA "0FF0FF00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01010100
+DATA &B01101100
+DATA &B01000100
+DATA &B00000000
 DATA "X"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00F0F000"
-DATA "000F0000"
-DATA "00F0F000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B00101000
+DATA &B00010000
+DATA &B00101000
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "Y"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00F0F000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B00101000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "Z"
-DATA "0FFFFF00"
-DATA "00000F00"
-DATA "0000F000"
-DATA "000F0000"
-DATA "00F00000"
-DATA "0F000000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B01111100
+DATA &B00000100
+DATA &B00001000
+DATA &B00010000
+DATA &B00100000
+DATA &B01000000
+DATA &B01111100
+DATA &B00000000
 DATA "END"
 DATA "a"
 DATA "00000000"
diff -u OTW.TXT OTWC
--- OTW.TXT
+++ OTWC
@@ -26,10 +26,16 @@
 DIM WIN_AY     [0]
 DIM WIN_AW     [0]
 DIM WIN_AH     [0]
+DIM WIN_RX     [0]
+DIM WIN_RY     [0]
+DIM WIN_RFX    [0]
+DIM WIN_RFY    [0]
 DIM WIN_FX     [0]
 DIM WIN_FY     [0]
-DIM WIN_FWIDTH [0]
-DIM WIN_FHEIGHT[0]
+DIM WIN_FW1    [0]
+DIM WIN_FH1    [0]
+DIM WIN_FW2    [0]
+DIM WIN_FH2    [0]
 DIM WIN_CTL    [0]
 DIM WIN_PID    [0]
 DIM WIN_NUPID  [0]
@@ -96,10 +102,16 @@
  WIN_AY        =NewArray(WIN_MAX)
  WIN_AW        =NewArray(WIN_MAX)
  WIN_AH        =NewArray(WIN_MAX)
+ WIN_RX        =NewArray(WIN_MAX)
+ WIN_RY        =NewArray(WIN_MAX)
+ WIN_RFX       =NewArray(WIN_MAX)
+ WIN_RFY       =NewArray(WIN_MAX)
  WIN_FX        =NewArray(WIN_MAX)
  WIN_FY        =NewArray(WIN_MAX)
- WIN_FWIDTH    =NewArray(WIN_MAX)
- WIN_FHEIGHT   =NewArray(WIN_MAX)
+ WIN_FW1       =NewArray(WIN_MAX)
+ WIN_FH1       =NewArray(WIN_MAX)
+ WIN_FW2       =NewArray(WIN_MAX)
+ WIN_FH2       =NewArray(WIN_MAX)
  WIN_CTL       =NewArray(WIN_MAX)
  WIN_PID       =NewArray(WIN_MAX)
  WIN_NUPID     =NewArray(WIN_MAX)
@@ -360,24 +372,42 @@
  WIN_Y[NUWID]=Y
  
  WIN_AX[NUWID]=WIN_AX[PNUWID]+X
- WIN_AY[NUWID]=WIN_AX[PNUWID]+Y '
- WIN_FX[NUWID]=WIN_AX[NUWID]+CTL_FW1[NC]
- WIN_FY[NUWID]=WIN_AX[NUWID]+CTL_FH1[NC]
- WIN_WIDTH[NUWID]=WIDTH
- WIN_HEIGHT[NUWID]=HEIGHT
- WIN_FWIDTH[NUWID]=WIDTH+CTL_FW2[NC]
- WIN_FHEIGHT[NUWID]=HEIGHT+CTL_FH2[NC]
- WIN_AW[NUWID]=WIDTH
- WIN_AH[NUWID]=HEIGHT
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+Y '
+ WIN_FW1[NUWID]=CTL_FW1[NC]
+ WIN_FH1[NUWID]=CTL_FH1[NC]
+ WIN_FW2[NUWID]=CTL_FW1[NC]+CTL_FW2[NC]
+ WIN_FH2[NUWID]=CTL_FH1[NC]+CTL_FH2[NC]
+ WIN_WIDTH[NUWID]=WIDTH+WIN_FW2[NUWID]
+ WIN_HEIGHT[NUWID]=HEIGHT+WIN_FH2[NUWID]
+ WIN_AW[NUWID]=WIN_WIDTH[NUWID]
+ WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
+ WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ IF WIN_FX[PNUWID]>WIN_RX[NUWID]THEN
+  WIN_RX[NUWID]=WIN_FX[PNUWID]
+ ENDIF
+ IF WIN_FY[PNUWID]>WIN_RY[NUWID]THEN
+  WIN_RY[NUWID]=WIN_FY[PNUWID]
+ ENDIF
  VAR E1=WIN_AX[NUWID]+WIDTH
  VAR E2=WIN_AX[PNUWID]+WIN_AW[PNUWID]
  IF E1>E2 THEN
   DEC WIN_AW[NUWID],E1-E2
+  IF WIN_RFX[PNUWID]>WIN_RFX[NUWID]THEN
+   WIN_RFX[NUWID]=WIN_RFX[PNUWID]
+  ENDIF
  ENDIF
  E1=WIN_AY[NUWID]+HEIGHT
  E2=WIN_AY[PNUWID]+WIN_AH[PNUWID]
  IF E1>E2 THEN
   DEC WIN_AH[NUWID],E1-E2
+  IF WIN_RFY[PNUWID]>WIN_RFY[NUWID]THEN
+   WIN_RFY[NUWID]=WIN_RFY[PNUWID]
+  ENDIF
  ENDIF
  WIN_NEXT[NUWID]=0
  WIN_PARENT[NUWID]=PARENT AND NUWIDMASK
@@ -439,10 +469,11 @@
  WIN_AX[NUWID]=WIN_TopLevelX
  WIN_AY[NUWID]=WIN_TOPLEVELY
  '
+ VAR NUCID=CTL AND 4095
  WIN_WIDTH[NUWID]=WIDTH
  WIN_HEIGHT[NUWID]=HEIGHT
- WIN_FWIDTH[NUWID]=WIDTH
- WIN_FHEIGHT[NUWID]=HEIGHT
+ WIN_FW2[NUWID]=CTL_FW1[NUCID]+CTL_FW2[NUCID]
+ WIN_FH2[NUWID]=CTL_FH1[NUCID]+CTL_FH2[NUCID]
  WIN_NEXT[NUWID]=0
  GCLIP 1,0,240,400,480
  VOID RepaintWindow(WND)
@@ -489,11 +520,18 @@
  WIN_TopLevelY=WIN_TopLevelY+8
  WIN_TopLevelX=WIN_TopLevelX+8
  WIN_TopLevelY=WIN_TopLevelY+8
- WIN_FX[NUWID]=WIN_TopLevelX
- WIN_FY[NUWID]=WIN_TOPLEVELY
+ WIN_FW1[NUWID]=CTL_FW1[NUCID]'WIN_TopLevelX
+ WIN_FH1[NUWID]=CTL_FH1[NUCID]'WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
  WIN_AY[NUWID]=WIN_TOPLEVELY-WIN_FHEIGHT1
- 
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RFX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_RFY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
 ' WIN_WIDTH[NUWID]=WIDTH+WIN_FWIDTH+
 ' WIN_HEIGHT[NUWID]=HEIGHT
  
@@ -531,8 +569,8 @@
 DEF OTW_DrawMap NUWID
  GPAGE OTW_SP,OTW_DP
  GCLIP 1,0,240,400,480
- GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
- GFILL WIN_FX[NUWID],WIN_FY[NUWID]+240,WIN_FX[NUWID]+WIN_FWIDTH[NUWID],WIN_FY[NUWID]+WIN_FHEIGHT[NUWID]+240,ShortToRGB(NUWID)
+ GFILL WIN_RX[NUWID],WIN_RY[NUWID]+240,WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
+ GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+WIN_AW[NUWID]-WIN_FW2[NUWID],WIN_RFY[NUWID]+240+WIN_AH[NUWID]-WIN_FH2[NUWID],ShortToRGB(NUWID)
  GCLIP 1,0,0,400,240
 END
 COMMON DEF FrontWindow(WND)
@@ -569,11 +607,32 @@
      SPOFS WIN_SP[NUWID]>>10,,,Z2+1'1
      SPOFS WIN_SP[C]>>10,,,Z+1'1
     ENDIF
+    VOID RepaintWindow(WND)
+    OTW_DrawMap NUWID
+    IF WIN_CHILD[NUWID]THEN
+     VAR B=WIN_CHILD[NUWID]
+     WHILE B
+      VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+      OTW_DrawMap B
+      IF!WIN_NEXT[B]THEN
+       WHILE B
+        B=WIN_PARENT[B]
+        IF B==NUWID THEN BREAK
+        IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+       WEND
+       IF B==NUWID THEN BREAK
+      ENDIF
+      IF WIN_CHILD[B]THEN
+       B=WIN_CHILD[B]
+       CONTINUE
+      ENDIF
+      B=WIN_NEXT[B]
+      IF B==NUWID THEN BREAK
+     WEND
+    ENDIF
     BREAK
    ENDIF
   WEND
- VOID RepaintWindow(WND)
- OTW_DrawMap NUWID
  RETURN 0
 END
 COMMON DEF MoveWindow(WND,X,Y)
@@ -582,17 +641,70 @@
  VAR NUWID=WND AND NUWIDMASK
  VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
  VAR NXT=WIN_CHILD[NUWID],B=NXT
- GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
+  GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
+ ENDIF
+' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
  WIN_AX[NUWID]=WIN_AX[NUWID]+MX
  WIN_AY[NUWID]=WIN_AY[NUWID]+MY
- WIN_FX[NUWID]=WIN_FX[NUWID]+MX
- WIN_FY[NUWID]=WIN_FY[NUWID]+MY
+ WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ VAR PNUWID=WIN_PARENT[NUWID]
+ IF WIN_FX[PNUWID]>WIN_RX[NUWID]THEN
+  WIN_RX[NUWID]=WIN_FX[PNUWID]
+  IF WIN_RFX[PNUWID]>WIN_RFX[NUWID]THEN
+   WIN_RFX[NUWID]=WIN_RFX[PNUWID]
+  ENDIF
+ ENDIF
+ IF WIN_FY[PNUWID]>WIN_RY[NUWID]THEN
+  WIN_RY[NUWID]=WIN_FY[PNUWID]
+  IF WIN_RFY[PNUWID]>WIN_RFY[NUWID]THEN
+   WIN_RFY[NUWID]=WIN_RFY[PNUWID]
+  ENDIF
+ ENDIF
+ VAR E1=WIN_AX[NUWID]+WIN_WIDTH[NUWID]
+ VAR E2=WIN_RX[PNUWID]+WIN_AW[PNUWID]
+
+ WIN_AW[NUWID]=WIN_WIDTH[NUWID]
+ IF E1>E2 THEN
+ DEC WIN_AW[NUWID],E1-E2
+ ENDIF
+ IF WIN_AX[NUWID]<WIN_FX[PNUWID]THEN
+ WIN_AW[NUWID]=WIN_WIDTH[NUWID]
+  DEC WIN_AW[NUWID],WIN_FX[PNUWID]-WIN_AX[NUWID]
+ ENDIF
+ E1=WIN_RY[NUWID]+WIN_HEIGHT[NUWID]
+ E2=WIN_RY[PNUWID]+WIN_AH[PNUWID]
+ WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
+
+ IF E1>E2 THEN
+  DEC WIN_AH[NUWID],E1-E2
+ ENDIF
+ IF WIN_AY[NUWID]<WIN_FY[PNUWID]THEN
+ WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
+  DEC WIN_AH[NUWID],WIN_FY[PNUWID]-WIN_AY[NUWID]
+ ENDIF
+' STOP
+' WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
+' IF WIN_AX[PNUWID]>WIN_RX[NUWID]THEN
+' WIN_RX[NUWID]=WIN_AX[PNUWID]
+'ENDIF
+'IF WIN_AY[PNUWID]>WIN_RY[NUWID]THEN
+' WIN_RY[NUWID]=WIN_AY[PNUWID]
+'ENDIF
+'IALOG STR$(WIN_FX[PNUWID]-WIN_AX[NUWID])
  VAR E=FrontWindow(WND)
  IF E THEN RETURN E
  'WHILE 1
 ' 
 'WEND
  NXT=WIN_CHILD[WIN_PARENT[NUWID]]
+ VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
+
  IF!NXT THEN RETURN'WIN_
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
@@ -605,9 +717,43 @@
  WHILE NXT
   VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
   OTW_DrawMap NXT
+  IF WIN_CHILD[NXT]THEN
+   B=WIN_CHILD[NXT]
+   VAR MVF=NUWID==NXT
+   WHILE B
+    IF MVF THEN
+     WIN_AX[B]=WIN_AX[B]+MX
+     WIN_AY[B]=WIN_AY[B]+MY
+     WIN_FX[B]=WIN_FX[B]+MX
+     WIN_FY[B]=WIN_FY[B]+MY
+     WIN_RFX[B]=WIN_RFX[B]+MX
+     WIN_RFY[B]=WIN_RFY[B]+MY
+     WIN_RX[B]=WIN_RX[B]+MX
+     WIN_RY[B]=WIN_RY[B]+MY
+    ENDIF
+    VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+    OTW_DrawMap B
+    IF!WIN_NEXT[B]THEN
+     WHILE B
+      B=WIN_PARENT[B]
+      IF B==NXT THEN BREAK
+      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+     WEND
+     IF B==NXT THEN BREAK
+    ENDIF
+    IF WIN_CHILD[B]THEN
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
+    B=WIN_NEXT[B]
+    IF B==NXT THEN BREAK
+   WEND
+  ENDIF
   NXT=WIN_NEXT[NXT]
+'  IF NXT==NUWID THEN BREAK
  WEND
- 
+
+RETURN 0
  NXT=WIN_CHILD[NUWID]:B=NXT
  VAR PAX2=WIN_X[NUWID]+WIN_AW[NUWID]
  VAR PAY2=WIN_Y[NUWID]+WIN_AH[NUWID]
@@ -618,8 +764,16 @@
   WIN_AY[B]=WIN_AY[B]+MY
   WIN_FX[B]=WIN_FX[B]+MX
   WIN_FY[B]=WIN_FY[B]+MY
+  WIN_RFX[B]=WIN_RFX[B]+MX
+  WIN_RFY[B]=WIN_RFY[B]+MY
+  WIN_RX[B]=WIN_RX[B]+MX
+  WIN_RY[B]=WIN_RY[B]+MY
   VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
   OTW_DrawMap B
+  IF WIN_CHILD[B]THEN
+   B=WIN_CHILD[B]
+   CONTINUE
+  ENDIF
   IF!WIN_NEXT[B]THEN
    WHILE B
     B=WIN_PARENT[B]
@@ -699,11 +853,11 @@
 end
 COMMON DEF GetWindowWidth(WND)
  IF!CheckWindow(WND)THEN RETURN -1
- RETURN WIN_FWIDTH[WND AND NUWIDMASK]
+ RETURN WIN_WIDTH[WND AND NUWIDMASK]-WIN_FW2[WND AND NUWIDMASK]
 END
 COMMON DEF GetWindowHeight(WND)
  IF!CheckWindow(WND)THEN RETURN -1
- RETURN WIN_FHEIGHT[WND AND NUWIDMASK]
+ RETURN WIN_HEIGHT[WND AND NUWIDMASK]-WIN_FH2[WND AND NUWIDMASK]
 END
 VAR WIN_DRAGHANDLER$
 VAR WIN_DRAGHANDLER_A1
@@ -733,27 +887,40 @@
  WIN_DRAGHANDLER_WND=0
  RETURN 0
 END
+VAR OTW_MOUSECLIPX
+VAR OTW_MOUSECLIPY
+VAR OTW_MOUSECLIPX2
+VAR OTW_MOUSECLIPY2
+DEF MouseClip X,Y,W,H
+ OTW_MOUSECLIPX=X
+ OTW_MOUSECLIPY=Y
+ OTW_MOUSECLIPX2=W+X
+ OTW_MOUSECLIPY2=H+Y
+END
+DEF MouseClipDef
+ MouseClip 0,0,400,240
+END
 ''WINDOW GRAPHIC
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
  WIN_BEGIN[NUWID]=TRUE
- VAR AX=WIN_FX[NUWID]
- VAR AY=WIN_FY[NUWID]
+ VAR AX=WIN_RFX[NUWID]'WIN_FW1[NUWID]
+ VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
  VAR W=WIN_AW[NUWID]
  VAR H=WIN_AH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
- GCLS
+ GCLS -1
  RETURN 0
 END
 DEF ReGBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  INC WIN_BEGIN[NUWID]
- VAR AX=WIN_FX[NUWID]
- VAR AY=WIN_FY[NUWID]
+ VAR AX=WIN_RFX[NUWID]'WIN_FW1[NUWID]
+ VAR AY=WIN_RFY[NUWID]':IN_FH1[NUWID]
  VAR W=WIN_AW[NUWID]
  VAR H=WIN_AH[NUWID]
  GPAGE OTW_SP,OTW_BP
@@ -765,8 +932,8 @@
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
  WIN_BEGIN[NUWID]=TRUE
- VAR AX=WIN_AX[NUWID]
- VAR AY=WIN_AY[NUWID]
+ VAR AX=WIN_RX[NUWID]
+ VAR AY=WIN_RY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
  GPAGE OTW_SP,OTW_BP
@@ -782,8 +949,8 @@
  WIN_PARENT[0]=0
  WIN_NEXT[0]=0
  WIN_BEGIN[NUWID]=FALSE
- VAR AX=WIN_AX[NUWID]
- VAR AY=WIN_AY[NUWID]
+ VAR AX=WIN_RX[NUWID]
+ VAR AY=WIN_RY[NUWID]
  VAR W=WIN_AW[NUWID]
  VAR H=WIN_AH[NUWID]
  GCLIP 1,AX,AY,AX+W,AY+H
@@ -791,7 +958,7 @@
  IF WIN_CHILD[NUWID]THEN
   PNUWID=WIN_CHILD[NUWID]
   WHILE PNUWID
-   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID],WIN_AY[PNUWID],0
+   GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
 
 'GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID]-AX,WIN_AY[PNUWID]-AY,0
 '   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
@@ -815,7 +982,7 @@
 ' ELSE
 '  GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
 ' ENDIF
-   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID],WIN_AY[PNUWID],0
+   GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
@@ -915,6 +1082,8 @@
    SPVAR OTW_MOVWINSP,1,NUWID
    SPVAR OTW_MOVWINSP,2,AX-X
    SPVAR OTW_MOVWINSP,3,AY-Y
+   VAR PNUWID=WIN_PARENT[NUWID]
+   MouseClip WIN_FX[PNUWID],WIN_FY[PNUWID],WIN_WIDTH[PNUWID]-WIN_FW2[PNUWID],WIN_HEIGHT[PNUWID]-WIN_FH2[PNUWID]
   ENDIF
  ENDIF
 END
@@ -925,6 +1094,7 @@
  VAR E=MoveWindow(WND,X,Y)
  SPHIDE OTW_MOVWINSP
  SPUNLINK OTW_MOVWINSP
+ MouseClipDef
 END
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
@@ -968,11 +1138,13 @@
  IF!OTW_INIT THEN
   OTWRunning=TRUE
   OTW_FPS=1
+  OTW_FPSCNT=1
   'ACLS
   XSCREEN 2,512,2
   OTW_DP=4
   OTW_SP=0
   OTW_BP=1
+  MouseClipDef
   GPAGE OTW_SP,OTW_SP
   GPRIO 1023
   GCLS
@@ -1079,6 +1251,7 @@
 END
 VAR OTW_OLDLMOUSE
 VAR OTW_OLDRMOUSE
+VAR OTW_FDIFF
 COMMON DEF L_OTW
  VAR MOVEMOUSE
  UpdateMouse
@@ -1117,11 +1290,11 @@
  VOID UpdateWindow(TSTWND2)
  VOID UpdateWindow(TSTWND)
  VOID UpdateWindow(TSTWND3)
- VAR _CNT=MAINCNT-OTW_CNT
- IF _CNT>60 THEN
+ OTW_FDIFF=MAINCNT-OTW_CNT
+ IF OTW_FDIFF>60 THEN
   OTW_FPS=OTW_FPSCNT
   OTW_FPSCNT=0
-  ?OTW_FPS
+  '?OTW_FPS
   OTW_CNT=MAINCNT
  ELSE
   INC OTW_FPSCNT
@@ -1131,6 +1304,7 @@
 END
 VAR WCLOCKWND
 VAR WCLOCKBC
+VAR WCLOCKBC2
 VAR WCLOCKTIM
 COMMON DEF I_WCLOCK
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
@@ -1143,7 +1317,8 @@
  WCLOCKTIM=MAINCNT/60
  WCLOCKTIM=WCLOCKTIM*60
  'NewWindow GetButtonControl()
- NewWindow TSTCTL,"TEST",8,8,64,64,WCLOCKWND,0 OUT WCLOCKBC,E
+ NewWindow TSTCTL,"TEST",8,8,32,32,WCLOCKWND,0 OUT WCLOCKBC,E
+ NewWindow TSTCTL,"TEST",16,16,32,32,WCLOCKWND,0 OUT WCLOCKBC2,E
 END
 COMMON DEF L_WCLOCK
  VAR E
@@ -1161,6 +1336,7 @@
   WCLOCKTIM=WCLOCKTIM*60
   WCLOCK_RP
  ENDIF
+ E=UpdateWindow(WCLOCKBC2)
  
 END
  DEF WCLOCK_RP
@@ -1170,6 +1346,7 @@
   GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
   GPRINTWindowCC WCLOCKWND,0,0,TIME$,1
   GPRINTWindowCC WCLOCKWND,0,8,TIME$,1
+  GPRINTWindowCC WCLOCKWND,0,56,TIME$,1
   E=GEndWindow(WCLOCKWND)
  END
 DEF DUMP_WND
@@ -1228,10 +1405,10 @@
  IF OTW_MOUSEOLDST AND S THEN
   OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
   OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
-  IF OTW_MOUSEX<0THEN OTW_MOUSEX=0
-  IF OTW_MOUSEY<0THEN OTW_MOUSEY=0
-  IF OTW_MOUSEX>=400THEN OTW_MOUSEX=399
-  IF OTW_MOUSEY>=240THEN OTW_MOUSEY=239
+   IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
+   IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
+   IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2-1
+   IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
    OTW_MOUSEX#=OTW_MOUSEX
    OTW_MOUSEY#=OTW_MOUSEY
@@ -1245,10 +1422,10 @@
   IF X#!=0 OR Y#!=0 THEN
    OTW_MOUSEX#=OTW_MOUSEX#+X#*0.2'/2
    OTW_MOUSEY#=OTW_MOUSEY#-Y#*0.2'/2
-   IF OTW_MOUSEX#<0THEN OTW_MOUSEX#=0
-   IF OTW_MOUSEY#<0THEN OTW_MOUSEY#=0
-   IF OTW_MOUSEX#>=400THEN OTW_MOUSEX#=399
-   IF OTW_MOUSEY#>=240THEN OTW_MOUSEY#=239
+   IF OTW_MOUSEX#<OTW_MOUSECLIPX THEN OTW_MOUSEX#=OTW_MOUSECLIPX
+   IF OTW_MOUSEY#<OTW_MOUSECLIPY THEN OTW_MOUSEY#=OTW_MOUSECLIPY
+   IF OTW_MOUSEX#>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX#=OTW_MOUSECLIPX2-1
+   IF OTW_MOUSEY#>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY#=OTW_MOUSECLIPY2
    SPOFS OTW_MOUSESP,OTW_MOUSEX#,OTW_MOUSEY#
    OTW_MOUSEX=OTW_MOUSEX#
    OTW_MOUSEY=OTW_MOUSEY#
diff -u OTW.TXT OTWD
--- OTW.TXT
+++ OTWD
@@ -39,9 +39,8 @@
 DIM WIN_CTL    [0]
 DIM WIN_PID    [0]
 DIM WIN_NUPID  [0]
-DIM WIN_DATA#  [0]
-DIM WIN_DATA%  [0]
-DIM WIN_DATA$  [0]
+VAR WIN_VARSIZ
+DIM WIN_VAR    [0,0]
 DIM WIN_NEXT   [0]
 DIM WIN_PREV   [0]
 DIM WIN_CHILD  [0]
@@ -52,6 +51,7 @@
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
 DIM WIN_MSGBUF [0,0,0]
+DIM WIN_USER   [0,0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
 VAR WIN_MSGARGSIZE
@@ -80,6 +80,7 @@
 '⇔⇔
 'W1         W2
 '
+VAR WIN_ACTIVENUWID
 DEF OTW_WIN_INITARRAY
  VAR FM=FREEMEM
  WIN_FWIDTH1=0
@@ -92,6 +93,7 @@
  WIDSHIFT=12
  NUWIDMASK=4095
  WIN_FRAMEFLG=32768
+ WIN_VARSIZ=8
  WIN_NAME$     =NewArray$(WIN_MAX)
  WIN_WID       =NewArray(WIN_MAX)
  WIN_X         =NewArray(WIN_MAX)
@@ -115,9 +117,7 @@
  WIN_CTL       =NewArray(WIN_MAX)
  WIN_PID       =NewArray(WIN_MAX)
  WIN_NUPID     =NewArray(WIN_MAX)
- WIN_DATA#     =NewArray#(WIN_MAX)
- WIN_DATA%     =NewArray%(WIN_MAX)
- WIN_DATA$     =NewArray$(WIN_MAX)
+ WIN_VAR       =NewArray2(WIN_MAX,WIN_VARSIZ)
  WIN_NEXT      =NewArray(WIN_MAX)
  WIN_PREV      =NewArray(WIN_MAX)
  WIN_CHILD     =NewArray(WIN_MAX)
@@ -164,12 +164,17 @@
 VAR CTL_RBTNDWNHANDLER
 VAR CTL_FRMBTNHANDLER
 VAR CTL_DRWFRMHANDLER
+VAR CTL_NOTIFHANDLER
+VAR CTL_KEYHANDLER
+VAR CTL_BTNHANDLER
+VAR CTL_CHFOCUSHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
 VAR CTL_BTNUPFLG
 VAR CTL_WINDOWCTL
 VAR CTL_BUTTONCTL
+VAR CTL_TXTBOXCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
@@ -188,6 +193,7 @@
  VAR E
  NewControl "WINDOW" OUT CTL_WINDOWCTL,E
  NewControl "BUTTON" OUT CTL_BUTTONCTL,E
+ NewControl "TXTBOX" OUT CTL_TXTBOXCTL,E
  CTL_PAINTHANDLER=0
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
@@ -195,6 +201,10 @@
  CTL_RBTNDWNHANDLER=4
 
  CTL_FRMBTNHANDLER=5
+ CTL_NOTIFHANDLER=6
+ CTL_KEYHANDLER=7
+ CTL_BTNHANDLER=8
+ CTL_CHFOCUSHANDLER=9
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -207,6 +217,11 @@
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
+ E=SetControlPainter(CTL_TXTBOXCTL,"TextBoxPainter")
+ E=SetControlLMouseDownHandler(CTL_TXTBOXCTL,"TextBoxLMouseDown")
+ E=SetControlKeyHandler(CTL_TXTBOXCTL,"TextBoxKey")
+ E=SetControlButtonHandler(CTL_TXTBOXCTL,"TextBoxButton")
+ E=SetControlChFocusHandler(CTL_TXTBOXCTL,"TextBoxChFocus")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -232,6 +247,9 @@
 COMMON DEF GetButtonControl()
  RETURN CTL_BUTTONCTL
 END
+COMMON DEF GetTextBoxControl()
+ RETURN CTL_TXTBOXCTL
+END
 'CONTROL
 COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
@@ -304,11 +322,36 @@
  CTL_HANDLER$[CTL AND 4095,CTL_LBTNUPHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlLMouseDownHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_LBTNDWNHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlClickFrameHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlNotificationHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_NOTIFHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlKeyHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_KEYHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlButtonHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_BTNHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlChFocusHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_CHFOCUSHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -371,8 +414,8 @@
  WIN_X[NUWID]=X
  WIN_Y[NUWID]=Y
  
- WIN_AX[NUWID]=WIN_AX[PNUWID]+X
- WIN_AY[NUWID]=WIN_AY[PNUWID]+Y '
+ WIN_AX[NUWID]=WIN_FX[PNUWID]+X
+ WIN_AY[NUWID]=WIN_FY[PNUWID]+Y '
  WIN_FW1[NUWID]=CTL_FW1[NC]
  WIN_FH1[NUWID]=CTL_FH1[NC]
  WIN_FW2[NUWID]=CTL_FW1[NC]+CTL_FW2[NC]
@@ -426,17 +469,36 @@
    ELSE
     WIN_CHILD[PNUWID]=N
    ENDIF
+   OTW_DrawMap NUWID
   ELSE
    N=WIN_CHILD[PNUWID]
    WIN_CHILD[PNUWID]=NUWID
+   OTW_DrawMap NUWID
    IF N THEN
     WIN_NEXT[NUWID]=N
     WIN_PREV[N]=NUWID
+    VAR B=NUWID
+    WHILE B
+     OTW_DrawMap B
+     IF!WIN_NEXT[B]THEN
+      WHILE B
+       B=WIN_PARENT[B]
+       IF B==PNUWID THEN BREAK
+       IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+      WEND
+      IF B==PNUWID THEN BREAK
+     ENDIF
+     IF WIN_CHILD[B]THEN
+      B=WIN_CHILD[B]
+      CONTINUE
+     ENDIF
+     B=WIN_NEXT[B]
+     IF B==PNUWID THEN BREAK
+    WEND
    ENDIF
   ENDIF
  ENDIF
  VOID RepaintWindow(WND)
- OTW_DrawMap NUWID
 END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF!CheckControl(CTL)THEN
@@ -553,6 +615,46 @@
  SPCOL FRAME,0,0,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
  OTW_SPSORT
 END
+
+COMMON DEF DeleteWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ RepaintAllWindow WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID],WIN_AH[NUWID]
+ VAR E=DeleteWindow(NUWID)
+ RETURN E
+END
+COMMON DEF DeleteWindowNUWID(NUWID)
+ VAR E
+ IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ WIN_MSGS[NUWID]=0
+ WIN_MSGE[NUWID]=0
+ VAR I
+ FOR I=0TO 7
+  WIN_VAR[NUWID,I]=0
+ NEXT
+ IF WIN_CHILD[NUWID]THEN
+  VAR C=WIN_CHILD[NUWID]
+  WHILE C
+   E=DeleteWindow(C)
+  WEND
+ ENDIF
+ VAR N=WIN_NEXT[NUWID]
+ VAR P=WIN_PREV[NUWID]
+ IF N THEN
+  IF P THEN
+   WIN_NEXT[P]=N
+  ENDIF
+  WIN_PREV[N]=P
+ ENDIF
+ IF P THEN
+  WIN_NEXT[P]=N
+ ENDIF
+ IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
+  WIN_CHILD[WIN_PARENT[NUWID]]=N
+ ENDIF
+ RETURN 0
+END
+
 DEF OTW_SPSORT
  VAR I,Z=0
  IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT-1)
@@ -635,6 +737,37 @@
   WEND
  RETURN 0
 END
+
+DEF RepaintAllWindow X,Y,W,H
+ VAR NXT=WIN_ROOTWND AND NUWIDMASK
+ VAR B=NXT
+ WHILE NXT
+  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
+  OTW_DrawMap NXT
+  IF WIN_CHILD[NXT]THEN
+   B=WIN_CHILD[NXT]
+   WHILE B
+   VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+    OTW_DrawMap B
+    IF!WIN_NEXT[B]THEN
+     WHILE B
+      B=WIN_PARENT[B]
+      IF B==NXT THEN BREAK
+      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+     WEND
+     IF B==NXT THEN BREAK
+    ENDIF
+    IF WIN_CHILD[B]THEN
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
+    B=WIN_NEXT[B]
+    IF B==NXT THEN BREAK
+   WEND
+  ENDIF
+  NXT=WIN_NEXT[NXT]
+ WEND
+END
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  IF!X&&!Y THEN RETURN
@@ -642,7 +775,7 @@
  VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
  VAR NXT=WIN_CHILD[NUWID],B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
-  GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
+' GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
  ENDIF
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
  WIN_AX[NUWID]=WIN_AX[NUWID]+MX
@@ -697,6 +830,9 @@
 ' WIN_RY[NUWID]=WIN_AY[PNUWID]
 'ENDIF
 'IALOG STR$(WIN_FX[PNUWID]-WIN_AX[NUWID])
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
+ GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
+ ENDIF
  VAR E=FrontWindow(WND)
  IF E THEN RETURN E
  'WHILE 1
@@ -803,11 +939,25 @@
 COMMON DEF RepaintWindow(WND)
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
+COMMON DEF SendNotificationWindow(WND,DAT,DAT2)
+ RETURN SendWindowEvent(WND,CTL_NOTIFHANDLER,DAT,DAT2)
+END
+COMMON DEF SendKeyWindow(WND,KEY)
+ RETURN SendWindowEvent(WND,CTL_KEYHANDLER,KEY,0)
+END
+COMMON DEF SendButtonWindow(WND,BTN)
+ RETURN SendWindowEvent(WND,CTL_BTNHANDLER,BTN,0)
+END
+COMMON DEF SendChFocusWindow(WND,FLG)
+ RETURN SendWindowEvent(WND,CTL_CHFOCUSHANDLER,FLG,0)
+END
 DEF LMouseUpWindow(WND)
- RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX,OTW_MOUSEY)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID])
 END
 DEF LMouseDownWindow(WND)
- RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX,OTW_MOUSEY)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID])
 END
 DEF LMouseDownWindowOnFrame(WND)
  RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
@@ -828,7 +978,7 @@
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN -1
  RETURN WIN_MSGBUF[NUWID,WIN_MSGE[NUWID],0]
 END
-COMMON DEF UpdateWindow(WND)
+COMMON DEF UpdateWindowOnly(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
@@ -841,6 +991,39 @@
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
  RETURN 0
 END
+COMMON DEF UpdateWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN @END
+ VAR NUCID=WIN_CTL[NUWID] AND 4095
+ VAR S=WIN_MSGE[NUWID]
+ VAR TYPE=WIN_MSGBUF[NUWID,S,0]
+ CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ INC WIN_MSGE[NUWID]
+ IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
+ IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
+ @END
+ VAR B=WIN_CHILD[NUWID]
+ WHILE B
+  VAR E=UpdateWindowOnly(B OR B<<WIDSHIFT)
+  IF!WIN_NEXT[B]THEN
+   WHILE B
+    B=WIN_PARENT[B]
+    IF B==NUWID THEN BREAK
+    IF WIN_NEXT[B]THEN BREAK
+   WEND
+   IF B==NUWID THEN BREAK
+   B=WIN_NEXT[B]
+   CONTINUE
+  ENDIF
+  IF WIN_CHILD[B]THEN
+   B=WIN_CHILD[B]
+   CONTINUE
+  ENDIF
+  B=WIN_NEXT[B]
+ WEND 
+ RETURN 0
+END
 
 DEF GetWindowFrameWidth(WND)
  RETURN WIN_WIDTH[WND AND NUWIDMASK]
@@ -851,6 +1034,9 @@
 common def GetWindowName$(wnd)
  return win_name$[wnd and nuwidmask]
 end
+common def SetWindowName wnd,name$
+ win_name$[wnd and nuwidmask]=name$
+end
 COMMON DEF GetWindowWidth(WND)
  IF!CheckWindow(WND)THEN RETURN -1
  RETURN WIN_WIDTH[WND AND NUWIDMASK]-WIN_FW2[WND AND NUWIDMASK]
@@ -859,6 +1045,15 @@
  IF!CheckWindow(WND)THEN RETURN -1
  RETURN WIN_HEIGHT[WND AND NUWIDMASK]-WIN_FH2[WND AND NUWIDMASK]
 END
+COMMON DEF GetWindowVar(WND,I)
+ RETURN WIN_VAR[WND AND NUWIDMASK,I]
+END
+COMMON DEF SetWindowVar WND,I,V
+ WIN_VAR[WND AND NUWIDMASK,I]=V
+END
+COMMON DEF IsActiveWindow(WND)
+ RETURN(WND AND NUWIDMASK)==WIN_ACTIVENUWID
+END
 VAR WIN_DRAGHANDLER$
 VAR WIN_DRAGHANDLER_A1
 VAR WIN_DRAGHANDLER_A2
@@ -900,6 +1095,15 @@
 DEF MouseClipDef
  MouseClip 0,0,400,240
 END
+COMMON DEF GetTextWidth(STR$)
+ RETURN LEN(STR$)*8
+END
+COMMON DEF GetParentWindow(WND)
+ IF!CheckWindow(WND)THEN
+  RETURN 0
+ ENDIF
+ RETURN NUWIDToWND(WIN_PARENT[WND AND NUWIDMASK])
+END
 ''WINDOW GRAPHIC
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -912,7 +1116,8 @@
  VAR H=WIN_AH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
- GCLS -1
+ IF WIN_BEGIN[NUWID]==2THEN RETURN 0
+ GCLS
  RETURN 0
 END
 DEF ReGBeginWindow(WND)
@@ -938,7 +1143,7 @@
  VAR H=WIN_HEIGHT[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
- GCLS
+ GCLS RGB(224,224,224)
  RETURN 0
 END
 COMMON DEF GEndWindow(WND)
@@ -1009,9 +1214,25 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
+COMMON DEF GLINEWindow WND,X,Y,X2,Y2,COL
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ GLINE X+AX,Y+AY,X2+AX,Y2+AY,COL
+END
+COMMON DEF GCIRCLEWindow WND,X,Y,R,COL
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ GCIRCLE X+AX,Y+AY,R,COL
+END
+COMMON DEF GLOADWindow WND,X,Y,W,H,IMG[],FLG,MODE
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ GLOAD X+AX,Y+AY,W,H,IMG,FLG,MODE
+END
 COMMON DEF GPRINTWindowCC WND,X,Y,STR$,PAL
  GPRINTWindow WND,X,Y,STR$,OTW_CONSOLEPAL[PAL]
 END
+
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
  IF!(COL AND&HFF000000)THEN RETURN
  VAR AX=WIN_FX[WND AND NUWIDMASK]
@@ -1023,11 +1244,7 @@
   A=ASC(C$)
   IF A<=&H7F&&A>=&H20THEN
    A=A-&H20
-'   BX=A*8
-'   BY=BX/(512-8)+PP
-'   GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
-   VAR F=OTW_FNT1[A,1],B=1'&H80000000
-'  ?BIN$(F)
+   VAR F=OTW_FNT1[A,1],B=1
    FOR BY=Y+7 TO Y+4 STEP -1
     FOR BX=X+7 TO X STEP -1
      IF F AND B THEN GPSET BX,BY,COL
@@ -1042,7 +1259,7 @@
     NEXT
    NEXT
   ELSE
-   GFILL X,Y,X+6,Y+6,-1
+   GFILL X,Y,X+6,Y+6,COL
   ENDIF
   X=X+8
  NEXT
@@ -1058,7 +1275,14 @@
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
- GPRINTWindowCC WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND),15
+ GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+1,GetWindowName$(WND),15
+ VAR H=GetWindowFrameHeight(WND)
+ VAR W=GetWindowFrameWidth(WND)
+ VAR C=RGB(20,20,20)
+ GLINEWindow WND,W-08,-H+2,W-2,-2,C
+ GLINEWindow WND,W-7,-H+2,W-1,-2,C
+ GLINEWindow WND,W-2,-H+2,W-8,-2,C
+ GLINEWindow WND,W-1,-H+2,W-7,-2,C
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
@@ -1099,9 +1323,73 @@
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
  IF E THEN RETURN
- GFILLWindow W,0,0,GetWindowWidth(W),GetWindowHeight(W),RGB(128,128,128)
+ VAR HE=GetWindowHeight(W)
+ VAR WI=GetWindowWidth(W)
+ VAR NA$=GetWindowName$(W)
+ GFILLWindow W,0,0,WI,HE,RGB(192,192,192)
+ GBOXWindow W,0,0,WI,HE,RGB(0,0,0)
+ GPRINTWindow W,(WI-GetTextWidth(NA$))/2,(HE-6)/2,NA$,RGB(0,0,0)
  E=GEndWindow(W)
 END
+DEF ButtonLMouseUP W,C,T,X,Y
+ VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
+END
+'PlainTextBox
+DEF TextBoxPainter W,C,T,A1,A2
+ VAR E=GBeginWindow(W)
+ IF E THEN RETURN
+ VAR HE=GetWindowHeight(W)
+ VAR WI=GetWindowWidth(W)
+ VAR NA$=GetWindowName$(W)
+ VAR CX=GetWindowVar(W,1)
+ GFILLWindow W,0,0,WI,HE,-1
+ GPRINTWindow W,1,1,NA$,RGB(0,0,0)
+ IF IsActiveWindow(W)THEN
+  GFILLWindow W,CX*8,6,CX*8+8,7,RGB(0,0,0)
+ ENDIF
+ GBOXWindow W,0,0,WI,HE,RGB(0,0,0)
+ E=GEndWindow(W)
+END
+DEF TextBoxLMouseDown W,C,T,X,Y
+END
+DEF TextBoxChFocus W,C,T,X,Y
+ TextBoxPainter W,C,T,0,0
+END
+DEF TextBoxKey W,C,T,KEY,A2
+ VAR K$=CHR$(KEY)
+ VAR CX=GetWindowVar(W,1)
+ VAR T$=GetWindowName$(W)
+ IF K$==BS$()THEN
+  IF CX THEN
+   SetWindowName W,RemoveStr$(T$,CX-1,1)
+   SetWindowVar W,1,CX-1
+  ENDIF
+ ELSE
+  SetWindowName W,InsertStr$(T$,CX,K$)
+  SetWindowVar W,1,CX+1
+ ENDIF
+ TextBoxPainter W,C,T,0,0
+END
+DEF TextBoxButton W,C,T,B,A2
+ VAR F=GetWindowVar(W,2)
+ VAR M=MAINCNT
+ IF M-F>10THEN
+  SetWindowVar W,2,M
+  VAR CX=GetWindowVar(W,1)
+  IF B AND 4&&CX THEN
+   SetWindowVar W,1,CX-1
+   TextBoxPainter W,C,T,0,0
+  ENDIF
+  IF B AND 8THEN
+   IF LEN(GetWindowName$(W))>CX THEN
+    SetWindowVar W,1,CX+1
+    TextBoxPainter W,C,T,0,0
+   ENDIF
+  ENDIF
+ ENDIF
+ 
+' BEEP
+END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
  GPSET 408,0,-1
@@ -1134,13 +1422,21 @@
 VAR OTW_RMOUSEDWN
 VAR OTW_RMOUSEUP
 VAR OTW_CNT,OTW_FPS,OTW_FPSCNT
+VAR OTW_FCNT,OTW_FPF#,OTW_FPFCNT
+VAR OTW_KX
+VAR OTW_KY
+VAR OTW_KX2
+VAR OTW_KY2
+VAR OTW_USEBTN
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   OTWRunning=TRUE
+  OTW_USEBTN=&B11001111
   OTW_FPS=1
   OTW_FPSCNT=1
+  OTW_FPF#=1
+  OTW_FPFCNT=1
   'ACLS
-  XSCREEN 2,512,2
   OTW_DP=4
   OTW_SP=0
   OTW_BP=1
@@ -1156,15 +1452,17 @@
 GCLS 
   OTW_INITSP
   GPRIO 1023
-  'GOTO @_
+  GOTO @_
+  XSCREEN 2,512,2
   DISPLAY 1
+  CLS
   VISIBLE 1,0,1,0
   LOCATE 0,25
   ?":LEFT CLICK"
   ?":RIGHT CLICK(UNUSED)"
   ?"TOUCH:CURSOR
   BGSCREEN 0,25,15
-  BGSCALE 0,20/25,20/25'1
+  BGSCALE 0,19.5/25,19.5/25'1
   GCLS 'RGB(255,0,0)
   BACKCOLOR RGB(0,192,128)
   VAR X,Y,I
@@ -1176,6 +1474,19 @@
   I=I+7
   NEXT
   BGPAGE OTW_DP
+  VAR K$="KEYBOARD"
+  OTW_KX=39*8
+  OTW_KY=0
+  OTW_KX2=40*8
+  OTW_KY2=LEN(K$)*8
+  ATTR 1
+  FOR I=0TO LEN(K$)-1
+   COLOR 15,8
+   LOCATE 39,I
+   ?K$[I];
+  NEXT
+  COLOR 15,0
+  ATTR 0
   DISPLAY 0
   @_
   PrintConsole "====================="+LF$()
@@ -1229,7 +1540,7 @@
   SPVAR OTW_MOVWINSP,0,1
   CLS
   LOCATE 0,29
- NewProcess"WCLOCK","" OUT E,E,E
+ NewProcess"RUN","" OUT E,E,E
  ENDIF
 RETURN
 END
@@ -1252,6 +1563,7 @@
 VAR OTW_OLDLMOUSE
 VAR OTW_OLDRMOUSE
 VAR OTW_FDIFF
+VAR OTW_OLDBTN
 COMMON DEF L_OTW
  VAR MOVEMOUSE
  UpdateMouse
@@ -1264,11 +1576,16 @@
  ENDIF
  IF BTN THEN
   IF BTN AND OTW_LMOUSEDWN THEN
+   E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID),FALSE)
+   WIN_ACTIVENUWID=NUWID
    IF NUWID AND WIN_FRAMEFLG THEN
     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+    
+    WIN_ACTIVENUWID=NUWID AND 32767
    ELSE
     E=LMouseDownWindow(NUWIDToWND(NUWID))
    ENDIF
+   E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID),TRUE)
   ENDIF
   IF BTN AND OTW_LMOUSEUP THEN
    IF WIN_DRAGHANDLER_USE THEN
@@ -1286,10 +1603,26 @@
  IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
  OTW_OLDMOUSEY=OTW_MOUSEY
- VOID UpdateWindow(WIN_ROOTWND)
+ VAR K$=INKEY$()
+ IF LEN(K$)THEN
+  E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
+ ENDIF
+ VOID UpdateWindowOnly(WIN_ROOTWND)
  VOID UpdateWindow(TSTWND2)
  VOID UpdateWindow(TSTWND)
  VOID UpdateWindow(TSTWND3)
+ OTW_FDIFF=MAINCNT-OTW_FCNT
+ IF OTW_FDIFF>1 THEN
+  OTW_FPF#=OTW_FPFCNT
+  IF!OTW_FPFCNT THEN
+   OTW_FPF#=1.0/OTW_FDIFF
+   IF OTW_FPF#<0.3THEN OTW_FPF#=0.333
+  ENDIF
+  OTW_FPFCNT=0
+  OTW_FCNT=MAINCNT
+ ELSE
+  INC OTW_FPFCNT
+ ENDIF
  OTW_FDIFF=MAINCNT-OTW_CNT
  IF OTW_FDIFF>60 THEN
   OTW_FPS=OTW_FPSCNT
@@ -1299,13 +1632,50 @@
  ELSE
   INC OTW_FPSCNT
  ENDIF
+ BTN=BUTTON()AND OTW_USEBTN
+ IF BTN THEN
+  IF MAINCNT-OTW_OLDBTN THEN
+   E=SendButtonWindow(NUWIDToWND(WIN_ACTIVENUWID),BTN)
+   OTW_OLDBTN=MAINCNT
+  ENDIF
+ ENDIF
 ' ExitProcess 1
 RETURN
 END
+VAR RUNCTL
+COMMON DEF I_RUN
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ ExtendControl "RUN",GetWindowControl() OUT RUNCTL,E
+ VAR WND
+ NewTopLevelWindow RUNCTL,"RUN",64,32 OUT WND,E
+ E=SetControlNotificationHandler(RUNCTL,"RunNotificationHandler")
+ SetProcessVar WND
+ VAR TW
+ NewWindow GetButtonControl(),"RUN",0,10,32,10,WND,0OUT TW,E
+ NewWindow GetTextBoxControl(),"",0,0,64,8,WND,0OUT TW,E
+END
+COMMON DEF L_RUN
+ VAR E=UpdateWindow(GetProcessVar())
+END
 VAR WCLOCKWND
+VAR WCLOCKCTL
 VAR WCLOCKBC
 VAR WCLOCKBC2
 VAR WCLOCKTIM
+COMMON DEF GetChildWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ RETURN NUWIDToWND(WIN_CHILD[WND AND NUWIDMASK])
+END
+COMMON DEF RunNotificationHandler W,C,T,V,A2
+ VAR PID,NUPID,E
+ NewProcess GetWindowName$(GetChildWindow(GetParentWindow(V))),"" OUT PID,NUPID,E
+ IF E THEN BEEP
+END
 COMMON DEF I_WCLOCK
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -1313,22 +1683,35 @@
   RETURN
  ENDIF
  VAR E
-  NewTopLevelWindow GetWindowControl(),"CLOCK",64,64 OUT WCLOCKWND,E
+ ExtendControl "WCLOCK",GetWindowControl() OUT WCLOCKCTL,E
+ E=SetControlPainter(WCLOCKCTL,"WCLOCKPainter")
+ NewTopLevelWindow WCLOCKCTL,"CLOCK",64,64 OUT WCLOCKWND,E
  WCLOCKTIM=MAINCNT/60
  WCLOCKTIM=WCLOCKTIM*60
  'NewWindow GetButtonControl()
  NewWindow TSTCTL,"TEST",8,8,32,32,WCLOCKWND,0 OUT WCLOCKBC,E
- NewWindow TSTCTL,"TEST",16,16,32,32,WCLOCKWND,0 OUT WCLOCKBC2,E
+ NewWindow GetTextBoxControl(),"TEST",0,16,48,8,WCLOCKWND,0OUT WCLOCKBC2,E
+'NewWindow GetButtonControl(),"TEST",16,16,32,32,WCLOCKWND,0 OUT WCLOCKBC2,E
+ E=SetControlNotificationHandler(WCLOCKCTL,"WCLOCKNotif")
+ SetProcessVar WCLOCKWND
 END
+COMMON DEF WCLOCKNotif W,C,T,WND,V
+ BEEP 
+END
+COMMON DEF WCLOCKPainter W,C,T,A,B
+ VAR E=CallBaseControlHandler(W,C,T,A,B)
+ WCLOCK_RP
+END
 COMMON DEF L_WCLOCK
  VAR E
- E=UpdateWindow(WCLOCKBC)
+ WCLOCKWND=GetProcessVar()
+' E=UpdateWindow(WCLOCKBC)
  E=PeekWindowEvent(WCLOCKWND)
- IF E==RepaintControlEvent()THEN
-  WCLOCK_RP
-  E=UpdateWindow(WCLOCKWND)
-  RETURN
- ENDIF
+' IF E==RepaintControlEvent()THEN
+'  E=UpdateWindow(WCLOCKWND)
+'  WCLOCK_RP
+'  RETURN
+' ENDIF
  E=UpdateWindow(WCLOCKWND)
  IF E THEN RETURN
  IF MAINCNT-WCLOCKTIM>=60 THEN
@@ -1336,7 +1719,7 @@
   WCLOCKTIM=WCLOCKTIM*60
   WCLOCK_RP
  ENDIF
- E=UpdateWindow(WCLOCKBC2)
+' E=UpdateWindow(WCLOCKBC2)
  
 END
  DEF WCLOCK_RP
@@ -1402,7 +1785,7 @@
 COMMON DEF UpdateMouse
  VAR S,X,Y
  TOUCH OUT S,X,Y
- IF OTW_MOUSEOLDST AND S THEN
+ IF OTW_MOUSEOLDST&&S THEN
   OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
   OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
    IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
@@ -1412,6 +1795,17 @@
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
    OTW_MOUSEX#=OTW_MOUSEX
    OTW_MOUSEY#=OTW_MOUSEY
+ ELSE
+  IF S&&X>=OTW_KX&&X<OTW_KX2&&Y>=OTW_KY&&Y<OTW_KY2 THEN
+   BEEP 
+   VAR K$
+   XSCREEN 0,512,2
+   VISIBLE 1,1,1,1
+   
+   OTW_SP=OTW_DP
+   GPAGE OTW_DP,OTW_DP
+   KEY 1,"
+  ENDIF
  ENDIF
  OTW_MOUSEOLDX=X
  OTW_MOUSEOLDY=Y
@@ -1420,13 +1814,14 @@
   VAR X#,Y#
   STICK OUT X#,Y#
   IF X#!=0 OR Y#!=0 THEN
-   OTW_MOUSEX#=OTW_MOUSEX#+X#*0.2'/2
-   OTW_MOUSEY#=OTW_MOUSEY#-Y#*0.2'/2
+   OTW_MOUSEX#=OTW_MOUSEX#+X#*(4/OTW_FPF#)'0.2'/2
+   OTW_MOUSEY#=OTW_MOUSEY#-Y#*(4/OTW_FPF#)'0.2'/2
    IF OTW_MOUSEX#<OTW_MOUSECLIPX THEN OTW_MOUSEX#=OTW_MOUSECLIPX
    IF OTW_MOUSEY#<OTW_MOUSECLIPY THEN OTW_MOUSEY#=OTW_MOUSECLIPY
    IF OTW_MOUSEX#>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX#=OTW_MOUSECLIPX2-1
    IF OTW_MOUSEY#>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY#=OTW_MOUSECLIPY2
-   SPOFS OTW_MOUSESP,OTW_MOUSEX#,OTW_MOUSEY#
+   SPANIM OTW_MOUSESP,"XY",-1,OTW_MOUSEX#,OTW_MOUSEY#
+'   SPOFS OTW_MOUSESP,OTW_MOUSEX#,OTW_MOUSEY#
    OTW_MOUSEX=OTW_MOUSEX#
    OTW_MOUSEY=OTW_MOUSEY#
   ENDIF
diff -u OTW.TXT OTWE
--- OTW.TXT
+++ OTWE
@@ -550,17 +550,11 @@
   RETURN
  ENDIF
  
- VAR SP=OTW_TOPLEVELCNT+1,FRAME
-' IF SPVAR(SP,0)THEN
-  WHILE SPVAR(SP,0)
-   SP=(SP+1)MOD 255
-  WEND
-  FRAME=SP+1
-  WHILE SPVAR(FRAME,0)
-   FRAME=(FRAME+1)MOD 255
-  WEND
-' ENDIF
- WIN_SP[NUWID]=SP OR FRAME<<10
+ VAR SP=OTW_TOPLEVELCNT+1
+ WHILE SPVAR(SP,0)
+  SP=(SP+1)MOD 255
+ WEND
+ WIN_SP[NUWID]=SP'OR FRAME<<10
  VAR ROOTNUWID=WIN_ROOTWND AND NUWIDMASK
  VAR C=WIN_CHILD[ROOTNUWID],N
  WIN_PARENT[NUWID]=ROOTNUWID
@@ -606,13 +600,8 @@
  SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
  SPSHOW SP
-'SPSET FRAME,0
- SPSCALE FRAME,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
- SPOFS FRAME,WIN_AX[NUWID]-1,WIN_AY[NUWID]-9,0
+
  SPVAR SP,0,WND
- SPVAR FRAME,0,WND
- SPCOLOR FRAME,RGB(128,0,0,255)
- SPCOL FRAME,0,0,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
  OTW_SPSORT
 END
 
@@ -620,12 +609,13 @@
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  RepaintAllWindow WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID],WIN_AH[NUWID]
- VAR E=DeleteWindow(NUWID)
+ VAR E=DeleteWindowNUWID(NUWID)
  RETURN E
 END
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ WIN_WID[NUWID]=0
  WIN_MSGS[NUWID]=0
  WIN_MSGE[NUWID]=0
  VAR I
@@ -635,15 +625,15 @@
  IF WIN_CHILD[NUWID]THEN
   VAR C=WIN_CHILD[NUWID]
   WHILE C
-   E=DeleteWindow(C)
+   E=DeleteWindowNUWID(C)
+   C=WIN_NEXT[NUWID]
   WEND
  ENDIF
  VAR N=WIN_NEXT[NUWID]
  VAR P=WIN_PREV[NUWID]
+ WIN_NEXT[NUWID]=0
+ WIN_PREV[NUWID]=0
  IF N THEN
-  IF P THEN
-   WIN_NEXT[P]=N
-  ENDIF
   WIN_PREV[N]=P
  ENDIF
  IF P THEN
@@ -652,6 +642,10 @@
  IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
   WIN_CHILD[WIN_PARENT[NUWID]]=N
  ENDIF
+ IF WIN_SP[NUWID]THEN
+  SPVAR WIN_SP[NUWID],0,0
+  SPCLR WIN_SP[NUWID]
+ ENDIF
  RETURN 0
 END
 
@@ -706,8 +700,6 @@
      SPOFS WIN_SP[C]AND 1023OUT S,S,Z2
      SPOFS WIN_SP[NUWID]AND 1023,,,Z2
      SPOFS WIN_SP[C]AND 1023,,,Z
-     SPOFS WIN_SP[NUWID]>>10,,,Z2+1'1
-     SPOFS WIN_SP[C]>>10,,,Z+1'1
     ENDIF
     VOID RepaintWindow(WND)
     OTW_DrawMap NUWID
@@ -831,7 +823,7 @@
 'ENDIF
 'IALOG STR$(WIN_FX[PNUWID]-WIN_AX[NUWID])
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
- GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
+' GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
  ENDIF
  VAR E=FrontWindow(WND)
  IF E THEN RETURN E
@@ -960,10 +952,12 @@
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID])
 END
 DEF LMouseDownWindowOnFrame(WND)
- RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
 DEF LMouseUpWindowOnFrame(WND)
- RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
@@ -986,6 +980,7 @@
  VAR S=WIN_MSGE[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ IF WIN_WID[NUWID]<=0THEN RETURN 0
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
@@ -999,6 +994,7 @@
  VAR S=WIN_MSGE[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ IF WIN_WID[NUWID]<=0THEN RETURN 0
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
@@ -1165,8 +1161,6 @@
   WHILE PNUWID
    GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
 
-'GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID]-AX,WIN_AY[PNUWID]-AY,0
-'   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
    PNUWID=WIN_NEXT[PNUWID]
   WEND
  ENDIF
@@ -1180,23 +1174,13 @@
    PNUWID=WIN_NEXT[PNUWID]
    CONTINUE
   ENDIF
-'  ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
-'  
-' IF WIN_AX[PNUWID]THEN
-'   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],-WIN_AX[PNUWID]-WIN_WIDTH[PNUWID],-WIN_AY[PNUWID]-WIN_HEIGHT[PNUWID],0
-' ELSE
-'  GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
-' ENDIF
    GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
  GPAGE OTW_SP,OTW_DP
-'?AX,AY,W,H
-' GCOPY OTW_BP,0,0,W,H,AX,AY,0
  GCLIP 1,0,0,400,240
  GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
-'DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
@@ -1278,7 +1262,8 @@
  GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+1,GetWindowName$(WND),15
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
- VAR C=RGB(20,20,20)
+ VAR C=RGB(224,224,224)
+ GFILLWindow WND,W-09,-H,W,-1,RGB(224,0,0)
  GLINEWindow WND,W-08,-H+2,W-2,-2,C
  GLINEWindow WND,W-7,-H+2,W-1,-2,C
  GLINEWindow WND,W-2,-H+2,W-8,-2,C
@@ -1292,11 +1277,21 @@
 DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
  VAR X,Y
  SplitInt POS OUT X,Y
+ VAR W=GetWindowFrameWidth(WND)
+ IF X>=W-9THEN
+  IF BTN AND CTL_BTNUPFLG THEN
+   VAR E=DeleteWindow(WND)
+   ?E
+  ENDIF
+  RETURN
+ ENDIF
  IF BTN AND CTL_LBTNFLG THEN
   VAR NUWID=WND AND NUWIDMASK
   IF BTN AND CTL_BTNDWNFLG THEN
    VAR AX=WIN_AX[NUWID]
    VAR AY=WIN_AY[NUWID]
+   INC X,AX
+   INC Y,AY
    IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
    SPSHOW OTW_MOVWINSP
    SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
@@ -1430,6 +1425,12 @@
 VAR OTW_USEBTN
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  PrintConsole "====================="+LF$()
+  PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
+  PrintConsole "====================="+LF$()
+  PrintConsole "Ver 5.0-B"+LF$()
+  BEEP 94,-1000
+  OTW_LOADFONT
   OTWRunning=TRUE
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -1489,11 +1490,6 @@
   ATTR 0
   DISPLAY 0
   @_
-  PrintConsole "====================="+LF$()
-  PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
-  PrintConsole "====================="+LF$()
-  PrintConsole "Ver 5.0-B"+LF$()
-  BEEP 94,-1000
   OTW_INIT=TRUE
   OTW_WIN_INITARRAY
   OTW_CTL_INITARRAY
@@ -1507,7 +1503,6 @@
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
-  OTW_LOADFONT
   GCLIP 1,0,0,400,240
   VISIBLE 1,1,1,1
   OTW_MOUSEX=(400-16)/2
@@ -1608,9 +1603,9 @@
   E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
- VOID UpdateWindow(TSTWND2)
- VOID UpdateWindow(TSTWND)
- VOID UpdateWindow(TSTWND3)
+ E=UpdateWindow(TSTWND2)
+ E=UpdateWindow(TSTWND)
+ E=UpdateWindow(TSTWND3)
  OTW_FDIFF=MAINCNT-OTW_FCNT
  IF OTW_FDIFF>1 THEN
   OTW_FPF#=OTW_FPFCNT
@@ -1661,7 +1656,67 @@
 END
 COMMON DEF L_RUN
  VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 1
 END
+VAR ABOUTCTL
+COMMON DEF I_ABOUT
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ ExtendControl "ABOUT",GetWindowControl() OUT ABOUTCTL,E
+ VAR WND
+ NewTopLevelWindow ABOUTCTL,"OTW",128,32 OUT WND,E
+ SetProcessVar WND
+ E=SetControlPainter(ABOUTCTL,"AboutPainter")
+END
+COMMON DEF AboutPainter WND,CTL,TYPE,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
+' E=GBeginWindow(WND)
+ IF E THEN RETURN
+ GPRINTWindow WND,0,0," otya 3D window ",RGB(0,0,0)
+ GPRINTWindow WND,0,8,"   system 5.0   ",RGB(0,0,0)
+ E=GEndWindow(WND)
+END
+COMMON DEF L_ABOUT
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 1
+END
+VAR LAUNCHERCTL
+DIM LAUNCHERITEM$[0]
+DIM LAUNCHERLEN
+COMMON DEF LauncherPainter WND,CTL,T,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,T,A1,A2)
+ VAR I
+ FOR I=0TO LAUNCHERLEN-1
+  GPRINTWindow WND,0,I*8,LAUNCHERITEM$[I],RGB(0,0,0)
+ NEXT
+ E=GEndWindow(WND)
+END
+COMMON DEF I_LAUNCHER
+ IF LAUNCHERCTL THEN
+  VAR WND,E
+  NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",64,64 OUT WND,E
+  SetProcessVar WND
+  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
+ ELSE
+  LAUNCHERLEN=4
+  LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
+  LAUNCHERITEM$[0]="WCLOCK"
+  LAUNCHERITEM$[1]="RUN"
+  LAUNCHERITEM$[2]="ABOUT"
+  LAUNCHERITEM$[3]="LAUNCHER"
+  ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
+  I_LAUNCHER
+ ENDIF
+END
+COMMON DEF L_LAUNCHER
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 1
+END
+
 VAR WCLOCKWND
 VAR WCLOCKCTL
 VAR WCLOCKBC
@@ -1713,7 +1768,7 @@
 '  RETURN
 ' ENDIF
  E=UpdateWindow(WCLOCKWND)
- IF E THEN RETURN
+ IF E THEN ExitProcess 1
  IF MAINCNT-WCLOCKTIM>=60 THEN
   WCLOCKTIM=MAINCNT/60
   WCLOCKTIM=WCLOCKTIM*60
@@ -1837,7 +1892,7 @@
  VAR T$=" !"+CHR$(34)+"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghiijklmnopqrstuvwxyz{|}~¢£¦§¨¨©®±´¶ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĊċČčĎďĒēĔĕĖėĘęĞğĠġĢģĦħĪīĮįİıĲĳĶķĹĺĻļĽľŁłŃńŅņŇňŐőŒœŔŕŘřŚśŞşŠšŤťŪūŮůŰűŲųŸŹźŻżŽžƒǅǆǲǳȚț˚;΄΅ΆΈΉΊΌΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώЁАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяё“”†‡…‰※€⇒⇔∀∂∞∴∵⊂⊃⌒☆♀♂♡♧♭、。〃々〆「」『』〒〜〝〟ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろわをんゝゞァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロワヲンヴ・ー仝｀｜"
  'LOAD FONT-1
  VAR C$
- OTW_FNT1=NewArray2(&H7F-&H20,2)
+ OTW_FNT1=NewArray2(&H7F-&H20+1,2)
 'GPAGE 0,5
  VAR X,Y,I,J
 'RETURN
@@ -1848,6 +1903,37 @@
  FOR I=0TO 15
   READ PAL[I]
  NEXT
+ LOAD"GRP0:FNT",0
+ VAR L
+ GPAGE 0,0
+ FOR I=&H20TO &H7F
+  L=I-&H20
+  X=I*8
+  Y=X/512
+  Y=Y*8
+  X=X MOD 512
+  VAR X2=X+7,Y2=Y+7
+  VAR F=0
+  FOR J=Y TO Y2
+   FOR K=X TO X2
+   NEXT
+  NEXT
+   VAR B=1
+   FOR K=Y+7 TO Y+4 STEP -1
+    FOR J=X+7 TO X STEP -1
+     IF(GSPOIT(J,K)AND&HFF000000)THEN OTW_FNT1[L,1]=OTW_FNT1[L,1]OR B
+     B=B<<1
+    NEXT
+   NEXT
+   B=1
+   FOR K=Y+3 TO Y STEP -1
+    FOR J=X+7 TO X STEP -1
+     IF(GSPOIT(J,K)AND&HFF000000)THEN OTW_FNT1[L,0]=OTW_FNT1[L,0]OR B
+     B=B<<1
+    NEXT
+   NEXT
+ NEXT
+RETURN
  WHILE 1
   READ C$
   IF C$=="END"THEN BREAK
@@ -1908,340 +1994,5 @@
 DATA &B01000100
 DATA &B00111000
 DATA &B00000000
-DATA "1"
-DATA &B00010000
-DATA &B01110000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B01111100
-DATA &B00000000
-DATA "2"
-DATA &B00111000
-DATA &B01000100
-DATA &B00000100
-DATA &B00001000
-DATA &B00010000
-DATA &B00100000
-DATA &B01111100
-DATA &B00000000
-DATA "3"
-DATA &B00111000
-DATA &B01000100
-DATA &B00000100
-DATA &B00011000
-DATA &B00000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "4"
-DATA &B00001000
-DATA &B00011000
-DATA &B00101000
-DATA &B01001000
-DATA &B01001000
-DATA &B01111100
-DATA &B00001000
-DATA &B00000000
-DATA "5"
-DATA &B01111100
-DATA &B01000000
-DATA &B01111000
-DATA &B01000100
-DATA &B00000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "6"
-DATA &B00011000
-DATA &B00100000
-DATA &B01000000
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "7"
-DATA &B01111100
-DATA &B01000100
-DATA &B00001000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "8"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "9"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111100
-DATA &B00000100
-DATA &B00000100
-DATA &B00111000
-DATA &B00000000
-DATA ":"
-DATA &B00000000
-DATA &B00000000
-DATA &B00010000
-DATA &B00000000
-DATA &B00000000
-DATA &B00010000
-DATA &B00000000
-DATA &B00000000
-
-DATA "A"
-DATA &B00010000
-DATA &B00101000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "B"
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B00000000
-DATA "C"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "D"
-DATA &B01110000
-DATA &B01001000
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01001000
-DATA &B01110000
-DATA &B00000000
-DATA "E"
-DATA &B01111100
-DATA &B01000000
-DATA &B01000000
-DATA &B01111000
-DATA &B01000000
-DATA &B01000000
-DATA &B01111100
-DATA &B00000000
-DATA "F"
-DATA &B01111100
-DATA &B01000000
-DATA &B01000000
-DATA &B01111000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B00000000
-DATA "G"
-DATA &B00111100
-DATA &B01000000
-DATA &B01000000
-DATA &B01011100
-DATA &B01000100
-DATA &B01000100
-DATA &B00111100
-DATA &B00000000
-DATA "H"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01111100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "I"
-DATA &B00111000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00111000
-DATA &B00000000
-DATA "J"
-DATA &B00011100
-DATA &B00001000
-DATA &B00001000
-DATA &B00001000
-DATA &B00001000
-DATA &B01001000
-DATA &B00110000
-DATA &B00000000
-DATA "K"
-DATA &B01000100
-DATA &B01001000
-DATA &B01010000
-DATA &B01100000
-DATA &B01010000
-DATA &B01001000
-DATA &B01000100
-DATA &B00000000
-DATA "L"
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01111100
-DATA &B00000000
-DATA "M"
-DATA &B01000100
-DATA &B01101100
-DATA &B01010100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "N"
-DATA &B01000100
-DATA &B01100100
-DATA &B01010100
-DATA &B01001100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "O"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "P"
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B00000000
-DATA "Q"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01010100
-DATA &B01001000
-DATA &B00110100
-DATA &B00000000
-DATA "R"
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B01010000
-DATA &B01001000
-DATA &B01000100
-DATA &B00000000
-DATA "S"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000000
-DATA &B00111000
-DATA &B00000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "T"
-DATA &B01111100
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "U"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "V"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00101000
-DATA &B00101000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "W"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01010100
-DATA &B01101100
-DATA &B01000100
-DATA &B00000000
-DATA "X"
-DATA &B01000100
-DATA &B01000100
-DATA &B00101000
-DATA &B00010000
-DATA &B00101000
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "Y"
-DATA &B01000100
-DATA &B01000100
-DATA &B00101000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "Z"
-DATA &B01111100
-DATA &B00000100
-DATA &B00001000
-DATA &B00010000
-DATA &B00100000
-DATA &B01000000
-DATA &B01111100
-DATA &B00000000
 DATA "END"
-DATA "a"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-
 END
diff -u OTW.TXT OTWF
--- OTW.TXT
+++ OTWF
@@ -9,6 +9,7 @@
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
 VAR OTW_FNT1[0,0]'0x20~0x7F
+VAR OTW_FNT1W[0]'0x20~0x7F
 VAR OTW_FNT2[0,0]'
 VAR OTW_FNT3[0,0]'
 VAR OTW_CONSOLEPAL[0]
@@ -64,6 +65,8 @@
 VAR OTW_SP
 'BUFFER PAGE
 VAR OTW_BP
+'GPAGE
+VAR OTW_GP
 VAR WIN_FWIDTH1
 VAR WIN_FHEIGHT1
 VAR WIN_FWIDTH2
@@ -168,6 +171,7 @@
 VAR CTL_KEYHANDLER
 VAR CTL_BTNHANDLER
 VAR CTL_CHFOCUSHANDLER
+VAR CTL_MOUSEMVHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -205,6 +209,7 @@
  CTL_KEYHANDLER=7
  CTL_BTNHANDLER=8
  CTL_CHFOCUSHANDLER=9
+ CTL_MOUSEMVHANDLER=10
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -352,6 +357,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_CHFOCUSHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlMouseMoveHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_MOUSEMVHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -572,10 +582,8 @@
    ENDIF
   WEND
  ENDIF
- WIN_TopLevelX=WIN_TopLevelX+8
- WIN_TopLevelY=WIN_TopLevelY+8
- WIN_TopLevelX=WIN_TopLevelX+8
- WIN_TopLevelY=WIN_TopLevelY+8
+ INC WIN_TopLevelX,WIN_FHEIGHT1
+ INC WIN_TopLevelY,WIN_FHEIGHT1
  WIN_FW1[NUWID]=CTL_FW1[NUCID]'WIN_TopLevelX
  WIN_FH1[NUWID]=CTL_FH1[NUCID]'WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
@@ -733,32 +741,33 @@
 DEF RepaintAllWindow X,Y,W,H
  VAR NXT=WIN_ROOTWND AND NUWIDMASK
  VAR B=NXT
- WHILE NXT
-  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
-  OTW_DrawMap NXT
-  IF WIN_CHILD[NXT]THEN
-   B=WIN_CHILD[NXT]
+' WHILE NXT
+'  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDHIFT))
+'  OTW_DrawMap NXT
+'  IF WIN_CHILD[NXT]THEN
+'   B=WIN_CHILD[NXT]
    WHILE B
    VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
     OTW_DrawMap B
+    IF WIN_CHILD[B]THEN
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
     IF!WIN_NEXT[B]THEN
      WHILE B
       B=WIN_PARENT[B]
-      IF B==NXT THEN BREAK
-      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+  '    IF B==NXT THEN BREAK
+      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]BREAK
      WEND
-     IF B==NXT THEN BREAK
+     IF!B THEN RETURN
+ '    IF B==NXT THEN BREAK
     ENDIF
-    IF WIN_CHILD[B]THEN
-     B=WIN_CHILD[B]
-     CONTINUE
-    ENDIF
     B=WIN_NEXT[B]
-    IF B==NXT THEN BREAK
+ '   IF B==NXT THEN BREAK
    WEND
-  ENDIF
-  NXT=WIN_NEXT[NXT]
- WEND
+'  ENDIF
+'  NXT=WIN_NEXT[NXT]
+' WEND
 END
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -943,13 +952,16 @@
 COMMON DEF SendChFocusWindow(WND,FLG)
  RETURN SendWindowEvent(WND,CTL_CHFOCUSHANDLER,FLG,0)
 END
+DEF MouseMoveWindow(NUWID)
+ RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_MOUSEMVHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
 DEF LMouseUpWindow(WND)
  VAR NUWID=WND AND NUWIDMASK
- RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID])
+ RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
 DEF LMouseDownWindow(WND)
  VAR NUWID=WND AND NUWIDMASK
- RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID])
+ RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
 DEF LMouseDownWindowOnFrame(WND)
  VAR NUWID=WND AND NUWIDMASK
@@ -1216,7 +1228,32 @@
 COMMON DEF GPRINTWindowCC WND,X,Y,STR$,PAL
  GPRINTWindow WND,X,Y,STR$,OTW_CONSOLEPAL[PAL]
 END
-
+COMMON DEF GLINEArrayMemory PTR,W,H,X,Y,X2,Y2,COL
+'COL=RGBToShort(COL)
+ DIM M[0]
+ M=GetRawMemory()
+ VAR I
+ VAR DX=ABS(X2-X)
+ VAR DY=ABS(Y2-Y)
+ VAR SX,SY
+ IF X<X2 THEN SX=1 ELSE SX=-1
+ IF Y<Y2 THEN SY=1 ELSE SY=-1
+ VAR ERR=DX-DY
+ VAR E2
+ WHILE 1
+  IF X<W&&Y<H&&X>=0&&Y>=0THEN M[PTR+X+Y*W]=COL
+  IF X==X2&&Y==Y2 THEN RETURN
+  E2=2*ERR
+  IF E2>-DY THEN
+   DEC ERR,DY
+   INC X,SX
+  ENDIF
+  IF E2<DX THEN
+   INC ERR,DX
+   INC Y,SY
+  ENDIF
+ WEND
+END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
  IF!(COL AND&HFF000000)THEN RETURN
  VAR AX=WIN_FX[WND AND NUWIDMASK]
@@ -1441,11 +1478,18 @@
   OTW_DP=4
   OTW_SP=0
   OTW_BP=1
+  OTW_GP=2
   MouseClipDef
   GPAGE OTW_SP,OTW_SP
   GPRIO 1023
   GCLS
   GCLS RGB(0,192,0)
+  VAR I,J
+  FOR J=0TO 3
+   FOR I=0TO 240/4
+    GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)'RGB(0,I*4,0)
+   NEXT
+  NEXT
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
   GCLS RGB(0,192,128)
@@ -1466,7 +1510,8 @@
   BGSCALE 0,19.5/25,19.5/25'1
   GCLS 'RGB(255,0,0)
   BACKCOLOR RGB(0,192,128)
-  VAR X,Y,I
+  VAR X,Y
+  I=0
   FOR Y=0TO 14
    FOR X=0TO 24
     BGPUT 0,X,Y,I
@@ -1535,7 +1580,7 @@
   SPVAR OTW_MOVWINSP,0,1
   CLS
   LOCATE 0,29
- NewProcess"RUN","" OUT E,E,E
+ NewProcess"LAUNCHER","" OUT E,E,E
  ENDIF
 RETURN
 END
@@ -1571,7 +1616,7 @@
  ENDIF
  IF BTN THEN
   IF BTN AND OTW_LMOUSEDWN THEN
-   E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID),FALSE)
+   VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
    IF NUWID AND WIN_FRAMEFLG THEN
     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
@@ -1580,7 +1625,10 @@
    ELSE
     E=LMouseDownWindow(NUWIDToWND(NUWID))
    ENDIF
-   E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID),TRUE)
+   IF WIN_ACTIVENUWID!=OA THEN
+    E=SendChFocusWindow(NUWIDToWND(OA),FALSE)
+    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID),TRUE)
+   ENDIF
   ENDIF
   IF BTN AND OTW_LMOUSEUP THEN
    IF WIN_DRAGHANDLER_USE THEN
@@ -1588,14 +1636,19 @@
     E=ClearWindowDragHandler()
    ELSE
     IF NUWID AND WIN_FRAMEFLG THEN
-     E=LMouseUpWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+     E=LMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
     ELSE
-     E=LMouseUpWindow(NUWIDToWND(NUWID))
+     E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
     ENDIF
    ENDIF
   ENDIF
  ENDIF
- IF BUTTON()AND 64THEN DUMP_WND
+ IF MOVEMOUSE THEN
+  IF!(NUWID AND WIN_FRAMEFLG)THEN
+   E=MouseMoveWindow(NUWID)
+  ENDIF
+ ENDIF
+' IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
  OTW_OLDMOUSEY=OTW_MOUSEY
  VAR K$=INKEY$()
@@ -1695,19 +1748,29 @@
  NEXT
  E=GEndWindow(WND)
 END
+COMMON DEF LauncherLMouseUP WND,CTL,T,X,Y
+ VAR E=CallBaseControlHandler(WND,CTL,T,X,Y)
+ VAR ITEM=Y/8
+ IF ITEM>=LAUNCHERLEN THEN
+  RETURN
+ ENDIF
+ NewProcess LAUNCHERITEM$[ITEM],"" OUT E,E,E
+END
 COMMON DEF I_LAUNCHER
  IF LAUNCHERCTL THEN
   VAR WND,E
-  NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",64,64 OUT WND,E
+  NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",80,LAUNCHERLEN*8 OUT WND,E
   SetProcessVar WND
   E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
+  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
  ELSE
-  LAUNCHERLEN=4
+  LAUNCHERLEN=5
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
   LAUNCHERITEM$[2]="ABOUT"
   LAUNCHERITEM$[3]="LAUNCHER"
+  LAUNCHERITEM$[4]="PAINT"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
   I_LAUNCHER
  ENDIF
@@ -1996,3 +2059,89 @@
 DATA &B00000000
 DATA "END"
 END
+COMMON DEF I_CREATEOTW
+ ?"OTW Develop Tool"
+ VAR K$
+ INC K$,"VAR _1CTL"+LF$()
+ INC K$,"COMMON DEF I__1"+LF$()
+ INC K$," VAR WND,E"+LF$()
+ INC K$," IF!_1CTL THEN"+LF$()
+ INC K$,"  ExtendControl _Q_2_Q,GetWindowControl() OUT _1CTL,E"+LF$()
+ INC K$," ENDIF"+LF$()
+ INC K$," NewTopLevelWindow _1CTL,_Q_2_Q,_W,_H OUT WND,E  SetProcessVar WND"+LF$()
+ INC K$,"END"+LF$()
+ INC K$,"COMMON DEF L__1"+LF$()
+ INC K$,"IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
+ INC K$,"END
+ VAR _1$
+ VAR _2$,_W,_H
+ VAR _Q$=CHR$(34)
+ LINPUT "ProcessName?";_1$
+ LINPUT "WindowName?";_2$
+ INPUT "Width";_W
+ INPUT "Height";_H
+ K$=ReplaceStr$(K$,"_1",_1$)
+ K$=ReplaceStr$(K$,"_2",_2$)
+ K$=ReplaceStr$(K$,"_W",STR$(_W))
+ K$=ReplaceStr$(K$,"_H",STR$(_H))
+ K$=ReplaceStr$(K$,"_Q",_Q$)
+ VAR SLOT=3
+ INPUT "InsertSlot";SLOT
+ PRGEDIT SLOT
+ PRGINS K$
+ ExitProcess 0
+END
+COMMON DEF L_CREATEOTW
+END
+
+VAR PAINTCTL
+COMMON DEF PaintRepaint WND,CTL,T,A1,A2
+ IF CallBaseControlHandler(WND,CTL,T,A1,A2)THEN RETURN
+ DIM A[64*64]
+ ReadArray GetWindowVar(WND,2),A,0,LEN(A)
+ GLOADWindow WND,0,0,64,64,A,0,0
+ VAR E=GEndWindow(WND)
+END
+COMMON DEF PaintLDWN WND,CTL,T,X,Y
+ SetWindowVar WND,3,1
+ SetWindowVar WND,0,X
+ SetWindowVar WND,1,Y
+END
+COMMON DEF PaintLUP WND,CTL,T,X,Y
+ SetWindowVar WND,3,0
+END
+COMMON DEF PaintCF WND,CTL,T,F,A2
+'IF CallBaseControlHandler(WND,CTL,T,F,A2)THEN 
+ IF!F THEN SetWindowVar WND,3,0
+END
+
+COMMON DEF PaintMouseMove WND,CTL,T,X,Y
+ IF!GetWindowVar(WND,3)THEN RETURN
+ VAR OX=GetWindowVar(WND,0)
+ VAR OY=GetWindowVar(WND,1)
+ VAR E=GBeginWindow(WND)
+ GLINEWindow WND,X,Y,OX,OY,RGB(0,0,0)
+ GLINEArrayMemory GetWindowVar(WND,2),64,64,X,Y,OX,OY,RGB(0,0,0)
+ E=GEndWindow(WND)
+ SetWindowVar WND,0,X
+ SetWindowVar WND,1,Y
+END
+COMMON DEF I_PAINT
+ VAR PTR=malloc(64*64)
+ IF!PTR THEN BEEP:ExitProcess 1
+ VAR WND,E
+ IF!PAINTCTL THEN
+  ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
+  E=SetControlMouseMoveHandler(PAINTCTL,"PaintMouseMove")
+  E=SetControlPainter(PAINTCTL,"PaintRepaint")
+  E=SetControlLMouseDownHandler(PAINTCTL,"PaintLDWN")
+  E=SetControlLMouseUpHandler(PAINTCTL,"PaintLUP")
+  E=SetControlChFocusHandler(PAINTCTL,"PaintCF")
+ ENDIF
+ NewTopLevelWindow PAINTCTL,"PAINT",64,64 OUT WND,E  SetProcessVar WND
+ SetWindowVar WND,2,PTR
+END
+COMMON DEF L_PAINT
+IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
diff -u OTW.TXT OTW10
--- OTW.TXT
+++ OTW10
@@ -268,6 +268,7 @@
  CTL_FREE=CTL_NEXT[CTL_FREE]
  CTL_CID[CTL AND 4095]=CTL_CIDCNT
  CTL_NEXT[CTL AND 4095]=0
+ CTL_NAME$[CTL AND 4095]=NAME$
 END
 COMMON DEF ExtendControl NAME$,PARENT OUT CTL,ERR
  IF!CheckControl(PARENT)THEN
@@ -398,7 +399,7 @@
  RETURN 2
 END
 COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
-  IF!CheckControl(CTL)THEN
+ IF!CheckControl(CTL)THEN
   WND=0
   ERR=CTL_INVALIDID
   RETURN
@@ -632,15 +633,15 @@
  NEXT
  IF WIN_CHILD[NUWID]THEN
   VAR C=WIN_CHILD[NUWID]
+  VAR D
   WHILE C
+   D=WIN_NEXT[C]
    E=DeleteWindowNUWID(C)
-   C=WIN_NEXT[NUWID]
+   C=D
   WEND
  ENDIF
  VAR N=WIN_NEXT[NUWID]
  VAR P=WIN_PREV[NUWID]
- WIN_NEXT[NUWID]=0
- WIN_PREV[NUWID]=0
  IF N THEN
   WIN_PREV[N]=P
  ENDIF
@@ -651,9 +652,16 @@
   WIN_CHILD[WIN_PARENT[NUWID]]=N
  ENDIF
  IF WIN_SP[NUWID]THEN
-  SPVAR WIN_SP[NUWID],0,0
-  SPCLR WIN_SP[NUWID]
+  SPVAR WIN_SP[NUWID]AND 511,0,0
+  SPCLR WIN_SP[NUWID]AND 511
+  WIN_SP[NUWID]=0
  ENDIF
+ WIN_NEXT[NUWID]=WIN_FREE
+ WIN_PREV[NUWID]=0
+ WIN_PARENT[NUWID]=0
+ WIN_CHILD[NUWID]=0
+ WIN_FREE=NUWID
+ WIN_NAME$[NUWID]=""
  RETURN 0
 END
 
@@ -665,7 +673,7 @@
  I=1022+255
  WHILE NUWID
   I=I-Z
-  SPOFS WIN_SP[NUWID]AND 1023,,,-255+I
+  SPOFS WIN_SP[NUWID]AND 511,,,-255+I
 '  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
   NUWID=WIN_NEXT[NUWID]
  WEND
@@ -704,10 +712,10 @@
     WIN_NEXT[NUWID]=0
     IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
      VAR Z,Z2,S
-     SPOFS WIN_SP[NUWID]AND 1023OUT S,S,Z
-     SPOFS WIN_SP[C]AND 1023OUT S,S,Z2
-     SPOFS WIN_SP[NUWID]AND 1023,,,Z2
-     SPOFS WIN_SP[C]AND 1023,,,Z
+     SPOFS WIN_SP[NUWID]AND 511OUT S,S,Z
+     SPOFS WIN_SP[C]AND 511OUT S,S,Z2
+     SPOFS WIN_SP[NUWID]AND 511,,,Z2
+     SPOFS WIN_SP[C]AND 511,,,Z
     ENDIF
     VOID RepaintWindow(WND)
     OTW_DrawMap NUWID
@@ -757,7 +765,7 @@
      WHILE B
       B=WIN_PARENT[B]
   '    IF B==NXT THEN BREAK
-      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]BREAK
+      IF WIN_NEXT[B]THEN BREAK
      WEND
      IF!B THEN RETURN
  '    IF B==NXT THEN BREAK
@@ -846,8 +854,7 @@
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
   IF WIN_SP[NUWID]THEN
-   SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
-   SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
+   WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
   ENDIF
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
@@ -1013,7 +1020,7 @@
  @END
  VAR B=WIN_CHILD[NUWID]
  WHILE B
-  VAR E=UpdateWindowOnly(B OR B<<WIDSHIFT)
+  VAR E=UpdateWindowOnly(B OR WIN_WID[B]<<WIDSHIFT)
   IF!WIN_NEXT[B]THEN
    WHILE B
     B=WIN_PARENT[B]
@@ -1193,8 +1200,13 @@
  GPAGE OTW_SP,OTW_DP
  GCLIP 1,0,0,400,240
  GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
+ IF WIN_SP[NUWID]AND 512THEN OTW_SPCHR NUWID
  RETURN 0
 END
+DEF OTW_SPCHR NUWID
+ SPCHR WIN_SP[NUWID] AND 511,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+ SPOFS WIN_SP[NUWID] AND 511,WIN_AX[NUWID],WIN_AY[NUWID]
+END
 COMMON DEF GPSETWindow WND,X,Y,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
@@ -1318,7 +1330,6 @@
  IF X>=W-9THEN
   IF BTN AND CTL_BTNUPFLG THEN
    VAR E=DeleteWindow(WND)
-   ?E
   ENDIF
   RETURN
  ENDIF
@@ -1701,6 +1712,7 @@
  ExtendControl "RUN",GetWindowControl() OUT RUNCTL,E
  VAR WND
  NewTopLevelWindow RUNCTL,"RUN",64,32 OUT WND,E
+ IF E THEN BEEP:ExitProcess 1
  E=SetControlNotificationHandler(RUNCTL,"RunNotificationHandler")
  SetProcessVar WND
  VAR TW
@@ -1709,7 +1721,7 @@
 END
 COMMON DEF L_RUN
  VAR E=UpdateWindow(GetProcessVar())
- IF E THEN ExitProcess 1
+ IF E THEN ExitProcess 0
 END
 VAR ABOUTCTL
 COMMON DEF I_ABOUT
@@ -1722,6 +1734,7 @@
  ExtendControl "ABOUT",GetWindowControl() OUT ABOUTCTL,E
  VAR WND
  NewTopLevelWindow ABOUTCTL,"OTW",128,32 OUT WND,E
+ IF E THEN BEEP:ExitProcess 1
  SetProcessVar WND
  E=SetControlPainter(ABOUTCTL,"AboutPainter")
 END
@@ -1855,9 +1868,8 @@
 END
 DEF DUMP_WND2 NUW,I$
  IF!NUW THEN RETURN
- ?I$;WIN_NAME$[NUW],NUW,WIN_WID[NUW]
+ ?I$;WIN_NAME$[NUW],NUW,WIN_WID[NUW],CTL_NAME$[WIN_CTL[NUW]AND 4095],WIN_CTL[NUW]AND 4095
 ' IF CSRY==29 THEN VAR II$INPUT "";II$
- DUMP_WND2 WIN_NEXT[NUW],I$
  IF LEN(I$) THEN
   VAR NM$=""
   IF WIN_NEXT[NUW] THEN
@@ -1878,6 +1890,7 @@
    DUMP_WND2 WIN_CHILD[NUW],""
   ENDIF
  ENDIF
+ DUMP_WND2 WIN_NEXT[NUW],I$
 END
 DEF UpdateButton()
  VAR B=BUTTON()
diff -u OTW.TXT OTW11
--- OTW.TXT
+++ OTW11
@@ -1124,6 +1124,7 @@
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
+ IF WIN_BEGIN[NUWID]==2THEN RETURN 0
  WIN_BEGIN[NUWID]=TRUE
  VAR AX=WIN_RFX[NUWID]'WIN_FW1[NUWID]
  VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
@@ -1212,6 +1213,9 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GPSET X+AX,Y+AY,COL
 END
+COMMON DEF GCLSWindow WND,COL
+ GCLS COL
+END
 COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
@@ -1275,6 +1279,7 @@
  FOR I=0TO L
   C$=MID$(STR$,I,1)
   A=ASC(C$)
+  IF A>=00&&A<&H20THEN INC X,8:CONTINUE
   IF A<=&H7F&&A>=&H20THEN
    A=A-&H20
    VAR F=OTW_FNT1[A,1],B=1
@@ -1297,6 +1302,33 @@
   X=X+8
  NEXT
 END
+COMMON DEF GCHARWindow WND,X,Y,A,COL
+ IF!(COL AND&HFF000000)THEN RETURN
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ X=X+AX:Y=Y+AY
+ VAR BX,BY
+ IF A>=00&&A<&H20THEN RETURN
+ IF A<=&H7F&&A>=&H20THEN
+  A=A-&H20
+  VAR F=OTW_FNT1[A,1],B=1
+  FOR BY=Y+7 TO Y+4 STEP -1
+    FOR BX=X+7 TO X STEP -1
+     IF F AND B THEN GPSET BX,BY,COL
+     B=B<<1
+    NEXT
+   NEXT
+   F=OTW_FNT1[A,0]:B=1
+   FOR BY=Y+3 TO Y STEP -1
+    FOR BX=X+7 TO X STEP -1
+     IF F AND B THEN GPSET BX,BY,COL
+     B=B<<1
+    NEXT
+   NEXT
+  ELSE
+  GFILL X,Y,X+6,Y+6,COL
+ ENDIF
+END
 DEF DesktopPainter WND,CTL,TYPE,A1,A2
 RETURN
  VAR E=GBEGINWindow(WND)
@@ -1615,6 +1647,7 @@
 VAR OTW_OLDRMOUSE
 VAR OTW_FDIFF
 VAR OTW_OLDBTN
+VAR OTW_OLDBTNF
 COMMON DEF L_OTW
  VAR MOVEMOUSE
  UpdateMouse
@@ -1692,10 +1725,11 @@
   INC OTW_FPSCNT
  ENDIF
  BTN=BUTTON()AND OTW_USEBTN
- IF BTN THEN
-  IF MAINCNT-OTW_OLDBTN THEN
+ IF BTN||OTW_OLDBTN THEN
+  IF MAINCNT-OTW_OLDBTNF||OTW_OLDBTN THEN
    E=SendButtonWindow(NUWIDToWND(WIN_ACTIVENUWID),BTN)
-   OTW_OLDBTN=MAINCNT
+   OTW_OLDBTNF=MAINCNT
+   OTW_OLDBTN=BTN
   ENDIF
  ENDIF
 ' ExitProcess 1
@@ -1764,12 +1798,17 @@
 COMMON DEF LauncherLMouseUP WND,CTL,T,X,Y
  VAR E=CallBaseControlHandler(WND,CTL,T,X,Y)
  VAR ITEM=Y/8
- IF ITEM>=LAUNCHERLEN THEN
+ IF ITEM>=LAUNCHERLEN||ITEM<0THEN
   RETURN
  ENDIF
  NewProcess LAUNCHERITEM$[ITEM],"" OUT E,E,E
 END
 COMMON DEF I_LAUNCHER
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
  IF LAUNCHERCTL THEN
   VAR WND,E
   NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",80,LAUNCHERLEN*8 OUT WND,E
@@ -1777,13 +1816,14 @@
   E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
   E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
  ELSE
-  LAUNCHERLEN=5
+  LAUNCHERLEN=6
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
   LAUNCHERITEM$[2]="ABOUT"
   LAUNCHERITEM$[3]="LAUNCHER"
   LAUNCHERITEM$[4]="PAINT"
+  LAUNCHERITEM$[5]="TXTED"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
   I_LAUNCHER
  ENDIF
@@ -2077,11 +2117,17 @@
  VAR K$
  INC K$,"VAR _1CTL"+LF$()
  INC K$,"COMMON DEF I__1"+LF$()
+ INC K$, "IF!CHKCALL(_QIsWinRunning_Q)||!IsWinRunning()THEN"+LF$()
+ INC K$,"  PrintConsole _QRequire window system_Q+LF$()"+LF$()
+ INC K$,"  ExitProcess 1"+LF$()
+ INC K$,"  RETURN"+LF$()
+ INC K$," ENDIF"+LF$()
  INC K$," VAR WND,E"+LF$()
  INC K$," IF!_1CTL THEN"+LF$()
  INC K$,"  ExtendControl _Q_2_Q,GetWindowControl() OUT _1CTL,E"+LF$()
  INC K$," ENDIF"+LF$()
- INC K$," NewTopLevelWindow _1CTL,_Q_2_Q,_W,_H OUT WND,E  SetProcessVar WND"+LF$()
+ INC K$," NewTopLevelWindow _1CTL,_Q_2_Q,_W,_H OUT WND,E"+LF$()
+ INC K$,"SetProcessVar WND"+LF$()
  INC K$,"END"+LF$()
  INC K$,"COMMON DEF L__1"+LF$()
  INC K$,"IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
@@ -2140,6 +2186,11 @@
  SetWindowVar WND,1,Y
 END
 COMMON DEF I_PAINT
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
  VAR PTR=malloc(64*64)
  IF!PTR THEN BEEP:ExitProcess 1
  VAR WND,E
@@ -2157,4 +2208,277 @@
 COMMON DEF L_PAINT
 IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR TXTEDCTL
+VAR TXTBOXEXCTL
+VAR TXTBOXEX_LINESIZ
+VAR TXTBOXEX_FREE
+DIM TXTBOXEX_VAL$[0]
+DIM TXTBOXEX_LINE[0]
+DIM TXTBOXEX_NEXT[0]
+DIM TXTBOXEX_PREV[0]
+COMMON DEF I_TXTED
+IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!TXTEDCTL THEN
+  ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
+  NewControl "TextBoxEx" OUT TXTBOXEXCTL,E
+  E=SetControlPainter(TXTBOXEXCTL,"TextBoxExPainter")
+  E=SetControlKeyHandler(TXTBOXEXCTL,"TextBoxExKey")
+  E=SetControlButtonHandler(TXTBOXEXCTL,"TextBoxExButton")
+  TXTBOXEX_LINESIZ=1024
+  TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
+  TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
+  TXTBOXEX_NEXT=NewArray(TXTBOXEX_LINESIZ)
+  TXTBOXEX_PREV=NewArray(TXTBOXEX_LINESIZ)
+  TXTBOXEX_FREE=1
+  VAR I
+  FOR I=1TO TXTBOXEX_LINESIZ-2
+   TXTBOXEX_NEXT[I]=I+1
+  NEXT
+ ENDIF
+ NewTopLevelWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
+ SetProcessVar WND
+ NewWindow TXTBOXEXCTL,"",0,0,128,64,WND,0 OUT WND,E
+ VAR L=TXTED_NewLINE("",0)
+ SetWindowVar WND,1,L
+ SetWindowVar WND,2,L
+ SetWindowVar WND,7,1
+END
+COMMON DEF TXTED_NewLINE(V$,P)
+ VAR R=TXTBOXEX_FREE
+ TXTBOXEX_FREE=TXTBOXEX_NEXT[TXTBOXEX_FREE]
+ IF P THEN
+  TXTBOXEX_LINE[R]=TXTBOXEX_LINE[P]+1
+ ELSE
+  TXTBOXEX_LINE[R]=1
+ ENDIF
+ VAR N
+ IF P THEN
+  N=TXTBOXEX_NEXT[P]
+  TXTBOXEX_NEXT[P]=R
+ ENDIF
+ TXTBOXEX_VAL$[R]=V$
+ TXTBOXEX_NEXT[R]=N
+ TXTBOXEX_PREV[R]=P
+ IF N THEN
+  TXTBOXEX_PREV[N]=R
+ ENDIF
+ RETURN R
+END
+COMMON DEF L_TXTED
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
+COMMON DEF TextBoxExPainter WND,CTL,T,_,__
+ TextBoxExRepaint WND
+END
+COMMON DEF TextBoxExRepaint WND
+ VAR E=GBeginWindow(WND)
+ GCLSWindow WND,RGB(255,255,255)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ GBOXWindow WND,0,0,W,H,RGB(0,0,0)
+ VAR L=GetWindowVar(WND,1)
+ VAR C=GetWindowVar(WND,2)
+ VAR V$=TXTBOXEX_VAL$[C]
+ VAR CX=GetWindowVar(WND,3)
+ VAR L$=LF$()
+ IF LEN(V$)<=CX THEN
+  CX=LEN(V$)
+  IF LEN(V$)&&V$[LEN(V$)-1]==L$THEN DEC CX
+  SetWindowVar WND,3,CX
+ ENDIF
+ VAR TC=RGB(0,0,0)
+ VAR Y=1,X=1,PL,LC
+ WHILE 1
+  V$=TXTBOXEX_VAL$[L]
+  IF GetWindowVar(WND,7)THEN
+   TXTED_PRGPRINT WND,X,Y,V$
+  ELSE
+   GPRINTWindow WND,X,Y,V$,TC
+  ENDIF
+  PL=L
+  IF L==C THEN
+   GFILLWindow WND,X+CX*8,Y+7,X+8+CX*8,Y+6,TC
+  ENDIF
+  L=TXTBOXEX_NEXT[L]
+  INC Y,8
+  IF Y>=H THEN BREAK
+  IF!L THEN
+   IF!LEN(V$)||V$[LEN(V$)-1]!=L$THEN
+    GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
+    IF PL==C THEN
+     GFILLWindow WND,CX*8,Y-1,8+CX*8,Y-2,TC
+    ENDIF
+   ELSE
+    GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
+    IF PL==C THEN
+     GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
+    ENDIF
+   ENDIF
+   PL=0
+   BREAK
+  ENDIF
+ WEND
+ E=GEndWindow(WND)
+ SetWindowVar WND,6,PL
+END
+
+COMMON DEF TextBoxExButton WND,CTL,T,BTN,_
+ VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
+ IF!BTN THEN SetWindowVar WND,5,0RETURN
+ IF MAINCNT-F<R THEN RETURN
+
+ IF BTN AND 1 THEN
+  VAR C=GetWindowVar(WND,2)
+  IF TXTBOXEX_PREV[C]THEN
+   VAR L=TXTBOXEX_PREV[GetWindowVar(WND,1)]
+   C=TXTBOXEX_PREV[C]
+   IF L==C THEN
+     SetWindowVar WND,1,L
+   ENDIF
+   SetWindowVar WND,2,C
+   TextBoxExRepaint WND
+  ENDIF
+  U=1
+ ENDIF
+ IF BTN AND 2 THEN
+  C=GetWindowVar(WND,2)
+  IF TXTBOXEX_NEXT[C]THEN
+   IF GetWindowVar(WND,6)==C THEN
+    L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
+    IF L THEN
+     SetWindowVar WND,1,L
+    ENDIF
+   ENDIF
+   C=TXTBOXEX_NEXT[C]
+   SetWindowVar WND,2,C
+   TextBoxExRepaint WND
+  ENDIF
+  U=1
+ ENDIF
+ IF BTN AND 4THEN
+  VAR CX=GetWindowVar(WND,3)
+  IF CX THEN SetWindowVar WND,3,CX-1
+   TextBoxExRepaint WND
+  U=1
+ ENDIF
+ IF BTN AND 8THEN
+  CX=GetWindowVar(WND,3)
+  C=GetWindowVar(WND,2)
+  SetWindowVar WND,3,CX+1
+  TextBoxExRepaint WND
+  U=1
+ ENDIF
+ IF U THEN
+  IF R==0 THEN
+   SetWindowVar WND,5,20
+  ELSE
+   SetWindowVar WND,5,3
+  ENDIF
+  SetWindowVar WND,4,MAINCNT
+ ENDIF
+END
+COMMON DEF TextBoxExKey WND,CTL,T,KEY,_
+ VAR C=GetWindowVar(WND,2)
+ VAR X=GetWindowVar(WND,3)
+ VAR K$=CHR$(KEY)
+ IF K$==CR$()THEN K$=LF$()
+ IF K$==BS$()THEN
+  IF X>0THEN
+   TXTBOXEX_VAL$[C]=RemoveStr$(TXTBOXEX_VAL$[C],X-1,1)
+   SetWindowVar WND,3,X-1
+  ENDIF
+ ELSE
+  IF K$==LF$()THEN
+   SetWindowVar WND,2,TXTED_NewLine(MID$(TXTBOXEX_VAL$[C],X,LEN(TXTBOXEX_VAL$[C])-X),C)
+   SetWindowVar WND,3,0
+   TXTBOXEX_VAL$[C]=MID$(TXTBOXEX_VAL$[C],0,X)+K$
+   IF GetWindowVar(WND,6)==C THEN
+    VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
+    IF L THEN
+     SetWindowVar WND,1,L
+    ENDIF
+   ENDIF
+  ELSE
+   TXTBOXEX_VAL$[C]=InsertStr$(TXTBOXEX_VAL$[C],X,K$)
+   SetWindowVar WND,3,X+1
+  ENDIF
+ ENDIF
+ TextBoxExRepaint WND
+END
+VAR RTXTEDVAR
+VAR RTXTEDDIM
+VAR RTXTEDFOR
+VAR RTXTEDNEXT
+VAR RTXTEDBREAK
+VAR RTXTEDCONTINUE
+VAR RTXTEDREPEAT
+VAR RTXTEDDATA
+VAR RTXTEDREAD
+VAR RTXTEDCOMMON
+VAR RTXTEDDEF
+VAR RTXTEDEND
+VAR RTXTEDIF
+VAR RTXTEDENDIF
+VAR RTXTEDPRINT
+VAR RTXTEDREM
+COMMON DEF TXTED_PRGPRINT WND,X,Y,P$
+ VAR L=LEN(P$)-1,I,A
+ VAR _0=ASC("0"),_9=ASC("9"),_Q=34
+ VAR _S=ASC("'"),_A=ASC("A"),_Z=ASC("Z")
+ VAR _LA=ASC("a"),_LZ=ASC("z"),__=ASC("_")
+ VAR S
+ FOR I=0TO L
+  A=ASC(P$[I])
+  IF A>=_A&&A<=_Z||A>=_LA&&A<=_LZ||A==__ THEN 
+   S=I
+   FOR I=I+1 TO L
+    A=ASC(P$[I])
+    IF A>=_A&&A<=_Z||A>=_LA&&A<=_LZ||A==__ THEN CONTINUE
+    IF A>=_0&&A<=_9 THEN CONTINUE
+    BREAK
+   NEXT
+   VAR I$=MID$(P$,S,I-S)
+   IF CHKVAR("RTXTED"+I$)THEN
+    GPRINTWindow WND,X,Y,I$,RGB(0,198,247)
+   ELSE
+    GPRINTWindow WND,X,Y,I$,RGB(0,0,0)
+   ENDIF
+   INC X,LEN(I$)*8
+   DEC I
+   CONTINUE
+  ENDIF
+  IF A==_Q THEN
+   GCHARWindow WND,X,Y,A,RGB(99,132,247)
+   INC X,8
+   FOR I=I+1 TO L
+    A=ASC(P$[I])
+    GCHARWindow WND,X,Y,A,RGB(99,132,247)
+    INC X,8
+    IF A==_Q THEN BREAK
+   NEXT
+   IF A!=_Q THEN BREAK
+   IF I==L THEN BREAK
+   CONTINUE
+  ENDIF
+  IF A==_S THEN
+   FOR I=I TO L
+    A=ASC(P$[I])
+    GCHARWindow WND,X,Y,A,RGB(33,247,16)
+    INC X,8
+   NEXT
+   BREAK
+  ENDIF
+  IF A>=_0&&A<=_9 THEN
+   GCHARWindow WND,X,Y,A,RGB(247,69,149)
+  ELSE
+   GCHARWindow WND,X,Y,A,RGB(0,0,0)
+  ENDIF
+  INC X,8
+ NEXT
+END
diff -u OTW.TXT OTW12
--- OTW.TXT
+++ OTW12
@@ -8,10 +8,9 @@
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
-VAR OTW_FNT1[0,0]'0x20~0x7F
-VAR OTW_FNT1W[0]'0x20~0x7F
-VAR OTW_FNT2[0,0]'
-VAR OTW_FNT3[0,0]'
+VAR OTW_FNT[0,0]
+VAR OTW_FNTPAL[0]
+VAR OTW_FNTTBL[0]
 VAR OTW_CONSOLEPAL[0]
 '=======================
 '        WINDOW         
@@ -52,6 +51,7 @@
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
 DIM WIN_MSGBUF [0,0,0]
+DIM WIN_MSGCNT [0,0]
 DIM WIN_USER   [0,0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
@@ -130,6 +130,7 @@
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
+ WIN_MSGCNT    =NewArray2(WIN_MAX,16)
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
 END
@@ -155,6 +156,7 @@
 DIM CTL_NEXT     [0]
 DIM CTL_PARENTCTL[0]
 DIM CTL_HANDLER$ [0,0]
+DIM CTL_NDHNDLR[0]
 VAR CTL_FREE
 VAR CTL_CIDCNT
 VAR CTL_PAINTHANDLER
@@ -192,6 +194,7 @@
  CTL_NEXT      =NewArray(CTL_MAX)
  CTL_PARENTCTL =NewArray(CTL_MAX)
  CTL_HANDLER$  =NewArray2$(CTL_MAX,CTL_HANDLER_MAX)
+ CTL_NDHNDLR=NewArray(CTL_MAX)
  CTL_FREE=1
  OTW_INITLIST CTL_NEXT
  VAR E
@@ -199,6 +202,7 @@
  NewControl "BUTTON" OUT CTL_BUTTONCTL,E
  NewControl "TXTBOX" OUT CTL_TXTBOXCTL,E
  CTL_PAINTHANDLER=0
+ CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
  CTL_RBTNUPHANDLER=3
@@ -227,6 +231,7 @@
  E=SetControlKeyHandler(CTL_TXTBOXCTL,"TextBoxKey")
  E=SetControlButtonHandler(CTL_TXTBOXCTL,"TextBoxButton")
  E=SetControlChFocusHandler(CTL_TXTBOXCTL,"TextBoxChFocus")
+ INIT_TXTBOXEX
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -937,6 +942,10 @@
  VAR NUWID=WND AND NUWIDMASK
  IF(WIN_MSGS[NUWID]+1)MOD WIN_MSGMAX==WIN_MSGE[NUWID] THEN RETURN WIN_EVENTERR
  IF!LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,TYPE])THEN RETURN 0
+ IF CTL_NDHNDLR[TYPE]THEN
+  IF WIN_MSGCNT[NUWID,TYPE]THEN RETURN 0
+  INC WIN_MSGCNT[NUWID,TYPE]
+ ENDIF
  WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],0]=TYPE
  WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],1]=A1
  WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],2]=A2
@@ -1003,24 +1012,19 @@
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
+ IF CTL_NDHNDLR[TYPE]THEN
+  DEC WIN_MSGCNT[NUWID,TYPE]
+ ENDIF
  RETURN 0
 END
 COMMON DEF UpdateWindow(WND)
- IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR E=UpdateWindowOnly(WND)
+ IF E THEN RETURN E
  VAR NUWID=WND AND NUWIDMASK
- IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN @END
- VAR NUCID=WIN_CTL[NUWID] AND 4095
- VAR S=WIN_MSGE[NUWID]
- VAR TYPE=WIN_MSGBUF[NUWID,S,0]
- CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
- IF WIN_WID[NUWID]<=0THEN RETURN 0
- INC WIN_MSGE[NUWID]
- IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
- IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
  @END
  VAR B=WIN_CHILD[NUWID]
  WHILE B
-  VAR E=UpdateWindowOnly(B OR WIN_WID[B]<<WIDSHIFT)
+  E=UpdateWindowOnly(B OR WIN_WID[B]<<WIDSHIFT)
   IF!WIN_NEXT[B]THEN
    WHILE B
     B=WIN_PARENT[B]
@@ -1271,63 +1275,23 @@
  WEND
 END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
- IF!(COL AND&HFF000000)THEN RETURN
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
- X=X+AX:Y=Y+AY
- VAR L=LEN(STR$)-1,C$,A,BX,BY,I,PP=16*COL
+ VAR L=LEN(STR$)-1,A,I
  FOR I=0TO L
-  C$=MID$(STR$,I,1)
-  A=ASC(C$)
-  IF A>=00&&A<&H20THEN INC X,8:CONTINUE
-  IF A<=&H7F&&A>=&H20THEN
-   A=A-&H20
-   VAR F=OTW_FNT1[A,1],B=1
-   FOR BY=Y+7 TO Y+4 STEP -1
-    FOR BX=X+7 TO X STEP -1
-     IF F AND B THEN GPSET BX,BY,COL
-     B=B<<1
-    NEXT
-   NEXT
-   F=OTW_FNT1[A,0]:B=1
-   FOR BY=Y+3 TO Y STEP -1
-    FOR BX=X+7 TO X STEP -1
-     IF F AND B THEN GPSET BX,BY,COL
-     B=B<<1
-    NEXT
-   NEXT
-  ELSE
-   GFILL X,Y,X+6,Y+6,COL
-  ENDIF
-  X=X+8
+  A=ASC(STR$[I])
+  GPUTCHRWindow WND,X,Y,A,COL
+  INC X,8
  NEXT
 END
-COMMON DEF GCHARWindow WND,X,Y,A,COL
- IF!(COL AND&HFF000000)THEN RETURN
+DIM OTW_FNTTMP[0]
+COMMON DEF GPUTCHRWindow WND,X,Y,A,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
- VAR BX,BY
- IF A>=00&&A<&H20THEN RETURN
- IF A<=&H7F&&A>=&H20THEN
-  A=A-&H20
-  VAR F=OTW_FNT1[A,1],B=1
-  FOR BY=Y+7 TO Y+4 STEP -1
-    FOR BX=X+7 TO X STEP -1
-     IF F AND B THEN GPSET BX,BY,COL
-     B=B<<1
-    NEXT
-   NEXT
-   F=OTW_FNT1[A,0]:B=1
-   FOR BY=Y+3 TO Y STEP -1
-    FOR BX=X+7 TO X STEP -1
-     IF F AND B THEN GPSET BX,BY,COL
-     B=B<<1
-    NEXT
-   NEXT
-  ELSE
-  GFILL X,Y,X+6,Y+6,COL
- ENDIF
+ OTW_FNTPAL[0]=0
+ OTW_FNTPAL[1]=COL
+ COPY OTW_FNTTMP,0,OTW_FNT,64*OTW_FNTTBL[A],64
+ VAR I
+ GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
 DEF DesktopPainter WND,CTL,TYPE,A1,A2
 RETURN
@@ -1510,6 +1474,7 @@
   PrintConsole "====================="+LF$()
   PrintConsole "Ver 5.0-B"+LF$()
   BEEP 94,-1000
+  PrintConsole "Loading font..."+LF$()
   OTW_LOADFONT
   OTWRunning=TRUE
   OTW_USEBTN=&B11001111
@@ -2005,13 +1970,9 @@
 ' 
 'END
 DEF OTW_LOADFONT
- VAR T$=" !"+CHR$(34)+"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghiijklmnopqrstuvwxyz{|}~¢£¦§¨¨©®±´¶ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĊċČčĎďĒēĔĕĖėĘęĞğĠġĢģĦħĪīĮįİıĲĳĶķĹĺĻļĽľŁłŃńŅņŇňŐőŒœŔŕŘřŚśŞşŠšŤťŪūŮůŰűŲųŸŹźŻżŽžƒǅǆǲǳȚț˚;΄΅ΆΈΉΊΌΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώЁАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяё“”†‡…‰※€⇒⇔∀∂∞∴∵⊂⊃⌒☆♀♂♡♧♭、。〃々〆「」『』〒〜〝〟ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろわをんゝゞァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロワヲンヴ・ー仝｀｜"
  'LOAD FONT-1
  VAR C$
- OTW_FNT1=NewArray2(&H7F-&H20+1,2)
-'GPAGE 0,5
  VAR X,Y,I,J
-'RETURN
  RESTORE @FONT
  VAR C,_$,K
  DIM PAL[16]
@@ -2019,67 +1980,35 @@
  FOR I=0TO 15
   READ PAL[I]
  NEXT
- LOAD"GRP0:FNT",0
+ IF!CHKFILE("DAT:FONT")THEN
+  SAVE "GRPF:FONT"
+  IF RESULT==-1THEN SAVE "GRPF:FONT"
+  '2かいもやめたならしかたない
+ ENDIF
+ LOAD"GRP1:FONT",0
  VAR L
- GPAGE 0,0
- FOR I=&H20TO &H7F
-  L=I-&H20
+ OTW_FNT=NewArray2(1024,64)
+ OTW_FNTTMP=NewArray(64)
+ OTW_FNTPAL=NewArray(2)
+ OTW_FNTTBL=NewArray(65536)
+ GPAGE 0,1
+ FOR I=0TO 1023
   X=I*8
   Y=X/512
   Y=Y*8
   X=X MOD 512
-  VAR X2=X+7,Y2=Y+7
-  VAR F=0
-  FOR J=Y TO Y2
-   FOR K=X TO X2
+  OTW_FNTTBL[I]=I
+  VAR X2=X+7,Y2=Y+7,M=0
+  FOR K=Y TO Y2
+   FOR J=X TO X2
+    IF(GSPOIT(J,K)AND&HFF000000)THEN
+     OTW_FNT[I,M]=1
+    ENDIF
+    INC M
    NEXT
   NEXT
-   VAR B=1
-   FOR K=Y+7 TO Y+4 STEP -1
-    FOR J=X+7 TO X STEP -1
-     IF(GSPOIT(J,K)AND&HFF000000)THEN OTW_FNT1[L,1]=OTW_FNT1[L,1]OR B
-     B=B<<1
-    NEXT
-   NEXT
-   B=1
-   FOR K=Y+3 TO Y STEP -1
-    FOR J=X+7 TO X STEP -1
-     IF(GSPOIT(J,K)AND&HFF000000)THEN OTW_FNT1[L,0]=OTW_FNT1[L,0]OR B
-     B=B<<1
-    NEXT
-   NEXT
  NEXT
-RETURN
- WHILE 1
-  READ C$
-  IF C$=="END"THEN BREAK
-  IF LEN(C$)-1 THEN CONTINUE
-  ?C$;
-  I=ASC(C$)-&H20
-  'X=I*8
-  'IF I>=512-8THEN X=I MOD 64Y=1
-' GFILL X,Y,X+8,Y+8,0
-  FOR K=0TO 1
-   FOR J=0TO 3
-    READ C
-    OTW_FNT1[I,K]=(OTW_FNT1[I,K]<<8)+C
-   NEXT
-  NEXT
- WEND
-RETURN
-  FOR J=0TO 7
-   READ C$
-   FOR I=0TO LEN(C$)-1
-    _$=MID$(C$,I,1)
-    IF _$=="F"THEN C=-1 ELSE C=0
-    VAR _Y,_C
-    FOR _Y=0TO 15
-     IF C THEN _C=PAL[_Y]ELSE _C=0
-     GPSET X+I,Y+J+16*_Y,_C
-    NEXT
-   NEXT
-  NEXT
-'WEND
+ OTW_FNTTBL[10]=13
  GPAGE 0,0
 @FONT
 RETURN
@@ -2208,6 +2137,7 @@
 COMMON DEF L_PAINT
 IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+'===Text editor===
 VAR TXTEDCTL
 VAR TXTBOXEXCTL
 VAR TXTBOXEX_LINESIZ
@@ -2216,13 +2146,14 @@
 DIM TXTBOXEX_LINE[0]
 DIM TXTBOXEX_NEXT[0]
 DIM TXTBOXEX_PREV[0]
-COMMON DEF I_TXTED
-IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
-  PrintConsole "Require window system"+LF$()
-  ExitProcess 1
-  RETURN
- ENDIF
- VAR WND,E
+COMMON DEF GetTextBoxExControl()
+ RETURN TXTBOXEXCTL
+END
+COMMON DEF SetTextBoxExPRGMode WND,FLG
+ SetWindowVar WND,7,!!FLG
+END
+COMMON DEF INIT_TXTBOXEX
+ VAR E
  IF!TXTEDCTL THEN
   ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
   NewControl "TextBoxEx" OUT TXTBOXEXCTL,E
@@ -2240,15 +2171,8 @@
    TXTBOXEX_NEXT[I]=I+1
   NEXT
  ENDIF
- NewTopLevelWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
- SetProcessVar WND
- NewWindow TXTBOXEXCTL,"",0,0,128,64,WND,0 OUT WND,E
- VAR L=TXTED_NewLINE("",0)
- SetWindowVar WND,1,L
- SetWindowVar WND,2,L
- SetWindowVar WND,7,1
 END
-COMMON DEF TXTED_NewLINE(V$,P)
+DEF TXTED_NewLINE(V$,P)
  VAR R=TXTBOXEX_FREE
  TXTBOXEX_FREE=TXTBOXEX_NEXT[TXTBOXEX_FREE]
  IF P THEN
@@ -2269,8 +2193,21 @@
  ENDIF
  RETURN R
 END
-COMMON DEF L_TXTED
- IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+DEF TXTED_DeleteLine(L)
+ IF!L THEN RETURN 0
+ VAR N=TXTBOXEX_NEXT[L]
+ VAR P=TXTBOXEX_PREV[L]
+ IF N THEN
+  TXTBOXEX_PREV[N]=P
+ ENDIF
+ IF P THEN
+  TXTBOXEX_NEXT[P]=N
+ ENDIF
+ TXTBOXEX_NEXT[L]=TXTBOXEX_FREE
+ TXTBOXEX_FREE=L
+ IF P THEN RETURN P
+ IF N THEN RETURN N
+ RETURN 0
 END
 
 COMMON DEF TextBoxExPainter WND,CTL,T,_,__
@@ -2327,13 +2264,7 @@
  E=GEndWindow(WND)
  SetWindowVar WND,6,PL
 END
-
-COMMON DEF TextBoxExButton WND,CTL,T,BTN,_
- VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
- IF!BTN THEN SetWindowVar WND,5,0RETURN
- IF MAINCNT-F<R THEN RETURN
-
- IF BTN AND 1 THEN
+DEF TXTED_UpCursor(WND)
   VAR C=GetWindowVar(WND,2)
   IF TXTBOXEX_PREV[C]THEN
    VAR L=TXTBOXEX_PREV[GetWindowVar(WND,1)]
@@ -2342,35 +2273,67 @@
      SetWindowVar WND,1,L
    ENDIF
    SetWindowVar WND,2,C
-   TextBoxExRepaint WND
+   RETURN 1
   ENDIF
-  U=1
- ENDIF
- IF BTN AND 2 THEN
-  C=GetWindowVar(WND,2)
+  RETURN 0
+END
+DEF TXTED_DownCursor(WND)
+  VAR C=GetWindowVar(WND,2)
   IF TXTBOXEX_NEXT[C]THEN
    IF GetWindowVar(WND,6)==C THEN
-    L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
+    VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
      SetWindowVar WND,1,L
     ENDIF
    ENDIF
    C=TXTBOXEX_NEXT[C]
    SetWindowVar WND,2,C
+   RETURN 1
+  ENDIF
+  RETURN 0
+END
+COMMON DEF TextBoxExButton WND,CTL,T,BTN,_
+ VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
+ IF!BTN THEN SetWindowVar WND,5,0RETURN
+ IF MAINCNT-F<R THEN RETURN
+
+ IF BTN AND 1 THEN
+  IF TXTED_UpCursor(WND)THEN
    TextBoxExRepaint WND
   ENDIF
   U=1
  ENDIF
+ IF BTN AND 2 THEN
+  IF TXTED_DownCursor(WND)THEN
+   TextBoxExRepaint WND
+  ENDIF
+  U=1
+ ENDIF
  IF BTN AND 4THEN
   VAR CX=GetWindowVar(WND,3)
-  IF CX THEN SetWindowVar WND,3,CX-1
+  IF CX THEN
+   SetWindowVar WND,3,CX-1
    TextBoxExRepaint WND
+  ELSE
+   IF TXTED_UpCursor(WND)THEN
+    VAR C=GetWindowVar(WND,2)
+    SetWindowVar WND,3,LEN(TXTBOXEX_VAL$[C])
+    TextBoxExRepaint WND
+   ENDIF
+  ENDIF
   U=1
  ENDIF
  IF BTN AND 8THEN
   CX=GetWindowVar(WND,3)
   C=GetWindowVar(WND,2)
   SetWindowVar WND,3,CX+1
+  VAR V$=TXTBOXEX_VAL$[C]
+  IF LEN(V$)<=CX||LEN(V$)-1==CX&&V$[CX]==LF$()THEN
+   IF TXTED_DownCursor(WND)THEN
+    SetWindowVar WND,3,0
+    TextBoxExRepaint WND
+   ENDIF
+  ENDIF
   TextBoxExRepaint WND
   U=1
  ENDIF
@@ -2385,6 +2348,11 @@
 END
 COMMON DEF TextBoxExKey WND,CTL,T,KEY,_
  VAR C=GetWindowVar(WND,2)
+ IF!C THEN
+  C=TXTED_NewLINE("",0)
+  SetWindowVar WND,1,C
+  SetWindowVar WND,2,C
+ ENDIF
  VAR X=GetWindowVar(WND,3)
  VAR K$=CHR$(KEY)
  IF K$==CR$()THEN K$=LF$()
@@ -2392,6 +2360,21 @@
   IF X>0THEN
    TXTBOXEX_VAL$[C]=RemoveStr$(TXTBOXEX_VAL$[C],X-1,1)
    SetWindowVar WND,3,X-1
+  ELSE
+   VAR P=TXTBOXEX_PREV[C]
+   IF P THEN
+    VAR L=GetWindowVar(WND,1)
+    VAR V$=TXTBOXEX_VAL$[C]
+    SetWindowVar WND,2,TXTED_DeleteLine(C)
+    L=GetWindowVar(WND,2)
+    TXTBOXEX_VAL$[L]=LEFT$(TXTBOXEX_VAL$[L],LEN(TXTBOXEX_VAL$[L])-1)
+    SetWindowVar WND,3,LEN(TXTBOXEX_VAL$[L])
+    INC TXTBOXEX_VAL$[L],MID$(V$,X,LEN(V$)-X)
+    L=GetWindowVar(WND,1)
+    IF L==C THEN
+     SetWindowVar WND,1,GetWindowVar(WND,2)
+    ENDIF
+   ENDIF
   ENDIF
  ELSE
   IF K$==LF$()THEN
@@ -2399,7 +2382,7 @@
    SetWindowVar WND,3,0
    TXTBOXEX_VAL$[C]=MID$(TXTBOXEX_VAL$[C],0,X)+K$
    IF GetWindowVar(WND,6)==C THEN
-    VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
+    L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
      SetWindowVar WND,1,L
     ENDIF
@@ -2411,6 +2394,8 @@
  ENDIF
  TextBoxExRepaint WND
 END
+'===syntax highlighting===
+'HashSet
 VAR RTXTEDVAR
 VAR RTXTEDDIM
 VAR RTXTEDFOR
@@ -2422,16 +2407,34 @@
 VAR RTXTEDREAD
 VAR RTXTEDCOMMON
 VAR RTXTEDDEF
+VAR RTXTEDOUT
 VAR RTXTEDEND
+VAR RTXTEDRETURN
 VAR RTXTEDIF
+VAR RTXTEDTHEN
+VAR RTXTEDELSE
 VAR RTXTEDENDIF
 VAR RTXTEDPRINT
 VAR RTXTEDREM
+VAR RTXTEDINC
+VAR RTXTEDDEC
+VAR RTXTEDGOTO
+VAR RTXTEDGOSUB
+VAR RTXTEDRESTORE
+VAR RTXTEDAND
+VAR RTXTEDOR
+VAR RTXTEDXOR
+VAR RTXTEDNOT
+VAR RTXTEDMOD
+VAR RTXTEDDIV
 COMMON DEF TXTED_PRGPRINT WND,X,Y,P$
  VAR L=LEN(P$)-1,I,A
  VAR _0=ASC("0"),_9=ASC("9"),_Q=34
  VAR _S=ASC("'"),_A=ASC("A"),_Z=ASC("Z")
  VAR _LA=ASC("a"),_LZ=ASC("z"),__=ASC("_")
+ VAR _AT=ASC("@"),_AND=ASC("&"),_B=ASC("B")
+ VAR _H=ASC("H"),_1=ASC("1"),_F=ASC("F")
+ VAR _LF=10
  VAR S
  FOR I=0TO L
   A=ASC(P$[I])
@@ -2454,11 +2457,12 @@
    CONTINUE
   ENDIF
   IF A==_Q THEN
-   GCHARWindow WND,X,Y,A,RGB(99,132,247)
+   GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
    INC X,8
    FOR I=I+1 TO L
     A=ASC(P$[I])
-    GCHARWindow WND,X,Y,A,RGB(99,132,247)
+    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
+    GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
     INC X,8
     IF A==_Q THEN BREAK
    NEXT
@@ -2469,16 +2473,86 @@
   IF A==_S THEN
    FOR I=I TO L
     A=ASC(P$[I])
-    GCHARWindow WND,X,Y,A,RGB(33,247,16)
+    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
+    GPUTCHRWindow WND,X,Y,A,RGB(33,247,16)
     INC X,8
    NEXT
    BREAK
   ENDIF
+  IF A==_AT THEN
+   FOR I=I TO L
+    A=ASC(P$[I])
+    IF!(A>=_A&&A<=_Z||A>=_LA&&A<=_LZ||A==__||A>=_0&&A<=_9||A==_AT)THEN DEC I:BREAK
+    GPUTCHRWindow WND,X,Y,A,RGB(247,167,0)
+    INC X,8
+   NEXT
+   CONTINUE
+  ENDIF
+  IF A==_AND THEN
+   S=ASC(P$[I])
+   FOR I=I+1 TO L
+    A=ASC(P$[I])
+    INC X,8
+    IF A==_B THEN
+     GPUTCHRWindow WND,X-8,Y,S,RGB(247,69,149)
+     GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+     INC X,8
+     S=0
+     FOR I=I+1 TO L
+      A=ASC(P$[I])
+      IF A>_1&&A<=_9 THEN
+       GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)
+       INC X,8
+       S=1
+       CONTINUE
+      ENDIF
+      IF A!=_0&&A!=_1||S THEN DEC I:BREAK
+      GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+      INC X,8
+     NEXT
+     BREAK
+    ENDIF
+    IF A==_H THEN
+     GPUTCHRWindow WND,X-8,Y,S,RGB(247,69,149)
+     GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+     INC X,8
+     FOR I=I+1 TO L
+      A=ASC(P$[I])
+      IF!(A>=_0&&A<=_9||A>=_A&&A<=_F)THEN DEC I:BREAK
+      GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+      INC X,8
+     NEXT
+     BREAK
+    ENDIF
+    DEC I
+    DEC X,8
+    BREAK
+   NEXT
+   CONTINUE
+  ENDIF
   IF A>=_0&&A<=_9 THEN
-   GCHARWindow WND,X,Y,A,RGB(247,69,149)
+   GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
   ELSE
-   GCHARWindow WND,X,Y,A,RGB(0,0,0)
+   IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
+   GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)
   ENDIF
   INC X,8
  NEXT
 END
+'===End text editor===
+COMMON DEF I_TXTED
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ NewTopLevelWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
+ SetProcessVar WND
+ NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT WND,E
+ SetTextBoxExPRGMode WND,TRUE
+END
+COMMON DEF L_TXTED
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
diff -u OTW.TXT OTW13
--- OTW.TXT
+++ OTW13
@@ -588,12 +588,12 @@
    ENDIF
   WEND
  ENDIF
- INC WIN_TopLevelX,WIN_FHEIGHT1
- INC WIN_TopLevelY,WIN_FHEIGHT1
  WIN_FW1[NUWID]=CTL_FW1[NUCID]'WIN_TopLevelX
  WIN_FH1[NUWID]=CTL_FH1[NUCID]'WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
- WIN_AY[NUWID]=WIN_TOPLEVELY-WIN_FHEIGHT1
+ WIN_AY[NUWID]=WIN_TOPLEVELY
+ INC WIN_TopLevelX,WIN_FHEIGHT1
+ INC WIN_TopLevelY,WIN_FHEIGHT1
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -636,6 +636,14 @@
  FOR I=0TO 7
   WIN_VAR[NUWID,I]=0
  NEXT
+ FOR I=0TO 15
+  WIN_MSGCNT[NUWID,I]=0
+ NEXT
+ VAR N=WIN_NEXT[NUWID]
+ VAR P=WIN_PREV[NUWID]
+ IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
+  WIN_CHILD[WIN_PARENT[NUWID]]=N
+ ENDIF
  IF WIN_CHILD[NUWID]THEN
   VAR C=WIN_CHILD[NUWID]
   VAR D
@@ -645,17 +653,12 @@
    C=D
   WEND
  ENDIF
- VAR N=WIN_NEXT[NUWID]
- VAR P=WIN_PREV[NUWID]
  IF N THEN
   WIN_PREV[N]=P
  ENDIF
  IF P THEN
   WIN_NEXT[P]=N
  ENDIF
- IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
-  WIN_CHILD[WIN_PARENT[NUWID]]=N
- ENDIF
  IF WIN_SP[NUWID]THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
   SPCLR WIN_SP[NUWID]AND 511
@@ -1008,7 +1011,7 @@
  VAR S=WIN_MSGE[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
- IF WIN_WID[NUWID]<=0THEN RETURN 0
+ IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
@@ -1019,26 +1022,33 @@
 END
 COMMON DEF UpdateWindow(WND)
  VAR E=UpdateWindowOnly(WND)
- IF E THEN RETURN E
  VAR NUWID=WND AND NUWIDMASK
+ IF E THEN RETURN E
  @END
  VAR B=WIN_CHILD[NUWID]
+ VAR DB=B,PB=NUWID
  WHILE B
+  IF B==NUWID THEN BREAK
   E=UpdateWindowOnly(B OR WIN_WID[B]<<WIDSHIFT)
+  IF E THEN B=DB
+  IF!B THEN B=PB
+  IF WIN_CHILD[B]THEN
+   B=WIN_CHILD[B]
+   CONTINUE
+  ENDIF
   IF!WIN_NEXT[B]THEN
    WHILE B
     B=WIN_PARENT[B]
     IF B==NUWID THEN BREAK
     IF WIN_NEXT[B]THEN BREAK
    WEND
+   IF!B THEN BREAK
    IF B==NUWID THEN BREAK
+   PB=B
    B=WIN_NEXT[B]
    CONTINUE
   ENDIF
-  IF WIN_CHILD[B]THEN
-   B=WIN_CHILD[B]
-   CONTINUE
-  ENDIF
+  DB=B
   B=WIN_NEXT[B]
  WEND 
  RETURN 0
@@ -1476,6 +1486,7 @@
   BEEP 94,-1000
   PrintConsole "Loading font..."+LF$()
   OTW_LOADFONT
+  PrintConsole "Init..........."+LF$()
   OTWRunning=TRUE
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -1492,12 +1503,15 @@
   GPRIO 1023
   GCLS
   GCLS RGB(0,192,0)
+  GCLS 
   VAR I,J
-  FOR J=0TO 3
+  FOR J=0TO 2
    FOR I=0TO 240/4
-    GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)'RGB(0,I*4,0)
+   GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)XOR &HFFFFFF'RGB(0,I*4,0)
+'    GLINE 0,I+60*J,400,I+60*J,RGB(0,I*4,I*4) 
    NEXT
   NEXT
+  
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
   GCLS RGB(0,192,128)
@@ -1552,9 +1566,9 @@
   E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
   NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
-  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
-  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
-  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
+' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
+' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
+' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
   GCLIP 1,0,0,400,240
   VISIBLE 1,1,1,1
@@ -1665,9 +1679,9 @@
   E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
- E=UpdateWindow(TSTWND2)
- E=UpdateWindow(TSTWND)
- E=UpdateWindow(TSTWND3)
+'E=UpdateWindow(TSTWND2)
+'E=UpdateWindow(TSTWND)
+'E=UpdateWindow(TSTWND3)
  OTW_FDIFF=MAINCNT-OTW_FCNT
  IF OTW_FDIFF>1 THEN
   OTW_FPF#=OTW_FPFCNT
@@ -1781,7 +1795,7 @@
   E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
   E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
  ELSE
-  LAUNCHERLEN=6
+  LAUNCHERLEN=7
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -1789,6 +1803,7 @@
   LAUNCHERITEM$[3]="LAUNCHER"
   LAUNCHERITEM$[4]="PAINT"
   LAUNCHERITEM$[5]="TXTED"
+  LAUNCHERITEM$[6]="PRGED"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
   I_LAUNCHER
  ENDIF
@@ -2155,11 +2170,11 @@
 COMMON DEF INIT_TXTBOXEX
  VAR E
  IF!TXTEDCTL THEN
-  ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
   NewControl "TextBoxEx" OUT TXTBOXEXCTL,E
   E=SetControlPainter(TXTBOXEXCTL,"TextBoxExPainter")
   E=SetControlKeyHandler(TXTBOXEXCTL,"TextBoxExKey")
   E=SetControlButtonHandler(TXTBOXEXCTL,"TextBoxExButton")
+  E=SetControlChFocusHandler(TXTBOXEXCTL,"TextBoxExChFocus")
   TXTBOXEX_LINESIZ=1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -2213,6 +2228,9 @@
 COMMON DEF TextBoxExPainter WND,CTL,T,_,__
  TextBoxExRepaint WND
 END
+COMMON DEF TextBoxExChFocus WND,CTL,T,_,__
+ TextBoxExRepaint WND
+END
 COMMON DEF TextBoxExRepaint WND
  VAR E=GBeginWindow(WND)
  GCLSWindow WND,RGB(255,255,255)
@@ -2239,7 +2257,7 @@
    GPRINTWindow WND,X,Y,V$,TC
   ENDIF
   PL=L
-  IF L==C THEN
+  IF L==C&&IsActiveWindow(WND)THEN
    GFILLWindow WND,X+CX*8,Y+7,X+8+CX*8,Y+6,TC
   ENDIF
   L=TXTBOXEX_NEXT[L]
@@ -2248,12 +2266,12 @@
   IF!L THEN
    IF!LEN(V$)||V$[LEN(V$)-1]!=L$THEN
     GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
-    IF PL==C THEN
+    IF PL==C&&IsActiveWindow(WND)THEN
      GFILLWindow WND,CX*8,Y-1,8+CX*8,Y-2,TC
     ENDIF
    ELSE
     GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
-    IF PL==C THEN
+    IF PL==C&&IsActiveWindow(WND)THEN
      GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
     ENDIF
    ENDIF
@@ -2547,12 +2565,34 @@
   RETURN
  ENDIF
  VAR WND,E
+ IF!TXTEDCTL THEN
+  ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
+ ENDIF
  NewTopLevelWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
  SetProcessVar WND
  NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT WND,E
- SetTextBoxExPRGMode WND,TRUE
+'SetTextBoxExPRGMode WND,TRUE
 END
 COMMON DEF L_TXTED
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR PRGEDCTL
+COMMON DEF I_PRGED
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!PRGEDCTL THEN
+  ExtendControl "PRGED",GetWindowControl() OUT PRGEDCTL,E
+ ENDIF
+ NewTopLevelWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
+ SetProcessVar WND
+ NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT WND,E
+ SetTextBoxExPRGMode WND,TRUE
+END
+COMMON DEF L_PRGED
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
diff -u OTW.TXT OTW14
--- OTW.TXT
+++ OTW14
@@ -614,7 +614,6 @@
  SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
  SPSHOW SP
-
  SPVAR SP,0,WND
  OTW_SPSORT
 END
@@ -1479,6 +1478,7 @@
 VAR OTW_USEBTN
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  VAR FM=FREEMEM
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
@@ -1505,13 +1505,16 @@
   GCLS RGB(0,192,0)
   GCLS 
   VAR I,J
-  FOR J=0TO 2
-   FOR I=0TO 240/4
-   GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)XOR &HFFFFFF'RGB(0,I*4,0)
-'    GLINE 0,I+60*J,400,I+60*J,RGB(0,I*4,I*4) 
-   NEXT
+' FOR J=0TO 2
+'  FOR I=0TO 240/4
+'  GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)XOR &HFFFFFF'RGB(0,I*4,0)
+'    GLINE 0,I+60*J,400,I+60*J,RGB(0,I*4,I*4) '
+ ' NEXT
+' NEXT
+  GCLS 
+  FOR I=-400TO 400 STEP 2
+   GLINE I,0,I+400,400,RGB(0,255,0)'RGB(255,255,255)
   NEXT
-  
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
   GCLS RGB(0,192,128)
@@ -1602,7 +1605,9 @@
   SPVAR OTW_MOVWINSP,0,1
   CLS
   LOCATE 0,29
- NewProcess"LAUNCHER","" OUT E,E,E
+  NewProcess"LAUNCHER","" OUT E,E,E
+  DEC FM,FREEMEM
+  PrintConsole FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
  ENDIF
 RETURN
 END
@@ -1984,78 +1989,6 @@
 'DEF OTW_LOADMOUSE
 ' 
 'END
-DEF OTW_LOADFONT
- 'LOAD FONT-1
- VAR C$
- VAR X,Y,I,J
- RESTORE @FONT
- VAR C,_$,K
- DIM PAL[16]
- OTW_CONSOLEPAL=PAL
- FOR I=0TO 15
-  READ PAL[I]
- NEXT
- IF!CHKFILE("DAT:FONT")THEN
-  SAVE "GRPF:FONT"
-  IF RESULT==-1THEN SAVE "GRPF:FONT"
-  '2かいもやめたならしかたない
- ENDIF
- LOAD"GRP1:FONT",0
- VAR L
- OTW_FNT=NewArray2(1024,64)
- OTW_FNTTMP=NewArray(64)
- OTW_FNTPAL=NewArray(2)
- OTW_FNTTBL=NewArray(65536)
- GPAGE 0,1
- FOR I=0TO 1023
-  X=I*8
-  Y=X/512
-  Y=Y*8
-  X=X MOD 512
-  OTW_FNTTBL[I]=I
-  VAR X2=X+7,Y2=Y+7,M=0
-  FOR K=Y TO Y2
-   FOR J=X TO X2
-    IF(GSPOIT(J,K)AND&HFF000000)THEN
-     OTW_FNT[I,M]=1
-    ENDIF
-    INC M
-   NEXT
-  NEXT
- NEXT
- OTW_FNTTBL[10]=13
- GPAGE 0,0
-@FONT
-RETURN
-COLOR
-'      AARRGGBB
-DATA &H00000000
-DATA &HFF000000
-DATA &HFF7F0000
-DATA &HFFFF0000
-DATA &HFF007F00
-DATA &HFF00FF00
-DATA &HFF7F7F00
-DATA &HFFFFFF00
-DATA &HFF00007F
-DATA &HFF0000FF
-DATA &HFF7F007F
-DATA &HFFFF00FF
-DATA &HFF007F7F
-DATA &HFF00FFFF
-DATA &HFF7F7F7F
-DATA &HFFFFFFFF
-DATA "0"
-DATA &B00111000'"00FFF000"
-DATA &B01000100
-DATA &B01001100
-DATA &B01010100
-DATA &B01100100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "END"
-END
 COMMON DEF I_CREATEOTW
  ?"OTW Develop Tool"
  VAR K$
@@ -2136,7 +2069,7 @@
   RETURN
  ENDIF
  VAR PTR=malloc(64*64)
- IF!PTR THEN BEEP:ExitProcess 1
+ IF!PTR THEN BEEP:ExitProcess 1RETURN
  VAR WND,E
  IF!PAINTCTL THEN
   ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
@@ -2445,6 +2378,7 @@
 VAR RTXTEDNOT
 VAR RTXTEDMOD
 VAR RTXTEDDIV
+VAR RTXTEDCALL
 COMMON DEF TXTED_PRGPRINT WND,X,Y,P$
  VAR L=LEN(P$)-1,I,A
  VAR _0=ASC("0"),_9=ASC("9"),_Q=34
@@ -2528,6 +2462,7 @@
       GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
       INC X,8
      NEXT
+     DEC I
      BREAK
     ENDIF
     IF A==_H THEN
@@ -2542,7 +2477,6 @@
      NEXT
      BREAK
     ENDIF
-    DEC I
     DEC X,8
     BREAK
    NEXT
@@ -2595,4 +2529,127 @@
 COMMON DEF L_PRGED
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+'===OTYA DOCUMENT EDITOR===
+VAR OTYDOCCTL
+COMMON DEF I_OTYDOC
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTYDOCCTL THEN
+  ExtendControl "OTYDOC",GetWindowControl() OUT OTYDOCCTL,E
+ ENDIF
+ NewTopLevelWindow OTYDOCCTL,"OTYDOC",128,128 OUT WND,E
+ SetProcessVar WND
+END
+COMMON DEF L_OTYDOC
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+'===OTYA DOCUMENT EDITOR===
 
+DEF OTW_LOADFONT
+ 'LOAD FONT-1
+ VAR C$
+ VAR X,Y,I,J
+ RESTORE @FONT
+ VAR C,_$,K
+ DIM PAL[16]
+ OTW_CONSOLEPAL=PAL
+ FOR I=0TO 15
+  READ PAL[I]
+ NEXT
+ IF!CHKFILE("DAT:FONT")THEN
+  SAVE "GRPF:FONT"
+  IF RESULT==-1THEN SAVE "GRPF:FONT"
+  '2かいもやめたならしかたない
+ ENDIF
+ LOAD"GRP1:FONT",0
+ VAR L
+ OTW_FNT=NewArray2(1024,64)
+ OTW_FNTTMP=NewArray(64)
+ OTW_FNTPAL=NewArray(2)
+ OTW_FNTTBL=NewArray(65536)
+ GPAGE 0,1
+ FOR I=0TO 1023
+  X=I*8
+  Y=X/512
+  Y=Y*8
+  X=X MOD 512
+  VAR X2=X+7,Y2=Y+7,M=0
+  FOR K=Y TO Y2
+   FOR J=X TO X2
+    IF(GSPOIT(J,K)AND&HFF000000)THEN
+     OTW_FNT[I,M]=1
+    ENDIF
+    INC M
+   NEXT
+  NEXT
+ NEXT
+ OTW_FNTTBL[10]=13
+ GPAGE 0,0
+ OTW_LOADFNTTBL
+@FONT
+RETURN
+COLOR
+'      AARRGGBB
+DATA &H00000000
+DATA &HFF000000
+DATA &HFF7F0000
+DATA &HFFFF0000
+DATA &HFF007F00
+DATA &HFF00FF00
+DATA &HFF7F7F00
+DATA &HFFFFFF00
+DATA &HFF00007F
+DATA &HFF0000FF
+DATA &HFF7F007F
+DATA &HFFFF00FF
+DATA &HFF007F7F
+DATA &HFF00FFFF
+DATA &HFF7F7F7F
+DATA &HFFFFFFFF
+DATA "0"
+DATA &B00111000'"00FFF000"
+DATA &B01000100
+DATA &B01001100
+DATA &B01010100
+DATA &B01100100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
+DATA "END"
+END
+DEF OTW_LOADFNTTBL
+ RESTORE@RANGE
+ VAR I
+ WHILE 1
+  VAR R1,R2,C1,C2
+  READ R1
+  IF R1==-1THEN BREAK
+  READ C1,R2,C2
+  FOR I=R1 TO R2
+   OTW_FNTTBL[I]=C1
+   INC C1
+  NEXT
+ WEND
+ RESTORE @GRPFTABLE
+ WHILE 1
+  READ R1
+  IF R1==-1THEN BREAK
+  READ C1
+  OTW_FNTTBL[R1]=C1
+ WEND
+@RANGE
+DATA &H20,&H20,&H7F,&H7F
+DATA 57857,1,57883,27
+DATA 65280,32,65371,123
+DATA 57984,128,58015,159
+DATA -1,"A"
+@GRPFTABLE
+
+'=REMOVED(DIFF)=
+
+DATA -1
+END
diff -u OTW.TXT OTW15
--- OTW.TXT
+++ OTW15
@@ -180,6 +180,7 @@
 VAR CTL_BTNUPFLG
 VAR CTL_WINDOWCTL
 VAR CTL_BUTTONCTL
+VAR CTL_TGLBTNCTL
 VAR CTL_TXTBOXCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
@@ -226,11 +227,15 @@
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_BUTTONCTL,"ToggleButtonLMouseDown")
  E=SetControlPainter(CTL_TXTBOXCTL,"TextBoxPainter")
  E=SetControlLMouseDownHandler(CTL_TXTBOXCTL,"TextBoxLMouseDown")
  E=SetControlKeyHandler(CTL_TXTBOXCTL,"TextBoxKey")
  E=SetControlButtonHandler(CTL_TXTBOXCTL,"TextBoxButton")
  E=SetControlChFocusHandler(CTL_TXTBOXCTL,"TextBoxChFocus")
+ ExtendControl "ToggleButton",CTL_BUTTONCTL OUT CTL_TGLBTNCTL,E
+ E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
  INIT_TXTBOXEX
 END
 DEF OTW_INITLIST ARY[]
@@ -257,6 +262,9 @@
 COMMON DEF GetButtonControl()
  RETURN CTL_BUTTONCTL
 END
+COMMON DEF GetToggleButtonControl()
+ RETURN CTL_TGLBTNCTL
+END
 COMMON DEF GetTextBoxControl()
  RETURN CTL_TXTBOXCTL
 END
@@ -1371,17 +1379,39 @@
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
  IF E THEN RETURN
+ VAR TG=GetWindowVar(W,1)
  VAR HE=GetWindowHeight(W)
  VAR WI=GetWindowWidth(W)
  VAR NA$=GetWindowName$(W)
+ VAR B1=RGB(0,0,0)
+ VAR B2=-1
+ IF TG THEN SWAP B1,B2
  GFILLWindow W,0,0,WI,HE,RGB(192,192,192)
- GBOXWindow W,0,0,WI,HE,RGB(0,0,0)
- GPRINTWindow W,(WI-GetTextWidth(NA$))/2,(HE-6)/2,NA$,RGB(0,0,0)
+ GPRINTWindow W,(WI-GetTextWidth(NA$)-2)/2+TG+1,(HE-6)/2+TG,NA$,RGB(0,0,0)
+ GBOXWindow W,0,0,WI,HE,B1
+ GLINEWindow W,0,0,0,HE-1,B2
+ GLINEWindow W,0,0,WI-1,0,B2
  E=GEndWindow(W)
 END
 DEF ButtonLMouseUP W,C,T,X,Y
  VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
+ SetWindowVar W,1,FALSE
+ ButtonPainter W,C,T,0,0
 END
+DEF ButtonLMouseDown W,C,T,X,Y
+ SetWindowVar W,1,TRUE
+ ButtonPainter W,C,T,0,0
+END
+DEF ToggleButtonLMouseUP W,C,T,X,Y
+ VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
+'SetWindowVar W,1,FALSE
+ ButtonPainter W,C,T,0,0
+END
+DEF ToggleButtonLMouseDown W,C,T,X,Y
+ VAR F=GetWindowVar(W,1)
+ SetWindowVar W,1,!F
+ ButtonPainter W,C,T,0,0
+END
 'PlainTextBox
 DEF TextBoxPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
@@ -1607,7 +1637,7 @@
   LOCATE 0,29
   NewProcess"LAUNCHER","" OUT E,E,E
   DEC FM,FREEMEM
-  PrintConsole FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
+'  PrintConsole FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
  ENDIF
 RETURN
 END
@@ -1800,7 +1830,7 @@
   E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
   E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
  ELSE
-  LAUNCHERLEN=7
+  LAUNCHERLEN=8
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -1809,6 +1839,7 @@
   LAUNCHERITEM$[4]="PAINT"
   LAUNCHERITEM$[5]="TXTED"
   LAUNCHERITEM$[6]="PRGED"
+  LAUNCHERITEM$[7]="OTYDOC"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
   I_LAUNCHER
  ENDIF
@@ -2530,7 +2561,209 @@
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
 '===OTYA DOCUMENT EDITOR===
+COMMON DEF RichTextBold()
+ RETURN 1
+END
+COMMON DEF RichTextItalic()
+ RETURN 2
+END
+COMMON DEF RichTextStrike()
+ RETURN 4
+END
+COMMON DEF RichTextUnderLine()
+ RETURN 8
+END
+COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
+ VAR I
+ IF SIZE==8&&!(STYLE AND 3)THEN
+  GPUTCHRWindow WND,X,Y,C,COL
+ ELSE
+  GPUTCHRWindow WND,X,Y,C,COL
+ ENDIF
+ IF STYLE AND 4THEN
+  GLINEWindow WND,X,Y+SIZE/2,X+SIZE,Y+SIZE/2,COL
+ ENDIF
+ IF STYLE AND 8THEN
+  GLINEWindow WND,X,Y+SIZE,X+SIZE,Y+SIZE,COL
+ ENDIF
+END
 VAR OTYDOCCTL
+VAR OTYDOC_WNDCTL
+VAR OTYDOC_FREE
+DIM OTYDOC_LINE[0]
+DIM OTYDOC_NEXT[0]
+DIM OTYDOC_PREV[0]
+DIM OTYDOC_VAL$[0]
+'LINE SIZE
+DIM OTYDOC_SIZE[0]
+VAR OTYDOC_LINESIZ
+
+VAR OTYDOC_WFREE
+VAR OTYDOC_WSIZ
+DIM OTYDOC_WNEXT[0]
+DIM OTYDOC_WPREV[0]
+DIM OTYDOC_ShowLine[0]
+DIM OTYDOC_CurLine[0]
+DIM OTYDOC_WSIZE[0]
+DIM OTYDOC_STYLE[0]
+DIM OTYDOC_COL[0]
+DIM OTYDOC_CX[0]
+COMMON DEF INIT_OTYDOC
+ VAR E
+ IF!OTYDOCCTL THEN
+  NewControl "OTYDoc" OUT OTYDOCCTL,E
+  E=SetControlPainter(OTYDOCCTL,"OTYDocPainter")
+  E=SetControlKeyHandler(OTYDOCCTL,"OTYDocKey")
+  E=SetControlButtonHandler(OTYDOCCTL,"OTYDocButton")
+  E=SetControlChFocusHandler(OTYDOCCTL,"OTYDocChFocus")
+  OTYDOC_LINESIZ=1024
+  OTYDOC_VAL$=NewArray$(OTYDOC_LINESIZ)
+  OTYDOC_LINE=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_NEXT=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_PREV=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_SIZE=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_FREE=1
+  VAR I
+  FOR I=1TO OTYDOC_LINESIZ-2
+   OTYDOC_NEXT[I]=I+1
+  NEXT
+  OTYDOC_WSIZ=16
+  OTYDOC_WNEXT=NewArray(OTYDOC_WSIZ)
+  OTYDOC_WPREV=NewArray(OTYDOC_WSIZ)
+  OTYDOC_ShowLine=NewArray(OTYDOC_WSIZ)
+  OTYDOC_CurLine=NewArray(OTYDOC_WSIZ)
+  OTYDOC_WSIZE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_STYLE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_COL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_CX=NewArray(OTYDOC_WSIZ)
+  OTYDOC_WFREE=1
+  FOR I=1TO OTYDOC_WSIZ-2
+   OTYDOC_WNEXT[I]=I+1
+  NEXT
+ ENDIF
+END
+DEF OTYDOC_NewLINE(V$,P)
+ VAR R=OTYDOC_FREE
+ OTYDOC_FREE=OTYDOC_NEXT[OTYDOC_FREE]
+ IF P THEN
+  OTYDOC_LINE[R]=OTYDOC_LINE[P]+1
+ ELSE
+  OTYDOC_LINE[R]=1
+ ENDIF
+ VAR N
+ IF P THEN
+  N=OTYDOC_NEXT[P]
+  OTYDOC_NEXT[P]=R
+ ENDIF
+ OTYDOC_VAL$[R]=V$
+ OTYDOC_NEXT[R]=N
+ OTYDOC_PREV[R]=P
+ IF N THEN
+  OTYDOC_PREV[N]=R
+ ENDIF
+ OTYDOC_SIZE[R]=8
+ RETURN R
+END
+DEF OTYDOC_DeleteLine(L)
+ IF!L THEN RETURN 0
+ VAR N=OTYDOC_NEXT[L]
+ VAR P=OTYDOC_PREV[L]
+ IF N THEN
+  OTYDOC_PREV[N]=P
+ ENDIF
+ IF P THEN
+  OTYDOC_NEXT[P]=N
+ ENDIF
+ OTYDOC_NEXT[L]=OTYDOC_FREE
+ OTYDOC_FREE=L
+ IF P THEN RETURN P
+ IF N THEN RETURN N
+ RETURN 0
+END
+DEF OTYDOC_NewCTL WND
+ VAR R=OTYDOC_WFREE
+ OTYDOC_WFREE=OTYDOC_WNEXT[OTYDOC_WFREE]
+ OTYDOC_SetData WND,R
+END
+DEF OTYDOC_DeleteCTL WND
+ VAR L=OTYDOC_GetData(WND)
+ IF!L THEN RETURN
+ OTYDOC_SetData WND,0
+ OTYDOC_WNEXT[L]=OTYDOC_WFREE
+ OTYDOC_WFREE=L
+ RETURN
+END
+'
+DEF OTYDOC_GetData(WND)
+ RETURN GetWindowVar(WND,0)
+END
+DEF OTYDOC_SetData WND,L
+ SetWindowVar WND,0,L
+END
+'====EVENT HANDLER====
+COMMON DEF OTYDocCreate WND,CTL,TYPE,A1,A2
+END
+COMMON DEF OTYDocPainter WND,CTL,TYPE,A1,A2
+ OTYDOCRepaint WND
+END
+DEF OTYDOCRepaint WND
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,RGB(255,255,255)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ GBOXWindow WND,0,0,W,H,RGB(0,0,0)
+ IF!OTYDOC_GetData(WND)THEN OTYDOC_NewCTL WND
+ VAR D=OTYDOC_GetData(WND)
+ VAR I=OTYDOC_ShowLine[D]
+ VAR Y=2,X=2
+ VAR ST=0
+ VAR SZ=8
+ VAR COL=RGB(0,0,0)
+ WHILE I
+  VAR YSZ=OTYDOC_SIZE[I]
+  VAR V$=OTYDOC_VAL$[I]
+  VAR A
+  VAR L=LEN(V$)-1,J,C
+  X=1
+  FOR J=0TO L
+   C=ASC(V$[J])
+   IF C==&Hb10bTHEN
+    INC J
+    C=ASC(V$[J])
+    INC J
+    A=ASC(V$[J])
+    ON C GOTO@FNT,@COL
+    CONTINUE
+    @FNT
+    SZ=A
+    CONTINUE
+    @COL
+    COL=ShortToRGB(A)
+    CONTINUE
+   ENDIF
+   RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
+   ?HEX$(COL)
+   INC X,SZ
+  NEXT
+  INC Y,YSZ
+  I=OTYDOC_NEXT[I]
+ WEND
+ VAR E=GEndWindow(WND)
+END
+COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
+END
+COMMON DEF OTYDocKey WND,CTL,TYPE,KEY,A2
+ VAR D=OTYDOC_GetData(WND)
+ VAR S=OTYDOC_ShowLine[D]
+ VAR C=OTYDOC_CurLine[D]
+ IF!S THEN
+  S=OTYDOC_NewLine("This is Test",0)
+  OTYDOC_ShowLine[D]=S
+  OTYDOC_CurLine[D]=S
+ ENDIF
+ OTYDOCRepaint WND
+END
+'====EVENT HANDLER====
 COMMON DEF I_OTYDOC
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -2538,17 +2771,46 @@
   RETURN
  ENDIF
  VAR WND,E
- IF!OTYDOCCTL THEN
-  ExtendControl "OTYDOC",GetWindowControl() OUT OTYDOCCTL,E
+ IF!OTYDOC_WNDCTL THEN
+  INIT_OTYDOC
+  ExtendControl "OTYDOC",GetWindowControl() OUT OTYDOC_WNDCTL,E
  ENDIF
- NewTopLevelWindow OTYDOCCTL,"OTYDOC",128,128 OUT WND,E
+ NewTopLevelWindow OTYDOC_WNDCTL,"OTYDOC",256,128 OUT WND,E
  SetProcessVar WND
+ NewWindow OTYDOCCTL,"OTYDOC",0,12,256,120,WND,0 OUT E,E
+ NewWindow GetToggleButtonControl(),"B",0,0,11,11,WND,0 OUT E,E
 END
 COMMON DEF L_OTYDOC
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
 '===OTYA DOCUMENT EDITOR===
-
+DIM OTYFILICOTXT[0]
+DIM OTYFILICODAT[0]
+COMMON DEF RC_OTYFIL
+ DIM ICONS[512]
+ LOAD"DAT:OTYFILRC",ICONS,0
+ OTYFILICOTXT=NewArray(16*16)
+ OTYFILICODAT=NewArray(16*16)
+ COPY OTYFILICOTXT,ICONS,0,16*16
+ COPY OTYFILICODAT,ICONS,16*16,16*16
+END
+VAR OTYFILCTL
+COMMON DEF I_OTYFIL
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTYFILCTL THEN
+  ExtendControl "Files",GetWindowControl() OUT OTYFILCTL,E
+ ENDIF
+ NewTopLevelWindow OTYFILCTL,"Files",128,128 OUT WND,E
+SetProcessVar WND
+END
+COMMON DEF L_OTYFIL
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 DEF OTW_LOADFONT
  'LOAD FONT-1
  VAR C$
diff -u OTW.TXT OTW16
--- OTW.TXT
+++ OTW16
@@ -182,6 +182,7 @@
 VAR CTL_BUTTONCTL
 VAR CTL_TGLBTNCTL
 VAR CTL_TXTBOXCTL
+VAR CTL_LABELCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
@@ -202,6 +203,7 @@
  NewControl "WINDOW" OUT CTL_WINDOWCTL,E
  NewControl "BUTTON" OUT CTL_BUTTONCTL,E
  NewControl "TXTBOX" OUT CTL_TXTBOXCTL,E
+ NewControl "LABEL" OUT CTL_LABELCTL,E
  CTL_PAINTHANDLER=0
  CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
  CTL_LBTNDWNHANDLER=1
@@ -233,6 +235,8 @@
  E=SetControlKeyHandler(CTL_TXTBOXCTL,"TextBoxKey")
  E=SetControlButtonHandler(CTL_TXTBOXCTL,"TextBoxButton")
  E=SetControlChFocusHandler(CTL_TXTBOXCTL,"TextBoxChFocus")
+ E=SetControlPainter(CTL_LABELCTL,"LabelPainter")
+
  ExtendControl "ToggleButton",CTL_BUTTONCTL OUT CTL_TGLBTNCTL,E
  E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
@@ -268,6 +272,9 @@
 COMMON DEF GetTextBoxControl()
  RETURN CTL_TXTBOXCTL
 END
+COMMON DEF GetLabelControl()
+ RETURN CTL_LABELCTL
+END
 'CONTROL
 COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
@@ -1295,6 +1302,7 @@
  VAR L=LEN(STR$)-1,A,I
  FOR I=0TO L
   A=ASC(STR$[I])
+  IF A==10THEN Y=Y+8:X=0:CONTINUE
   GPUTCHRWindow WND,X,Y,A,COL
   INC X,8
  NEXT
@@ -1468,6 +1476,49 @@
  
 ' BEEP
 END
+COMMON DEF SetLabelAlignLeft WND
+ SetWindowVar WND,1,0
+ VAR E=RepaintWindow(WND)
+END
+COMMON DEF SetLabelAlignRight WND
+ SetWindowVar WND,1,1
+ VAR E=RepaintWindow(WND)
+END
+COMMON DEF SetLabelAlignCenter WND
+ SetWindowVar WND,1,2
+ VAR E=RepaintWindow(WND)
+END
+DEF LabelPainter W,CT,T,A1,A2
+ VAR E=GBeginWindow(W)
+ IF E THEN RETURN
+ VAR NA$=GetWindowName$(W)
+ VAR HE=GetWindowHeight(W)
+ VAR WI=GetWindowWidth(W)
+ VAR A=GetWindowVar(W,1)
+ GCLSWindow W,RGB(224,224,224)
+ VAR X,Y,C,I,L=LEN(NA$),HB=WI/8
+ IF!HB THEN RETURN
+ IF L<HB THEN
+  IF A==1THEN X=WI-L*8
+  IF A==2THEN X=(WI-L*8)/2
+ ENDIF
+ DEC L
+ FOR I=0TO L
+  C=ASC(NA$[I])
+  IF C==10THEN INC Y,8:X=0CONTINUE
+  IF X>=WI THEN
+   INC Y,8:X=0
+   IF L-I<HB THEN
+    IF A==1THEN X=WI-(L-I+1)*8
+    IF A==2THEN X=(WI-(L-I+1)*8)/2
+   ENDIF
+  ENDIF
+  IF Y>=HE THEN BREAK
+  GPUTCHRWindow W,X,Y,C,RGB(0,0,0)
+  INC X,8
+ NEXT
+ E=GEndWindow(W)
+END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
  GPSET 408,0,-1
@@ -1785,7 +1836,12 @@
  IF E THEN BEEP:ExitProcess 1
  SetProcessVar WND
  E=SetControlPainter(ABOUTCTL,"AboutPainter")
+ E=SetControlNotificationHandler(ABOUTCTL,"ABOUTNotif")
+ NewWindow GetButtonControl(),"OK",54,16,20,12,WND,0 OUT E,E
 END
+COMMON DEF AboutNotif WND,CTL,TYPE,A1,A2
+ VOID Deletewindow(WND)
+END
 COMMON DEF AboutPainter WND,CTL,TYPE,A1,A2
  VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
 ' E=GBeginWindow(WND)
@@ -1839,7 +1895,7 @@
   LAUNCHERITEM$[4]="PAINT"
   LAUNCHERITEM$[5]="TXTED"
   LAUNCHERITEM$[6]="PRGED"
-  LAUNCHERITEM$[7]="OTYDOC"
+  LAUNCHERITEM$[7]="OTYFIL"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
   I_LAUNCHER
  ENDIF
@@ -2795,6 +2851,18 @@
  COPY OTYFILICODAT,ICONS,16*16,16*16
 END
 VAR OTYFILCTL
+VAR OTYFILES$[0]
+VAR OTYFILICONCTL
+COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
+ IF GBeginWindow(W)THEN RETURN
+ GCLSWindow W,RGB(224,224,224)
+ IF GetWindowVar(W,1)THEN
+  GLOADWindow W,0,0,16,16,OTYFILICODAT,1,0
+ ELSE
+  GLOADWindow W,0,0,16,16,OTYFILICOTXT,1,0
+ ENDIF
+ IF GEndWindow(W)THEN RETURN
+END
 COMMON DEF I_OTYFIL
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -2804,9 +2872,25 @@
  VAR WND,E
  IF!OTYFILCTL THEN
   ExtendControl "Files",GetWindowControl() OUT OTYFILCTL,E
+  NewControl "ICON" OUT OTYFILICONCTL,E
+  E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
+  RC_OTYFIL
  ENDIF
- NewTopLevelWindow OTYFILCTL,"Files",128,128 OUT WND,E
-SetProcessVar WND
+ VAR W=36*4+8,H=64,LBL
+ NewTopLevelWindow OTYFILCTL,"Files SYS/",W,H OUT WND,E
+ VAR X=8,Y,I
+ OTYFILES$=NewArray$(0)
+ GetFiles OTYFILES$,"SYS"
+ FOR I=0TO LEN(OTYFILES$)-1
+  IF X+32+4>W THEN INC Y,40:X=8
+  IF Y+16>=H THEN BREAK
+  NewWindow OTYFILICONCTL,"",X,Y,15,15,WND,0 OUT LBL,E
+  IF OTYFILES$[I][0]==" "THEN SetWindowVar LBL,1,1
+  NewWindow GetLabelControl(),RIGHT$(OTYFILES$[I],LEN(OTYFILES$[I])-1),X-8,Y+16,32,24,WND,0 OUT LBL,E
+  SetLabelAlignCenter LBL
+  INC X,32+4
+ NEXT
+ SetProcessVar WND
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
diff -u OTW.TXT OTW17
--- OTW.TXT
+++ OTW17
@@ -4,7 +4,7 @@
 ' OTYA 3D WINDOW SYSTEM 
 '=======================
 'グローバルへんすうのていぎ
-VAR OTW_INIT,OTW_MOUSESP,OTW_MOVWINSP
+VAR OTW_INIT,OTW_MOUSESP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
@@ -36,6 +36,8 @@
 DIM WIN_FH1    [0]
 DIM WIN_FW2    [0]
 DIM WIN_FH2    [0]
+DIM WIN_AFW    [0]
+DIM WIN_AFH    [0]
 DIM WIN_CTL    [0]
 DIM WIN_PID    [0]
 DIM WIN_NUPID  [0]
@@ -67,10 +69,10 @@
 VAR OTW_BP
 'GPAGE
 VAR OTW_GP
-VAR WIN_FWIDTH1
-VAR WIN_FHEIGHT1
-VAR WIN_FWIDTH2
-VAR WIN_FHEIGHT2
+'VAR WIN_FWIDTH1
+'VAR WIN_FHEIGHT1
+'VAR WIN_FWIDTH2
+'VAR WIN_FHEIGHT2
 'H1
 '          
 '
@@ -86,10 +88,10 @@
 VAR WIN_ACTIVENUWID
 DEF OTW_WIN_INITARRAY
  VAR FM=FREEMEM
- WIN_FWIDTH1=0
- WIN_FHEIGHT1=10
- WIN_FWIDTH2=0
- WIN_FHEIGHT2=0
+'WIN_FWIDTH1=0
+'WIN_FHEIGHT1=10
+'WIN_FWIDTH2=0
+'WIN_FHEIGHT2=0
  WIN_MAX=256
  WIN_MSGMAX=64
  WIN_MSGARGSIZE=3
@@ -117,6 +119,8 @@
  WIN_FH1       =NewArray(WIN_MAX)
  WIN_FW2       =NewArray(WIN_MAX)
  WIN_FH2       =NewArray(WIN_MAX)
+ WIN_AFW       =NewArray(WIN_MAX)
+ WIN_AFH       =NewArray(WIN_MAX)
  WIN_CTL       =NewArray(WIN_MAX)
  WIN_PID       =NewArray(WIN_MAX)
  WIN_NUPID     =NewArray(WIN_MAX)
@@ -223,7 +227,8 @@
  CTL_BTNDWNFLG=1
  CTL_BTNUPFLG=2
 ' CTL_DRWFRMHANDLER=3
- E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
+'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
+ E=SetControlFrameSize(CTL_WINDOWCTL,1,11,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
@@ -451,8 +456,10 @@
  WIN_FH1[NUWID]=CTL_FH1[NC]
  WIN_FW2[NUWID]=CTL_FW1[NC]+CTL_FW2[NC]
  WIN_FH2[NUWID]=CTL_FH1[NC]+CTL_FH2[NC]
- WIN_WIDTH[NUWID]=WIDTH+WIN_FW2[NUWID]
- WIN_HEIGHT[NUWID]=HEIGHT+WIN_FH2[NUWID]
+ INC WIDTH,WIN_FW2[NUWID]
+ WIN_WIDTH[NUWID]=WIDTH
+ INC HEIGHT,WIN_FH2[NUWID]
+ WIN_HEIGHT[NUWID]=HEIGHT
  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -461,30 +468,9 @@
  WIN_RFY[NUWID]=WIN_FY[NUWID]
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
- IF WIN_FX[PNUWID]>WIN_RX[NUWID]THEN
-  WIN_RX[NUWID]=WIN_FX[PNUWID]
- ENDIF
- IF WIN_FY[PNUWID]>WIN_RY[NUWID]THEN
-  WIN_RY[NUWID]=WIN_FY[PNUWID]
- ENDIF
- VAR E1=WIN_AX[NUWID]+WIDTH
- VAR E2=WIN_AX[PNUWID]+WIN_AW[PNUWID]
- IF E1>E2 THEN
-  DEC WIN_AW[NUWID],E1-E2
-  IF WIN_RFX[PNUWID]>WIN_RFX[NUWID]THEN
-   WIN_RFX[NUWID]=WIN_RFX[PNUWID]
-  ENDIF
- ENDIF
- E1=WIN_AY[NUWID]+HEIGHT
- E2=WIN_AY[PNUWID]+WIN_AH[PNUWID]
- IF E1>E2 THEN
-  DEC WIN_AH[NUWID],E1-E2
-  IF WIN_RFY[PNUWID]>WIN_RFY[NUWID]THEN
-   WIN_RFY[NUWID]=WIN_RFY[PNUWID]
-  ENDIF
- ENDIF
  WIN_NEXT[NUWID]=0
  WIN_PARENT[NUWID]=PARENT AND NUWIDMASK
+ OTW_CLIPWindow NUWID
  IF PNUWID THEN 
   IF FLG AND WindowFrontFlag()THEN
    IF WIN_CHILD[PNUWID]THEN
@@ -607,8 +593,8 @@
  WIN_FH1[NUWID]=CTL_FH1[NUCID]'WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
  WIN_AY[NUWID]=WIN_TOPLEVELY
- INC WIN_TopLevelX,WIN_FHEIGHT1
- INC WIN_TopLevelY,WIN_FHEIGHT1
+ INC WIN_TopLevelX,CTL_FH1[NUCID]'WIN_FHEIGHT1
+ INC WIN_TopLevelY,CTL_FH1[NUCID]'WIN_FHEIGHT1
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -620,9 +606,11 @@
 ' WIN_WIDTH[NUWID]=WIDTH+WIN_FWIDTH+
 ' WIN_HEIGHT[NUWID]=HEIGHT
  
- WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+WIN_FHEIGHT1
+ WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+CTL_FH1[NUCID]+CTL_FH2[NUCID]
+ WIN_WIDTH[NUWID]=WIN_WIDTH[NUWID]+CTL_FW1[NUCID]+CTL_FW2[NUCID]
  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
+ OTW_CLIPWindow NUWID
  OTW_DrawMap NUWID
  GCLIP 1,0,0,400,240
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
@@ -704,7 +692,12 @@
  GPAGE OTW_SP,OTW_DP
  GCLIP 1,0,240,400,480
  GFILL WIN_RX[NUWID],WIN_RY[NUWID]+240,WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
- GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+WIN_AW[NUWID]-WIN_FW2[NUWID],WIN_RFY[NUWID]+240+WIN_AH[NUWID]-WIN_FH2[NUWID],ShortToRGB(NUWID)
+'VAR W=WIN_AW[NUWID]-WIN_FW2[NUWID]
+'VAR H=WIN_AH[NUWID]-WIN_FH2[NUWID]
+'IF WIN_WIDTH[NUWID]!=WIN_AW[NUWID]THEN INC W,WIN_FW1[NUWID]
+'IF WIN_HEIGHT[NUWID]!=WIN_AH[NUWID]THEN INC H,WIN_FH1[NUWID]
+'GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+W,WIN_RFY[NUWID]+240+H,ShortToRGB(NUWID)
+ GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+WIN_AFW[NUWID],WIN_RFY[NUWID]+240+WIN_AFH[NUWID],ShortToRGB(NUWID)
  GCLIP 1,0,0,400,240
 END
 COMMON DEF FrontWindow(WND)
@@ -799,24 +792,7 @@
 '  NXT=WIN_NEXT[NXT]
 ' WEND
 END
-COMMON DEF MoveWindow(WND,X,Y)
- IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
- IF!X&&!Y THEN RETURN
- VAR NUWID=WND AND NUWIDMASK
- VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
- VAR NXT=WIN_CHILD[NUWID],B=NXT
- IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
-' GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
- ENDIF
-' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
- WIN_AX[NUWID]=WIN_AX[NUWID]+MX
- WIN_AY[NUWID]=WIN_AY[NUWID]+MY
- WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
- WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
- WIN_RFX[NUWID]=WIN_FX[NUWID]
- WIN_RFY[NUWID]=WIN_FY[NUWID]
- WIN_RX[NUWID]=WIN_AX[NUWID]
- WIN_RY[NUWID]=WIN_AY[NUWID]
+COMMON DEF OTW_CLIPWindow NUWID
  VAR PNUWID=WIN_PARENT[NUWID]
  IF WIN_FX[PNUWID]>WIN_RX[NUWID]THEN
   WIN_RX[NUWID]=WIN_FX[PNUWID]
@@ -832,26 +808,78 @@
  ENDIF
  VAR E1=WIN_AX[NUWID]+WIN_WIDTH[NUWID]
  VAR E2=WIN_RX[PNUWID]+WIN_AW[PNUWID]
-
+ 'CLIP FRAME
+ IF WIN_WIDTH[PNUWID]==WIN_AW[PNUWID]THEN
+  DEC E2,WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
+ ENDIF
  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
  IF E1>E2 THEN
- DEC WIN_AW[NUWID],E1-E2
+  DEC WIN_AW[NUWID],E1-E2
  ENDIF
  IF WIN_AX[NUWID]<WIN_FX[PNUWID]THEN
- WIN_AW[NUWID]=WIN_WIDTH[NUWID]
-  DEC WIN_AW[NUWID],WIN_FX[PNUWID]-WIN_AX[NUWID]
+  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
+  DEC WIN_AW[NUWID],WIN_FX[PNUWID]-WIN_AX[NUWID]'-WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
  ENDIF
  E1=WIN_RY[NUWID]+WIN_HEIGHT[NUWID]
  E2=WIN_RY[PNUWID]+WIN_AH[PNUWID]
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
 
+ 'CLIP FRAME
+ IF WIN_HEIGHT[PNUWID]==WIN_AH[PNUWID]THEN
+  DEC E2,WIN_FH2[PNUWID]-WIN_FH1[PNUWID]
+ ENDIF
  IF E1>E2 THEN
   DEC WIN_AH[NUWID],E1-E2
  ENDIF
  IF WIN_AY[NUWID]<WIN_FY[PNUWID]THEN
- WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
-  DEC WIN_AH[NUWID],WIN_FY[PNUWID]-WIN_AY[NUWID]
+  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
+  DEC WIN_AH[NUWID],WIN_FY[PNUWID]-WIN_AY[NUWID]'WIN_FH1[NUWID]
  ENDIF
+
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
+ IF W==WIN_WIDTH[NUWID]THEN
+  DEC W,WIN_FW2[NUWID]
+ ELSE
+  DEC W,WIN_FW2[NUWID]-WIN_FW1[NUWID]
+ ENDIF
+ IF H==WIN_HEIGHT[NUWID]THEN
+  DEC H,WIN_FH2[NUWID]
+ ELSE
+  IF WIN_HEIGHT[NUWID]-H>=WIN_FH1[NUWID]THEN
+    DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
+
+'   IF WIN_RFY[NUWID]==WIN_RY[NUWID]THEN
+'    DEC H,WIN_FH1[NUWID]
+'   ELSE
+'    DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
+'   ENDIF
+  ELSE
+   DEC H,WIN_FH1[NUWID]-(WIN_HEIGHT[NUWID]-H)+1
+  ENDIF
+ ENDIF
+ WIN_AFW[NUWID]=W
+ WIN_AFH[NUWID]=H
+END
+COMMON DEF MoveWindow(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
+ IF!MX&&!MY THEN RETURN FrontWindow(WND)
+ VAR NXT=WIN_CHILD[NUWID],B=NXT
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
+' GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
+ ENDIF
+' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
+ WIN_AX[NUWID]=WIN_AX[NUWID]+MX
+ WIN_AY[NUWID]=WIN_AY[NUWID]+MY
+ WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ OTW_CLIPWindow NUWID
 ' STOP
 ' WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
 ' IF WIN_AX[PNUWID]>WIN_RX[NUWID]THEN
@@ -1072,8 +1100,11 @@
  RETURN WIN_WIDTH[WND AND NUWIDMASK]
 END
 DEF GetWindowFrameHeight(WND)
- RETURN WIN_FHEIGHT1
+ RETURN WIN_FH1[WND AND NUWIDMASK]'CTL_FH2[NUCID]
 END
+DEF GetWindowFrameHeight2(WND)
+ RETURN WIN_FH2[WND AND NUWIDMASK]'CTL_FH2[NUCID]
+END
 common def GetWindowName$(wnd)
  return win_name$[wnd and nuwidmask]
 end
@@ -1152,29 +1183,39 @@
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
- IF WIN_BEGIN[NUWID]==2THEN RETURN 0
- WIN_BEGIN[NUWID]=TRUE
  VAR AX=WIN_RFX[NUWID]'WIN_FW1[NUWID]
  VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
  VAR W=WIN_AW[NUWID]
  VAR H=WIN_AH[NUWID]
+ IF W==WIN_WIDTH[NUWID]THEN
+  DEC W,WIN_FW2[NUWID]
+ ELSE
+  DEC W,WIN_FW2[NUWID]-WIN_FW1[NUWID]
+ ENDIF
+ IF H==WIN_HEIGHT[NUWID]THEN
+  DEC H,WIN_FH2[NUWID]
+ ELSE
+  IF WIN_HEIGHT[NUWID]-H>=WIN_FH1[NUWID]THEN
+   DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
+  ELSE
+   DEC H,WIN_FH1[NUWID]-(WIN_HEIGHT[NUWID]-H)+1
+'WIN_HEIGHT[NUWID]-H'WIN_FH2[NUWID]-WIN_FH1[NUWID]
+  ENDIF
+ ENDIF
+ W=WIN_AFW[NUWID]
+ H=WIN_AFH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
- IF WIN_BEGIN[NUWID]==2THEN RETURN 0
+ IF WIN_BEGIN[NUWID]>=2THEN RETURN 0
+ WIN_BEGIN[NUWID]=TRUE
  GCLS
  RETURN 0
 END
 DEF ReGBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- INC WIN_BEGIN[NUWID]
- VAR AX=WIN_RFX[NUWID]'WIN_FW1[NUWID]
- VAR AY=WIN_RFY[NUWID]':IN_FH1[NUWID]
- VAR W=WIN_AW[NUWID]
- VAR H=WIN_AH[NUWID]
- GPAGE OTW_SP,OTW_BP
- GCLIP 1,AX,AY,AX+W,AY+H
- RETURN 0
+ WIN_BEGIN[NUWID]=2
+ RETURN GBeginWindow(WND)
 END
 DEF GBeginFrameWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -1197,20 +1238,33 @@
  'ごうせい
  WIN_PARENT[0]=0
  WIN_NEXT[0]=0
- WIN_BEGIN[NUWID]=FALSE
  VAR AX=WIN_RX[NUWID]
  VAR AY=WIN_RY[NUWID]
  VAR W=WIN_AW[NUWID]
  VAR H=WIN_AH[NUWID]
+ IF WIN_BEGIN[NUWID]!=2THEN
+  AX=WIN_RFX[NUWID]
+  AY=WIN_RFY[NUWID]
+  IF W==WIN_WIDTH[NUWID]THEN DEC W,WIN_FW2[NUWID]'-WIN_FW1[NUWID]
+  IF H==WIN_HEIGHT[NUWID]THEN DEC H,WIN_FH2[NUWID]'-WIN_FH1[NUWID]
+ ENDIF
+ WIN_BEGIN[NUWID]=FALSE
  GCLIP 1,AX,AY,AX+W,AY+H
  VAR PNUWID
  IF WIN_CHILD[NUWID]THEN
   PNUWID=WIN_CHILD[NUWID]
+  VAR W2=W,H2=H
+  IF W==WIN_WIDTH[NUWID]THEN DEC W,WIN_FW2[NUWID]-WIN_FW1[NUWID]
+ IF H==WIN_HEIGHT[NUWID]THEN DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
+  GCLIP 1,AX,AY,AX+W,AY+H
   WHILE PNUWID
    GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
 
    PNUWID=WIN_NEXT[PNUWID]
   WEND
+  W=W2
+  H=H2
+  GCLIP 1,AX,AY,AX+W,AY+H
  ENDIF
  VAR _NUWID=NUWID
  PNUWID=WIN_NEXT[NUWID]
@@ -1329,15 +1383,21 @@
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
- GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+1,GetWindowName$(WND),15
+ GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+2,GetWindowName$(WND),15
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
  VAR C=RGB(224,224,224)
- GFILLWindow WND,W-09,-H,W,-1,RGB(224,0,0)
- GLINEWindow WND,W-08,-H+2,W-2,-2,C
- GLINEWindow WND,W-7,-H+2,W-1,-2,C
- GLINEWindow WND,W-2,-H+2,W-8,-2,C
- GLINEWindow WND,W-1,-H+2,W-7,-2,C
+ GFILLWindow WND,W-09-1,-H+1,W-1,-1,RGB(224,0,0)
+ GLINEWindow WND,W-08-1,-H+2+1,W-2-1,-2,C
+ GLINEWindow WND,W-7-1,-H+2+1,W-1-1,-2,C
+ GLINEWindow WND,W-2-1,-H+2+1,W-8-1,-2,C
+ GLINEWindow WND,W-1-1,-H+2+1,W-7-1,-2,C
+'GLINEWindow WND,-1,-H,W-1,-H,RGB(224,224,224)
+ VAR H2=WIN_HEIGHT[WND AND NUWIDMASK]-H
+'GLINEWindow WND,-1,-H,-1,H2-1,RGB(224,224,224)
+'GLINEWindow WND,W-1,-H,W-1,H2,RGB(0,0,0)
+'GLINEWindow WND,-1,H2,W-1,H2,RGB(0,0,0)
+ GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
@@ -1364,7 +1424,7 @@
    IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
    SPSHOW OTW_MOVWINSP
    SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
-   SPCOLOR OTW_MOVWINSP,RGB(128,80,208,255)
+   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
    SPOFS OTW_MOVWINSP,AX-X,AY-Y,-256
    SPLINK OTW_MOVWINSP,OTW_MOUSESP
    SPVAR OTW_MOVWINSP,1,NUWID
@@ -1592,10 +1652,11 @@
 '    GLINE 0,I+60*J,400,I+60*J,RGB(0,I*4,I*4) '
  ' NEXT
 ' NEXT
-  GCLS 
+  GCLS RGB(0,192,0)
   FOR I=-400TO 400 STEP 2
-   GLINE I,0,I+400,400,RGB(0,255,0)'RGB(255,255,255)
+   GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
   NEXT
+  GCLS RGB(0,224,224)
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
   GCLS RGB(0,192,128)
@@ -1650,7 +1711,7 @@
   E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
   NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
-' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
+ NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
@@ -1684,6 +1745,9 @@
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
   SPVAR OTW_MOVWINSP,0,1
+  OTW_MOVWINCOL=RGB(128,128,128,128)
+  OTW_MOVWINCOL=RGB(128,255,255,255)
+  SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
   CLS
   LOCATE 0,29
   NewProcess"LAUNCHER","" OUT E,E,E
@@ -1696,7 +1760,7 @@
  VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  E=GBEGINWindow(WND)
  IF E THEN RETURN
- GFILLWindow WND,0,0,64,64,RGB(224,224,224)'RGB(0,0,0)
+ GFILLWindow WND,0,0,64,64,RGB(224-224,224,224)'RGB(0,0,0)
  VAR S$="HELLOWORLD",I
  FOR I=0TO LEN(S$)-1
   GPRINTWindowCC WND,6+I*8,1,S$[I],I
@@ -1766,7 +1830,7 @@
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
 'E=UpdateWindow(TSTWND2)
-'E=UpdateWindow(TSTWND)
+E=UpdateWindow(TSTWND)
 'E=UpdateWindow(TSTWND3)
  OTW_FDIFF=MAINCNT-OTW_FCNT
  IF OTW_FDIFF>1 THEN
@@ -1823,6 +1887,7 @@
  IF E THEN ExitProcess 0
 END
 VAR ABOUTCTL
+DIM OTWLOGO[0]
 COMMON DEF I_ABOUT
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -1830,14 +1895,18 @@
   RETURN
  ENDIF
  VAR E
- ExtendControl "ABOUT",GetWindowControl() OUT ABOUTCTL,E
+ IF!ABOUTCTL THEN
+  ExtendControl "ABOUT",GetWindowControl() OUT ABOUTCTL,E
+  OTWLOGO=NewArray(0)
+  LOAD"DAT:OTWLOGORC",OTWLOGO,0
+ ENDIF
  VAR WND
- NewTopLevelWindow ABOUTCTL,"OTW",128,32 OUT WND,E
+ NewTopLevelWindow ABOUTCTL,"OTW",144,64 OUT WND,E
  IF E THEN BEEP:ExitProcess 1
  SetProcessVar WND
  E=SetControlPainter(ABOUTCTL,"AboutPainter")
  E=SetControlNotificationHandler(ABOUTCTL,"ABOUTNotif")
- NewWindow GetButtonControl(),"OK",54,16,20,12,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"OK",(144-20)/2,16,20,12,WND,0 OUT E,E
 END
 COMMON DEF AboutNotif WND,CTL,TYPE,A1,A2
  VOID Deletewindow(WND)
@@ -1846,8 +1915,17 @@
  VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
 ' E=GBeginWindow(WND)
  IF E THEN RETURN
- GPRINTWindow WND,0,0," otya 3D window ",RGB(0,0,0)
- GPRINTWindow WND,0,8,"   system 5.0   ",RGB(0,0,0)
+ VAR S$="otya 3D window"
+ GPRINTWindow WND,(144-LEN(S$)*8)/2,0,S$,RGB(0,0,0)
+ S$="system 5.0"
+ GPRINTWindow WND,(144-LEN(S$)*8)/2,8,S$,RGB(0,0,0)
+ GLOADWindow WND,1,1,16,16,OTWLOGO,1,0
+ S$="Logo designed by"
+ GPRINTWindow WND,(144-LEN(S$)*8)/2,30,S$,RGB(0,0,0)
+ S$="mintyan"
+ GPRINTWindow WND,(144-LEN(S$)*8)/2,38,S$,RGB(0,0,0)
+ S$="© 2011-2015 otya"
+ GPRINTWindow WND,(144-LEN(S$)*8)/2,46+4,S$,RGB(0,0,0)
  E=GEndWindow(WND)
 END
 COMMON DEF L_ABOUT
@@ -1969,7 +2047,7 @@
   VAR E
   E=GBeginWindow(WCLOCKWND)
   IF E THEN RETURN
-  GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
+  GCLSWindow WCLOCKWND,RGB(224,224,224)'255,160,16)
   GPRINTWindowCC WCLOCKWND,0,0,TIME$,1
   GPRINTWindowCC WCLOCKWND,0,8,TIME$,1
   GPRINTWindowCC WCLOCKWND,0,56,TIME$,1
@@ -2256,7 +2334,6 @@
  GCLSWindow WND,RGB(255,255,255)
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  VAR L=GetWindowVar(WND,1)
  VAR C=GetWindowVar(WND,2)
  VAR V$=TXTBOXEX_VAL$[C]
@@ -2299,6 +2376,7 @@
    BREAK
   ENDIF
  WEND
+ GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  E=GEndWindow(WND)
  SetWindowVar WND,6,PL
 END
@@ -2906,17 +2984,58 @@
  FOR I=0TO 15
   READ PAL[I]
  NEXT
+ OTW_FNT=NewArray2(1024,64)
+ OTW_FNTTMP=NewArray(64)
+ OTW_FNTPAL=NewArray(2)
+ OTW_FNTTBL=NewArray(65536)
+ FOR I=1TO 65535
+  OTW_FNTTBL[I]=703
+ NEXT
+ OTW_FNTTBL[10]=13
+ OTW_LOADFNTTBL
+ IF!CHKFILE("DAT:OTW_FONT")THEN
+  OTW_GENFONT
+ ELSE
+  LOAD"DAT:OTW_FONT",OTW_FNT,0
+ ENDIF
+ @FONT
+ '      AARRGGBB
+DATA &H00000000
+DATA &HFF000000
+DATA &HFF7F0000
+DATA &HFFFF0000
+DATA &HFF007F00
+DATA &HFF00FF00
+DATA &HFF7F7F00
+DATA &HFFFFFF00
+DATA &HFF00007F
+DATA &HFF0000FF
+DATA &HFF7F007F
+DATA &HFFFF00FF
+DATA &HFF007F7F
+DATA &HFF00FFFF
+DATA &HFF7F7F7F
+DATA &HFFFFFFFF
+END
+DEF OTW_GENFONT
+ VAR I
  IF!CHKFILE("DAT:FONT")THEN
   SAVE "GRPF:FONT"
-  IF RESULT==-1THEN SAVE "GRPF:FONT"
+  IF RESULT==-1 THEN SAVE "GRPF:FONT"
   '2かいもやめたならしかたない
+  IF RESULT!=1 THEN
+   FOR I=0TO 63
+    READ OTW_FNT[703,I]
+   NEXT
+   FOR I=1TO 65535
+    OTW_FNTTBL[I]=703
+   NEXT
+   RETURN
+  ENDIF
  ENDIF
  LOAD"GRP1:FONT",0
  VAR L
- OTW_FNT=NewArray2(1024,64)
- OTW_FNTTMP=NewArray(64)
- OTW_FNTPAL=NewArray(2)
- OTW_FNTTBL=NewArray(65536)
+ VAR X,Y,J,K
  GPAGE 0,1
  FOR I=0TO 1023
   X=I*8
@@ -2933,29 +3052,20 @@
    NEXT
   NEXT
  NEXT
- OTW_FNTTBL[10]=13
+ SAVE"DAT:OTW_FONT",OTW_FNT
+ GCLS 
  GPAGE 0,0
- OTW_LOADFNTTBL
 @FONT
 RETURN
 COLOR
-'      AARRGGBB
-DATA &H00000000
-DATA &HFF000000
-DATA &HFF7F0000
-DATA &HFFFF0000
-DATA &HFF007F00
-DATA &HFF00FF00
-DATA &HFF7F7F00
-DATA &HFFFFFF00
-DATA &HFF00007F
-DATA &HFF0000FF
-DATA &HFF7F007F
-DATA &HFFFF00FF
-DATA &HFF007F7F
-DATA &HFF00FFFF
-DATA &HFF7F7F7F
-DATA &HFFFFFFFF
+DATA 1,1,1,1,1,1,1,0'"FFFFFFF0"
+DATA 1,0,1,1,1,0,1,0'"F0FFF0F0"
+DATA 1,1,0,1,0,1,1,0'"FF0F0FF0"
+DATA 1,1,1,0,1,1,1,0'"FFF0FFF0"
+DATA 1,1,0,1,0,1,1,0'"FF0F0FF0"
+DATA 1,0,1,1,1,0,1,0'"F0FFF0F0"
+DATA 1,1,1,1,1,1,1,0'"FFFFFFF0"
+DATA 0,0,0,0,0,0,0,0'"00000000"
 DATA "0"
 DATA &B00111000'"00FFF000"
 DATA &B01000100
diff -u OTW.TXT OTW18
--- OTW.TXT
+++ OTW18
@@ -55,6 +55,7 @@
 DIM WIN_MSGBUF [0,0,0]
 DIM WIN_MSGCNT [0,0]
 DIM WIN_USER   [0,0]
+DIM WIN_HIDE   [0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
 VAR WIN_MSGARGSIZE
@@ -131,6 +132,7 @@
  WIN_PARENT    =NewArray(WIN_MAX)
  WIN_BEGIN     =NewArray(WIN_MAX)
  WIN_SP        =NewArray(WIN_MAX)
+ WIN_HIDE      =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -187,6 +189,7 @@
 VAR CTL_TGLBTNCTL
 VAR CTL_TXTBOXCTL
 VAR CTL_LABELCTL
+VAR CTL_VSCRBARCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
@@ -208,6 +211,7 @@
  NewControl "BUTTON" OUT CTL_BUTTONCTL,E
  NewControl "TXTBOX" OUT CTL_TXTBOXCTL,E
  NewControl "LABEL" OUT CTL_LABELCTL,E
+ NewControl "VSCRBAR" OUT CTL_VSCRBARCTL,E
  CTL_PAINTHANDLER=0
  CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
  CTL_LBTNDWNHANDLER=1
@@ -242,6 +246,11 @@
  E=SetControlChFocusHandler(CTL_TXTBOXCTL,"TextBoxChFocus")
  E=SetControlPainter(CTL_LABELCTL,"LabelPainter")
 
+ E=SetControlPainter(CTL_VSCRBARCTL,"VSCRBARPainter")
+ E=SetControlLMouseUpHandler(CTL_VSCRBARCTL,"VSCRBARLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_VSCRBARCTL,"VSCRBARLMouseDown")
+
+
  ExtendControl "ToggleButton",CTL_BUTTONCTL OUT CTL_TGLBTNCTL,E
  E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
@@ -256,12 +265,15 @@
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
 VAR WIN_EVENTERR
+'びょうが ふか
+VAR WIN_NODRAW
 VAR CTL_NOALLOC
 VAR CTL_INVALIDID
 DEF OTW_INIT_ERR
  WIN_NOALLOC=1
  WIN_INVALIDID=2
  WIN_EVENTERR=3
+ WIN_NODRAW=3
  CTL_NOALLOC=201
  CTL_INVALIDID=202
 END
@@ -280,6 +292,9 @@
 COMMON DEF GetLabelControl()
  RETURN CTL_LABELCTL
 END
+COMMON DEF GetVScrollBarControl()
+ RETURN CTL_VSCRBARCTL
+END
 'CONTROL
 COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
@@ -368,6 +383,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_NOTIFHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlNotifHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_NOTIFHANDLER]=HANDLER$
+ RETURN 0
+END
 COMMON DEF SetControlKeyHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_KEYHANDLER]=HANDLER$
@@ -593,6 +613,8 @@
  WIN_FH1[NUWID]=CTL_FH1[NUCID]'WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
  WIN_AY[NUWID]=WIN_TOPLEVELY
+ WIN_X[NUWID]=WIN_TopLevelX
+ WIN_Y[NUWID]=WIN_TOPLEVELY
  INC WIN_TopLevelX,CTL_FH1[NUCID]'WIN_FHEIGHT1
  INC WIN_TopLevelY,CTL_FH1[NUCID]'WIN_FHEIGHT1
  WIN_RX[NUWID]=WIN_AX[NUWID]
@@ -624,7 +646,7 @@
 COMMON DEF DeleteWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- RepaintAllWindow WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID],WIN_AH[NUWID]
+ RepaintAllWindow WIN_ROOTWND,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID],WIN_AH[NUWID]
  VAR E=DeleteWindowNUWID(NUWID)
  RETURN E
 END
@@ -661,17 +683,18 @@
  IF P THEN
   WIN_NEXT[P]=N
  ENDIF
- IF WIN_SP[NUWID]THEN
-  SPVAR WIN_SP[NUWID]AND 511,0,0
-  SPCLR WIN_SP[NUWID]AND 511
-  WIN_SP[NUWID]=0
- ENDIF
  WIN_NEXT[NUWID]=WIN_FREE
  WIN_PREV[NUWID]=0
  WIN_PARENT[NUWID]=0
  WIN_CHILD[NUWID]=0
  WIN_FREE=NUWID
  WIN_NAME$[NUWID]=""
+ IF WIN_SP[NUWID]THEN
+  SPVAR WIN_SP[NUWID]AND 511,0,0
+  SPCLR WIN_SP[NUWID]AND 511
+  WIN_SP[NUWID]=0
+  OTW_SPSORT
+ ENDIF
  RETURN 0
 END
 
@@ -689,6 +712,7 @@
  WEND
 END
 DEF OTW_DrawMap NUWID
+ IF WIN_HIDE[NUWID]THEN RETURN
  GPAGE OTW_SP,OTW_DP
  GCLIP 1,0,240,400,480
  GFILL WIN_RX[NUWID],WIN_RY[NUWID]+240,WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
@@ -726,11 +750,12 @@
     WIN_PREV[NUWID]=C
     WIN_NEXT[NUWID]=0
     IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
-     VAR Z,Z2,S
-     SPOFS WIN_SP[NUWID]AND 511OUT S,S,Z
-     SPOFS WIN_SP[C]AND 511OUT S,S,Z2
-     SPOFS WIN_SP[NUWID]AND 511,,,Z2
-     SPOFS WIN_SP[C]AND 511,,,Z
+    'VAR Z,Z2,S
+    'SPOFS WIN_SP[NUWID]AND 511OUT S,S,Z
+    'SPOFS WIN_SP[C]AND 511OUT S,S,Z2
+    'SPOFS WIN_SP[NUWID]AND 511,,,Z2
+    'SPOFS WIN_SP[C]AND 511,,,Z
+     OTW_SPSORT
     ENDIF
     VOID RepaintWindow(WND)
     OTW_DrawMap NUWID
@@ -761,8 +786,8 @@
  RETURN 0
 END
 
-DEF RepaintAllWindow X,Y,W,H
- VAR NXT=WIN_ROOTWND AND NUWIDMASK
+DEF RepaintAllWindow WND,X,Y,W,H
+ VAR NXT=WND AND NUWIDMASK
  VAR B=NXT
 ' WHILE NXT
 '  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDHIFT))
@@ -770,7 +795,7 @@
 '  IF WIN_CHILD[NXT]THEN
 '   B=WIN_CHILD[NXT]
    WHILE B
-   VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+    IF!WIN_HIDE[B]THEN VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
     OTW_DrawMap B
     IF WIN_CHILD[B]THEN
      B=WIN_CHILD[B]
@@ -860,19 +885,35 @@
  ENDIF
  WIN_AFW[NUWID]=W
  WIN_AFH[NUWID]=H
+ WIN_HIDE[NUWID]=0
+ IF WIN_AH[NUWID]<0THEN
+  WIN_HIDE[NUWID]=1
+  RETURN
+ ENDIF
+ IF WIN_AW[NUWID]<0THEN
+  WIN_HIDE[NUWID]=1
+  RETURN
+ ENDIF
 END
-COMMON DEF MoveWindow(WND,X,Y)
+COMMON DEF BeginWindowOP(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ RETURN 0
+END
+COMMON DEF EndWindowOp(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ RepaintAllWindow WND,0,0,0,0
+ RETURN 0
+END
+COMMON DEF MoveWindow2(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
- IF!MX&&!MY THEN RETURN FrontWindow(WND)
- VAR NXT=WIN_CHILD[NUWID],B=NXT
- IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
-' GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
- ENDIF
-' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
- WIN_AX[NUWID]=WIN_AX[NUWID]+MX
- WIN_AY[NUWID]=WIN_AY[NUWID]+MY
+ VAR MX=X-WIN_X[NUWID],MY=Y-WIN_Y[NUWID]
+ IF!MX&&!MY THEN RETURN 0
+ VAR PNUWID=WIN_PARENT[NUWID]
+ WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
+ WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+Y
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
  WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
  WIN_RFX[NUWID]=WIN_FX[NUWID]
@@ -880,24 +921,67 @@
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  OTW_CLIPWindow NUWID
-' STOP
-' WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
-' IF WIN_AX[PNUWID]>WIN_RX[NUWID]THEN
-' WIN_RX[NUWID]=WIN_AX[PNUWID]
-'ENDIF
-'IF WIN_AY[PNUWID]>WIN_RY[NUWID]THEN
-' WIN_RY[NUWID]=WIN_AY[PNUWID]
-'ENDIF
-'IALOG STR$(WIN_FX[PNUWID]-WIN_AX[NUWID])
- IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
-' GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
+ VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
+
+ IF!NXT THEN RETURN 0
+ B=NXT
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
+  IF WIN_SP[NUWID]THEN
+   WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
+  ENDIF
  ENDIF
- VAR E=FrontWindow(WND)
- IF E THEN RETURN E
- 'WHILE 1
-' 
-'WEND
- NXT=WIN_CHILD[WIN_PARENT[NUWID]]
+ WHILE NXT
+  IF WIN_CHILD[NXT]THEN
+   B=WIN_CHILD[NXT]
+   VAR MVF=NUWID==NXT
+   WHILE B
+    IF MVF THEN
+     WIN_AX[B]=WIN_AX[B]+MX
+     WIN_AY[B]=WIN_AY[B]+MY
+     WIN_FX[B]=WIN_FX[B]+MX
+     WIN_FY[B]=WIN_FY[B]+MY
+     WIN_RFX[B]=WIN_RFX[B]+MX
+     WIN_RFY[B]=WIN_RFY[B]+MY
+     WIN_RX[B]=WIN_RX[B]+MX
+     WIN_RY[B]=WIN_RY[B]+MY
+    ENDIF
+    IF!WIN_NEXT[B]THEN
+     WHILE B
+      B=WIN_PARENT[B]
+      IF B==NXT THEN BREAK
+      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+     WEND
+     IF B==NXT THEN BREAK
+    ENDIF
+    IF WIN_CHILD[B]THEN
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
+    B=WIN_NEXT[B]
+    IF B==NXT THEN BREAK
+   WEND
+  ENDIF
+  NXT=WIN_NEXT[NXT]
+ WEND
+END
+COMMON DEF MoveWindow(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ VAR MX=X-WIN_X[NUWID],MY=Y-WIN_Y[NUWID]
+ IF!MX&&!MY THEN RETURN 0
+ VAR PNUWID=WIN_PARENT[NUWID]
+ WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
+ WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+Y
+ WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ OTW_CLIPWindow NUWID
+ VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
  VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
 
  IF!NXT THEN RETURN'WIN_
@@ -999,11 +1083,15 @@
  RETURN 0
 END
 COMMON DEF RepaintWindow(WND)
+ IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
 COMMON DEF SendNotificationWindow(WND,DAT,DAT2)
  RETURN SendWindowEvent(WND,CTL_NOTIFHANDLER,DAT,DAT2)
 END
+COMMON DEF SendNotifWindow(WND,DAT,DAT2)
+ RETURN SendWindowEvent(WND,CTL_NOTIFHANDLER,DAT,DAT2)
+END
 COMMON DEF SendKeyWindow(WND,KEY)
  RETURN SendWindowEvent(WND,CTL_KEYHANDLER,KEY,0)
 END
@@ -1119,6 +1207,14 @@
  IF!CheckWindow(WND)THEN RETURN -1
  RETURN WIN_HEIGHT[WND AND NUWIDMASK]-WIN_FH2[WND AND NUWIDMASK]
 END
+COMMON DEF GetWindowX(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_FX[WND AND NUWIDMASK]
+END
+COMMON DEF GetWindowY(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_FY[WND AND NUWIDMASK]
+END
 COMMON DEF GetWindowVar(WND,I)
  RETURN WIN_VAR[WND AND NUWIDMASK,I]
 END
@@ -1178,32 +1274,34 @@
  ENDIF
  RETURN NUWIDToWND(WIN_PARENT[WND AND NUWIDMASK])
 END
+COMMON DEF GetChildWindow(WND)
+ IF!CheckWindow(WND)THEN
+  RETURN 0
+ ENDIF
+ RETURN NUWIDToWND(WIN_CHILD[WND AND NUWIDMASK])
+END
+COMMON DEF GetNextWindow(WND)
+ IF!CheckWindow(WND)THEN
+  RETURN 0
+ ENDIF
+ RETURN NUWIDToWND(WIN_NEXT[WND AND NUWIDMASK])
+END
+COMMON DEF GetPrevWindow(WND)
+ IF!CheckWindow(WND)THEN
+  RETURN 0
+ ENDIF
+ RETURN NUWIDToWND(WIN_PREV[WND AND NUWIDMASK])
+END
 ''WINDOW GRAPHIC
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_HIDE[NUWID]THEN RETURN WIN_NODRAW
  IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
  VAR AX=WIN_RFX[NUWID]'WIN_FW1[NUWID]
  VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
- VAR W=WIN_AW[NUWID]
- VAR H=WIN_AH[NUWID]
- IF W==WIN_WIDTH[NUWID]THEN
-  DEC W,WIN_FW2[NUWID]
- ELSE
-  DEC W,WIN_FW2[NUWID]-WIN_FW1[NUWID]
- ENDIF
- IF H==WIN_HEIGHT[NUWID]THEN
-  DEC H,WIN_FH2[NUWID]
- ELSE
-  IF WIN_HEIGHT[NUWID]-H>=WIN_FH1[NUWID]THEN
-   DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
-  ELSE
-   DEC H,WIN_FH1[NUWID]-(WIN_HEIGHT[NUWID]-H)+1
-'WIN_HEIGHT[NUWID]-H'WIN_FH2[NUWID]-WIN_FH1[NUWID]
-  ENDIF
- ENDIF
- W=WIN_AFW[NUWID]
- H=WIN_AFH[NUWID]
+ VAR W=WIN_AFW[NUWID]
+ VAR H=WIN_AFH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
  IF WIN_BEGIN[NUWID]>=2THEN RETURN 0
@@ -1234,6 +1332,7 @@
 COMMON DEF GEndWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_HIDE[NUWID]THEN RETURN WIN_NODRAW
  IF!WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
  'ごうせい
  WIN_PARENT[0]=0
@@ -1258,7 +1357,7 @@
  IF H==WIN_HEIGHT[NUWID]THEN DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
   GCLIP 1,AX,AY,AX+W,AY+H
   WHILE PNUWID
-   GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
+   IF!WIN_HIDE[PNUWID]THEN GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
 
    PNUWID=WIN_NEXT[PNUWID]
   WEND
@@ -1276,7 +1375,7 @@
    PNUWID=WIN_NEXT[PNUWID]
    CONTINUE
   ENDIF
-   GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
+   IF!WIN_HIDE[PNUWID]THEN GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
@@ -1440,6 +1539,7 @@
  VAR X=MX+A1X
  VAR Y=MY+A2Y
  VAR E=MoveWindow(WND,X,Y)
+ E=FrontWindow(WND)
  SPHIDE OTW_MOVWINSP
  SPUNLINK OTW_MOVWINSP
  MouseClipDef
@@ -1579,6 +1679,100 @@
  NEXT
  E=GEndWindow(W)
 END
+DEF NewVScrollBar PARENT,SIZ OUT WND,E
+ VAR W=GetWindowWidth(PARENT)
+ VAR H=GetWindowHeight(PARENT)
+ NewWindow GetVScrollBarControl(),"GG",W-8,0,8,H,PARENT,0 OUT WND,E
+ SetWindowVar WND,1,SIZ
+END
+COMMON DEF SetScrollBarSize W,SIZ
+ SetWindowVar W,1,SIZ
+ SetWindowVar W,2,0
+ VOID RepaintWindow(W)
+END
+COMMON DEF SetScrollBarPostion W,POS
+ SetWindowVar W,2,POS
+ VOID RepaintWindow(W)
+END
+DEF VSCRBARPainter W,_,T,XY,WH
+ IF GBEGINWindow(W)THEN RETURN
+ GCLSWindow W,RGB(224,224,224)
+ VAR _W=GetWindowWidth(W)
+ VAR _H=GetWindowHeight(W)
+ GBOXWindow W,0,0,_W,_H,RGB(0,0,0)
+ '====
+ 'BOX
+ GLINEWindow W,0,0,0,7,-1
+ GLINEWindow W,0,0,7,0,-1
+ VAR C=RGB(0,0,0)
+ '
+ GLINEWindow W,4,2,2,4,C
+ GFILLWindow W,3,3,5,6,C
+ GPSETWindow W,6,4,C
+ GLINEWindow W,0,8,8,8,C
+ '====
+ 'BOX
+ GLINEWindow W,0,_H-1,0,_H-8,-1
+ GLINEWindow W,0,_H-8,7,_H-8,-1 
+ '
+ GLINEWindow W,2,_H-4,4,_H-2,C
+ GFILLWindow W,3,_H-6,5,_H-3,C
+ GPSETWindow W,6,_H-4,C
+ 
+ '==BAR==
+ VAR AH=_H-18
+ VAR SIZ=GetWindowVar(W,1)
+ VAR POS=GetWindowVar(W,2)
+ 'Barのながさ
+ VAR BS=AH-SIZ
+ VAR S=9+POS
+ '10いか
+ IF BS<10THEN
+  BS=10
+  S=(S-9)*((AH-10)/SIZ)+9
+ ENDIF
+ GLINEWindow W,1,S,_W-1,S,C
+ GLINEWindow W,1,S+BS,_W-1,S+BS,C
+ GLINEWindow W,_W-1,S+1,_W-1,S+BS-2,RGB(128,128,128)
+ GLINEWindow W,1,S+BS-1,_W-1,S+BS-1,RGB(128,128,128)
+ GLINEWindow W,1,S+1,1,S+BS-2,-1
+ GLINEWindow W,1,S+1,_W-2,S+1,-1
+ IF GENDWindow(W)THEN RETURN
+END
+DEF VSCRBARLMouseUP W,C,T,X,Y
+ SetWindowVar W,3,8
+END
+DEF VSCRBARLMouseDown W,C,T,X,Y
+ VAR ID=GetWindowVar(W,3)
+ IF ID<8THEN
+  IF!ID THEN
+   ID=0
+   IF Y<9THEN
+    ID=2
+   ENDIF
+   IF Y>GetWindowHeight(W)-9THEN
+    ID=3
+   ENDIF
+   SetWindowVar W,3,ID
+  ENDIF
+  VOID LMouseDownWindow(W)
+ ELSE
+  SetWindowVar W,3,0
+  RETURN
+ ENDIF
+ VAR SIZ=GetWindowVar(W,1)
+ VAR POS=GetWindowVar(W,2)
+ IF ID==2&&POS>0 THEN
+  SetWindowVar W,2,POS-1
+  VSCRBARPainter W,C,0,0,0
+  VOID SendNotifWindow(GetParentWindow(W),GetWindowVar(W,0),POS-1)
+ ENDIF
+ IF ID==3&&POS<SIZ THEN
+  SetWindowVar W,2,POS+1
+  VSCRBARPainter W,C,0,0,0
+  VOID SendNotifWindow(GetParentWindow(W),GetWindowVar(W,0),POS+1)
+ ENDIF
+END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
  GPSET 408,0,-1
@@ -1617,6 +1811,7 @@
 VAR OTW_KX2
 VAR OTW_KY2
 VAR OTW_USEBTN
+VAR OTW_USEMEM
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   VAR FM=FREEMEM
@@ -1711,7 +1906,7 @@
   E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
   NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
- NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
+' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
@@ -1752,6 +1947,7 @@
   LOCATE 0,29
   NewProcess"LAUNCHER","" OUT E,E,E
   DEC FM,FREEMEM
+  OTW_USEMEM=FM
 '  PrintConsole FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
  ENDIF
 RETURN
@@ -1810,6 +2006,7 @@
    ELSE
     IF NUWID AND WIN_FRAMEFLG THEN
      E=LMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
+     E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
     ELSE
      E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
     ENDIF
@@ -1830,7 +2027,7 @@
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
 'E=UpdateWindow(TSTWND2)
-E=UpdateWindow(TSTWND)
+'E=UpdateWindow(TSTWND)
 'E=UpdateWindow(TSTWND3)
  OTW_FDIFF=MAINCNT-OTW_FCNT
  IF OTW_FDIFF>1 THEN
@@ -1974,6 +2171,7 @@
   LAUNCHERITEM$[5]="TXTED"
   LAUNCHERITEM$[6]="PRGED"
   LAUNCHERITEM$[7]="OTYFIL"
+' LAUNCHERITEM$[8]="MEMVIEW"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
   I_LAUNCHER
  ENDIF
@@ -1988,10 +2186,6 @@
 VAR WCLOCKBC
 VAR WCLOCKBC2
 VAR WCLOCKTIM
-COMMON DEF GetChildWindow(WND)
- IF!CheckWindow(WND)THEN RETURN 0
- RETURN NUWIDToWND(WIN_CHILD[WND AND NUWIDMASK])
-END
 COMMON DEF RunNotificationHandler W,C,T,V,A2
  VAR PID,NUPID,E
  NewProcess GetWindowName$(GetChildWindow(GetParentWindow(V))),"" OUT PID,NUPID,E
@@ -2929,6 +3123,7 @@
  COPY OTYFILICODAT,ICONS,16*16,16*16
 END
 VAR OTYFILCTL
+VAR OTYFILESWND
 VAR OTYFILES$[0]
 VAR OTYFILICONCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
@@ -2941,6 +3136,55 @@
  ENDIF
  IF GEndWindow(W)THEN RETURN
 END
+COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
+ VAR I=GetNextWindow(GetChildWindow(WND))
+ IF BeginWindowOP(WND)THEN RETURN
+ POS=POS*4
+ VAR W=36*4+8,H=64
+ VAR R=W/36
+ VAR C=CEIL(H/40.0)
+ VAR BY1=(POS MOD 40)+7
+ VAR BY2=(POS MOD 40)-10
+ IF OTYFILESWND!=WND THEN
+  GetFiles OTYFILES$,"SYS"
+  OTYFILESWND=WND
+ ENDIF
+' ?R,C,POS,POS DIV 16,POS DIV 40,BY1
+ VAR X=1,Y=-22
+ VAR J
+ VAR L2=R*2
+ VAR F
+ VAR K=(POS DIV 40)*R
+ VAR KL=LEN(OTYFILES$)
+ WHILE I
+  IF!(J MOD L2) THEN INC Y,40X=1
+  IF F THEN
+   IF KL<=K THEN
+    VOID MoveWindow2(I,-256,-256)
+   ELSE
+    VOID MoveWindow2(I,X,Y-BY2)
+    SetWindowName I,RIGHT$(OTYFILES$[K],LEN(OTYFILES$[K])-1)
+   ENDIF
+   INC K
+   INC X,36
+  ELSE
+   IF KL<=K THEN
+    VOID MoveWindow2(I,-256,-256)
+   ELSE
+    VOID MoveWindow2(I,X+8,Y-BY1)
+    IF OTYFILES$[K][0]==" "THEN
+     SetWindowVar I,1,1
+    ELSE
+     SetWindowVar I,1,0
+    ENDIF
+   ENDIF
+  ENDIF
+  F=!F
+  I=GetNextWindow(I)
+  INC J
+ WEND
+ IF EndWindowOP(WND)THEN RETURN
+END
 COMMON DEF I_OTYFIL
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -2950,6 +3194,7 @@
  VAR WND,E
  IF!OTYFILCTL THEN
   ExtendControl "Files",GetWindowControl() OUT OTYFILCTL,E
+  E=SetControlNotifHandler(OTYFILCTL,"OTYFILNOTIF")
   NewControl "ICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
   RC_OTYFIL
@@ -2959,20 +3204,51 @@
  VAR X=8,Y,I
  OTYFILES$=NewArray$(0)
  GetFiles OTYFILES$,"SYS"
- FOR I=0TO LEN(OTYFILES$)-1
+ OTYFILESWND=WND
+ VAR R=W/36
+ VAR C=CEIL(H/40.0)+1
+ VAR L=R*C
+ IF LEN(OTYFILES$)<=L THEN L=LEN(OTYFILES$)-1
+ FOR I=0TO L'LEN(OTYFILES$)-1
   IF X+32+4>W THEN INC Y,40:X=8
-  IF Y+16>=H THEN BREAK
-  NewWindow OTYFILICONCTL,"",X,Y,15,15,WND,0 OUT LBL,E
-  IF OTYFILES$[I][0]==" "THEN SetWindowVar LBL,1,1
+'  IF Y+16>=H THEN BREAK
   NewWindow GetLabelControl(),RIGHT$(OTYFILES$[I],LEN(OTYFILES$[I])-1),X-8,Y+16,32,24,WND,0 OUT LBL,E
   SetLabelAlignCenter LBL
+  NewWindow OTYFILICONCTL,"",X,Y,15,15,WND,0 OUT LBL,E
+  IF OTYFILES$[I][0]==" "THEN SetWindowVar LBL,1,1
   INC X,32+4
  NEXT
+ VAR SCR
+ VAR OL=W/36
+ VAR AW=FLOOR(LEN(OTYFILES$)/OL)*10
+ NewVScrollBAR WND,AW OUT SCR,E
  SetProcessVar WND
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR MEMVIEWCTL
+COMMON DEF I_MEMVIEW
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!MEMVIEWCTL THEN
+  ExtendControl "MEMVIEW",GetWindowControl() OUT MEMVIEWCTL,E
+ ENDIF
+ NewTopLevelWindow MEMVIEWCTL,"MEMVIEW",128,96 OUT WND,E
+SetProcessVar WND
+END
+COMMON DEF L_MEMVIEW
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+ ?FREEMEM,OTW_USEMEM
+END
+
+
+
+'=========
 DEF OTW_LOADFONT
  'LOAD FONT-1
  VAR C$
diff -u OTW.TXT OTW19
--- OTW.TXT
+++ OTW19
@@ -49,6 +49,11 @@
 DIM WIN_PARENT [0]
 DIM WIN_BEGIN  [0]
 DIM WIN_SP     [0]
+DIM WIN_MENU   [0]
+DIM WIN_GROUP  [0]
+DIM WIN_GNEXT  [0]
+DIM WIN_GPREV  [0]
+DIM WIN_GPARENT[0]
 'QUEUE
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
@@ -133,13 +138,75 @@
  WIN_BEGIN     =NewArray(WIN_MAX)
  WIN_SP        =NewArray(WIN_MAX)
  WIN_HIDE      =NewArray(WIN_MAX)
+ WIN_MENU      =NewArray(WIN_MAX)
+ WIN_GROUP     =NewArray(WIN_MAX)
+ WIN_GNEXT     =NewArray(WIN_MAX)
+ WIN_GPREV     =NewArray(WIN_MAX)
+ WIN_GPARENT   =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
  WIN_MSGCNT    =NewArray2(WIN_MAX,16)
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
+ OTW_MENU_INITARRAY
 END
+'=======================
+'MENU
+'=======================
+'Item
+DIM MENU_INAME$[0]
+DIM MENU_INEXT[0]
+DIM MENU_IPREV[0]
+DIM MENU_ICHILD[0]
+DIM MENU_IPARENT[0]
+DIM MENU_ISTYLE[0]
+DIM MENU_IVAR[0]
+VAR MENU_ITEMMAX
+VAR MENU_ITEMFREE
+
+DIM MENU_WIDTH[0]
+DIM MENU_HEIGHT[0]
+DIM MENU_NUWID[0]
+DIM MENU_OWNER[0]
+DIM MENU_ITEM[0]
+DIM MENU_SHOW[0]
+DIM MENU_NEXT[0]
+DIM MENU_LAST[0]
+'Select
+DIM MENU_SEL[0]
+DIM MENU_ID[0]
+VAR MENU_MAX
+VAR MENU_IDCNT
+VAR MENU_FREE
+VAR MENUCTL
+DEF OTW_MENU_INITARRAY
+ MENU_ITEMMAX=256
+ MENU_INAME$=NewArray$(MENU_ITEMMAX)
+ MENU_INEXT=NewArray(MENU_ITEMMAX)
+ MENU_IPREV=NewArray(MENU_ITEMMAX)
+ MENU_ICHILD=NewArray(MENU_ITEMMAX)
+ MENU_IPARENT=NewArray(MENU_ITEMMAX)
+ MENU_ISTYLE=NewArray(MENU_ITEMMAX)
+ MENU_IVAR=NewArray(MENU_ITEMMAX)
+ OTW_INITLIST MENU_INEXT
+ MENU_ITEMFREE=1
+ MENU_MAX=64
+ MENU_WIDTH=NewArray(MENU_MAX)
+ MENU_HEIGHT=NewArray(MENU_MAX)
+ MENU_NUWID=NewArray(MENU_MAX)
+ MENU_OWNER=NewArray(MENU_MAX)
+ MENU_ITEM=NewArray(MENU_MAX)
+ MENU_LAST=NewArray(MENU_MAX)
+ MENU_SEL=NewArray(MENU_MAX)
+ MENU_SHOW=NewArray(MENU_MAX)
+ MENU_IDCNT=0
+ MENU_ID=NewArray(MENU_MAX)
+ MENU_NEXT=MENU_ITEM
+ OTW_INITLIST MENU_NEXT
+ MENU_FREE=1
+ VAR E
+END
 'IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
 'ExitProcess 1
 'ENDIF
@@ -180,6 +247,8 @@
 VAR CTL_BTNHANDLER
 VAR CTL_CHFOCUSHANDLER
 VAR CTL_MOUSEMVHANDLER
+VAR CTL_FRMMOUSEMVHANDLER
+VAR CTL_CREATEHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -225,6 +294,8 @@
  CTL_BTNHANDLER=8
  CTL_CHFOCUSHANDLER=9
  CTL_MOUSEMVHANDLER=10
+ CTL_FRMMOUSEMVHANDLER=11
+ CTL_CREATEHANDLER=12
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -232,10 +303,12 @@
  CTL_BTNUPFLG=2
 ' CTL_DRWFRMHANDLER=3
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
- E=SetControlFrameSize(CTL_WINDOWCTL,1,11,1,1)
+ E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_WINDOWCTL,"WindowLMouseDown")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
+ E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_BUTTONCTL,"ToggleButtonLMouseDown")
@@ -255,10 +328,16 @@
  E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
  INIT_TXTBOXEX
+
+ 'MENU
+ NewControl"POPUPMENU" OUT MENUCTL,E
+ E=SetControlPainter(MENUCTL,"MenuPainter")
+ E=SetControlMouseMoveHandler(MENUCTL,"MenuMouseMove")
+ E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
- FOR I=1TO LEN(ARY)-1
+ FOR I=1TO LEN(ARY)-2
   ARY[I]=I+1
  NEXT
 END
@@ -378,6 +457,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
  RETURN 0
 END
+DEF SetControlMMoveFrameHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_FRMMOUSEMVHANDLER]=HANDLER$
+ RETURN 0
+END
 COMMON DEF SetControlNotificationHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_NOTIFHANDLER]=HANDLER$
@@ -408,6 +492,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_MOUSEMVHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlCreateHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_CREATEHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -420,6 +509,128 @@
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
+VAR MENU_NOALLOC
+COMMON DEF NewMenu OUT MENU,E
+ IF !MENU_FREE THEN MENU=0RETURN
+ INC MENU_IDCNT
+ E=0
+ MENU_ID[MENU_FREE]=MENU_IDCNT
+ MENU_HEIGHT[MENU_FREE]=1
+ MENU_WIDTH[MENU_FREE]=2
+ MENU=MENU_FREE OR MENU_IDCNT<<12
+ MENU_FREE=MENU_NEXT[MENU_FREE]
+END
+COMMON DEF SetMenuBar WND,MENU
+END
+COMMON DEF ShowMenu MENU,WND
+END
+DEF ShowMenu_ MENU,WND,X,Y
+ VAR W=WND AND NUWIDMASK
+ VAR E
+ NewWindow MENUCTL,"",WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W],MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
+ SetWindowVar MENU_NUWID[MENU],0,MENU
+ MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
+ MENU_SHOW[MENU]=TRUE
+ WIN_ACTIVENUWID=MENU_NUWID[MENU]
+
+' MENU_SEL[C],WND,X-1,0
+END
+DEF NewMenuItem(STR$,PREV,STYLE)
+ VAR I=MENU_ITEMFREE
+ IF!I THEN RETURN
+ MENU_INAME$[I]=STR$
+ MENU_IPREV[I]=PREV
+ IF PREV THEN MENU_INEXT[PREV]=I
+ MENU_IPARENT[I]=PREV
+ MENU_ITEMFREE=MENU_INEXT[I]
+ MENU_INEXT[I]=0
+ RETURN I
+END
+COMMON DEF GetWindowMenu(WND)
+ RETURN WIN_MENU[WND AND NUWIDMASK]
+END
+COMMON DEF AddMenuItem MENU,STR$,IVAR
+ IF!CheckMenu(MENU)THEN RETURN
+ VAR N=MENU AND 4095
+ VAR I=NewMenuItem(STR$,MENU_LAST[N],0)
+ IF!MENU_LAST[N]THEN
+  MENU_LAST[N]=I
+  MENU_ITEM[N]=I
+ ELSE
+  MENU_LAST[N]=I
+ ENDIF
+ MENU_IVAR[I]=IVAR
+ INC MENU_HEIGHT[N],8
+ IF MENU_WIDTH[N]<LEN(STR$)*8THEN
+  MENU_WIDTH[N]=LEN(STR$)*8
+ ENDIF
+END
+COMMON DEF AddMenuItemSeparator MENU
+END
+COMMON DEF AddSubMenuItem MENU,STR$,SUBMENU
+ AddMenuItem MENU,STR$,0
+ VAR N=MENU AND 4095
+ IF!MENU_LAST[N]THEN RETURN
+ MENU_ICHILD[MENU_LAST[N]]=SUBMENU AND 4095
+END
+COMMON DEF CheckMenu(MENU)
+ RETURN MENU_ID[MENU AND 4095]==MENU>>12
+END
+DEF MenuLMouseUp WND,C,T,X,Y
+ VAR M=GetWindowVar(WND,0)
+ IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_IVAR[MENU_SEL[M]],0)
+ ENDIF
+ VOID DeleteWindow(WND)
+END
+DEF MenuMouseMove WND,C,T,X,Y
+ VAR M=GetWindowVar(WND,0)
+ VAR I=MENU_ITEM[M],Y1=1,Y2=1
+ VAR OS=MENU_SEL[M]
+ VAR BEG,G
+ WHILE I
+  INC Y2,8
+  IF Y1<=Y&&Y2>Y THEN
+   IF OS!=I&&!G THEN 
+   MENU_SEL[M]=I
+   IF!BEG&&GBeginWindow(WND)THEN :'BREAK
+   BEG=1
+   GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(0,0,255)
+   GPRINTWindow WND,1,Y1,MENU_INAME$[I],-1
+   G=0
+   ENDIF
+   IF!OS THEN BREAK
+  ELSE
+   IF I==OS THEN
+    IF!BEG&&GBeginWindow(WND)THEN :'BREAK
+    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(224,224,224)
+    GPRINTWindow WND,1,Y1,MENU_INAME$[I],&HFF000000
+    OS=0
+    IF BEG THEN BREAK
+    BEG=1
+   ENDIF
+  ENDIF
+  Y1=Y2
+  I=MENU_INEXT[I]
+ WEND
+ IF BEG THEN BEG=GEndWindow(WND)
+END
+DEF MenuPainter WND,C,T,XY,WH
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,RGB(224,224,224)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ GBOXWindow WND,0,0,W,H,&HFF000000
+ VAR M=GetWindowVar(WND,0)
+ VAR I=MENU_ITEM[M],Y=1
+ WHILE I
+  GPRINTWindow WND,1,Y,MENU_INAME$[I],&HFF000000
+  INC Y,8
+  I=MENU_INEXT[I]
+ WEND
+ VAR E=GEndWindow(WND)
+END
 'WINDOW
 DEF WIDNUWIDToWND(WID,NUWID)
  RETURN WID<<12OR NUWID
@@ -427,6 +638,28 @@
 DEF NUWIDToWND(NUWID)
  RETURN WIN_WID[NUWID]<<12OR NUWID
 END
+'WND2 Join WND Group
+COMMON DEF JoinWindowGroup(WND,WND2)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ IF!CheckWindow(WND2)THEN RETURN WIN_INVALIDID
+ VAR NW1=WND AND NUWIDMASK
+ VAR NW2=WND2 AND NUWIDMASK
+ IF WIN_GROUP[NW1]THEN
+  VAR NW3=WIN_GROUP[NW1]
+  WIN_GNEXT[NW2]=WIN_GROUP[NW1]
+  WIN_GPREV[NW3]=NW2
+ ENDIF
+ WIN_GPARENT[NW2]=NW1
+ WIN_GROUP[NW1]=NW2
+ RETURN 0
+END
+COMMON DEF LeaveWindowGroup WND
+ NOIMPL "LeaveWindowGroup"
+END
+COMMON DEF GetWindowGroupOwner(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
+END
 VAR WIN_ROOTWND
 COMMON DEF GetRootWND()
  RETURN WIN_ROOTWND
@@ -443,6 +676,12 @@
 COMMON DEF WindowFrontFlag()
  RETURN 2
 END
+DEF WindowOnCreate WND,CTL
+ VAR NUCID=CTL AND 4095
+ IF LEN(CTL_HANDLER$[NUCID,CTL_CREATEHANDLER])THEN
+  CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,0,0
+ ENDIF
+END
 COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -494,7 +733,7 @@
  IF PNUWID THEN 
   IF FLG AND WindowFrontFlag()THEN
    IF WIN_CHILD[PNUWID]THEN
-    VAR N
+    VAR N=WIN_CHILD[PNUWID]
     WHILE 1
      IF!WIN_NEXT[N]THEN
       WIN_NEXT[N]=NUWID
@@ -536,7 +775,46 @@
   ENDIF
  ENDIF
  VOID RepaintWindow(WND)
+ IF PARENT==WIN_ROOTWND THEN
+  SPAllocWindow WND
+ ENDIF
+ WindowOnCreate WND,CTL
 END
+DEF SPAllocWindow WND
+ INC OTW_TOPLEVELCNT
+ VAR SP=2,NUWID=WND AND NUWIDMASK
+ WHILE SPVAR(SP,0)
+  SP=(SP+1)MOD 255
+ WEND
+ WIN_SP[NUWID]=SP OR 512
+ 'SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+ SPSET SP,0
+ SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
+ SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+ SPSHOW SP
+ SPVAR SP,0,WND
+ OTW_SPSORT
+END
+COMMON DEF NewTopLevelMenuWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+ IF!CheckControl(CTL)THEN
+  WND=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ VAR NUCID=CTL AND 4095
+ INC OTW_TOPLEVELCNT
+ VAR _H=CTL_FH1[NUCID]
+ 'ごういん
+ INC CTL_FH1[NUCID],10
+ NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,ERR
+ CTL_FH1[NUCID]=_H
+ IF ERR THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK,SP
+ NewMenu OUT WIN_MENU[NUWID],ERR
+ WIN_MENU[NUWID]=WIN_MENU[NUWID]
+ INC WIN_TopLevelX,CTL_FH1[NUCID]-1
+ INC WIN_TopLevelY,CTL_FH1[NUCID]-1
+END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -615,8 +893,8 @@
  WIN_AY[NUWID]=WIN_TOPLEVELY
  WIN_X[NUWID]=WIN_TopLevelX
  WIN_Y[NUWID]=WIN_TOPLEVELY
- INC WIN_TopLevelX,CTL_FH1[NUCID]'WIN_FHEIGHT1
- INC WIN_TopLevelY,CTL_FH1[NUCID]'WIN_FHEIGHT1
+ INC WIN_TopLevelX,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
+ INC WIN_TopLevelY,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -641,8 +919,27 @@
  SPSHOW SP
  SPVAR SP,0,WND
  OTW_SPSORT
+ WindowOnCreate WND,CTL
 END
-
+COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
+ IF!CheckControl(CTL)THEN
+  RETURN CTL_INVALIDID
+ ENDIF
+ IF!WIN_FREE THEN
+  RETURN WIN_NOALLOC
+ ENDIF
+ VAR O=OWNER AND NUWIDMASK
+ VAR AX=WIN_AX[O]
+ VAR AY=WIN_AY[O],WND,E
+ NewWindow CTL,NAME$,AX+(WIN_WIDTH[O]-WIDTH)/2,AY+(WIN_HEIGHT[O]-HEIGHT)/2,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,E
+ IF E THEN RETURN E
+ E=JoinWindowGroup(OWNER,WND)
+ RETURN E
+END
+COMMON DEF NewModalDialogBox CTL,NAME$,WIDTH,HEIGHT,OWNER
+END
+COMMON DEF NewModelessDialogBox CTL,NAME$,WIDTH,HEIGHT,OWNER
+END
 COMMON DEF DeleteWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -653,6 +950,7 @@
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ WIN_MENU[NUWID]=0
  WIN_WID[NUWID]=0
  WIN_MSGS[NUWID]=0
  WIN_MSGE[NUWID]=0
@@ -693,8 +991,27 @@
   SPVAR WIN_SP[NUWID]AND 511,0,0
   SPCLR WIN_SP[NUWID]AND 511
   WIN_SP[NUWID]=0
+  DEC OTW_TOPLEVELCNT
   OTW_SPSORT
  ENDIF
+ IF WIN_GPARENT[NUWID]THEN
+  'NOIMPL "DeleteWindow - Group"
+  
+  IF WIN_GNEXT[NUWID]THEN
+   WIN_GPREV[WIN_GNEXT[NUWID]]=WIN_GPREV[NUWID]
+  ENDIF
+  IF WIN_GPREV[NUWID]THEN
+   WIN_GNEXT[WIN_GPREV[NUWID]]=WIN_GNEXT[NUWID]
+  ELSE
+   WIN_GROUP[WIN_GPARENT[NUWID]]=WIN_GNEXT[NUWID]
+  ENDIF
+  WIN_GPARENT[NUWID]=0
+  WIN_GPREV[NUWID]=0
+  WIN_GNEXT[NUWID]=0
+  IF WIN_GROUP[NUWID]THEN 
+   NOIMPL "DeleteWindow - Group"
+  ENDIF
+ ENDIF
  RETURN 0
 END
 
@@ -912,8 +1229,8 @@
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
  WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
- WIN_AX[NUWID]=WIN_AX[PNUWID]+X
- WIN_AY[NUWID]=WIN_AY[PNUWID]+Y
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+WIN_FW1[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+WIN_FH1[PNUWID]+Y
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
  WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
  WIN_RFX[NUWID]=WIN_FX[NUWID]
@@ -972,8 +1289,8 @@
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
  WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
- WIN_AX[NUWID]=WIN_AX[PNUWID]+X
- WIN_AY[NUWID]=WIN_AY[PNUWID]+Y
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+WIN_FW1[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+WIN_FH1[PNUWID]+Y
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
  WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
  WIN_RFX[NUWID]=WIN_FX[NUWID]
@@ -1112,6 +1429,9 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF MouseMoveWindowOnFrame(NUWID)
+ RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
 DEF LMouseDownWindowOnFrame(WND)
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
@@ -1136,6 +1456,13 @@
 COMMON DEF UpdateWindowOnly(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_GROUP[NUWID]THEN
+  VAR G=WIN_GROUP[NUWID]
+  WHILE G
+   IF UpdateWindow(G OR WIN_WID[G]<<12)THEN BREAK
+   G=WIN_GNEXT[G]
+  WEND
+ ENDIF
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  VAR NUCID=WIN_CTL[NUWID] AND 4095
  VAR S=WIN_MSGE[NUWID]
@@ -1319,14 +1646,14 @@
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
- WIN_BEGIN[NUWID]=TRUE
+ WIN_BEGIN[NUWID]=TRUE+TRUE
  VAR AX=WIN_RX[NUWID]
  VAR AY=WIN_RY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
- GCLS RGB(224,224,224)
+ GCLS' RGB(224,224,224)
  RETURN 0
 END
 COMMON DEF GEndWindow(WND)
@@ -1386,8 +1713,9 @@
  RETURN 0
 END
 DEF OTW_SPCHR NUWID
- SPCHR WIN_SP[NUWID] AND 511,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
- SPOFS WIN_SP[NUWID] AND 511,WIN_AX[NUWID],WIN_AY[NUWID]
+ SPSCALE WIN_SP[NUWID] AND 511,1,1
+ SPCHR WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
+ SPOFS WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID]
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
@@ -1460,6 +1788,15 @@
   INC X,8
  NEXT
 END
+COMMON DEF GPRINTBWindow WND,X,Y,STR$,COL,BC
+ VAR L=LEN(STR$)-1,A,I
+ FOR I=0TO L
+  A=ASC(STR$[I])
+  IF A==10THEN Y=Y+8:X=0:CONTINUE
+  GPUTCHRBWindow WND,X,Y,A,COL,BC
+  INC X,8
+ NEXT
+END
 DIM OTW_FNTTMP[0]
 COMMON DEF GPUTCHRWindow WND,X,Y,A,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
@@ -1471,6 +1808,16 @@
  VAR I
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
+COMMON DEF GPUTCHRBWindow WND,X,Y,A,COL,BC
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ X=X+AX:Y=Y+AY
+ OTW_FNTPAL[0]=BC
+ OTW_FNTPAL[1]=COL
+ COPY OTW_FNTTMP,0,OTW_FNT,64*OTW_FNTTBL[A],64
+ VAR I
+ GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
+END
 DEF DesktopPainter WND,CTL,TYPE,A1,A2
 RETURN
  VAR E=GBEGINWindow(WND)
@@ -1481,32 +1828,62 @@
 DEF WindowPainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
+ GCLSWindow WND,RGB(224,224,224)
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+2,GetWindowName$(WND),15
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
  VAR C=RGB(224,224,224)
- GFILLWindow WND,W-09-1,-H+1,W-1,-1,RGB(224,0,0)
- GLINEWindow WND,W-08-1,-H+2+1,W-2-1,-2,C
- GLINEWindow WND,W-7-1,-H+2+1,W-1-1,-2,C
- GLINEWindow WND,W-2-1,-H+2+1,W-8-1,-2,C
- GLINEWindow WND,W-1-1,-H+2+1,W-7-1,-2,C
+ GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
+ GLINEWindow WND,-1,-1,W+1,-1,RGB(0,0,0)
+'GLINEWindow WND,W-08-1,-H+3,W-2-1,-3,C
+'GLINEWindow WND,W-7-1,-H+3,W-1-1,-3,C
+'GLINEWindow WND,W-2-1,-H+3,W-8-1,-3,C
+'GLINEWindow WND,W-1-1,-H+3,W-7-1,-3,C
+ GLINEWindow WND,W-08-1,-H+3,W-2-1,-H+9,C
+ GLINEWindow WND,W-7-1,-H+3,W-1-1,-H+9,C
+ GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
+ GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
 'GLINEWindow WND,-1,-H,W-1,-H,RGB(224,224,224)
- VAR H2=WIN_HEIGHT[WND AND NUWIDMASK]-H
+ VAR NUWID=WND AND NUWIDMASK
+ VAR H2=WIN_HEIGHT[NUWID]-H
 'GLINEWindow WND,-1,-H,-1,H2-1,RGB(224,224,224)
 'GLINEWindow WND,W-1,-H,W-1,H2,RGB(0,0,0)
 'GLINEWindow WND,-1,H2,W-1,H2,RGB(0,0,0)
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
+ IF WIN_MENU[NUWID]THEN
+  GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
+  GFILLWindow WND,0,-10,W-2,-2,RGB(224,224,224)
+  C=WIN_MENU[NUWID]AND 4095
+  VAR I=MENU_ITEM[C]
+  VAR X=0
+  WHILE I
+   GPRINTWindow WND,X,-9,MENU_INAME$[I],RGB(0,0,0)
+   X=X+LEN(MENU_INAME$[I])*8+4
+   I=MENU_INEXT[I]
+  WEND
+ ENDIF
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
 DEF WindowLMouseUP WND,CTL,TYPE,A1,A2
+' VAR E=FrontWindow(WND)
+END
+DEF WindowLMouseDown WND,CTL,TYPE,A1,A2
  VAR E=FrontWindow(WND)
 END
 DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
  VAR X,Y
  SplitInt POS OUT X,Y
  VAR W=GetWindowFrameWidth(WND)
+  VAR NUWID=WND AND NUWIDMASK
+ IF X&&Y>11&&Y<21&&WIN_MENU[NUWID]THEN
+  IF BTN AND CTL_BTNUPFLG THEN
+   VAR C=WIN_MENU[NUWID]AND 4095
+   IF MENU_ICHILD[MENU_SEL[C]]THEN ShowMenu_ MENU_ICHILD[MENU_SEL[C]],WND,X-1,0
+  ENDIF
+  RETURN
+ ENDIF
  IF X>=W-9THEN
   IF BTN AND CTL_BTNUPFLG THEN
    VAR E=DeleteWindow(WND)
@@ -1514,7 +1891,6 @@
   RETURN
  ENDIF
  IF BTN AND CTL_LBTNFLG THEN
-  VAR NUWID=WND AND NUWIDMASK
   IF BTN AND CTL_BTNDWNFLG THEN
    VAR AX=WIN_AX[NUWID]
    VAR AY=WIN_AY[NUWID]
@@ -1534,8 +1910,67 @@
   ENDIF
  ENDIF
 END
+DEF WindowMMoveFrame WND,CTL,TYPE,ET,XY
+ VAR X,Y
+ SplitInt XY OUT X,Y
+ VAR NUWID=WND AND NUWIDMASK
+ IF!WIN_MENU[NUWID]THEN RETURN
+ VAR C=WIN_MENU[NUWID]AND 4095
+ IF!(X&&Y>11&&Y<21)THEN
+  IF MENU_SEL[C]THEN X=-1 ELSE RETURN
+ ENDIF
+ IF WIN_MENU[NUWID]THEN
+  VAR I=MENU_ITEM[C]
+  VAR X2=0,X1=0
+  VAR OS=MENU_SEL[C]
+  VAR IN=0,BEG=0,FIND
+  WHILE I
+   X1=X2
+   X2=X2+LEN(MENU_INAME$[I])*8+4
+   IF X1<=X&&X2>=X THEN
+    IF OS==I THEN RETURN
+    IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
+    BEG=1
+    FIND=1
+    GFILLWindow WND,X1,-10,X2-2,-2,RGB(0,0,255)
+    GPRINTWindow WND,X1,-9,MENU_INAME$[I],-1
+    MENU_SEL[C]=I
+    IN=1
+    I=MENU_INEXT[I]
+    IF!OS THEN BREAK
+    WHILE I
+     X1=X2
+     X2=X2+LEN(MENU_INAME$[I])*8+4
+     IF I==OS THEN
+      OS=0
+      GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+      GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
+      BREAK
+     ENDIF
+     I=MENU_INEXT[I]
+    WEND
+    BREAK
+'   IF!OS THEN BREAK
+   ELSE
+    IF I==OS THEN
+     IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
+     BEG=1
+     OS=0
+     GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+     GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
+    IF IN THEN BREAK
+    ENDIF
+   ENDIF
+   I=MENU_INEXT[I]
+  WEND
+  IF BEG THEN BEG=GEndWindow(WND)
+  IF!FIND THEN MENU_SEL[C]=0
+ ENDIF
+END
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
- 'VAR NUWID=WND AND NUWIDMASK
+ VAR NUWID=WND AND NUWIDMASK
+ DEC MX,WIN_AX[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
+ DEC MY,WIN_AY[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
  VAR X=MX+A1X
  VAR Y=MY+A2Y
  VAR E=MoveWindow(WND,X,Y)
@@ -1746,7 +2181,7 @@
  VAR ID=GetWindowVar(W,3)
  IF ID<8THEN
   IF!ID THEN
-   ID=0
+   ID=1
    IF Y<9THEN
     ID=2
    ENDIF
@@ -1772,6 +2207,16 @@
   VSCRBARPainter W,C,0,0,0
   VOID SendNotifWindow(GetParentWindow(W),GetWindowVar(W,0),POS+1)
  ENDIF
+ IF ID==1THEN
+  VAR _Y=Y
+  Y=(Y-9)/((GetWindowHeight(W)-28)/SIZ)
+  IF Y<0THEN Y=0
+  IF Y>SIZ THEN Y=SIZ
+  IF Y==_Y THEN RETURN
+  SetWindowVar W,2,Y
+  VSCRBARPainter W,C,0,0,0
+  VOID SendNotifWindow(GetParentWindow(W),W,Y)
+ ENDIF
 END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
@@ -2016,6 +2461,8 @@
  IF MOVEMOUSE THEN
   IF!(NUWID AND WIN_FRAMEFLG)THEN
    E=MouseMoveWindow(NUWID)
+  ELSE
+   E=MouseMoveWindowOnFrame(NUWID AND 32767)
   ENDIF
  ENDIF
 ' IF BUTTON()AND 64THEN DUMP_WND
@@ -2136,7 +2583,7 @@
  VAR E=CallBaseControlHandler(WND,CTL,T,A1,A2)
  VAR I
  FOR I=0TO LAUNCHERLEN-1
-  GPRINTWindow WND,0,I*8,LAUNCHERITEM$[I],RGB(0,0,0)
+  GPRINTWindow WND,0,I*8+1,LAUNCHERITEM$[I],RGB(0,0,0)
  NEXT
  E=GEndWindow(WND)
 END
@@ -2307,7 +2754,7 @@
    IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
    IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2-1
    IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
-  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
+   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
    OTW_MOUSEX#=OTW_MOUSEX
    OTW_MOUSEY#=OTW_MOUSEY
  ELSE
@@ -2398,6 +2845,7 @@
  VAR E=GEndWindow(WND)
 END
 COMMON DEF PaintLDWN WND,CTL,T,X,Y
+ VAR E=CallBaseControlHandler(WND,CTL,T,X,Y)
  SetWindowVar WND,3,1
  SetWindowVar WND,0,X
  SetWindowVar WND,1,Y
@@ -3114,50 +3562,79 @@
 '===OTYA DOCUMENT EDITOR===
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
+DIM OTYFILICON[0]
 COMMON DEF RC_OTYFIL
  DIM ICONS[512]
  LOAD"DAT:OTYFILRC",ICONS,0
  OTYFILICOTXT=NewArray(16*16)
  OTYFILICODAT=NewArray(16*16)
+ OTYFILICON=NewArray(16*16)
  COPY OTYFILICOTXT,ICONS,0,16*16
  COPY OTYFILICODAT,ICONS,16*16,16*16
+ COPY OTYFILICON,ICONS,16*16*2,16*16
 END
 VAR OTYFILCTL
 VAR OTYFILESWND
 VAR OTYFILES$[0]
 VAR OTYFILICONCTL
+VAR OTYFILABOUTCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
  GCLSWindow W,RGB(224,224,224)
  IF GetWindowVar(W,1)THEN
+  IF GetWindowVar(W,1)==2THEN
+   GLOADWindow W,0,0,16,16,OTYFILICON,1,0
+   RETURN
+  ENDIF
   GLOADWindow W,0,0,16,16,OTYFILICODAT,1,0
  ELSE
   GLOADWindow W,0,0,16,16,OTYFILICOTXT,1,0
  ENDIF
  IF GEndWindow(W)THEN RETURN
 END
+COMMON DEF OTYFILABOUTNOTIF WND,CTL,T,_,__
+ VOID DeleteWindow(WND)
+END
+COMMON DEF OTYFILABOUTCREATE WND,CTL,T,_,__
+ VAR W,E
+ NewWindow OTYFILICONCTL,"",0,0,15,15,WND,0 OUT W,E
+ SetWindowVar W,1,2
+ VAR WI=GetWindowWidth(WND)
+ VAR S$="OTW Filer"
+ NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,0,LEN(S$)*8,7,WND,0 OUT W,E
+ S$="Ver 5.0"
+ NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,8,LEN(S$)*8,7,WND,0 OUT W,E
+ S$="© 2011-2015 otya"
+ NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,16,LEN(S$)*8,7,WND,0 OUT W,E
+ S$="OK"
+ NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
+ IF ID<=5THEN
+  VAR E=NewDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND,0)
+  RETURN
+ ENDIF
  VAR I=GetNextWindow(GetChildWindow(WND))
  IF BeginWindowOP(WND)THEN RETURN
- POS=POS*4
+ POS=POS*2
  VAR W=36*4+8,H=64
  VAR R=W/36
  VAR C=CEIL(H/40.0)
  VAR BY1=(POS MOD 40)+7
- VAR BY2=(POS MOD 40)-10
+ VAR BY2=(POS MOD 40)-9
  IF OTYFILESWND!=WND THEN
   GetFiles OTYFILES$,"SYS"
   OTYFILESWND=WND
  ENDIF
 ' ?R,C,POS,POS DIV 16,POS DIV 40,BY1
- VAR X=1,Y=-22
+ VAR X=0,Y=7'-22
  VAR J
  VAR L2=R*2
  VAR F
  VAR K=(POS DIV 40)*R
  VAR KL=LEN(OTYFILES$)
  WHILE I
-  IF!(J MOD L2) THEN INC Y,40X=1
+  IF J&&!(J MOD L2) THEN INC Y,40X=0
   IF F THEN
    IF KL<=K THEN
     VOID MoveWindow2(I,-256,-256)
@@ -3198,9 +3675,22 @@
   NewControl "ICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
   RC_OTYFIL
+  ExtendControl "FilesAbout",GetWindowControl() OUT OTYFILABOUTCTL,E
+  E=SetControlNotifHandler(OTYFILABOUTCTL,"OTYFILABOUTNOTIF")
+  E=SetControlCreateHandler(OTYFILABOUTCTL,"OTYFILABOUTCREATE")
  ENDIF
  VAR W=36*4+8,H=64,LBL
- NewTopLevelWindow OTYFILCTL,"Files SYS/",W,H OUT WND,E
+ NewTopLevelMenuWindow OTYFILCTL,"Files SYS/",W,H OUT WND,E
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Copy",1
+ AddMenuItem MENU,"Move",2
+ AddMenuItem MENU,"Delete",3
+ AddMenuItem MENU,"Rename",4
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"About",5
+ AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR X=8,Y,I
  OTYFILES$=NewArray$(0)
  GetFiles OTYFILES$,"SYS"
@@ -3220,7 +3710,7 @@
  NEXT
  VAR SCR
  VAR OL=W/36
- VAR AW=FLOOR(LEN(OTYFILES$)/OL)*10
+ VAR AW=FLOOR(LEN(OTYFILES$)/OL)*20
  NewVScrollBAR WND,AW OUT SCR,E
  SetProcessVar WND
 END
diff -u OTW.TXT OTW1A
--- OTW.TXT
+++ OTW1A
@@ -1,8 +1,8 @@
 OPTION STRICT
 OPTION DEFINT
-'=======================
-' OTYA 3D WINDOW SYSTEM 
-'=======================
+'====================
+' OTYA WINDOW SYSTEM 
+'====================
 'グローバルへんすうのていぎ
 VAR OTW_INIT,OTW_MOUSESP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOUSEX
@@ -54,6 +54,7 @@
 DIM WIN_GNEXT  [0]
 DIM WIN_GPREV  [0]
 DIM WIN_GPARENT[0]
+DIM WIN_STYLE  [0]
 'QUEUE
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
@@ -91,9 +92,12 @@
 '⇔⇔
 'W1         W2
 '
+VAR WIN_STYLE_NONE
+VAR WIN_STYLE_MODAL
 VAR WIN_ACTIVENUWID
 DEF OTW_WIN_INITARRAY
  VAR FM=FREEMEM
+ WIN_STYLE_MODAL=1
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -143,6 +147,7 @@
  WIN_GNEXT     =NewArray(WIN_MAX)
  WIN_GPREV     =NewArray(WIN_MAX)
  WIN_GPARENT   =NewArray(WIN_MAX)
+ WIN_STYLE     =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -249,6 +254,7 @@
 VAR CTL_MOUSEMVHANDLER
 VAR CTL_FRMMOUSEMVHANDLER
 VAR CTL_CREATEHANDLER
+VAR CTL_STRNOTIFHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -259,6 +265,8 @@
 VAR CTL_TXTBOXCTL
 VAR CTL_LABELCTL
 VAR CTL_VSCRBARCTL
+
+VAR CTL_LSTBOXCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
@@ -296,6 +304,7 @@
  CTL_MOUSEMVHANDLER=10
  CTL_FRMMOUSEMVHANDLER=11
  CTL_CREATEHANDLER=12
+ CTL_STRNOTIFHANDLER=13
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -305,10 +314,10 @@
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
- E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
  E=SetControlLMouseDownHandler(CTL_WINDOWCTL,"WindowLMouseDown")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
+ E=SetControlChFocusHandler(CTL_WINDOWCTL,"WindowChFocus")
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_BUTTONCTL,"ToggleButtonLMouseDown")
@@ -334,7 +343,29 @@
  E=SetControlPainter(MENUCTL,"MenuPainter")
  E=SetControlMouseMoveHandler(MENUCTL,"MenuMouseMove")
  E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
+ OTW_CTL_LIST
 END
+DIM LISTSTR$[0]
+DIM LISTSTRNEXT[0]
+DIM LISTSTRPREV[0]
+DIM LISTSTRPARENT[0]
+DIM LISTSTRCHILD[0]
+VAR LISTSTR_FREE
+VAR LISTSTR_MAX
+DEF OTW_CTL_LIST
+ LISTSTR_MAX=256
+ LISTSTR$=NewArray$(LISTSTR_MAX)
+ LISTSTRNEXT=NewArray(LISTSTR_MAX)
+ LISTSTRPREV=NewArray(LISTSTR_MAX)
+ OTW_INITLIST LISTSTRNEXT
+ LISTSTR_FREE=1
+ VAR E
+ NewControl "LSTBOX" OUT CTL_LSTBOXCTL,E
+ E=SetControlPainter(CTL_LSTBOXCTL,"ListBoxPainter")
+ E=SetControlCreateHandler(CTL_LSTBOXCTL,"ListBoxCreate")
+ E=SetControlNotifHandler(CTL_LSTBOXCTL,"ListBoxNotif")
+ E=SetControlLMouseDownHandler(CTL_LSTBOXCTL,"ListBoxLMD")
+END
 DEF OTW_INITLIST ARY[]
  VAR I
  FOR I=1TO LEN(ARY)-2
@@ -374,6 +405,9 @@
 COMMON DEF GetVScrollBarControl()
  RETURN CTL_VSCRBARCTL
 END
+COMMON DEF GetListBoxControl()
+ RETURN CTL_LSTBOXCTL
+END
 'CONTROL
 COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
@@ -425,7 +459,7 @@
  CTL_NAME$[NUCID]=""
  VAR I
  FOR I=0TO CTL_HANDLER_MAX-1
-  CTL_HANDLER$[I]=""
+  CTL_HANDLER$[NUCID,I]=""
  NEXT
 END
 COMMON DEF IsControlExtend(CTL,PARENT)
@@ -497,6 +531,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_CREATEHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlStrNotifHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_STRNOTIFHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -531,9 +570,8 @@
  VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
  SetWindowVar MENU_NUWID[MENU],0,MENU
  MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
- MENU_SHOW[MENU]=TRUE
+ MENU_SHOW[MENU]=WND
  WIN_ACTIVENUWID=MENU_NUWID[MENU]
-
 ' MENU_SEL[C],WND,X-1,0
 END
 DEF NewMenuItem(STR$,PREV,STYLE)
@@ -583,6 +621,8 @@
   VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_IVAR[MENU_SEL[M]],0)
  ENDIF
  VOID DeleteWindow(WND)
+ VOID ActiveWindow(MENU_SHOW[M])
+ MENU_SHOW[M]=0
 END
 DEF MenuMouseMove WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
@@ -756,6 +796,10 @@
     VAR B=NUWID
     WHILE B
      OTW_DrawMap B
+     IF WIN_CHILD[B]THEN
+      B=WIN_CHILD[B]
+      CONTINUE
+     ENDIF
      IF!WIN_NEXT[B]THEN
       WHILE B
        B=WIN_PARENT[B]
@@ -764,21 +808,19 @@
       WEND
       IF B==PNUWID THEN BREAK
      ENDIF
-     IF WIN_CHILD[B]THEN
-      B=WIN_CHILD[B]
-      CONTINUE
-     ENDIF
      B=WIN_NEXT[B]
      IF B==PNUWID THEN BREAK
     WEND
    ENDIF
   ENDIF
  ENDIF
+ WIN_MSGS[NUWID]=0
  VOID RepaintWindow(WND)
  IF PARENT==WIN_ROOTWND THEN
   SPAllocWindow WND
  ENDIF
  WindowOnCreate WND,CTL
+ VOID ActiveWindow(WND)
 END
 DEF SPAllocWindow WND
  INC OTW_TOPLEVELCNT
@@ -796,6 +838,15 @@
  OTW_SPSORT
 END
 COMMON DEF NewTopLevelMenuWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+ NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,1 OUT WND,ERR
+END
+COMMON DEF WindowMenuStyle()
+ RETURN 1
+END
+COMMON DEF WindowResizableStyle()
+ RETURN 2
+END
+COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
   ERR=CTL_INVALIDID
@@ -810,8 +861,15 @@
  CTL_FH1[NUCID]=_H
  IF ERR THEN RETURN
  VAR NUWID=WND AND NUWIDMASK,SP
- NewMenu OUT WIN_MENU[NUWID],ERR
- WIN_MENU[NUWID]=WIN_MENU[NUWID]
+ 'MENU
+ IF STYLE AND 1THEN
+  NewMenu OUT WIN_MENU[NUWID],ERR
+  WIN_MENU[NUWID]=WIN_MENU[NUWID]
+ ENDIF
+ 'RESIZABLE
+ IF STYLE AND 2THEN
+  
+ ENDIF
  INC WIN_TopLevelX,CTL_FH1[NUCID]-1
  INC WIN_TopLevelY,CTL_FH1[NUCID]-1
 END
@@ -859,17 +917,14 @@
   GCLIP 1,0,0,400,240
   WIN_AW[NUWID]=WIDTH
   WIN_AH[NUWID]=HEIGHT
+  WIN_AFW[NUWID]=WIDTH
+  WIN_AFH[NUWID]=HEIGHT
 ' SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
 ' SPSHOW SP
 ' SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],1023
   RETURN
  ENDIF
  
- VAR SP=OTW_TOPLEVELCNT+1
- WHILE SPVAR(SP,0)
-  SP=(SP+1)MOD 255
- WEND
- WIN_SP[NUWID]=SP'OR FRAME<<10
  VAR ROOTNUWID=WIN_ROOTWND AND NUWIDMASK
  VAR C=WIN_CHILD[ROOTNUWID],N
  WIN_PARENT[NUWID]=ROOTNUWID
@@ -914,12 +969,9 @@
  OTW_DrawMap NUWID
  GCLIP 1,0,0,400,240
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
- SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
- SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
- SPSHOW SP
- SPVAR SP,0,WND
- OTW_SPSORT
+ SPAllocWindow WND
  WindowOnCreate WND,CTL
+ VOID ActiveWindow(WND)
 END
 COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
  IF!CheckControl(CTL)THEN
@@ -929,27 +981,37 @@
   RETURN WIN_NOALLOC
  ENDIF
  VAR O=OWNER AND NUWIDMASK
- VAR AX=WIN_AX[O]
- VAR AY=WIN_AY[O],WND,E
- NewWindow CTL,NAME$,AX+(WIN_WIDTH[O]-WIDTH)/2,AY+(WIN_HEIGHT[O]-HEIGHT)/2,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,E
+ VAR AX=WIN_AX[O]+(WIN_WIDTH[O]-WIDTH)/2
+ VAR AY=WIN_AY[O]+(WIN_HEIGHT[O]-HEIGHT)/2
+ VAR WND,E
+ IF AX<0THEN AX=0
+ IF AY<0THEN AY=0
+ NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,E
+ IF FLAG THEN
+  WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
+ ENDIF
  IF E THEN RETURN E
  E=JoinWindowGroup(OWNER,WND)
  RETURN E
 END
-COMMON DEF NewModalDialogBox CTL,NAME$,WIDTH,HEIGHT,OWNER
+COMMON DEF NewModalDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER)
+ RETURN NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,1)
 END
-COMMON DEF NewModelessDialogBox CTL,NAME$,WIDTH,HEIGHT,OWNER
+COMMON DEF NewModelessDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER)
+ RETURN NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,0)
 END
 COMMON DEF DeleteWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- RepaintAllWindow WIN_ROOTWND,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID],WIN_AH[NUWID]
+ VAR X=WIN_RX[NUWID],Y=WIN_RY[NUWID],W=WIN_AW[NUWID],H=WIN_AH[NUWID]
  VAR E=DeleteWindowNUWID(NUWID)
+ RepaintAllWindow WIN_ROOTWND,X,Y,W,H
  RETURN E
 END
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ WIN_STYLE[NUWID]=0
  WIN_MENU[NUWID]=0
  WIN_WID[NUWID]=0
  WIN_MSGS[NUWID]=0
@@ -1005,6 +1067,7 @@
   ELSE
    WIN_GROUP[WIN_GPARENT[NUWID]]=WIN_GNEXT[NUWID]
   ENDIF
+  VOID ActiveWindow(NUWIDToWND(WIN_GPARENT[NUWID]))
   WIN_GPARENT[NUWID]=0
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
@@ -1041,23 +1104,25 @@
  GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+WIN_AFW[NUWID],WIN_RFY[NUWID]+240+WIN_AFH[NUWID],ShortToRGB(NUWID)
  GCLIP 1,0,0,400,240
 END
+COMMON DEF ActiveWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_ACTIVENUWID=NUWID
+ RETURN 0
+END
 COMMON DEF FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- IF!WIN_NEXT[NUWID]THEN RETURN 0
  VAR N,C=WIN_NEXT[NUWID]
-  N=C
+ IF C THEN
   WHILE 1
-   C=N
-   N=WIN_NEXT[N]
-   IF!N THEN
+   IF!WIN_NEXT[C]THEN 
     VAR NUP=WIN_PREV[NUWID]
     VAR NUN=WIN_NEXT[NUWID]
     IF NUP THEN
      WIN_NEXT[NUP]=NUN
-     WIN_PREV[NUN]=NUP
     ELSE
-     WIN_CHILD[WIN_PARENT[NUWID]]=NUN
+    WIN_CHILD[WIN_PARENT[NUWID]]=NUN
     ENDIF
     IF NUN THEN
      IF NUP THEN WIN_NEXT[NUP]=NUN
@@ -1066,40 +1131,26 @@
     WIN_NEXT[C]=NUWID
     WIN_PREV[NUWID]=C
     WIN_NEXT[NUWID]=0
-    IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
-    'VAR Z,Z2,S
-    'SPOFS WIN_SP[NUWID]AND 511OUT S,S,Z
-    'SPOFS WIN_SP[C]AND 511OUT S,S,Z2
-    'SPOFS WIN_SP[NUWID]AND 511,,,Z2
-    'SPOFS WIN_SP[C]AND 511,,,Z
-     OTW_SPSORT
-    ENDIF
-    VOID RepaintWindow(WND)
-    OTW_DrawMap NUWID
-    IF WIN_CHILD[NUWID]THEN
-     VAR B=WIN_CHILD[NUWID]
-     WHILE B
-      VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-      OTW_DrawMap B
-      IF!WIN_NEXT[B]THEN
-       WHILE B
-        B=WIN_PARENT[B]
-        IF B==NUWID THEN BREAK
-        IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
-       WEND
-       IF B==NUWID THEN BREAK
-      ENDIF
-      IF WIN_CHILD[B]THEN
-       B=WIN_CHILD[B]
-       CONTINUE
-      ENDIF
-      B=WIN_NEXT[B]
-      IF B==NUWID THEN BREAK
-     WEND
-    ENDIF
     BREAK
    ENDIF
+   C=WIN_NEXT[C]
   WEND
+  IF WIN_SP[NUWID] THEN
+   OTW_SPSORT
+  ENDIF
+  RepaintAllWindow WND,0,0,0,0
+ ENDIF
+ VAR G=WIN_GROUP[NUWID],E=ActiveWindow(WND)
+ WHILE G
+  IF WIN_STYLE[G]AND WIN_STYLE_MODAL THEN
+   BEEP 
+   IF WIN_SP[NUWID]THEN
+    SPANIM WIN_SP[NUWID]AND 511,6,-10,RGB(128,128,128),-10,RGB(255,255,255)
+   ENDIF
+   E=FrontWindow(NUWIDToWND(G))
+  ENDIF
+  G=WIN_GNEXT[G]
+ WEND
  RETURN 0
 END
 
@@ -1309,6 +1360,40 @@
   ENDIF
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
+ '   B=WIN_CHILD[NXT]
+ VAR MOVEF=0
+ B=WIN_PARENT[NUWID]
+   WHILE B
+    IF MOVEF THEN
+     WIN_AX[B]=WIN_AX[B]+MX
+     WIN_AY[B]=WIN_AY[B]+MY
+     WIN_FX[B]=WIN_FX[B]+MX
+     WIN_FY[B]=WIN_FY[B]+MY
+     WIN_RFX[B]=WIN_RFX[B]+MX
+     WIN_RFY[B]=WIN_RFY[B]+MY
+     WIN_RX[B]=WIN_RX[B]+MX
+     WIN_RY[B]=WIN_RY[B]+MY
+     MOVEF=1
+    ENDIF
+    IF!WIN_HIDE[B]THEN VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+    OTW_DrawMap B
+
+    IF WIN_CHILD[B]THEN
+     IF B==NUWID THEN MOVEF=1
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
+    IF!WIN_NEXT[B]THEN
+     WHILE B
+      B=WIN_PARENT[B]
+      IF B==NUWID THEN MOVEF=0
+      IF WIN_NEXT[B]THEN BREAK
+     WEND
+     IF!B THEN RETURN 0
+    ENDIF
+    B=WIN_NEXT[B]
+   WEND
+RETURN
  WHILE NXT
   VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
   OTW_DrawMap NXT
@@ -1418,6 +1503,9 @@
 COMMON DEF SendChFocusWindow(WND,FLG)
  RETURN SendWindowEvent(WND,CTL_CHFOCUSHANDLER,FLG,0)
 END
+COMMON DEF SendStrNotifWindow(WND,A1,STR$)
+ RETURN SendWindowEvent(WND,CTL_STRNOTIFHANDLER,A1,AllocString(STR$))
+END
 DEF MouseMoveWindow(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_MOUSEMVHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
@@ -1444,7 +1532,7 @@
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID 
- CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
+ IF LEN(CTL_HANDLER$[CTL AND 4095,TYPE])THEN CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
  RETURN 0
 END
 COMMON DEF PeekWindowEvent(WND)
@@ -1467,7 +1555,13 @@
  VAR NUCID=WIN_CTL[NUWID] AND 4095
  VAR S=WIN_MSGE[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
- CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ IF TYPE==13THEN
+  'CTL_STRNOTIFHANDLER
+  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],GetString$(WIN_MSGBUF[NUWID,S,2])
+  FreeString WIN_MSGBUF[NUWID,S,2]
+ ELSE
+  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ ENDIF
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
@@ -1548,9 +1642,18 @@
 COMMON DEF SetWindowVar WND,I,V
  WIN_VAR[WND AND NUWIDMASK,I]=V
 END
-COMMON DEF IsActiveWindow(WND)
+COMMON DEF IsFocusWindow(WND)
  RETURN(WND AND NUWIDMASK)==WIN_ACTIVENUWID
 END
+COMMON DEF IsActiveWindow(WND)
+ VAR N=(WND AND NUWIDMASK)
+ VAR P=WIN_ACTIVENUWID
+ WHILE P
+  IF P==N THEN RETURN 1
+  P=WIN_PARENT[P]
+ WEND
+ RETURN 0
+END
 VAR WIN_DRAGHANDLER$
 VAR WIN_DRAGHANDLER_A1
 VAR WIN_DRAGHANDLER_A2
@@ -1866,21 +1969,35 @@
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
-DEF WindowLMouseUP WND,CTL,TYPE,A1,A2
-' VAR E=FrontWindow(WND)
+DEF WindowChFocus WND,CTL,TYPE,A1,A2
+ IF A1 THEN
+  VAR E=FrontWindow(WND)
+ ENDIF
 END
 DEF WindowLMouseDown WND,CTL,TYPE,A1,A2
- VAR E=FrontWindow(WND)
+' VAR E=FrontWindow(WND)
 END
 DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
  VAR X,Y
  SplitInt POS OUT X,Y
  VAR W=GetWindowFrameWidth(WND)
   VAR NUWID=WND AND NUWIDMASK
+ IF!IsFocusWindow(WND)THEN RETURN
  IF X&&Y>11&&Y<21&&WIN_MENU[NUWID]THEN
   IF BTN AND CTL_BTNUPFLG THEN
    VAR C=WIN_MENU[NUWID]AND 4095
-   IF MENU_ICHILD[MENU_SEL[C]]THEN ShowMenu_ MENU_ICHILD[MENU_SEL[C]],WND,X-1,0
+   IF MENU_ICHILD[MENU_SEL[C]]THEN
+    VAR X1,X2,I=MENU_ITEM[C]
+    WHILE I
+     X1=X2
+     X2=X2+LEN(MENU_INAME$[I])*8+4
+     IF X1<=X&&X2>=X THEN
+      ShowMenu_ MENU_ICHILD[MENU_SEL[C]],WND,X1,0
+      BREAK
+     ENDIF
+     I=MENU_INEXT[I]
+    WEND
+   ENDIF
   ENDIF
   RETURN
  ENDIF
@@ -1892,6 +2009,7 @@
  ENDIF
  IF BTN AND CTL_LBTNFLG THEN
   IF BTN AND CTL_BTNDWNFLG THEN
+ '  IF!IsFocusWindow(WND)THEN RETURN
    VAR AX=WIN_AX[NUWID]
    VAR AY=WIN_AY[NUWID]
    INC X,AX
@@ -1914,6 +2032,7 @@
  VAR X,Y
  SplitInt XY OUT X,Y
  VAR NUWID=WND AND NUWIDMASK
+ IF!IsActiveWindow(WND)THEN RETURN
  IF!WIN_MENU[NUWID]THEN RETURN
  VAR C=WIN_MENU[NUWID]AND 4095
  IF!(X&&Y>11&&Y<21)THEN
@@ -2025,7 +2144,7 @@
  VAR CX=GetWindowVar(W,1)
  GFILLWindow W,0,0,WI,HE,-1
  GPRINTWindow W,1,1,NA$,RGB(0,0,0)
- IF IsActiveWindow(W)THEN
+ IF IsFocusWindow(W)THEN
   GFILLWindow W,CX*8,6,CX*8+8,7,RGB(0,0,0)
  ENDIF
  GBOXWindow W,0,0,WI,HE,RGB(0,0,0)
@@ -2114,18 +2233,139 @@
  NEXT
  E=GEndWindow(W)
 END
+'1:FIRST
+'2:LAST
+'3:VIEW
+'4:VSCRBAR
+'5:POS
+'6:LEN
+'7:SEL
+COMMON DEF AddListBoxItem WND,ITEM$
+ VAR L=GetWindowVar(WND,2)'
+ IF!LISTSTR_FREE THEN RETURN
+ IF L THEN LISTSTRNEXT[L]=LISTSTR_FREE
+ SetWindowVar WND,2,LISTSTR_FREE
+ IF!L THEN
+  SetWindowVar WND,1,LISTSTR_FREE
+ ENDIF
+ LISTSTR$[LISTSTR_FREE]=ITEM$
+ LISTSTRPREV[LISTSTR_FREE]=L
+ L=LISTSTR_FREE
+ LISTSTR_FREE=LISTSTRNEXT[L]
+ LISTSTRNEXT[L]=0
+ VAR LEN=GetWindowVar(WND,6)+1
+ SetWindowVar WND,6,LEN
+ VAR S=(GetWindowHeight(WND)-2)DIV 8
+ IF LEN>S THEN DEC LEN,S ELSE LEN=0
+ SetScrollBarSize GetWindowVar(WND,4),LEN
+END
+DEF ListBoxLMD WND,CT,T,X,Y
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ IF X<=0||Y<=0||X>=W||Y>=H THEN RETURN
+ VAR V=GetWindowVar(WND,3)
+ VAR Y1=1,Y2=1,S=GetWindowVar(WND,7),F,GB
+ WHILE V
+  INC Y2,8
+  IF Y>=Y1&&Y<Y2 THEN
+   SetWindowVar WND,7,V
+   IF!GB&&GBeginWindow(WND)THEN RETURN
+   GFILLWindow WND,1,Y1,W,Y2-1,RGB(0,0,255)
+   GPRINTWindow WND,1,Y1,LISTSTR$[V],-1
+   F=1
+   GB=1
+   IF!S THEN BREAK
+  ELSE IF V==S THEN
+   IF!GB&&GBeginWindow(WND)THEN RETURN
+   GB=1
+   GFILLWindow WND,1,Y1,W,Y2-1,-1
+   GPRINTWindow WND,1,Y1,LISTSTR$[V],RGB(0,0,0)
+   S=0
+   IF F THEN BREAK
+  ENDIF
+  ENDIF
+  V=LISTSTRNEXT[V]
+  INC Y1,8
+  Y2=Y1
+  IF Y1>=H THEN BREAK
+ WEND
+ IF GB THEN
+  'あとしまつ
+  VOID GEndWindow(WND)
+ ENDIF
+END
+DEF ListBoxNotif WND,CT,T,A1,POS
+ VAR OP=GetWindowVar(WND,5)
+ IF OP==POS THEN RETURN
+ VAR SA=POS-OP,I
+ SetWindowVar WND,5,POS
+ VAR V=GetWindowVar(WND,3)
+ IF SA>0THEN
+  FOR I=0TO SA-1
+   IF!LISTSTRNEXT[V] THEN BREAK
+   V=LISTSTRNEXT[V]
+  NEXT
+ ELSE
+  SA=-SA
+  FOR I=0TO SA-1
+   IF!LISTSTRPREV[V] THEN BREAK
+   V=LISTSTRPREV[V]
+  NEXT
+ ENDIF
+ SetWindowVar WND,3,V
+ ListBoxPainter WND,CT,T,0,0
+END
+DEF ListBoxCreate WND,CT,T,A1,A2
+ VAR S,E
+ NewVScrollBar WND,0 OUT S,E
+ SetWindowVar WND,4,S
+END
+DEF ListBoxPainter WND,CT,T,A1,A2
+ VAR E=GBeginWindow(WND)
+ IF E THEN RETURN
+ GCLSWindow WND,-1
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ VAR L=GetWindowVar(WND,3),Y=1
+ IF!L THEN
+  L=GetWindowVar(WND,1)
+  SetWindowVar WND,3,L
+ ENDIF
+ VAR S=GetWindowVar(WND,7)
+ WHILE L
+  IF S==L THEN
+   GFILLWindow WND,1,Y,W-1,Y+7,RGB(0,0,255)
+   GPRINTWindow WND,1,Y,LISTSTR$[L],-1
+  ELSE
+   GPRINTWindow WND,1,Y,LISTSTR$[L],RGB(0,0,0)
+  ENDIF
+  INC Y,8
+  IF Y>=H THEN BREAK
+  L=LISTSTRNEXT[L]
+ WEND
+ GBOXWindow WND,0,0,W,H,RGB(0,0,0)
+ E=GEndWindow(WND)
+END
+COMMON DEF GetListBoxSelectedText$(WND)
+ VAR S=GetWindowVar(WND,7)
+ IF!S THEN RETURN""
+ RETURN LISTSTR$[S]
+END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
- NewWindow GetVScrollBarControl(),"GG",W-8,0,8,H,PARENT,0 OUT WND,E
+ NewWindow GetVScrollBarControl(),"",W-8,0,8,H,PARENT,0 OUT WND,E
  SetWindowVar WND,1,SIZ
 END
 COMMON DEF SetScrollBarSize W,SIZ
  SetWindowVar W,1,SIZ
- SetWindowVar W,2,0
  VOID RepaintWindow(W)
 END
-COMMON DEF SetScrollBarPostion W,POS
+COMMON DEF IncScrollBarSize W
+ SetWindowVar W,1,GetWindowVar(W,1)+1
+ VOID RepaintWindow(W)
+END
+COMMON DEF SetScrollBarPosition W,POS
  SetWindowVar W,2,POS
  VOID RepaintWindow(W)
 END
@@ -2200,15 +2440,16 @@
  IF ID==2&&POS>0 THEN
   SetWindowVar W,2,POS-1
   VSCRBARPainter W,C,0,0,0
-  VOID SendNotifWindow(GetParentWindow(W),GetWindowVar(W,0),POS-1)
+  VOID SendNotifWindow(GetParentWindow(W),W,POS-1)
  ENDIF
  IF ID==3&&POS<SIZ THEN
   SetWindowVar W,2,POS+1
   VSCRBARPainter W,C,0,0,0
-  VOID SendNotifWindow(GetParentWindow(W),GetWindowVar(W,0),POS+1)
+  VOID SendNotifWindow(GetParentWindow(W),W,POS+1)
  ENDIF
  IF ID==1THEN
-  VAR _Y=Y
+  VAR _Y=POS'Y
+  IF!SIZ THEN RETURN
   Y=(Y-9)/((GetWindowHeight(W)-28)/SIZ)
   IF Y<0THEN Y=0
   IF Y>SIZ THEN Y=SIZ
@@ -2297,6 +2538,7 @@
    GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
   NEXT
   GCLS RGB(0,224,224)
+  GCLS RGB(0,128,128)
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
   GCLS RGB(0,192,128)
@@ -2432,6 +2674,10 @@
   IF BTN AND OTW_LMOUSEDWN THEN
    VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
+   IF WIN_ACTIVENUWID!=OA THEN
+    E=SendChFocusWindow(NUWIDToWND(OA),FALSE)
+    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE)
+   ENDIF
    IF NUWID AND WIN_FRAMEFLG THEN
     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
     
@@ -2439,10 +2685,6 @@
    ELSE
     E=LMouseDownWindow(NUWIDToWND(NUWID))
    ENDIF
-   IF WIN_ACTIVENUWID!=OA THEN
-    E=SendChFocusWindow(NUWIDToWND(OA),FALSE)
-    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID),TRUE)
-   ENDIF
   ENDIF
   IF BTN AND OTW_LMOUSEUP THEN
    IF WIN_DRAGHANDLER_USE THEN
@@ -2905,7 +3147,12 @@
  RETURN TXTBOXEXCTL
 END
 COMMON DEF SetTextBoxExPRGMode WND,FLG
- SetWindowVar WND,7,!!FLG
+ VAR G=ABS(GetWindowVar(WND,7))
+ IF FLG THEN
+  SetWindowVar WND,7,G OR -2147483648
+ ELSE
+  SetWindowVar WND,7,G AND 2147483647
+ ENDIF
 END
 COMMON DEF INIT_TXTBOXEX
  VAR E
@@ -2915,7 +3162,10 @@
   E=SetControlKeyHandler(TXTBOXEXCTL,"TextBoxExKey")
   E=SetControlButtonHandler(TXTBOXEXCTL,"TextBoxExButton")
   E=SetControlChFocusHandler(TXTBOXEXCTL,"TextBoxExChFocus")
-  TXTBOXEX_LINESIZ=1024
+  E=SetControlCreateHandler(TXTBOXEXCTL,"TextBoxExCreate")
+  E=SetControlNotifHandler(TXTBOXEXCTL,"TextBoxExNotif")
+  E=SetControlLMouseDownHandler(TXTBOXEXCTL,"TextBoxExLMD")
+  TXTBOXEX_LINESIZ=10000'1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
   TXTBOXEX_NEXT=NewArray(TXTBOXEX_LINESIZ)
@@ -2929,6 +3179,7 @@
 END
 DEF TXTED_NewLINE(V$,P)
  VAR R=TXTBOXEX_FREE
+ IF!R THEN RETURN 0
  TXTBOXEX_FREE=TXTBOXEX_NEXT[TXTBOXEX_FREE]
  IF P THEN
   TXTBOXEX_LINE[R]=TXTBOXEX_LINE[P]+1
@@ -2965,6 +3216,54 @@
  RETURN 0
 END
 
+COMMON DEF TextBoxExLMD WND,CTL,T,X,Y
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ IF!X||!Y||X>=W||Y>=H THEN RETURN
+ VAR V=GetWindowVar(WND,1),Y1=1,Y2
+ WHILE V
+  Y2=Y1+8
+  IF Y>=Y1&&Y<Y2 THEN
+   SetWindowVar WND,2,V
+   VOID RepaintWindow(WND)
+   SetWindowVar WND,3,(X-1) DIV 8
+   BREAK
+  ENDIF
+  INC Y1,8
+  V=TXTBOXEX_NEXT[V]
+ WEND
+END
+COMMON DEF TextBoxExNotif WND,CTL,T,_,POS
+ VAR F=GetWindowVar(WND,7)
+ VAR SA=POS-(F AND 2147483647)
+ VAR I
+ IF!SA THEN RETURN
+ VAR V=GetWindowVar(WND,1)
+ IF SA>0THEN
+  FOR I=1TO SA
+   IF!TXTBOXEX_NEXT[V]THEN BREAK
+   V=TXTBOXEX_NEXT[V]
+  NEXT
+ ELSE
+  SA=ABS(SA)
+  FOR I=1TO SA
+   IF!TXTBOXEX_PREV[V]THEN BREAK
+   V=TXTBOXEX_PREV[V]
+  NEXT
+ ENDIF
+ IF F<0THEN
+  SetWindowVar WND,7,POS OR -2147483648
+ ELSE
+  SetWindowVar WND,7,POS
+ ENDIF
+ SetWindowVar WND,1,V
+ TextBoxExRepaint WND
+END
+COMMON DEF TextBoxExCreate WND,CTL,T,_,__
+ VAR SCR,E
+ VAR W=GetWindowWidth(WND),
+ NewVScrollBar WND,0 OUT SCR,E
+END
 COMMON DEF TextBoxExPainter WND,CTL,T,_,__
  TextBoxExRepaint WND
 END
@@ -2990,7 +3289,7 @@
  VAR Y=1,X=1,PL,LC
  WHILE 1
   V$=TXTBOXEX_VAL$[L]
-  IF GetWindowVar(WND,7)THEN
+  IF GetWindowVar(WND,7)<0THEN
    TXTED_PRGPRINT WND,X,Y,V$
   ELSE
    GPRINTWindow WND,X,Y,V$,TC
@@ -3010,8 +3309,8 @@
     ENDIF
    ELSE
     GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
-    IF PL==C&&IsActiveWindow(WND)THEN
-     GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
+    IF PL==C&&IsFocusWindow(WND)THEN
+  '   GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
     ENDIF
    ENDIF
    PL=0
@@ -3110,6 +3409,7 @@
   C=TXTED_NewLINE("",0)
   SetWindowVar WND,1,C
   SetWindowVar WND,2,C
+  IF!C THEN RETURN
  ENDIF
  VAR X=GetWindowVar(WND,3)
  VAR K$=CHR$(KEY)
@@ -3136,7 +3436,9 @@
   ENDIF
  ELSE
   IF K$==LF$()THEN
-   SetWindowVar WND,2,TXTED_NewLine(MID$(TXTBOXEX_VAL$[C],X,LEN(TXTBOXEX_VAL$[C])-X),C)
+   VAR C2=TXTED_NewLine(MID$(TXTBOXEX_VAL$[C],X,LEN(TXTBOXEX_VAL$[C])-X),C)
+   IF!C2 THEN RETURN
+   SetWindowVar WND,2,C2
    SetWindowVar WND,3,0
    TXTBOXEX_VAL$[C]=MID$(TXTBOXEX_VAL$[C],0,X)+K$
    IF GetWindowVar(WND,6)==C THEN
@@ -3152,8 +3454,44 @@
  ENDIF
  TextBoxExRepaint WND
 END
+COMMON DEF TextBoxExSetText WND,TXT$
+ VAR C=GetWindowVar(WND,1),I,J
+ IF C THEN
+  I=C
+  WHILE 1
+   TXTBOXEX_VAL$[C]=""
+   TXTBOXEX_PREV[C]=0
+   IF!TXTBOXEX_NEXT[C]THEN BREAK
+   C=TXTBOXEX_NEXT[C]
+  WEND
+  TXTBOXEX_NEXT[C]=TXTBOXEX_FREE
+  TXTBOXEX_FREE=I
+  I=0
+ ENDIF
+ C=0
+ VAR OC=0,L=-8-8
+ WHILE 1
+  INC L
+  J=INSTR(I,TXT$,LF$())
+  IF LEN(TXT$)==I THEN BREAK
+  IF J==-1THEN J=LEN(TXT$)-1
+  C=TXTED_NewLINE(MID$(TXT$,I,J-I+1),C)
+  IF!C THEN BREAK
+  IF!OC THEN
+   SetWindowVar WND,1,C
+   SetWindowVar WND,2,C
+   OC=1
+  ENDIF
+  IF I==LEN(TXT$)-1THEN BREAK
+  I=J+1
+ WEND
+ SetScrollBarSize GetChildWindow(WND),L+CEIL((GetWindowHeight(WND)-2)/8)
+ VOID RepaintWindow(WND)
+END
 '===syntax highlighting===
 'HashSet
+VAR RTXTEDTRUE
+VAR RTXTEDFALSE
 VAR RTXTEDVAR
 VAR RTXTEDDIM
 VAR RTXTEDFOR
@@ -3161,6 +3499,9 @@
 VAR RTXTEDBREAK
 VAR RTXTEDCONTINUE
 VAR RTXTEDREPEAT
+VAR RTXTEDUNTIL
+VAR RTXTEDWHILE
+VAR RTXTEDWEND
 VAR RTXTEDDATA
 VAR RTXTEDREAD
 VAR RTXTEDCOMMON
@@ -3299,6 +3640,14 @@
  NEXT
 END
 '===End text editor===
+COMMON DEF TXTEDNOTIF W,C,T,A1,A2
+ IF A1==2THEN
+  VOID NewOpenFileDialog(W)
+ ENDIF
+END
+COMMON DEF TXTEDSTRNOTIF W,C,T,A1,A2$
+ TextBoxExSetText GetWindowVar(W,0),LOAD("TXT:"+RIGHT$(A2$,LEN(A2$)-1),0)
+END
 COMMON DEF I_TXTED
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -3308,10 +3657,21 @@
  VAR WND,E
  IF!TXTEDCTL THEN
   ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
+  E=SetControlNotifHandler(TXTEDCTL,"TXTEDNOTIF")
+  E=SetControlStrNotifHandler(TXTEDCTL,"TXTEDSTRNOTIF")
  ENDIF
- NewTopLevelWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
+ NewTopLevelMenuWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"New",1
+ AddMenuItem MENU,"Open",2
+ AddMenuItem MENU,"Save",3
+ AddMenuItem MENU,"Save as",4
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
  SetProcessVar WND
- NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT WND,E
+ VAR TED
+ NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT TED,E
+ SetWindowVar WND,0,TED
 'SetTextBoxExPRGMode WND,TRUE
 END
 COMMON DEF L_TXTED
@@ -3327,11 +3687,22 @@
  VAR WND,E
  IF!PRGEDCTL THEN
   ExtendControl "PRGED",GetWindowControl() OUT PRGEDCTL,E
+  E=SetControlNotifHandler(PRGEDCTL,"TXTEDNOTIF")
+  E=SetControlStrNotifHandler(PRGEDCTL,"TXTEDSTRNOTIF")
  ENDIF
- NewTopLevelWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
+ NewTopLevelMenuWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"New",1
+ AddMenuItem MENU,"Open",2
+ AddMenuItem MENU,"Save",3
+ AddMenuItem MENU,"Save as",4
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
  SetProcessVar WND
- NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT WND,E
- SetTextBoxExPRGMode WND,TRUE
+ VAR TED
+ NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT TED,E
+ SetWindowVar WND,0,TED
+ SetTextBoxExPRGMode TED,TRUE
 END
 COMMON DEF L_PRGED
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -3611,7 +3982,7 @@
 END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
  IF ID<=5THEN
-  VAR E=NewDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND,0)
+  VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
  VAR I=GetNextWindow(GetChildWindow(WND))
@@ -3733,11 +4104,50 @@
 END
 COMMON DEF L_MEMVIEW
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
- ?FREEMEM,OTW_USEMEM
+' ?FREEMEM,OTW_USEMEM
 END
+'Init common dialogs
+VAR CTL_FILDIA
+DEF OTW_FileDialog
+ VAR E
+ ExtendControl "FileDialog",GetWindowControl()OUT CTL_FILDIA,E
+ IF E THEN RETURN
+ E=SetControlCreateHandler(CTL_FILDIA,"FileDialogCreate")
+ E=SetControlNotifHandler(CTL_FILDIA,"FileDialogNotif")
+END
+COMMON DEF FileDialogNotif WND,C,T,W,__
+ IF GetWindowName$(W)=="OK"THEN
+  VAR SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
+  IF!LEN(SEL$)THEN RETURN
+  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),1,SEL$)
+  VOID DeleteWindow(WND)
+ ELSE
+  IF GetWindowName$(W)=="Cancel"THEN
+   VOID DeleteWindow(WND)
+  ENDIF
+ ENDIF
+END
+COMMON DEF FileDialogCreate WND,C,T,_,__
+ VAR E,L
+ NewWindow GetListBoxControl(),"",0,0,116,64,WND,0 OUT L,E
+ DIM F$[0]
+ GetFiles F$,""
+ VAR I
+ FOR I=0TO LEN(F$)-1
+  AddListBoxItem L,F$[I]
+ NEXT
+ SetWindowVar WND,0,L
+ NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
+ NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
+END
+COMMON DEF NewOpenFileDialog(OWNER)
+ IF!CTL_FILDIA THEN
+  OTW_FileDialog
+ ENDIF
+ VAR E=NewModalDialogBox(CTL_FILDIA,"Open",170,64,OWNER)
+ RETURN E
+END
 
-
-
 '=========
 DEF OTW_LOADFONT
  'LOAD FONT-1
diff -u OTW.TXT OTW1B
--- OTW.TXT
+++ OTW1B
@@ -8,6 +8,7 @@
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
+VAR OTW_LASTUPD
 VAR OTW_FNT[0,0]
 VAR OTW_FNTPAL[0]
 VAR OTW_FNTTBL[0]
@@ -55,6 +56,7 @@
 DIM WIN_GPREV  [0]
 DIM WIN_GPARENT[0]
 DIM WIN_STYLE  [0]
+DIM WIN_IMAGE  [0]
 'QUEUE
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
@@ -94,10 +96,15 @@
 '
 VAR WIN_STYLE_NONE
 VAR WIN_STYLE_MODAL
+VAR WIN_STYLE_RESIZ
+VAR WIN_STYLE_TRANS
 VAR WIN_ACTIVENUWID
 DEF OTW_WIN_INITARRAY
+ PrintConsoleln "Init window..."
  VAR FM=FREEMEM
  WIN_STYLE_MODAL=1
+ WIN_STYLE_RESIZ=2
+ WIN_STYLE_TRANS=4
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -148,6 +155,7 @@
  WIN_GPREV     =NewArray(WIN_MAX)
  WIN_GPARENT   =NewArray(WIN_MAX)
  WIN_STYLE     =NewArray(WIN_MAX)
+ WIN_IMAGE     =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -155,7 +163,29 @@
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
  OTW_MENU_INITARRAY
+ OTW_IMAGE_INITARRAY
 END
+DIM IMAGE_PTR[0]
+DIM IMAGE_HEIGHT[0]
+DIM IMAGE_WIDTH[0]
+DIM IMAGE_ID[0]
+DIM IMAGE_NEXT[0]
+VAR IMAGE_MAX
+VAR IMAGE_IDCNT
+VAR IMAGE_FREE
+VAR IMAGE_NOALLOC
+DEF OTW_IMAGE_INITARRAY
+ IMAGE_NOALLOC=1
+ IMAGE_MAX=256
+ IMAGE_IDCNT=1
+ IMAGE_FREE=1
+ IMAGE_PTR=NewArray(IMAGE_MAX)
+ IMAGE_WIDTH=NewArray(IMAGE_MAX)
+ IMAGE_HEIGHT=NewArray(IMAGE_MAX)
+ IMAGE_ID=NewArray(IMAGE_MAX)
+ IMAGE_NEXT=NewArray(IMAGE_MAX)
+ OTW_INITLIST IMAGE_NEXT
+END
 '=======================
 'MENU
 '=======================
@@ -186,6 +216,7 @@
 VAR MENU_FREE
 VAR MENUCTL
 DEF OTW_MENU_INITARRAY
+ PrintConsoleln "Init menu..."
  MENU_ITEMMAX=256
  MENU_INAME$=NewArray$(MENU_ITEMMAX)
  MENU_INEXT=NewArray(MENU_ITEMMAX)
@@ -267,7 +298,12 @@
 VAR CTL_VSCRBARCTL
 
 VAR CTL_LSTBOXCTL
+'CONTROL STYLE
+'クリックしてもFOCUSしない
+VAR CTL_STYLE_NCFOCUS
 DEF OTW_CTL_INITARRAY
+ PrintConsoleln "Init control..."
+ CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
  CTL_HANDLER_MAX=16
  CTL_NAME$     =NewArray$(CTL_MAX)
@@ -336,14 +372,16 @@
  ExtendControl "ToggleButton",CTL_BUTTONCTL OUT CTL_TGLBTNCTL,E
  E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
- INIT_TXTBOXEX
 
  'MENU
  NewControl"POPUPMENU" OUT MENUCTL,E
  E=SetControlPainter(MENUCTL,"MenuPainter")
  E=SetControlMouseMoveHandler(MENUCTL,"MenuMouseMove")
  E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
+ E=SetControlChFocusHandler(MENUCTL,"MenuChFocus")
  OTW_CTL_LIST
+ PrintConsoleln "Init textbox..."
+ INIT_TXTBOXEX
 END
 DIM LISTSTR$[0]
 DIM LISTSTRNEXT[0]
@@ -409,6 +447,13 @@
  RETURN CTL_LSTBOXCTL
 END
 'CONTROL
+COMMON DEF FindControl(NAME$)
+ VAR I
+ FOR I=0TO CTL_MAX-1
+  IF CTL_NAME$[I]==NAME$THEN RETURN CTL_CID[I]<<12OR I
+ NEXT
+ RETURN 0
+END
 COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
   ERR=CTL_NOALLOC
@@ -548,6 +593,31 @@
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
+COMMON DEF NewImage WIDTH,HEIGHT OUT IMG,E
+ IF !IMAGE_FREE THEN IMG=0:E=IMAGE_NOALLOC:RETURN
+ VAR PTR=malloc(WIDTH*HEIGHT)
+ IF!PTR THEN IMG=0:E=IMAGE_NOALLOC:RETURN
+ INC IMAGE_IDCNT
+ IMAGE_ID[IMAGE_FREE]=IMAGE_IDCNT
+ IMAGE_HEIGHT[IMAGE_FREE]=WIDTH
+ IMAGE_WIDTH[IMAGE_FREE]=HEIGHT
+ IMAGE_PTR[IMAGE_FREE]=PTR
+ IMG=IMAGE_FREE OR IMAGE_IDCNT<<12
+ IMAGE_FREE=IMAGE_NEXT[IMAGE_FREE]
+ E=0
+ RETURN
+END
+COMMON DEF CheckImage(IMG)
+ RETURN IMAGE_ID[IMG AND 4095]==IMG>>12
+END
+COMMON DEF DeleteImage(IMG)
+ IF!CheckImage(IMG)THEN RETURN IMAGE_NOALLOC
+ VAR I=IMG AND 4095
+ free IMAGE_PTR[I]
+ IMAGE_NEXT[I]=IMAGE_FREE
+ IMAGE_FREE=I
+ RETURN 0
+END
 VAR MENU_NOALLOC
 COMMON DEF NewMenu OUT MENU,E
  IF !MENU_FREE THEN MENU=0RETURN
@@ -618,12 +688,20 @@
 DEF MenuLMouseUp WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
  IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
-  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_IVAR[MENU_SEL[M]],0)
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),0,MENU_IVAR[MENU_SEL[M]])
  ENDIF
  VOID DeleteWindow(WND)
  VOID ActiveWindow(MENU_SHOW[M])
  MENU_SHOW[M]=0
 END
+DEF MenuChFocus WND,C,T,F,_
+ IF!F THEN
+  VAR M=GetWindowVar(WND,0)
+  VOID DeleteWindow(WND)
+  VOID ActiveWindow(MENU_SHOW[M])
+  MENU_SHOW[M]=0
+ ENDIF
+END
 DEF MenuMouseMove WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
  VAR I=MENU_ITEM[M],Y1=1,Y2=1
@@ -846,6 +924,9 @@
 COMMON DEF WindowResizableStyle()
  RETURN 2
 END
+COMMON DEF WindowTransStyle()
+ RETURN 4
+END
 COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -853,10 +934,12 @@
   RETURN
  ENDIF
  VAR NUCID=CTL AND 4095
- INC OTW_TOPLEVELCNT
+' INC OTW_TOPLEVELCNT
  VAR _H=CTL_FH1[NUCID]
  'ごういん
- INC CTL_FH1[NUCID],10
+ IF STYLE AND 1THEN
+  INC CTL_FH1[NUCID],10
+ ENDIF
  NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,ERR
  CTL_FH1[NUCID]=_H
  IF ERR THEN RETURN
@@ -868,8 +951,14 @@
  ENDIF
  'RESIZABLE
  IF STYLE AND 2THEN
-  
+  WIN_STYLE[NUWID]=WIN_STYLE_RESIZ
  ENDIF
+ 'TRANS
+ IF STYLE AND 4THEN
+  WIN_STYLE[NUWID]=WIN_STYLE_TRANS
+  NOIMPL "TRANS
+  NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
+ ENDIF
  INC WIN_TopLevelX,CTL_FH1[NUCID]-1
  INC WIN_TopLevelY,CTL_FH1[NUCID]-1
 END
@@ -885,7 +974,7 @@
   RETURN
  ENDIF
  ERR=0
- INC OTW_TOPLEVELCNT
+' INC OTW_TOPLEVELCNT
  INC WIN_WIDCNT
  VAR NUWID,WID
  NUWID=WIN_FREE
@@ -914,7 +1003,7 @@
  VOID RepaintWindow(WND)
  IF!WIN_ROOTWND THEN
   GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
-  GCLIP 1,0,0,400,240
+  GCLIP 1,0,0,400,239
   WIN_AW[NUWID]=WIDTH
   WIN_AH[NUWID]=HEIGHT
   WIN_AFW[NUWID]=WIDTH
@@ -967,7 +1056,7 @@
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
  OTW_CLIPWindow NUWID
  OTW_DrawMap NUWID
- GCLIP 1,0,0,400,240
+ GCLIP 1,0,0,400,239
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
  SPAllocWindow WND
  WindowOnCreate WND,CTL
@@ -1080,7 +1169,7 @@
 
 DEF OTW_SPSORT
  VAR I,Z=0
- IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT-1)
+ IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT)
  VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
 'IF!WIN_NEXT[NUWID]THEN I=
  I=1022+255
@@ -1102,7 +1191,7 @@
 'IF WIN_HEIGHT[NUWID]!=WIN_AH[NUWID]THEN INC H,WIN_FH1[NUWID]
 'GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+W,WIN_RFY[NUWID]+240+H,ShortToRGB(NUWID)
  GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+WIN_AFW[NUWID],WIN_RFY[NUWID]+240+WIN_AFH[NUWID],ShortToRGB(NUWID)
- GCLIP 1,0,0,400,240
+ GCLIP 1,0,0,400,239
 END
 COMMON DEF ActiveWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -1352,12 +1441,18 @@
  VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
  VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
 
- IF!NXT THEN RETURN'WIN_
+ IF!NXT THEN RETURN 'WIN_
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
   IF WIN_SP[NUWID]THEN
    WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
   ENDIF
+  GPAGE OTW_SP,OTW_GP
+  GCOPY OTW_DP,WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
+  GPAGE OTW_SP,OTW_DP
+  GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],RGB(224,224,224)
+  GCOPY OTW_GP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
+  OTW_SPCHR NUWID
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  '   B=WIN_CHILD[NXT]
@@ -1553,8 +1648,12 @@
  ENDIF
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  VAR NUCID=WIN_CTL[NUWID] AND 4095
- VAR S=WIN_MSGE[NUWID]
+ WHILE WIN_MSGS[NUWID]!=WIN_MSGE[NUWID]
+ VAR S=WIN_MSGE[NUWID],S2=WIN_MSGS[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
+
+ INC WIN_MSGE[NUWID]
+ IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF TYPE==13THEN
   'CTL_STRNOTIFHANDLER
   CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],GetString$(WIN_MSGBUF[NUWID,S,2])
@@ -1563,12 +1662,12 @@
   CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
  ENDIF
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
- INC WIN_MSGE[NUWID]
- IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
  IF CTL_NDHNDLR[TYPE]THEN
   DEC WIN_MSGCNT[NUWID,TYPE]
  ENDIF
+ IF S2!=WIN_MSGS[NUWID]THEN BREAK
+ WEND
  RETURN 0
 END
 COMMON DEF UpdateWindow(WND)
@@ -1615,9 +1714,11 @@
  RETURN WIN_FH2[WND AND NUWIDMASK]'CTL_FH2[NUCID]
 END
 common def GetWindowName$(wnd)
+ if!checkwindow(wnd)then return ""
  return win_name$[wnd and nuwidmask]
 end
 common def SetWindowName wnd,name$
+ if!checkwindow(wnd)then return
  win_name$[wnd and nuwidmask]=name$
 end
 COMMON DEF GetWindowWidth(WND)
@@ -1723,6 +1824,7 @@
  RETURN NUWIDToWND(WIN_PREV[WND AND NUWIDMASK])
 END
 ''WINDOW GRAPHIC
+VAR GB_WND
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -1736,6 +1838,7 @@
  GCLIP 1,AX,AY,AX+W,AY+H
  IF WIN_BEGIN[NUWID]>=2THEN RETURN 0
  WIN_BEGIN[NUWID]=TRUE
+ GB_WND=NUWID
  GCLS
  RETURN 0
 END
@@ -1754,12 +1857,14 @@
  VAR AY=WIN_RY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
+ GB_WND=NUWID
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
  GCLS' RGB(224,224,224)
  RETURN 0
 END
 COMMON DEF GEndWindow(WND)
+ GB_WND=0
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_HIDE[NUWID]THEN RETURN WIN_NODRAW
@@ -1810,9 +1915,10 @@
   PNUWID=WIN_NEXT[PNUWID]
  WEND
  GPAGE OTW_SP,OTW_DP
- GCLIP 1,0,0,400,240
+ GCLIP 1,0,0,400,239
  GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
  IF WIN_SP[NUWID]AND 512THEN OTW_SPCHR NUWID
+ IF MAINCNT-OTW_LASTUPD>5THEN UpdateMouse
  RETURN 0
 END
 DEF OTW_SPCHR NUWID
@@ -1853,11 +1959,22 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GLOAD X+AX,Y+AY,W,H,IMG,FLG,MODE
 END
+COMMON DEF GSAVEImage IMG,WND,X,Y,W,H,IX,IY
+ IF (WND AND NUWIDMASK)==GB_WND THEN RETURN
+ IF!CheckImage(IMG)THEN RETURN
+ VAR PTR=IMAGE_PTR[IMG AND 4095]+IX*IY
+ DIM I[W*H]
+ ReadArray PTR,I,0,W*H
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ GSAVE AX+X,AY+Y,W,H,I,1
+ WriteArray PTR,I,0,W*H
+END
 COMMON DEF GPRINTWindowCC WND,X,Y,STR$,PAL
  GPRINTWindow WND,X,Y,STR$,OTW_CONSOLEPAL[PAL]
 END
 COMMON DEF GLINEArrayMemory PTR,W,H,X,Y,X2,Y2,COL
-'COL=RGBToShort(COL)
+ COL=RGBToShort(COL)
  DIM M[0]
  M=GetRawMemory()
  VAR I
@@ -1925,6 +2042,7 @@
 RETURN
  VAR E=GBEGINWindow(WND)
  IF E THEN RETURN
+ GCLSWindow WND,RGB(0,128,128)
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
  E=GENDWindow(WND)
 END
@@ -2088,8 +2206,8 @@
 END
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
  VAR NUWID=WND AND NUWIDMASK
- DEC MX,WIN_AX[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
- DEC MY,WIN_AY[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
+ DEC MX,WIN_RFX[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
+ DEC MY,WIN_RFY[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
  VAR X=MX+A1X
  VAR Y=MY+A2Y
  VAR E=MoveWindow(WND,X,Y)
@@ -2125,7 +2243,7 @@
  ButtonPainter W,C,T,0,0
 END
 DEF ToggleButtonLMouseUP W,C,T,X,Y
- VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
+ VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,1))
 'SetWindowVar W,1,FALSE
  ButtonPainter W,C,T,0,0
 END
@@ -2505,11 +2623,25 @@
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
   PrintConsole "Ver 5.0-B"+LF$()
-  BEEP 94,-1000
+' BEEP 94,-1000
+  VAR M1$,M2$,M3$,M4$,M5$,M6$
+  M1$=":1T140<<C8 C8&C2."
+  M2$=":2T140<G8 G8&G2."
+  M3$=":3T140<E8 E8&E2."
+  M4$=":4T140>>>><<G8 G8&G2."
+  M5$=":5T140>>>><<E8 E8&E2."
+  M6$=":6T140>>>><<C8 C8&C2."
+  BGMPLAY M1$+M2$+M3$+M4$+M5$+M6$
+'  BEEP 96
   PrintConsole "Loading font..."+LF$()
   OTW_LOADFONT
+'  BEEP 97
   PrintConsole "Init..........."+LF$()
   OTWRunning=TRUE
+  OTW_WIN_INITARRAY
+  OTW_CTL_INITARRAY
+  OTW_INIT_ERR
+  PrintConsoleln "Init setting..."
   OTW_USEBTN=&B11001111
   OTW_FPS=1
   OTW_FPSCNT=1
@@ -2520,6 +2652,7 @@
   OTW_SP=0
   OTW_BP=1
   OTW_GP=2
+  PrintConsoleln "Init screen..."
   MouseClipDef
   GPAGE OTW_SP,OTW_SP
   GPRIO 1023
@@ -2541,9 +2674,9 @@
   GCLS RGB(0,128,128)
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
-  GCLS RGB(0,192,128)
+ ' GCLS RGB(0,192,128)
 ' GCLS RGB(0,0,255)
-GCLS 
+'GCLS 
   OTW_INITSP
   GPRIO 1023
   GOTO @_
@@ -2585,19 +2718,16 @@
   DISPLAY 0
   @_
   OTW_INIT=TRUE
-  OTW_WIN_INITARRAY
-  OTW_CTL_INITARRAY
-  OTW_INIT_ERR
   VAR E
   NewControl "DESKTOP" OUT WIN_ROOTCTL,E
   E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
   NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
-' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
+' NewTopLevelWindow TSTCTL,"HELLO",164,164 OUT TSTWND,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
-  GCLIP 1,0,0,400,240
+  GCLIP 1,0,0,400,239
   VISIBLE 1,1,1,1
   OTW_MOUSEX=(400-16)/2
   OTW_MOUSEY=(240-16)/2
@@ -2630,12 +2760,12 @@
   OTW_MOVWINCOL=RGB(128,128,128,128)
   OTW_MOVWINCOL=RGB(128,255,255,255)
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+  DEC FM,FREEMEM
+  OTW_USEMEM=FM
+  PrintConsoleln FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
   CLS
   LOCATE 0,29
   NewProcess"LAUNCHER","" OUT E,E,E
-  DEC FM,FREEMEM
-  OTW_USEMEM=FM
-'  PrintConsole FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
  ENDIF
 RETURN
 END
@@ -2668,6 +2798,9 @@
  VAR NUWID,E
  VAR BTN=UpdateButton()
  IF MOVEMOUSE||BTN THEN
+'  IF WIN_DRAGHANDLER_USE THEN
+'   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+'ENDIF
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
  IF BTN THEN
@@ -2823,6 +2956,7 @@
 DIM LAUNCHERLEN
 COMMON DEF LauncherPainter WND,CTL,T,A1,A2
  VAR E=CallBaseControlHandler(WND,CTL,T,A1,A2)
+ IF GBeginWindow(WND)THEN RETURN
  VAR I
  FOR I=0TO LAUNCHERLEN-1
   GPRINTWindow WND,0,I*8+1,LAUNCHERITEM$[I],RGB(0,0,0)
@@ -2847,10 +2981,8 @@
   VAR WND,E
   NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",80,LAUNCHERLEN*8 OUT WND,E
   SetProcessVar WND
-  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
-  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
  ELSE
-  LAUNCHERLEN=8
+  LAUNCHERLEN=10
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -2860,8 +2992,11 @@
   LAUNCHERITEM$[5]="TXTED"
   LAUNCHERITEM$[6]="PRGED"
   LAUNCHERITEM$[7]="OTYFIL"
-' LAUNCHERITEM$[8]="MEMVIEW"
+  LAUNCHERITEM$[8]="OTYDOC"
+  LAUNCHERITEM$[9]="MPLAY"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
+  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
+  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
   I_LAUNCHER
  ENDIF
 END
@@ -2909,6 +3044,7 @@
 COMMON DEF L_WCLOCK
  VAR E
  WCLOCKWND=GetProcessVar()
+ VAR H,M,S
 ' E=UpdateWindow(WCLOCKBC)
  E=PeekWindowEvent(WCLOCKWND)
 ' IF E==RepaintControlEvent()THEN
@@ -2918,11 +3054,16 @@
 ' ENDIF
  E=UpdateWindow(WCLOCKWND)
  IF E THEN ExitProcess 1
- IF MAINCNT-WCLOCKTIM>=60 THEN
-  WCLOCKTIM=MAINCNT/60
-  WCLOCKTIM=WCLOCKTIM*60
+ TMREAD OUT H,M,S
+ IF S!=GetWindowVar(WCLOCKWND,0)THEN
   WCLOCK_RP
+  SetWindowVar WCLOCKWND,0,S
  ENDIF
+' IF MAINCNT-WCLOCKTIM>=60 THEN
+'  WCLOCKTIM=MAINCNT/60
+'  WCLOCKTIM=WCLOCKTIM*60
+'  WCLOCK_RP
+' ENDIF
 ' E=UpdateWindow(WCLOCKBC2)
  
 END
@@ -3030,6 +3171,7 @@
    OTW_MOUSEY=OTW_MOUSEY#
   ENDIF
  ENDIF
+ OTW_LASTUPD=MAINCNT
 END
 COMMON DEF OTWSAVE VER$
  SAVE"PRG1:OTW"+VER$
@@ -3083,7 +3225,7 @@
  IF CallBaseControlHandler(WND,CTL,T,A1,A2)THEN RETURN
  DIM A[64*64]
  ReadArray GetWindowVar(WND,2),A,0,LEN(A)
- GLOADWindow WND,0,0,64,64,A,0,0
+ GLOADWindow WND,0,0,64,64,A,1,0
  VAR E=GEndWindow(WND)
 END
 COMMON DEF PaintLDWN WND,CTL,T,X,Y
@@ -3641,12 +3783,12 @@
 END
 '===End text editor===
 COMMON DEF TXTEDNOTIF W,C,T,A1,A2
- IF A1==2THEN
-  VOID NewOpenFileDialog(W)
+ IF A2==2THEN
+  VOID OpenFileDialog(W,"TXT")
  ENDIF
 END
 COMMON DEF TXTEDSTRNOTIF W,C,T,A1,A2$
- TextBoxExSetText GetWindowVar(W,0),LOAD("TXT:"+RIGHT$(A2$,LEN(A2$)-1),0)
+ TextBoxExSetText GetWindowVar(W,0),LoadFile$(RIGHT$(A2$,LEN(A2$)-1))
 END
 COMMON DEF I_TXTED
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
@@ -3660,7 +3802,7 @@
   E=SetControlNotifHandler(TXTEDCTL,"TXTEDNOTIF")
   E=SetControlStrNotifHandler(TXTEDCTL,"TXTEDSTRNOTIF")
  ENDIF
- NewTopLevelMenuWindow TXTEDCTL,"TXTED",128,64 OUT WND,E
+ NewTopLevelStyleWindow TXTEDCTL,"TXTED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  AddMenuItem MENU,"New",1
@@ -3722,10 +3864,12 @@
 END
 COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
  VAR I
- IF SIZE==8&&!(STYLE AND 3)THEN
+ IF SIZE==8&&(STYLE AND 3)!=3THEN
   GPUTCHRWindow WND,X,Y,C,COL
+  IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
  ELSE
   GPUTCHRWindow WND,X,Y,C,COL
+  IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
  ENDIF
  IF STYLE AND 4THEN
   GLINEWindow WND,X,Y+SIZE/2,X+SIZE,Y+SIZE/2,COL
@@ -3753,11 +3897,18 @@
 DIM OTYDOC_CurLine[0]
 DIM OTYDOC_WSIZE[0]
 DIM OTYDOC_STYLE[0]
+DIM OTYDOC_WSIZE2[0]
+DIM OTYDOC_STYLE2[0]
 DIM OTYDOC_COL[0]
 DIM OTYDOC_CX[0]
+
+VAR OTYDOC_BEG$
+VAR OTYDOC_END$
 COMMON DEF INIT_OTYDOC
  VAR E
  IF!OTYDOCCTL THEN
+  OTYDOC_BEG$=CHR$(&HB10B)
+  OTYDOC_END$=CHR$(&HE0F0)
   NewControl "OTYDoc" OUT OTYDOCCTL,E
   E=SetControlPainter(OTYDOCCTL,"OTYDocPainter")
   E=SetControlKeyHandler(OTYDOCCTL,"OTYDocKey")
@@ -3781,6 +3932,8 @@
   OTYDOC_CurLine=NewArray(OTYDOC_WSIZ)
   OTYDOC_WSIZE=NewArray(OTYDOC_WSIZ)
   OTYDOC_STYLE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_WSIZE2=NewArray(OTYDOC_WSIZ)
+  OTYDOC_STYLE2=NewArray(OTYDOC_WSIZ)
   OTYDOC_COL=NewArray(OTYDOC_WSIZ)
   OTYDOC_CX=NewArray(OTYDOC_WSIZ)
   OTYDOC_WFREE=1
@@ -3862,10 +4015,13 @@
  IF!OTYDOC_GetData(WND)THEN OTYDOC_NewCTL WND
  VAR D=OTYDOC_GetData(WND)
  VAR I=OTYDOC_ShowLine[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR CX=OTYDOC_CX[D]
  VAR Y=2,X=2
  VAR ST=0
  VAR SZ=8
  VAR COL=RGB(0,0,0)
+ VAR OJ
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
   VAR V$=OTYDOC_VAL$[I]
@@ -3875,23 +4031,46 @@
   FOR J=0TO L
    C=ASC(V$[J])
    IF C==&Hb10bTHEN
+   IF I==CL THEN
+    IF CX==J THEN
+     GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+     OTYDOC_STYLE[D]=ST
+    ENDIF
+   ENDIF
     INC J
     C=ASC(V$[J])
+    ON C GOTO@FNT,@COL,@STY
+    CONTINUE
+    @FNT'0
     INC J
     A=ASC(V$[J])
-    ON C GOTO@FNT,@COL
-    CONTINUE
-    @FNT
     SZ=A
     CONTINUE
-    @COL
+    @COL'1
+    INC J
+    A=ASC(V$[J])
     COL=ShortToRGB(A)
     CONTINUE
+    @STY'2
+    INC J
+    A=ASC(V$[J])
+    ST=A
+    CONTINUE
    ENDIF
    RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
-   ?HEX$(COL)
+   IF I==CL THEN
+    IF CX==J THEN
+     GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+     OTYDOC_STYLE[D]=ST
+    ENDIF
+   ENDIF
+'   ?HEX$(COL)
    INC X,SZ
   NEXT
+  IF I==CL&&CX>L THEN
+   GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+   OTYDOC_STYLE[D]=ST
+  ENDIF
   INC Y,YSZ
   I=OTYDOC_NEXT[I]
  WEND
@@ -3899,18 +4078,134 @@
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
 END
+
+DEF OTYDOC_UpCursor(WND)
+  VAR C=GetWindowVar(WND,2)
+  IF TXTBOXEX_PREV[C]THEN
+   VAR L=TXTBOXEX_PREV[GetWindowVar(WND,1)]
+   C=TXTBOXEX_PREV[C]
+   IF L==C THEN
+     SetWindowVar WND,1,L
+   ENDIF
+   SetWindowVar WND,2,C
+   RETURN 1
+  ENDIF
+  RETURN 0
+END
+DEF OTYDOC_DownCursor(WND)
+  VAR C=GetWindowVar(WND,2)
+  IF TXTBOXEX_NEXT[C]THEN
+   IF GetWindowVar(WND,6)==C THEN
+    VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
+    IF L THEN
+     SetWindowVar WND,1,L
+    ENDIF
+   ENDIF
+   C=TXTBOXEX_NEXT[C]
+   SetWindowVar WND,2,C
+   RETURN 1
+  ENDIF
+  RETURN 0
+END
+COMMON DEF OTYDOCButton WND,CTL,T,BTN,_
+ VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
+ IF!BTN THEN SetWindowVar WND,5,0RETURN
+ IF MAINCNT-F<R THEN RETURN
+ IF BTN AND 1 THEN
+  IF TXTED_UpCursor(WND)THEN
+   OTYDOCRepaint WND
+  ENDIF
+  U=1
+ ENDIF
+ IF BTN AND 2 THEN
+  IF TXTED_DownCursor(WND)THEN
+   OTYDOCRepaint WND
+  ENDIF
+  U=1
+ ENDIF
+ VAR D=GetWindowVar(WND,0)
+ IF BTN AND 4THEN
+  VAR CX=OTYDOC_CX[D]
+  IF CX THEN
+   DEC OTYDOC_CX[D]
+   OTYDOCRepaint WND
+  ELSE
+   IF OTYDOC_UpCursor(WND)THEN
+    VAR C=OTYDOC_CurLine[D]
+    OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
+    OTYDOCRepaint WND
+   ENDIF
+  ENDIF
+  U=1
+ ENDIF
+ IF BTN AND 8THEN
+  CX=OTYDOC_CX[D]
+  INC OTYDOC_CX[D]
+  C=OTYDOC_CurLine[D]'GetWindowVar(WND,2)
+  VAR V$=OTYDOC_VAL$[C]
+  IF LEN(V$)<=CX||LEN(V$)-1==CX&&V$[CX]==LF$()THEN
+   IF OTYDOC_DownCursor(WND)THEN
+    OTYDOC_CX[D]=0
+   ENDIF
+  ENDIF
+  OTYDOCRepaint WND
+  U=1
+ ENDIF
+ IF U THEN
+  IF R==0 THEN
+   SetWindowVar WND,5,20
+  ELSE
+   SetWindowVar WND,5,3
+  ENDIF
+  SetWindowVar WND,4,MAINCNT
+ ENDIF
+END
+
 COMMON DEF OTYDocKey WND,CTL,TYPE,KEY,A2
  VAR D=OTYDOC_GetData(WND)
  VAR S=OTYDOC_ShowLine[D]
  VAR C=OTYDOC_CurLine[D]
+ VAR X=OTYDOC_CX[D]
  IF!S THEN
-  S=OTYDOC_NewLine("This is Test",0)
+  S=OTYDOC_NewLine("",0)
   OTYDOC_ShowLine[D]=S
   OTYDOC_CurLine[D]=S
+  C=S
  ENDIF
+  VAR I$=CHR$(KEY)
+  IF OTYDOC_STYLE[D]!=OTYDOC_STYLE2[D]THEN
+   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+I$+CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])
+   OTYDOC_STYLE[D]=OTYDOC_STYLE2[D]
+   INC OTYDOC_CX[D],3
+  ENDIF
+  INC OTYDOC_CX[D]
+  IF!LEN(OTYDOC_VAL$[C])THEN
+   OTYDOC_VAL$[C]=I$
+  ELSE
+   InsertStrB OTYDOC_VAL$[C],X,I$
+  ENDIF
  OTYDOCRepaint WND
+ ?OTYDOC_VAL$[C]
 END
 '====EVENT HANDLER====
+
+'RichTextEditor API
+COMMON DEF RTESetBold WND,F
+ VAR D=OTYDOC_GetData(WND)
+ IF F THEN
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] OR 1
+ ELSE
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT 1
+ ENDIF
+END
+'==================
+COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
+ VAR N$=GetWindowName$(CW)
+ IF N$=="B"THEN
+  RTESetBold GetWindowVar(WND,0),F
+  RETURN
+ ENDIF
+END
 COMMON DEF I_OTYDOC
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -3921,10 +4216,13 @@
  IF!OTYDOC_WNDCTL THEN
   INIT_OTYDOC
   ExtendControl "OTYDOC",GetWindowControl() OUT OTYDOC_WNDCTL,E
+  E=SetControlNotifHandler(OTYDOC_WNDCTL,"OTYDOC_WNDNOTIF")
  ENDIF
  NewTopLevelWindow OTYDOC_WNDCTL,"OTYDOC",256,128 OUT WND,E
  SetProcessVar WND
- NewWindow OTYDOCCTL,"OTYDOC",0,12,256,120,WND,0 OUT E,E
+ VAR DOC
+ NewWindow OTYDOCCTL,"OTYDOC",0,12,256,116,WND,0 OUT DOC,E
+ SetWindowVar WND,0,DOC
  NewWindow GetToggleButtonControl(),"B",0,0,11,11,WND,0 OUT E,E
 END
 COMMON DEF L_OTYDOC
@@ -4088,24 +4386,60 @@
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
-VAR MEMVIEWCTL
-COMMON DEF I_MEMVIEW
+VAR MPLAYCTL
+VAR MPLAYABOUTCTL
+COMMON DEF MPLAYNOTIF WND,CTL,TYP,CW,ID
+ VAR N$=GetWindowName$(CW)
+ IF N$==""THEN
+  BGMPLAY LoadFile$(GetWindowName$(GetWindowVar(WND,0)))
+  RETURN
+ ENDIF
+ IF ID==1THEN
+  VOID OpenFileDialog(WND,"TXT")
+  RETURN
+ ENDIF
+ IF ID==3THEN
+  VOID DeleteWindow(WND)
+  RETURN
+ ENDIF
+END
+COMMON DEF MPLAYSNOTIF W,C,T,A1,A2$
+ SetWindowName GetWindowVar(W,0),RIGHT$(A2$,LEN(A2$)-1)
+ VOID RepaintWindow(GetWindowVar(W,0))
+END
+COMMON DEF I_MPLAY
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
   ExitProcess 1
   RETURN
  ENDIF
  VAR WND,E
- IF!MEMVIEWCTL THEN
-  ExtendControl "MEMVIEW",GetWindowControl() OUT MEMVIEWCTL,E
+ IF!MPLAYCTL THEN
+  ExtendControl "MPLAY",GetWindowControl() OUT MPLAYCTL,E
+  E=SetControlNotifHandler(MPLAYCTL,"MPLAYNOTIF")
+  E=SetControlStrNotifHandler(MPLAYCTL,"MPLAYSNOTIF")
+  ExtendControl "MPLAYABOUT",GetWindowControl() OUT MPLAYABOUTCTL,E
  ENDIF
- NewTopLevelWindow MEMVIEWCTL,"MEMVIEW",128,96 OUT WND,E
-SetProcessVar WND
+ VAR MENU
+ NewTopLevelMenuWindow MPLAYCTL,"MPLAY",128,10 OUT WND,E
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Open",1
+ AddMenuItem MENU,"Preset",2
+ AddMenuItem MENU,"Exit",3
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"About",4
+ AddSubMenuItem GetWindowMenu(WND),"Help",MENU
+ SetProcessVar WND
+ VAR W2
+ NewWindow GetButtonControl(),"",0,0,10,10,WND,0 OUT W2,E
+ NewWindow GetLabelControl(),"",12,2,128-12,8,WND,1 OUT W2,E
+ SetWindowVar WND,0,W2
 END
-COMMON DEF L_MEMVIEW
+COMMON DEF L_MPLAY
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
-' ?FREEMEM,OTW_USEMEM
 END
+
 'Init common dialogs
 VAR CTL_FILDIA
 DEF OTW_FileDialog
@@ -4133,18 +4467,27 @@
  DIM F$[0]
  GetFiles F$,""
  VAR I
+ VAR T$=GetWindowName$(WND)
+ T$=RIGHT$(T$,LEN(T$)-5)
+ T=0
+ IF T$=="TXT"THEN T=1
+ IF T$=="DAT"THEN T=2
  FOR I=0TO LEN(F$)-1
+  IF F$[I][0]==" "&&T==1THEN CONTINUE
+  IF F$[I][1]=="*"&&T==2THEN CONTINUE
   AddListBoxItem L,F$[I]
  NEXT
  SetWindowVar WND,0,L
  NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
  NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
 END
-COMMON DEF NewOpenFileDialog(OWNER)
+COMMON DEF OpenFileDialog(OWNER,TYPE$)
  IF!CTL_FILDIA THEN
   OTW_FileDialog
  ENDIF
- VAR E=NewModalDialogBox(CTL_FILDIA,"Open",170,64,OWNER)
+ IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
+ VAR TITLE$=TYPE$
+ VAR E=NewModalDialogBox(CTL_FILDIA,"Open "+TYPE$,170,64,OWNER)
  RETURN E
 END
 
@@ -4164,14 +4507,19 @@
  OTW_FNTTMP=NewArray(64)
  OTW_FNTPAL=NewArray(2)
  OTW_FNTTBL=NewArray(65536)
- FOR I=1TO 65535
+ PrintConsoleln "Init font table..."
+ FOR I=0TO 127
   OTW_FNTTBL[I]=703
  NEXT
+ FOR I=1TO 511
+  COPY OTW_FNTTBL,I*128,OTW_FNTTBL,0,128
+ NEXT
  OTW_FNTTBL[10]=13
  OTW_LOADFNTTBL
  IF!CHKFILE("DAT:OTW_FONT")THEN
   OTW_GENFONT
  ELSE
+  PrintConsoleln "Load DAT:OTW_FONT"
   LOAD"DAT:OTW_FONT",OTW_FNT,0
  ENDIF
  @FONT
diff -u OTW.TXT OTW1C
--- OTW.TXT
+++ OTW1C
@@ -1190,6 +1190,10 @@
 'IF WIN_WIDTH[NUWID]!=WIN_AW[NUWID]THEN INC W,WIN_FW1[NUWID]
 'IF WIN_HEIGHT[NUWID]!=WIN_AH[NUWID]THEN INC H,WIN_FH1[NUWID]
 'GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+W,WIN_RFY[NUWID]+240+H,ShortToRGB(NUWID)
+ IF WIN_AFW[NUWID]<0||WIN_AFH[NUWID]<0THEN
+  GCLIP 1,0,0,400,239
+  RETURN
+ ENDIF
  GFILL WIN_RFX[NUWID],WIN_RFY[NUWID]+240,WIN_RFX[NUWID]+WIN_AFW[NUWID],WIN_RFY[NUWID]+240+WIN_AFH[NUWID],ShortToRGB(NUWID)
  GCLIP 1,0,0,400,239
 END
@@ -1276,14 +1280,14 @@
 END
 COMMON DEF OTW_CLIPWindow NUWID
  VAR PNUWID=WIN_PARENT[NUWID]
- IF WIN_FX[PNUWID]>WIN_RX[NUWID]THEN
-  WIN_RX[NUWID]=WIN_FX[PNUWID]
+ IF WIN_RFX[PNUWID]>WIN_RX[NUWID]THEN
+  WIN_RX[NUWID]=WIN_RFX[PNUWID]
   IF WIN_RFX[PNUWID]>WIN_RFX[NUWID]THEN
    WIN_RFX[NUWID]=WIN_RFX[PNUWID]
   ENDIF
  ENDIF
- IF WIN_FY[PNUWID]>WIN_RY[NUWID]THEN
-  WIN_RY[NUWID]=WIN_FY[PNUWID]
+ IF WIN_RFY[PNUWID]>WIN_RY[NUWID]THEN
+  WIN_RY[NUWID]=WIN_RFY[PNUWID]
   IF WIN_RFY[PNUWID]>WIN_RFY[NUWID]THEN
    WIN_RFY[NUWID]=WIN_RFY[PNUWID]
   ENDIF
@@ -1298,9 +1302,9 @@
  IF E1>E2 THEN
   DEC WIN_AW[NUWID],E1-E2
  ENDIF
- IF WIN_AX[NUWID]<WIN_FX[PNUWID]THEN
+ IF WIN_AX[NUWID]<WIN_RFX[PNUWID]THEN
   WIN_AW[NUWID]=WIN_WIDTH[NUWID]
-  DEC WIN_AW[NUWID],WIN_FX[PNUWID]-WIN_AX[NUWID]'-WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
+  DEC WIN_AW[NUWID],WIN_RFX[PNUWID]-WIN_AX[NUWID]'-WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
  ENDIF
  E1=WIN_RY[NUWID]+WIN_HEIGHT[NUWID]
  E2=WIN_RY[PNUWID]+WIN_AH[PNUWID]
@@ -1313,9 +1317,9 @@
  IF E1>E2 THEN
   DEC WIN_AH[NUWID],E1-E2
  ENDIF
- IF WIN_AY[NUWID]<WIN_FY[PNUWID]THEN
+ IF WIN_AY[NUWID]<WIN_RFY[PNUWID]THEN
   WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
-  DEC WIN_AH[NUWID],WIN_FY[PNUWID]-WIN_AY[NUWID]'WIN_FH1[NUWID]
+  DEC WIN_AH[NUWID],WIN_RFY[PNUWID]-WIN_AY[NUWID]'WIN_FH1[NUWID]
  ENDIF
 
  VAR W=WIN_AW[NUWID]
@@ -1329,7 +1333,11 @@
   DEC H,WIN_FH2[NUWID]
  ELSE
   IF WIN_HEIGHT[NUWID]-H>=WIN_FH1[NUWID]THEN
+   IF WIN_Y[NUWID]<0THEN
     DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
+   ELSE
+    DEC H,WIN_FH1[NUWID]'WIN_FH2[NUWID]-WIN_FH1[NUWID]
+   ENDIF
 
 '   IF WIN_RFY[NUWID]==WIN_RY[NUWID]THEN
 '    DEC H,WIN_FH1[NUWID]
@@ -1337,9 +1345,22 @@
 '    DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
 '   ENDIF
   ELSE
-   DEC H,WIN_FH1[NUWID]-(WIN_HEIGHT[NUWID]-H)+1
+   DEC H,WIN_FH1[NUWID]-(WIN_HEIGHT[NUWID]-H)+WIN_FH2[NUWID]-WIN_FH1[NUWID]
   ENDIF
  ENDIF
+ IF WIN_RFX[NUWID]+W>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
+  DEC W,(WIN_RFX[NUWID]+W)-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
+ ENDIF
+ IF WIN_RX[NUWID]+WIN_AW[NUWID]>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
+  DEC WIN_AW[NUWID],(WIN_RX[NUWID]+WIN_AW[NUWID])-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
+ ENDIF
+
+ IF WIN_RFY[NUWID]+H>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
+  DEC H,(WIN_RFY[NUWID]+H)-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
+ ENDIF
+ IF WIN_RY[NUWID]+WIN_AH[NUWID]>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
+  DEC WIN_AH[NUWID],(WIN_RY[NUWID]+WIN_AH[NUWID])-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
+ ENDIF
  WIN_AFW[NUWID]=W
  WIN_AFH[NUWID]=H
  WIN_HIDE[NUWID]=0
@@ -1462,16 +1483,19 @@
     IF MOVEF THEN
      WIN_AX[B]=WIN_AX[B]+MX
      WIN_AY[B]=WIN_AY[B]+MY
-     WIN_FX[B]=WIN_FX[B]+MX
-     WIN_FY[B]=WIN_FY[B]+MY
-     WIN_RFX[B]=WIN_RFX[B]+MX
-     WIN_RFY[B]=WIN_RFY[B]+MY
-     WIN_RX[B]=WIN_RX[B]+MX
-     WIN_RY[B]=WIN_RY[B]+MY
+     WIN_FX[B]=WIN_AX[B]+WIN_FW1[B]'+MX
+     WIN_FY[B]=WIN_AY[B]+WIN_FH1[B]'+MY
+     WIN_RFX[B]=WIN_FX[B]'+MX
+     WIN_RFY[B]=WIN_FY[B]'+MY
+     WIN_RX[B]=WIN_AX[B]'+MX
+     WIN_RY[B]=WIN_AY[B]'+MY
+     OTW_CLIPWindow B
      MOVEF=1
     ENDIF
-    IF!WIN_HIDE[B]THEN VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-    OTW_DrawMap B
+    IF!WIN_HIDE[B]THEN
+     VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+     OTW_DrawMap B
+    ENDIF
 
     IF WIN_CHILD[B]THEN
      IF B==NUWID THEN MOVEF=1
@@ -1794,7 +1818,7 @@
  OTW_MOUSECLIPY2=H+Y
 END
 DEF MouseClipDef
- MouseClip 0,0,400,240
+ MouseClip 0,0,399,239
 END
 COMMON DEF GetTextWidth(STR$)
  RETURN LEN(STR$)*8
@@ -1834,12 +1858,15 @@
  VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
  VAR W=WIN_AFW[NUWID]
  VAR H=WIN_AFH[NUWID]
+ IF W<0||H<0THEN RETURN WIN_NODRAW
  GPAGE OTW_SP,OTW_BP
+'OTW1C 3.1 の GCLIP BUG の ため
  GCLIP 1,AX,AY,AX+W,AY+H
  IF WIN_BEGIN[NUWID]>=2THEN RETURN 0
  WIN_BEGIN[NUWID]=TRUE
  GB_WND=NUWID
- GCLS
+' GCLS
+ GFILL AX,AY,AX+W,AY+H,0
  RETURN 0
 END
 DEF ReGBeginWindow(WND)
@@ -1855,12 +1882,14 @@
  WIN_BEGIN[NUWID]=TRUE+TRUE
  VAR AX=WIN_RX[NUWID]
  VAR AY=WIN_RY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+ VAR W=WIN_AW[NUWID]'WIN_WIDTH[NUWID]
+ VAR H=WIN_AH[NUWID]'WIN_HEIGHT[NUWID]
  GB_WND=NUWID
  GPAGE OTW_SP,OTW_BP
- GCLIP 1,AX,AY,AX+W,AY+H
- GCLS' RGB(224,224,224)
+'OTW1C 3.1 の GCLIP BUG の ため
+' GCLIP 1,AX,AY,AX+W,AY+H
+' GCLS' RGB(224,224,224)
+ GFILL AX,AY,AX+W,AY+H,0
  RETURN 0
 END
 COMMON DEF GEndWindow(WND)
@@ -1879,8 +1908,8 @@
  IF WIN_BEGIN[NUWID]!=2THEN
   AX=WIN_RFX[NUWID]
   AY=WIN_RFY[NUWID]
-  IF W==WIN_WIDTH[NUWID]THEN DEC W,WIN_FW2[NUWID]'-WIN_FW1[NUWID]
-  IF H==WIN_HEIGHT[NUWID]THEN DEC H,WIN_FH2[NUWID]'-WIN_FH1[NUWID]
+  W=WIN_AFW[NUWID]
+  H=WIN_AFH[NUWID]
  ENDIF
  WIN_BEGIN[NUWID]=FALSE
  GCLIP 1,AX,AY,AX+W,AY+H
@@ -1954,6 +1983,16 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GCIRCLE X+AX,Y+AY,R,COL
 END
+COMMON DEF GCIRCLE2Window WND,X,Y,R,S,E,F,COL
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ GCIRCLE X+AX,Y+AY,R,S,E,F,COL
+END
+COMMON DEF GTRIWindow WND,X,Y,X2,Y2,X3,Y3,COL
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ GTRI X+AX,Y+AY,X2+AX,Y2+AY,X3+AX,Y3+AY,COL
+END
 COMMON DEF GLOADWindow WND,X,Y,W,H,IMG[],FLG,MODE
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
@@ -2000,6 +2039,13 @@
  WEND
 END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
+ INC X,WIN_FX[WND AND NUWIDMASK]
+ INC Y,WIN_FY[WND AND NUWIDMASK]
+ IF COL AND&HFF000000THEN
+  GPUTCHR X,Y,STR$,1,1,COL
+ ENDIF
+ RETURN
+'3.0.x
  VAR L=LEN(STR$)-1,A,I
  FOR I=0TO L
   A=ASC(STR$[I])
@@ -2009,6 +2055,16 @@
  NEXT
 END
 COMMON DEF GPRINTBWindow WND,X,Y,STR$,COL,BC
+ INC X,WIN_FX[WND AND NUWIDMASK]
+ INC Y,WIN_FY[WND AND NUWIDMASK]
+ IF BC AND&HFF000000THEN
+  GFILL X,Y,X+LEN(STR$)*8-1,Y+7,BC
+ ENDIF
+ IF COL AND&HFF000000THEN
+  GPUTCHR X,Y,STR$,1,1,COL
+ ENDIF
+ RETURN
+'3.0.x
  VAR L=LEN(STR$)-1,A,I
  FOR I=0TO L
   A=ASC(STR$[I])
@@ -2022,6 +2078,9 @@
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
+ GPUTCHR X,Y,CHR$(A),1,1,COL
+ RETURN
+'3.0.x
  OTW_FNTPAL[0]=0
  OTW_FNTPAL[1]=COL
  COPY OTW_FNTTMP,0,OTW_FNT,64*OTW_FNTTBL[A],64
@@ -2032,6 +2091,12 @@
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
+ IF BC AND&HFF000000THEN
+  GFILL X,Y,X+7,Y+7,BC
+ ENDIF
+ GPUTCHR X,Y,CHR$(A),1,1,COL
+ RETURN
+'3.0.x
  OTW_FNTPAL[0]=BC
  OTW_FNTPAL[1]=COL
  COPY OTW_FNTTMP,0,OTW_FNT,64*OTW_FNTTBL[A],64
@@ -2050,13 +2115,13 @@
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  GCLSWindow WND,RGB(224,224,224)
- GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
+ GFILLWindow WND,0,-GetWindowFrameHeight(WND)+1,GetWindowFrameWidth(WND)-2,-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+2,GetWindowName$(WND),15
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
  VAR C=RGB(224,224,224)
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
- GLINEWindow WND,-1,-1,W+1,-1,RGB(0,0,0)
+ GLINEWindow WND,-1,-1,W-2,-1,RGB(0,0,0)
 'GLINEWindow WND,W-08-1,-H+3,W-2-1,-3,C
 'GLINEWindow WND,W-7-1,-H+3,W-1-1,-3,C
 'GLINEWindow WND,W-2-1,-H+3,W-8-1,-3,C
@@ -2071,7 +2136,10 @@
 'GLINEWindow WND,-1,-H,-1,H2-1,RGB(224,224,224)
 'GLINEWindow WND,W-1,-H,W-1,H2,RGB(0,0,0)
 'GLINEWindow WND,-1,H2,W-1,H2,RGB(0,0,0)
+'?W
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
+' ?GetWindowName$(WND),W,W-1+2
+
  IF WIN_MENU[NUWID]THEN
   GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
   GFILLWindow WND,0,-10,W-2,-2,RGB(224,224,224)
@@ -2206,8 +2274,8 @@
 END
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
  VAR NUWID=WND AND NUWIDMASK
- DEC MX,WIN_RFX[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
- DEC MY,WIN_RFY[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
+ DEC MX,WIN_AX[WIN_PARENT[NUWID]]+WIN_FW1[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
+ DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
  VAR X=MX+A1X
  VAR Y=MY+A2Y
  VAR E=MoveWindow(WND,X,Y)
@@ -2616,6 +2684,9 @@
 VAR OTW_KY2
 VAR OTW_USEBTN
 VAR OTW_USEMEM
+COMMON DEF S_OTW S
+ BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
+END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   VAR FM=FREEMEM
@@ -2672,6 +2743,7 @@
   NEXT
   GCLS RGB(0,224,224)
   GCLS RGB(0,128,128)
+  GCLS RGB(191,191,191)
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
  ' GCLS RGB(0,192,128)
@@ -2798,9 +2870,9 @@
  VAR NUWID,E
  VAR BTN=UpdateButton()
  IF MOVEMOUSE||BTN THEN
-'  IF WIN_DRAGHANDLER_USE THEN
-'   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
-'ENDIF
+  IF WIN_DRAGHANDLER_USE THEN
+   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+ENDIF
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
  IF BTN THEN
@@ -3135,7 +3207,7 @@
   OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
    IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
    IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
-   IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2-1
+   IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2
    IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
    SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
    OTW_MOUSEX#=OTW_MOUSEX
@@ -4247,6 +4319,7 @@
 VAR OTYFILES$[0]
 VAR OTYFILICONCTL
 VAR OTYFILABOUTCTL
+VAR OTYFILLBLCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
  GCLSWindow W,RGB(224,224,224)
@@ -4278,6 +4351,10 @@
  S$="OK"
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
 END
+COMMON DEF OTYFILICONCTLMouse WND,CTL,T,A1,A2
+?GetWindowName$(GetWindowVar(WND,2))
+BEEP 
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
  IF ID<=5THEN
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
@@ -4340,9 +4417,12 @@
  VAR WND,E
  IF!OTYFILCTL THEN
   ExtendControl "Files",GetWindowControl() OUT OTYFILCTL,E
+  ExtendControl "FilesLabel",GetLabelControl() OUT OTYFILLBLCTL,E
   E=SetControlNotifHandler(OTYFILCTL,"OTYFILNOTIF")
   NewControl "ICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
+  E=SetControlLMouseDownHandler(OTYFILICONCTL,"OTYFILICONCTLMouse")
+  E=SetControlLMouseDownHandler(OTYFILLBLCTL,"OTYFILICONCTLMouse")
   RC_OTYFIL
   ExtendControl "FilesAbout",GetWindowControl() OUT OTYFILABOUTCTL,E
   E=SetControlNotifHandler(OTYFILABOUTCTL,"OTYFILABOUTNOTIF")
@@ -4368,13 +4448,16 @@
  VAR C=CEIL(H/40.0)+1
  VAR L=R*C
  IF LEN(OTYFILES$)<=L THEN L=LEN(OTYFILES$)-1
+ VAR ICN
  FOR I=0TO L'LEN(OTYFILES$)-1
   IF X+32+4>W THEN INC Y,40:X=8
 '  IF Y+16>=H THEN BREAK
-  NewWindow GetLabelControl(),RIGHT$(OTYFILES$[I],LEN(OTYFILES$[I])-1),X-8,Y+16,32,24,WND,0 OUT LBL,E
+  NewWindow OTYFILLBLCTL,RIGHT$(OTYFILES$[I],LEN(OTYFILES$[I])-1),X-8,Y+16,32,24,WND,0 OUT LBL,E
   SetLabelAlignCenter LBL
-  NewWindow OTYFILICONCTL,"",X,Y,15,15,WND,0 OUT LBL,E
-  IF OTYFILES$[I][0]==" "THEN SetWindowVar LBL,1,1
+  SetWindowVar LBL,2,LBL
+  NewWindow OTYFILICONCTL,"",X,Y,15,15,WND,0 OUT ICN,E
+  IF OTYFILES$[I][0]==" "THEN SetWindowVar ICN,1,1
+  SetWindowVar ICN,2,LBL
   INC X,32+4
  NEXT
  VAR SCR
@@ -4503,6 +4586,8 @@
  FOR I=0TO 15
   READ PAL[I]
  NEXT
+ RETURN
+ '3.0.X
  OTW_FNT=NewArray2(1024,64)
  OTW_FNTTMP=NewArray(64)
  OTW_FNTPAL=NewArray(2)
@@ -4633,3 +4718,34 @@
 
 DATA -1
 END
+VAR TRIANCTL
+COMMON DEF DrawSquare WND,X1,Y1,X2,Y2,X3,Y3,X4,Y4,COL
+ GTRIWindow WND,X2,Y2,X1,Y1,X4,Y4,COL'RGB(0,255,0)'COL
+ GTRIWindow WND,X1,Y1,X4,Y4,X3,Y3,COL
+END
+COMMON DEF TRIANPAINT WND,CTL,TYP,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
+ E=GBeginWindow(WND)
+' DrawSquare WND,32,0,                                         0,63,                                         63,0,                                         32,63,-1
+' DrawSquare WND,8,8,                                         0,63,                                         32,16,                                         32,63,-1
+ DrawSquare WND,8,8,0,63,32,16,32,63,0
+ E=GEndWindow(WND)
+END
+COMMON DEF I_TRIAN
+IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!TRIANCTL THEN
+  ExtendControl "TRIAN",GetWindowControl() OUT TRIANCTL,E
+  E=SetControlPainter(TRIANCTL,"TRIANPAINT")
+ ENDIF
+ NewTopLevelWindow TRIANCTL,"TRIAN",64,64 OUT WND,E
+ SetProcessVar WND
+END
+COMMON DEF L_TRIAN
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
diff -u OTW.TXT OTW1D
--- OTW.TXT
+++ OTW1D
@@ -4,7 +4,7 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
-VAR OTW_INIT,OTW_MOUSESP,OTW_MOVWINSP,OTW_MOVWINCOL
+VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
@@ -56,6 +56,7 @@
 DIM WIN_GPREV  [0]
 DIM WIN_GPARENT[0]
 DIM WIN_STYLE  [0]
+DIM WIN_BACKGND[0]
 DIM WIN_IMAGE  [0]
 'QUEUE
 DIM WIN_MSGS   [0]
@@ -99,9 +100,17 @@
 VAR WIN_STYLE_RESIZ
 VAR WIN_STYLE_TRANS
 VAR WIN_ACTIVENUWID
+'DOUBLE CLICK
+'まえ CLICK した WINDOW
+VAR OTW_LCLKWND
+'そのFRAME
+VAR OTW_LCLKF
+'なんFRAMEまで DOUBLE CLICKか
+VAR OTW_DBLCLKF
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
+ OTW_DBLCLKF=30
  WIN_STYLE_MODAL=1
  WIN_STYLE_RESIZ=2
  WIN_STYLE_TRANS=4
@@ -156,6 +165,7 @@
  WIN_GPARENT   =NewArray(WIN_MAX)
  WIN_STYLE     =NewArray(WIN_MAX)
  WIN_IMAGE     =NewArray(WIN_MAX)
+ WIN_BACKGND   =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -164,6 +174,7 @@
  OTW_INITLIST WIN_NEXT
  OTW_MENU_INITARRAY
  OTW_IMAGE_INITARRAY
+ WIN_WID[0]=&Hdeadbeef
 END
 DIM IMAGE_PTR[0]
 DIM IMAGE_HEIGHT[0]
@@ -286,10 +297,14 @@
 VAR CTL_FRMMOUSEMVHANDLER
 VAR CTL_CREATEHANDLER
 VAR CTL_STRNOTIFHANDLER
+VAR CTL_DELETEHANDLER
+VAR CTL_LDBLCLKHANDLER
+VAR CTL_MSLEAVEHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
 VAR CTL_BTNUPFLG
+VAR CTL_LEAVEFLG
 VAR CTL_WINDOWCTL
 VAR CTL_BUTTONCTL
 VAR CTL_TGLBTNCTL
@@ -305,7 +320,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=16
+ CTL_HANDLER_MAX=17
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -341,11 +356,15 @@
  CTL_FRMMOUSEMVHANDLER=11
  CTL_CREATEHANDLER=12
  CTL_STRNOTIFHANDLER=13
+ CTL_DELETEHANDLER=14
+ CTL_LDBLCLKHANDLER=15
+ CTL_MSLEAVEHANDLER=16
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
  CTL_BTNDWNFLG=1
  CTL_BTNUPFLG=2
+ CTL_LEAVEFLG=64
 ' CTL_DRWFRMHANDLER=3
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
@@ -382,6 +401,7 @@
  OTW_CTL_LIST
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
+ CTL_CID[0]=&Hdeadbeef
 END
 DIM LISTSTR$[0]
 DIM LISTSTRNEXT[0]
@@ -403,6 +423,8 @@
  E=SetControlCreateHandler(CTL_LSTBOXCTL,"ListBoxCreate")
  E=SetControlNotifHandler(CTL_LSTBOXCTL,"ListBoxNotif")
  E=SetControlLMouseDownHandler(CTL_LSTBOXCTL,"ListBoxLMD")
+ E=SetControlLDoubleClickHandler(CTL_LSTBOXCTL,"ListBoxLMD")
+ E=SetControlDeleteHandler(CTL_LSTBOXCTL,"ListBoxDelete")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -581,6 +603,21 @@
  CTL_HANDLER$[CTL AND 4095,CTL_STRNOTIFHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlDeleteHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_DELETEHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlLDoubleClickHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_LDBLCLKHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlMouseLeaveHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_MSLEAVEHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -593,6 +630,29 @@
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
+'Clipboard API
+'ClearClipboard<-じゅうよう
+'                Setしただけでは ほかの しゅるいの データが のこる
+'->ClipboardSetText
+VAR CLPBRD
+VAR CLPBRDCTXT
+VAR CLPBRD$
+VAR CLPBRD#
+VAR CLPBRDPTR
+COMMON DEF ClearClipboard
+ CLPBRDCTXT=FALSE
+END
+COMMON DEF ClipboardContainsText()
+ RETURN CLPBRDCTXT
+END
+COMMON DEF ClipboardGetText()
+ IF CLPBRDCTXT THEN RETURN CLPBRD$
+ RETURN ""
+END
+COMMON DEF ClipboardSetText V$
+ CLPBRDCTXT=1
+ CLPBRD$=V$
+END
 COMMON DEF NewImage WIDTH,HEIGHT OUT IMG,E
  IF !IMAGE_FREE THEN IMG=0:E=IMAGE_NOALLOC:RETURN
  VAR PTR=malloc(WIDTH*HEIGHT)
@@ -629,9 +689,11 @@
  MENU=MENU_FREE OR MENU_IDCNT<<12
  MENU_FREE=MENU_NEXT[MENU_FREE]
 END
-COMMON DEF SetMenuBar WND,MENU
+COMMON DEF SetMenuBar MENU,WND
+ NOIMPL FORMAT$("NOIMPL SetMenuBar %D,%D",MENU,WND)
 END
 COMMON DEF ShowMenu MENU,WND
+ NOIMPL FORMAT$("NOIMPL ShowMenu %D,%D",MENU,WND)
 END
 DEF ShowMenu_ MENU,WND,X,Y
  VAR W=WND AND NUWIDMASK
@@ -779,8 +841,9 @@
  RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
 END
 VAR WIN_ROOTWND
+VAR WIN_ROOTWND2
 COMMON DEF GetRootWND()
- RETURN WIN_ROOTWND
+ RETURN WIN_ROOTWND2
 END
 COMMON DEF CheckWindow(WND)
  RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
@@ -800,6 +863,13 @@
   CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,0,0
  ENDIF
 END
+DEF WindowOnDelete NUWID
+ VAR CTL=WIN_CTL[NUWID]
+ VAR NUCID=CTL AND 4095
+ IF LEN(CTL_HANDLER$[NUCID,CTL_DELETEHANDLER])THEN
+  CALL CTL_HANDLER$[NUCID,CTL_DELETEHANDLER],NUWIDToWND(NUWID),CTL,CTL_DELETEHANDLER,0,0
+ ENDIF
+END
 COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -861,7 +931,7 @@
      N=WIN_NEXT[N]
     WEND
    ELSE
-    WIN_CHILD[PNUWID]=N
+    WIN_CHILD[PNUWID]=NUWID
    ENDIF
    OTW_DrawMap NUWID
   ELSE
@@ -897,9 +967,19 @@
  IF PARENT==WIN_ROOTWND THEN
   SPAllocWindow WND
  ENDIF
+ WIN_BACKGND[NUWID]=RGB(224,224,224)
  WindowOnCreate WND,CTL
  VOID ActiveWindow(WND)
 END
+COMMON DEF SetWindowBackColor WND,RGB
+ IF!CheckWindow(WND)THEN RETURN
+ WIN_BACKGND[WND AND NUWIDMASK]=RGB
+ VOID RepaintWindow(WND)
+END
+COMMON DEF GetWindowBackColor(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ RETURN WIN_BACKGND[WND AND NUWIDMASK]
+END
 DEF SPAllocWindow WND
  INC OTW_TOPLEVELCNT
  VAR SP=2,NUWID=WND AND NUWIDMASK
@@ -927,6 +1007,19 @@
 COMMON DEF WindowTransStyle()
  RETURN 4
 END
+VAR WIN_TopLevelX2
+DEF IncTopLevelPos NUCID
+ INC WIN_TopLevelX,CTL_FH1[NUCID]-1
+ INC WIN_TopLevelY,CTL_FH1[NUCID]-1
+ IF WIN_TopLevelY>=240THEN
+  WIN_TopLevelY=0
+  INC WIN_TopLevelX2,CTL_FH1[NUCID]-1
+  IF WIN_TopLevelX2>=400THEN
+   WIN_TopLevelX2=0
+  ENDIF
+  WIN_TopLevelX=WIN_TopLevelX2
+ ENDIF
+END
 COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -940,7 +1033,13 @@
  IF STYLE AND 1THEN
   INC CTL_FH1[NUCID],10
  ENDIF
- NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,ERR
+ IF STYLE AND 2THEN
+  INC CTL_FH1[NUCID],1
+  INC CTL_FW1[NUCID],1
+  INC CTL_FH2[NUCID],1
+  INC CTL_FW2[NUCID],1
+ ENDIF
+ NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag() OUT WND,ERR
  CTL_FH1[NUCID]=_H
  IF ERR THEN RETURN
  VAR NUWID=WND AND NUWIDMASK,SP
@@ -952,6 +1051,9 @@
  'RESIZABLE
  IF STYLE AND 2THEN
   WIN_STYLE[NUWID]=WIN_STYLE_RESIZ
+  DEC CTL_FW1[NUCID],1
+  DEC CTL_FH2[NUCID],1
+  DEC CTL_FW2[NUCID],1
  ENDIF
  'TRANS
  IF STYLE AND 4THEN
@@ -959,10 +1061,13 @@
   NOIMPL "TRANS
   NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
  ENDIF
- INC WIN_TopLevelX,CTL_FH1[NUCID]-1
- INC WIN_TopLevelY,CTL_FH1[NUCID]-1
+ IncTopLevelPos NUCID
 END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+ IF WIN_ROOTWND THEN
+  NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,0 OUT WND,ERR
+  RETURN
+ ENDIF
  IF!CheckControl(CTL)THEN
   WND=0
   ERR=CTL_INVALIDID
@@ -1011,10 +1116,11 @@
 ' SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
 ' SPSHOW SP
 ' SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],1023
+  WIN_ROOTWND2=WND
   RETURN
  ENDIF
  
- VAR ROOTNUWID=WIN_ROOTWND AND NUWIDMASK
+ VAR ROOTNUWID=WIN_ROOTWND2 AND NUWIDMASK
  VAR C=WIN_CHILD[ROOTNUWID],N
  WIN_PARENT[NUWID]=ROOTNUWID
  IF!C THEN
@@ -1037,8 +1143,7 @@
  WIN_AY[NUWID]=WIN_TOPLEVELY
  WIN_X[NUWID]=WIN_TopLevelX
  WIN_Y[NUWID]=WIN_TOPLEVELY
- INC WIN_TopLevelX,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
- INC WIN_TopLevelY,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
+IncTopLevelPos NUCID
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -1075,7 +1180,7 @@
  VAR WND,E
  IF AX<0THEN AX=0
  IF AY<0THEN AY=0
- NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,E
+ NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag() OUT WND,E
  IF FLAG THEN
   WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
  ENDIF
@@ -1099,6 +1204,7 @@
 END
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
+ WindowOnDelete NUWID
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
  WIN_STYLE[NUWID]=0
  WIN_MENU[NUWID]=0
@@ -1163,6 +1269,7 @@
   IF WIN_GROUP[NUWID]THEN 
    NOIMPL "DeleteWindow - Group"
   ENDIF
+  
  ENDIF
  RETURN 0
 END
@@ -1280,89 +1387,46 @@
 END
 COMMON DEF OTW_CLIPWindow NUWID
  VAR PNUWID=WIN_PARENT[NUWID]
- IF WIN_RFX[PNUWID]>WIN_RX[NUWID]THEN
-  WIN_RX[NUWID]=WIN_RFX[PNUWID]
-  IF WIN_RFX[PNUWID]>WIN_RFX[NUWID]THEN
-   WIN_RFX[NUWID]=WIN_RFX[PNUWID]
-  ENDIF
- ENDIF
- IF WIN_RFY[PNUWID]>WIN_RY[NUWID]THEN
-  WIN_RY[NUWID]=WIN_RFY[PNUWID]
-  IF WIN_RFY[PNUWID]>WIN_RFY[NUWID]THEN
-   WIN_RFY[NUWID]=WIN_RFY[PNUWID]
-  ENDIF
- ENDIF
- VAR E1=WIN_AX[NUWID]+WIN_WIDTH[NUWID]
- VAR E2=WIN_RX[PNUWID]+WIN_AW[PNUWID]
- 'CLIP FRAME
- IF WIN_WIDTH[PNUWID]==WIN_AW[PNUWID]THEN
-  DEC E2,WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
- ENDIF
  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
- IF E1>E2 THEN
-  DEC WIN_AW[NUWID],E1-E2
- ENDIF
- IF WIN_AX[NUWID]<WIN_RFX[PNUWID]THEN
-  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
-  DEC WIN_AW[NUWID],WIN_RFX[PNUWID]-WIN_AX[NUWID]'-WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
- ENDIF
- E1=WIN_RY[NUWID]+WIN_HEIGHT[NUWID]
- E2=WIN_RY[PNUWID]+WIN_AH[PNUWID]
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
-
- 'CLIP FRAME
- IF WIN_HEIGHT[PNUWID]==WIN_AH[PNUWID]THEN
-  DEC E2,WIN_FH2[PNUWID]-WIN_FH1[PNUWID]
+ WIN_AFW[NUWID]=WIN_WIDTH[NUWID]-WIN_FW2[NUWID]
+ WIN_AFH[NUWID]=WIN_HEIGHT[NUWID]-WIN_FH2[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ 'ひだり はみで の しょり
+ IF WIN_RX[NUWID]<WIN_RFX[PNUWID]THEN
+  DEC WIN_AW[NUWID],WIN_RFX[PNUWID]-WIN_RX[NUWID]
+  WIN_RX[NUWID]=WIN_RFX[PNUWID]
  ENDIF
- IF E1>E2 THEN
-  DEC WIN_AH[NUWID],E1-E2
+ IF WIN_RFX[NUWID]<WIN_RFX[PNUWID]THEN
+  DEC WIN_AFW[NUWID],WIN_RFX[PNUWID]-WIN_RFX[NUWID]
+  WIN_RFX[NUWID]=WIN_RFX[PNUWID]
  ENDIF
- IF WIN_AY[NUWID]<WIN_RFY[PNUWID]THEN
-  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
-  DEC WIN_AH[NUWID],WIN_RFY[PNUWID]-WIN_AY[NUWID]'WIN_FH1[NUWID]
+ IF WIN_RY[NUWID]<WIN_RFY[PNUWID]THEN
+  DEC WIN_AH[NUWID],WIN_RFY[PNUWID]-WIN_RY[NUWID]
+  WIN_RY[NUWID]=WIN_RFY[PNUWID]
  ENDIF
-
- VAR W=WIN_AW[NUWID]
- VAR H=WIN_AH[NUWID]
- IF W==WIN_WIDTH[NUWID]THEN
-  DEC W,WIN_FW2[NUWID]
- ELSE
-  DEC W,WIN_FW2[NUWID]-WIN_FW1[NUWID]
+ IF WIN_RFY[NUWID]<WIN_RFY[PNUWID]THEN
+  DEC WIN_AFH[NUWID],WIN_RFY[PNUWID]-WIN_RFY[NUWID]
+  WIN_RFY[NUWID]=WIN_RFY[PNUWID]
  ENDIF
- IF H==WIN_HEIGHT[NUWID]THEN
-  DEC H,WIN_FH2[NUWID]
- ELSE
-  IF WIN_HEIGHT[NUWID]-H>=WIN_FH1[NUWID]THEN
-   IF WIN_Y[NUWID]<0THEN
-    DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
-   ELSE
-    DEC H,WIN_FH1[NUWID]'WIN_FH2[NUWID]-WIN_FH1[NUWID]
-   ENDIF
-
-'   IF WIN_RFY[NUWID]==WIN_RY[NUWID]THEN
-'    DEC H,WIN_FH1[NUWID]
-'   ELSE
-'    DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
-'   ENDIF
-  ELSE
-   DEC H,WIN_FH1[NUWID]-(WIN_HEIGHT[NUWID]-H)+WIN_FH2[NUWID]-WIN_FH1[NUWID]
-  ENDIF
+ 'みぎ はみで の しょり
+ IF WIN_RFX[NUWID]+WIN_AFW[NUWID]>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
+  DEC WIN_AFW[NUWID],(WIN_RFX[NUWID]+WIN_AFW[NUWID])-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
  ENDIF
- IF WIN_RFX[NUWID]+W>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
-  DEC W,(WIN_RFX[NUWID]+W)-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
- ENDIF
  IF WIN_RX[NUWID]+WIN_AW[NUWID]>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
   DEC WIN_AW[NUWID],(WIN_RX[NUWID]+WIN_AW[NUWID])-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
  ENDIF
 
- IF WIN_RFY[NUWID]+H>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
-  DEC H,(WIN_RFY[NUWID]+H)-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
+ IF WIN_RFY[NUWID]+WIN_AFH[NUWID]>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
+  DEC WIN_AFH[NUWID],(WIN_RFY[NUWID]+WIN_AFH[NUWID])-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
  ENDIF
  IF WIN_RY[NUWID]+WIN_AH[NUWID]>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
   DEC WIN_AH[NUWID],(WIN_RY[NUWID]+WIN_AH[NUWID])-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
  ENDIF
- WIN_AFW[NUWID]=W
- WIN_AFH[NUWID]=H
+
  WIN_HIDE[NUWID]=0
  IF WIN_AH[NUWID]<0THEN
   WIN_HIDE[NUWID]=1
@@ -1628,6 +1692,10 @@
 DEF MouseMoveWindow(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_MOUSEMVHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF MouseLeaveWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_MSLEAVEHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
 DEF LMouseUpWindow(WND)
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
@@ -1636,6 +1704,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF LDoubleClickWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,,JoinInt(OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID]))
+END
 DEF MouseMoveWindowOnFrame(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
@@ -1647,6 +1719,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
+DEF MouseLeaveWindowOnFrame(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMMOUSEMVHANDLER,CTL_LEAVEFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
@@ -2114,32 +2190,38 @@
 DEF WindowPainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
- GCLSWindow WND,RGB(224,224,224)
- GFILLWindow WND,0,-GetWindowFrameHeight(WND)+1,GetWindowFrameWidth(WND)-2,-1,RGB(0,0,255)
- GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+2,GetWindowName$(WND),15
+ VAR NUWID=WND AND NUWIDMASK
+ VAR NUCID=WIN_CTL[NUWID] AND 4095
+ VAR FW=WIN_FW1[NUWID]
+ VAR FH=WIN_FH1[NUWID]
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
+ VAR H2=WIN_HEIGHT[NUWID]-H
+ VAR SH=FH-CTL_FH1[NUCID]
+ VAR SW=WIN_FW2[NUWID]-CTL_FW1[NUCID]-CTL_FW2[NUCID]
+ IF WIN_MENU[NUWID]THEN DEC SH,10'TODO:MENU_HEIGHT
  VAR C=RGB(224,224,224)
+ DEC H,SH
+ DEC W,SW
+ GCLSWindow WND,RGB(224,224,224)
+ GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
+ GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
  GLINEWindow WND,-1,-1,W-2,-1,RGB(0,0,0)
-'GLINEWindow WND,W-08-1,-H+3,W-2-1,-3,C
-'GLINEWindow WND,W-7-1,-H+3,W-1-1,-3,C
-'GLINEWindow WND,W-2-1,-H+3,W-8-1,-3,C
-'GLINEWindow WND,W-1-1,-H+3,W-7-1,-3,C
  GLINEWindow WND,W-08-1,-H+3,W-2-1,-H+9,C
  GLINEWindow WND,W-7-1,-H+3,W-1-1,-H+9,C
  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
-'GLINEWindow WND,-1,-H,W-1,-H,RGB(224,224,224)
- VAR NUWID=WND AND NUWIDMASK
- VAR H2=WIN_HEIGHT[NUWID]-H
-'GLINEWindow WND,-1,-H,-1,H2-1,RGB(224,224,224)
-'GLINEWindow WND,W-1,-H,W-1,H2,RGB(0,0,0)
-'GLINEWindow WND,-1,H2,W-1,H2,RGB(0,0,0)
-'?W
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
-' ?GetWindowName$(WND),W,W-1+2
-
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+  INC H,SH
+  GLINEWindow WND,-1,-H+1,W-2,-H+1,-1
+  GLINEWindow WND,-1,-H+1,-1,H2-2,-1
+  GLINEWindow WND,W-1,-H+1,W-1,H2-1,RGB(128,128,128)
+  GLINEWindow WND,W,-H,W,H2,RGB(0,0,0)
+  GLINEWindow WND,W-2,H2-1,-1,H2-1,RGB(128,128,128)
+  GLINEWindow WND,W,H2,-2,H2,RGB(0,0,0)
+ ENDIF
  IF WIN_MENU[NUWID]THEN
   GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
   GFILLWindow WND,0,-10,W-2,-2,RGB(224,224,224)
@@ -2153,7 +2235,6 @@
   WEND
  ENDIF
  E=ReGBeginWindow(WND)
-' E=GEndWindow(WND)
 END
 DEF WindowChFocus WND,CTL,TYPE,A1,A2
  IF A1 THEN
@@ -2215,9 +2296,55 @@
  ENDIF
 END
 DEF WindowMMoveFrame WND,CTL,TYPE,ET,XY
+ IF ET AND CTL_LEAVEFLG THEN 
+  OTW_INITSP 0
+  RETURN
+ ENDIF
  VAR X,Y
  SplitInt XY OUT X,Y
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+  '
+  '
+  '
+  '  
+  '   
+  IF Y<4&&X<4THEN
+   OTW_INITSP 3
+   RETURN
+  ENDIF
+  VAR EX=WIN_WIDTH[NUWID]-X
+  VAR EY=WIN_HEIGHT[NUWID]-Y
+  IF EX<4&&Y<4THEN 
+   OTW_INITSP 4
+   RETURN
+  ENDIF
+  IF EY<4&&X<4THEN
+   OTW_INITSP 4
+   RETURN
+  ENDIF
+  IF EX<4&&EX<4THEN
+   OTW_INITSP 3
+   RETURN
+  ENDIF
+  IF EY<2THEN
+   OTW_INITSP 1
+   RETURN
+  ENDIF
+  IF EX<2THEN
+   OTW_INITSP 2
+   RETURN
+  ENDIF
+  IF Y<2THEN
+   OTW_INITSP 1
+   RETURN
+  ENDIF
+  IF X<2THEN
+   OTW_INITSP 2
+   RETURN
+  ENDIF
+  OTW_INITSP 0
+ ENDIF
  IF!IsActiveWindow(WND)THEN RETURN
  IF!WIN_MENU[NUWID]THEN RETURN
  VAR C=WIN_MENU[NUWID]AND 4095
@@ -2395,7 +2522,7 @@
  VAR HE=GetWindowHeight(W)
  VAR WI=GetWindowWidth(W)
  VAR A=GetWindowVar(W,1)
- GCLSWindow W,RGB(224,224,224)
+ GCLSWindow W,GetWindowBackColor(W)
  VAR X,Y,C,I,L=LEN(NA$),HB=WI/8
  IF!HB THEN RETURN
  IF L<HB THEN
@@ -2480,6 +2607,15 @@
   VOID GEndWindow(WND)
  ENDIF
 END
+DEF ListBoxDelete WND,CT,T,A1,A2
+ VAR L=GetWindowVar(WND,1)
+ IF!L THEN RETURN
+ WHILE LISTSTRNEXT[L]
+  L=LISTSTRNEXT[L]
+ WEND
+ LISTSTRNEXT[L]=LISTSTR_FREE
+ LISTSTR_FREE=GetWindowVar(WND,1)
+END
 DEF ListBoxNotif WND,CT,T,A1,POS
  VAR OP=GetWindowVar(WND,5)
  IF OP==POS THEN RETURN
@@ -2646,24 +2782,133 @@
  ENDIF
 END
 VAR OTW_MOUSESIZE
-DEF OTW_INITSP
+VAR OTW_MOUSE_HOMEX
+VAR OTW_MOUSE_HOMEY
+'ざんてい じっそう
+DEF OTW_INITSP NUM
+ GCLIP 1
  GPSET 408,0,-1
  SPDEF 0,408,0,1,1,1
  VAR FORE=RGB(0,0,0)
  VAR BACK=RGB(255,255,255)
  GCOLOR FORE
  VAR SC#=1,B=416
- GFILL B,0,B+10*SC#,18*SC#,0
- GLINE B,0*SC#,B,14*SC#
- GLINE B,0*SC#,B+10*SC#,10*SC#
- GLINE B,14*SC#,B+3*SC#,11*SC#
- GLINE B+6*SC#,16*SC#,B+3*SC#,11*SC#
- GLINE B+10*SC#,10*SC#,B+6*SC#,10*SC#
-'GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
- GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
- GLINE B+6*SC#,16*SC#,B+7*SC#,16*SC#'7,16
- GPAINT B+1*SC#,2*SC#,BACK,FORE
- SPDEF 290,B,0,10*SC#,17*SC#
+ IF !NUM THEN
+  OTW_MOUSE_HOMEX=0
+  OTW_MOUSE_HOMEY=0
+  GFILL B,0,B+10*SC#,18*SC#,0
+  GLINE B,0*SC#,B,14*SC#
+  GLINE B,0*SC#,B+10*SC#,10*SC#
+  GLINE B,14*SC#,B+3*SC#,11*SC#
+  GLINE B+6*SC#,16*SC#,B+3*SC#,11*SC#
+  GLINE B+10*SC#,10*SC#,B+6*SC#,10*SC#
+  'GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
+  GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
+  GLINE B+6*SC#,16*SC#,B+7*SC#,16*SC#'7,16
+  GPAINT B+1*SC#,2*SC#,BACK,FORE
+  SPDEF 290,B,0,10*SC#,17*SC#
+ ELSE
+  VAR SWPF=0,RVSF=0
+  VAR X=0,Y,D$
+  RESTORE "@"+STR$(NUM)
+  VAR W
+  WHILE 1
+   READ D$
+   IF!Y THEN
+    IF ASC(D$[0])>70THEN
+     IF D$[0]=="S"THEN SWPF=1
+     IF D$[0]=="R"THEN RVSF=1
+     READ NUM
+     RESTORE "@"+STR$(NUM)
+     CONTINUE
+    ENDIF
+    READ OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+   ENDIF
+   VAR L=LEN(D$)-1,I,X2
+   IF L==-1THEN BREAK
+   FOR I=0TO L
+    X2=I
+    IF RVSF THEN X2=L-I
+    VAR C=ASC(D$[I])-48
+    IF C<0THEN C=0
+    IF C>9THEN DEC C,7'HEX
+    IF C>9THEN IF W<X2+1 THEN W=X2+1
+    IF SWPF THEN
+     GPSET B+Y,X+X2,OTW_CONSOLEPAL[C]
+    ELSE
+     GPSET B+X+X2,Y,OTW_CONSOLEPAL[C]
+    ENDIF
+   NEXT
+   INC Y
+  WEND
+  IF SWPF THEN
+   SWAP W,Y
+   SWAP OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+  ENDIF
+  IF RVSF THEN
+   OTW_MOUSE_HOMEX=(W-1)-OTW_MOUSE_HOMEX
+  ENDIF
+  SPDEF 290,B,0,W*SC#,Y*SC#
+ ENDIF
+ GCLIP 1,0,0,400,239
+ SPCHR OTW_MOUSESP,290
+ SPVAR 0,0,1
+ SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
+ SPHOME OTW_MOUSESP,OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+ SPCOL 0,0,0,1,1
+ SPCHR OTW_SHADOWSP,290
+ SPLINK OTW_SHADOWSP,OTW_MOUSESP
+ SPOFS OTW_SHADOWSP,-2,2,-00
+ SPCOLOR OTW_SHADOWSP,RGB(128,0,0,0)
+ SPVAR OTW_SHADOWSP,0,1
+ SPHOME OTW_SHADOWSP,OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+ 'NORMAL CURSOR
+ @1
+ DATA "    F    
+ DATA 4,10
+ DATA "   F1F   
+ DATA "  F111F  
+ DATA " F11111F 
+ DATA "F1111111F
+ DATA "FFFF1FFFF
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "FFFF1FFFF
+ DATA "F1111111F
+ DATA " F11111F 
+ DATA "  F111F  
+ DATA "   F1F   
+ DATA "    F    
+ DATA ""
+ @2
+ DATA "S",1
+ @3
+ DATA "FFFFFFF         
+ DATA 7,7
+ DATA "F11111F         
+ DATA "F1111F          
+ DATA "F111F           
+ DATA "F11F1F          
+ DATA "F1F F1F         
+ DATA "FF   F1F        
+ DATA "      F1F       
+ DATA "       F1F   FF 
+ DATA "        F1F F1F 
+ DATA "         F1F11F 
+ DATA "          F111F 
+ DATA "         F1111F 
+ DATA "        F11111F 
+ DATA "        FFFFFFF 
+ DATA "
+ @4
+ DATA "R",3'REVERSE 3
 END
 VAR WIN_ROOTCTL
 VAR TSTWND,TSTCTL
@@ -2749,7 +2994,6 @@
  ' GCLS RGB(0,192,128)
 ' GCLS RGB(0,0,255)
 'GCLS 
-  OTW_INITSP
   GPRIO 1023
   GOTO @_
   XSCREEN 2,512,2
@@ -2814,17 +3058,10 @@
   OTW_RMOUSEUP =8
   
   '290
-  SPSET OTW_MOUSESP,290
-  SPVAR 0,0,1
-  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
-  SPHOME OTW_MOUSESP,0,0
-  SPCOL 0,0,0,1,1
-  OTW_MOVWINSP=1
-  SPSET OTW_MOVWINSP,290
-  SPLINK OTW_MOVWINSP,OTW_MOUSESP
-  SPOFS OTW_MOVWINSP,-2,2,-00
-  SPCOLOR OTW_MOVWINSP,RGB(128,0,0,0)
-  SPVAR OTW_MOVWINSP,0,1
+  SPSET OTW_MOUSESP,0
+  OTW_SHADOWSP=1
+  SPSET OTW_SHADOWSP,0
+  OTW_INITSP 0
   OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
@@ -2862,6 +3099,7 @@
 VAR OTW_FDIFF
 VAR OTW_OLDBTN
 VAR OTW_OLDBTNF
+VAR OLDMOVEMOUSEWINDOW
 COMMON DEF L_OTW
  VAR MOVEMOUSE
  UpdateMouse
@@ -2870,12 +3108,13 @@
  VAR NUWID,E
  VAR BTN=UpdateButton()
  IF MOVEMOUSE||BTN THEN
-  IF WIN_DRAGHANDLER_USE THEN
-   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
-ENDIF
+'  IF WIN_DRAGHANDLER_USE THEN
+'   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+'ENDIF
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
  IF BTN THEN
+  'LEFT MOUSE DOWN
   IF BTN AND OTW_LMOUSEDWN THEN
    VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
@@ -2883,6 +3122,25 @@
     E=SendChFocusWindow(NUWIDToWND(OA),FALSE)
     E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE)
    ENDIF
+   VAR F=MAINCNT
+   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF THEN
+    BEEP
+    OTW_LCLKWND=0
+    IF NUWID AND WIN_FRAMEFLG THEN
+     'TODO:Double Click
+     
+     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+     WIN_ACTIVENUWID=NUWID AND 32767
+    ELSE
+     IF LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,CTL_LDBLCLKHANDLER])THEN
+?"A
+     ELSE
+      E=LMouseDownWindow(NUWIDToWND(NUWID))
+     ENDIF
+    ENDIF
+   ELSE
+    OTW_LCLKWND=NUWID
+    OTW_LCLKF=F
    IF NUWID AND WIN_FRAMEFLG THEN
     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
     
@@ -2890,6 +3148,7 @@
    ELSE
     E=LMouseDownWindow(NUWIDToWND(NUWID))
    ENDIF
+   ENDIF
   ENDIF
   IF BTN AND OTW_LMOUSEUP THEN
    IF WIN_DRAGHANDLER_USE THEN
@@ -2906,11 +3165,19 @@
   ENDIF
  ENDIF
  IF MOVEMOUSE THEN
+  IF OLDMOVEMOUSEWINDOW!=NUWID THEN
+   IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
+    E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
+   ELSE
+    E=MouseLeaveWindowOnFrame(NUWIDToWND(OLDMOVEMOUSEWINDOW AND 32767))
+   ENDIF
+  ENDIF
   IF!(NUWID AND WIN_FRAMEFLG)THEN
    E=MouseMoveWindow(NUWID)
   ELSE
    E=MouseMoveWindowOnFrame(NUWID AND 32767)
   ENDIF
+  OLDMOVEMOUSEWINDOW=NUWID
  ENDIF
 ' IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
@@ -3357,6 +3624,11 @@
 DIM TXTBOXEX_LINE[0]
 DIM TXTBOXEX_NEXT[0]
 DIM TXTBOXEX_PREV[0]
+
+VAR TXTBOXEX_MAXCTL
+VAR TXTBOXEX_CFREE
+DIM TXTBOXEX_CLINE[0]
+DIM TXTBOXEX_CNEXT[0]
 COMMON DEF GetTextBoxExControl()
  RETURN TXTBOXEXCTL
 END
@@ -3385,12 +3657,22 @@
   TXTBOXEX_NEXT=NewArray(TXTBOXEX_LINESIZ)
   TXTBOXEX_PREV=NewArray(TXTBOXEX_LINESIZ)
   TXTBOXEX_FREE=1
+  TXTBOXEX_MAXCTL=100'1024
+  TXTBOXEX_CNEXT=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CLINE=NewArray(TXTBOXEX_MAXCTL)
   VAR I
   FOR I=1TO TXTBOXEX_LINESIZ-2
    TXTBOXEX_NEXT[I]=I+1
   NEXT
  ENDIF
 END
+DEF TXTED_NewCTL(WND)
+ VAR R=TXTBOXEX_CFREE
+ IF!R THEN RETURN 0
+ TXTBOXEX_CFREE=TXTBOXEX_CNEXT[TXTBOXEX_CFREE]
+ TXTBOXEX_CLINE[R]=1
+' SetWindowVar
+END
 DEF TXTED_NewLINE(V$,P)
  VAR R=TXTBOXEX_FREE
  IF!R THEN RETURN 0
@@ -3486,7 +3768,12 @@
 END
 COMMON DEF TextBoxExRepaint WND
  VAR E=GBeginWindow(WND)
- GCLSWindow WND,RGB(255,255,255)
+ VAR SH=GetWindowVar(WND,7)<0
+ IF SH THEN
+  GCLSWindow WND,RGB(0,0,0)
+ ELSE
+  GCLSWindow WND,RGB(255,255,255)
+ ENDIF
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  VAR L=GetWindowVar(WND,1)
@@ -3500,29 +3787,45 @@
   SetWindowVar WND,3,CX
  ENDIF
  VAR TC=RGB(0,0,0)
- VAR Y=1,X=1,PL,LC
+ IF SH THEN TC=-1
+ VAR Y=1,X=32,PL,LC
+ VAR LINE=(GetWindowVar(WND,7)AND 2147483647),_
  WHILE 1
+  INC LINE
   V$=TXTBOXEX_VAL$[L]
-  IF GetWindowVar(WND,7)<0THEN
+  _=(LINE-(LINE DIV 1000000)*1000000) DIV 10000
+  IF LINE>=1000000THEN INC _,&H64
+  IF !_ THEN _=&H6E
+  VAR LS$=CHR$(&HE100+_)
+  _=(LINE-((LINE DIV 10000)*10000))DIV 100
+  IF LINE>=10000&&_<=&H9THEN INC _,&H64
+  IF !_ THEN _=&H6E
+  INC LS$,CHR$(&HE100+_)
+  _=LINE-((LINE DIV 100)*100)
+  IF LINE>=100&&_<=&H9THEN INC _,&H64
+  IF !_ THEN _=&H6E
+  INC LS$,CHR$(&HE100+_)
+  GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
+  IF SH THEN
    TXTED_PRGPRINT WND,X,Y,V$
   ELSE
    GPRINTWindow WND,X,Y,V$,TC
   ENDIF
   PL=L
   IF L==C&&IsActiveWindow(WND)THEN
-   GFILLWindow WND,X+CX*8,Y+7,X+8+CX*8,Y+6,TC
+   GFILLWindow WND,X+CX*8,Y+7,X+7+CX*8,Y+6,TC
   ENDIF
   L=TXTBOXEX_NEXT[L]
   INC Y,8
   IF Y>=H THEN BREAK
   IF!L THEN
    IF!LEN(V$)||V$[LEN(V$)-1]!=L$THEN
-    GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
+'    GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsActiveWindow(WND)THEN
-     GFILLWindow WND,CX*8,Y-1,8+CX*8,Y-2,TC
+     GFILLWindow WND,X+CX*8,Y-1,X+7+CX*8,Y-2,TC
     ENDIF
    ELSE
-    GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
+'    GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsFocusWindow(WND)THEN
   '   GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
     ENDIF
@@ -3764,7 +4067,7 @@
    IF CHKVAR("RTXTED"+I$)THEN
     GPRINTWindow WND,X,Y,I$,RGB(0,198,247)
    ELSE
-    GPRINTWindow WND,X,Y,I$,RGB(0,0,0)
+    GPRINTWindow WND,X,Y,I$,-1'RGB(0,0,0)
    ENDIF
    INC X,LEN(I$)*8
    DEC I
@@ -3775,7 +4078,7 @@
    INC X,8
    FOR I=I+1 TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
+    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
     GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
     INC X,8
     IF A==_Q THEN BREAK
@@ -3787,7 +4090,7 @@
   IF A==_S THEN
    FOR I=I TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
+    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
     GPUTCHRWindow WND,X,Y,A,RGB(33,247,16)
     INC X,8
    NEXT
@@ -3815,7 +4118,7 @@
      FOR I=I+1 TO L
       A=ASC(P$[I])
       IF A>_1&&A<=_9 THEN
-       GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)
+       GPUTCHRWindow WND,X,Y,A,-1'RGB(0,0,0)
        INC X,8
        S=1
        CONTINUE
@@ -3847,8 +4150,8 @@
   IF A>=_0&&A<=_9 THEN
    GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
   ELSE
-   IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
-   GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)
+   IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)',RGB(0,184,255)BREAK
+   GPUTCHRWindow WND,X,Y,A,-1'RGV(0,0,0)
   ENDIF
   INC X,8
  NEXT
@@ -4322,9 +4625,15 @@
 VAR OTYFILLBLCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
- GCLSWindow W,RGB(224,224,224)
- IF GetWindowVar(W,1)THEN
-  IF GetWindowVar(W,1)==2THEN
+ VAR SEL=GetWindowVar(W,3)
+ IF SEL THEN
+  GCLSWindow W,RGB(0,0,255)
+ ELSE
+  GCLSWindow W,RGB(224,224,224)
+ ENDIF
+ VAR TYP=GetWindowVar(W,1)
+ IF TYP THEN
+  IF TYP==2THEN
    GLOADWindow W,0,0,16,16,OTYFILICON,1,0
    RETURN
   ENDIF
@@ -4351,12 +4660,31 @@
  S$="OK"
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
 END
+COMMON DEF OTYFILLMouse WND,CTL,T,A1,A2
+ SetWindowBackColor GetWindowVar(WND,1),RGB(224,224,224)
+ SetWindowVar WND,1,0
+ SetString GetWindowVar(WND,2),""
+END
 COMMON DEF OTYFILICONCTLMouse WND,CTL,T,A1,A2
-?GetWindowName$(GetWindowVar(WND,2))
-BEEP 
+ VAR W=WND
+ IF!LEN(GetWindowName$(WND))THEN
+  W=GetWindowVar(W,2)
+ ENDIF
+ VAR PW=GetParentWindow(WND)
+ VAR OLD=GetWindowVar(PW,1)
+ IF OLD==W THEN RETURN
+ IF OLD THEN
+  SetWindowBackColor OLD,RGB(224,224,224)
+ ENDIF
+ SetWindowBackColor W,RGB(0,0,255)
+ SetWindowVar PW,1,W
+ SetString GetWindowVar(PW,2),GetWindowName$(W)
 END
+COMMON DEF OTYFILDEL WND,CTL,T,A1,A2
+ FreeString GetWindowVar(WND,2)
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
- IF ID<=5THEN
+ IF ID<=6THEN
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -4369,7 +4697,7 @@
  VAR BY1=(POS MOD 40)+7
  VAR BY2=(POS MOD 40)-9
  IF OTYFILESWND!=WND THEN
-  GetFiles OTYFILES$,"SYS"
+  GetFiles OTYFILES$,""
   OTYFILESWND=WND
  ENDIF
 ' ?R,C,POS,POS DIV 16,POS DIV 40,BY1
@@ -4379,14 +4707,27 @@
  VAR F
  VAR K=(POS DIV 40)*R
  VAR KL=LEN(OTYFILES$)
+ VAR N$
+ VAR SW=GetwindowVar(WND,1)
+ VAR SN$=GetString$(GetwindowVar(WND,2))
  WHILE I
-  IF J&&!(J MOD L2) THEN INC Y,40X=0
+  IF J&&!(J MOD L2) THEN INC Y,41X=0
   IF F THEN
    IF KL<=K THEN
     VOID MoveWindow2(I,-256,-256)
    ELSE
     VOID MoveWindow2(I,X,Y-BY2)
-    SetWindowName I,RIGHT$(OTYFILES$[K],LEN(OTYFILES$[K])-1)
+    N$=RIGHT$(OTYFILES$[K],LEN(OTYFILES$[K])-1)
+    IF N$==SN$THEN
+     SetWindowBackColor I,RGB(0,0,255)
+     SetWindowVar WND,1,I
+    ENDIF
+    IF SW==I THEN
+     IF N$!=SN$THEN
+      SetWindowBackColor SW,RGB(224,224,224)
+     ENDIF
+    ENDIF
+    SetWindowName I,N$
    ENDIF
    INC K
    INC X,36
@@ -4419,7 +4760,9 @@
   ExtendControl "Files",GetWindowControl() OUT OTYFILCTL,E
   ExtendControl "FilesLabel",GetLabelControl() OUT OTYFILLBLCTL,E
   E=SetControlNotifHandler(OTYFILCTL,"OTYFILNOTIF")
-  NewControl "ICON" OUT OTYFILICONCTL,E
+  E=SetControlDeleteHandler(OTYFILCTL,"OTYFILDEL")
+  E=SetControlLMouseDownHandler(OTYFILCTL,"OTYFILLMouse")
+  NewControl "OTYFILICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
   E=SetControlLMouseDownHandler(OTYFILICONCTL,"OTYFILICONCTLMouse")
   E=SetControlLMouseDownHandler(OTYFILLBLCTL,"OTYFILICONCTLMouse")
@@ -4429,20 +4772,21 @@
   E=SetControlCreateHandler(OTYFILABOUTCTL,"OTYFILABOUTCREATE")
  ENDIF
  VAR W=36*4+8,H=64,LBL
- NewTopLevelMenuWindow OTYFILCTL,"Files SYS/",W,H OUT WND,E
+ NewTopLevelMenuWindow OTYFILCTL,"Files",W,H OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
- AddMenuItem MENU,"Copy",1
- AddMenuItem MENU,"Move",2
- AddMenuItem MENU,"Delete",3
- AddMenuItem MENU,"Rename",4
+ AddMenuItem MENU,"Open",1
+ AddMenuItem MENU,"Copy",2
+ AddMenuItem MENU,"Move",3
+ AddMenuItem MENU,"Delete",4
+ AddMenuItem MENU,"Rename",5
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  NewMenu OUT MENU,E
- AddMenuItem MENU,"About",5
+ AddMenuItem MENU,"About",6
  AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR X=8,Y,I
  OTYFILES$=NewArray$(0)
- GetFiles OTYFILES$,"SYS"
+ GetFiles OTYFILES$,""
  OTYFILESWND=WND
  VAR R=W/36
  VAR C=CEIL(H/40.0)+1
@@ -4465,6 +4809,8 @@
  VAR AW=FLOOR(LEN(OTYFILES$)/OL)*20
  NewVScrollBAR WND,AW OUT SCR,E
  SetProcessVar WND
+ SetWindowVar WND,2,AllocString("")
+ OTYFILNOTIF WND,0,0,WND,0
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -4728,7 +5074,7 @@
  E=GBeginWindow(WND)
 ' DrawSquare WND,32,0,                                         0,63,                                         63,0,                                         32,63,-1
 ' DrawSquare WND,8,8,                                         0,63,                                         32,16,                                         32,63,-1
- DrawSquare WND,8,8,0,63,32,16,32,63,0
+ DrawSquare WND,8,8,0,63,32,16,32,63,-1
  E=GEndWindow(WND)
 END
 COMMON DEF I_TRIAN
@@ -4748,4 +5094,21 @@
 COMMON DEF L_TRIAN
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR ODSKCTL
+COMMON DEF I_ODSK
+IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!ODSKCTL THEN
+  ExtendControl "ODSK",GetWindowControl() OUT ODSKCTL,E
+ ENDIF
+ NewTopLevelWindow ODSKCTL,"Desktop",256,128 OUT WIN_ROOTWND2,E
+ SetProcessVar WIN_ROOTWND2
+END
+COMMON DEF L_ODSK
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
diff -u OTW.TXT OTW1E
--- OTW.TXT
+++ OTW1E
@@ -4,7 +4,12 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
+VAR WIN_BKGND
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
+VAR OTW_MOVWINNUWID
+'1:MOV
+'2:RESIZE
+VAR OTW_MOVWINFLG
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
@@ -65,6 +70,8 @@
 DIM WIN_MSGCNT [0,0]
 DIM WIN_USER   [0,0]
 DIM WIN_HIDE   [0]
+DIM WIN_MINW   [0]
+DIM WIN_MINH   [0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
 VAR WIN_MSGARGSIZE
@@ -99,6 +106,7 @@
 VAR WIN_STYLE_MODAL
 VAR WIN_STYLE_RESIZ
 VAR WIN_STYLE_TRANS
+VAR WIN_STYLE_HIDE
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -107,13 +115,19 @@
 VAR OTW_LCLKF
 'なんFRAMEまで DOUBLE CLICKか
 VAR OTW_DBLCLKF
+'MOUSEのずれのキョヨウはんい
+VAR OTW_DBLCLKXY
+VAR OTW_DBLCLKX
+VAR OTW_DBLCLKY
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
  OTW_DBLCLKF=30
+ OTW_DBLCLKXY=4'±4
  WIN_STYLE_MODAL=1
  WIN_STYLE_RESIZ=2
  WIN_STYLE_TRANS=4
+ WIN_STYLE_HIDE=8
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -158,6 +172,8 @@
  WIN_BEGIN     =NewArray(WIN_MAX)
  WIN_SP        =NewArray(WIN_MAX)
  WIN_HIDE      =NewArray(WIN_MAX)
+ WIN_MINW      =NewArray(WIN_MAX)
+ WIN_MINH      =NewArray(WIN_MAX)
  WIN_MENU      =NewArray(WIN_MAX)
  WIN_GROUP     =NewArray(WIN_MAX)
  WIN_GNEXT     =NewArray(WIN_MAX)
@@ -300,6 +316,7 @@
 VAR CTL_DELETEHANDLER
 VAR CTL_LDBLCLKHANDLER
 VAR CTL_MSLEAVEHANDLER
+VAR CTL_RESIZEHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -320,7 +337,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=17
+ CTL_HANDLER_MAX=18
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -359,6 +376,7 @@
  CTL_DELETEHANDLER=14
  CTL_LDBLCLKHANDLER=15
  CTL_MSLEAVEHANDLER=16
+ CTL_RESIZEHANDLER=17
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -618,6 +636,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_MSLEAVEHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlResizeHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_RESIZEHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -784,7 +807,7 @@
   ELSE
    IF I==OS THEN
     IF!BEG&&GBeginWindow(WND)THEN :'BREAK
-    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(224,224,224)
+    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,WIN_BKGND
     GPRINTWindow WND,1,Y1,MENU_INAME$[I],&HFF000000
     OS=0
     IF BEG THEN BREAK
@@ -798,7 +821,7 @@
 END
 DEF MenuPainter WND,C,T,XY,WH
  IF GBeginWindow(WND)THEN RETURN
- GCLSWindow WND,RGB(224,224,224)
+ GCLSWindow WND,WIN_BKGND
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  GBOXWindow WND,0,0,W,H,&HFF000000
@@ -857,10 +880,13 @@
 COMMON DEF WindowFrontFlag()
  RETURN 2
 END
-DEF WindowOnCreate WND,CTL
+COMMON DEF WindowHideFlag()
+ RETURN 4
+END
+DEF WindowOnCreate WND,CTL,ARG1,ARG2
  VAR NUCID=CTL AND 4095
  IF LEN(CTL_HANDLER$[NUCID,CTL_CREATEHANDLER])THEN
-  CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,0,0
+  CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,ARG1,ARG2
  ENDIF
 END
 DEF WindowOnDelete NUWID
@@ -870,6 +896,24 @@
   CALL CTL_HANDLER$[NUCID,CTL_DELETEHANDLER],NUWIDToWND(NUWID),CTL,CTL_DELETEHANDLER,0,0
  ENDIF
 END
+COMMON DEF GetWindowMinSize WND OUT W,H
+ IF!CheckWindow(WND)THEN
+  W=-1
+  H=-1
+  RETURN
+ ENDIF
+ VAR NUWID=WND AND NUWIDMASK
+ W=WIN_MINW[NUWID]
+ H=WIN_MINH[NUWID]
+ RETURN
+END
+COMMON DEF SetWindowMinSize WND,W,H
+ IF!CheckWindow(WND)THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_MINW[NUWID]=W
+ WIN_MINH[NUWID]=H
+ RETURN
+END
 COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -917,6 +961,10 @@
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_NEXT[NUWID]=0
  WIN_PARENT[NUWID]=PARENT AND NUWIDMASK
+ WIN_MINW[NUWID]=WIN_FW2[NUWID]
+ WIN_MINH[NUWID]=WIN_FH2[NUWID]
+ WIN_HIDE[NUWID]=FLG AND 4
+ WIN_STYLE[NUWID]=(FLG AND 4)*2
  OTW_CLIPWindow NUWID
  IF PNUWID THEN 
   IF FLG AND WindowFrontFlag()THEN
@@ -967,10 +1015,16 @@
  IF PARENT==WIN_ROOTWND THEN
   SPAllocWindow WND
  ENDIF
- WIN_BACKGND[NUWID]=RGB(224,224,224)
- WindowOnCreate WND,CTL
+ WIN_BACKGND[NUWID]=WIN_BKGND
+ IF (FLG AND 512)!=512THEN
+  WindowOnCreate WND,CTL,0,0
+ ENDIF
  VOID ActiveWindow(WND)
 END
+DEF InitWindow WND,ARG1,ARG2
+ IF!CheckWindow(WND)THEN RETURN
+ WindowOnCreate WND,WIN_CTL[WND AND NUWIDMASK],ARG1,ARG2
+END
 COMMON DEF SetWindowBackColor WND,RGB
  IF!CheckWindow(WND)THEN RETURN
  WIN_BACKGND[WND AND NUWIDMASK]=RGB
@@ -1007,6 +1061,9 @@
 COMMON DEF WindowTransStyle()
  RETURN 4
 END
+COMMON DEF WindowHideStyle()
+ RETURN 8
+END
 VAR WIN_TopLevelX2
 DEF IncTopLevelPos NUCID
  INC WIN_TopLevelX,CTL_FH1[NUCID]-1
@@ -1020,7 +1077,7 @@
   WIN_TopLevelX=WIN_TopLevelX2
  ENDIF
 END
-COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
+COMMON DEF NewStyleWindowArg CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG,STYLE,A1,A2 OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
   ERR=CTL_INVALIDID
@@ -1039,10 +1096,75 @@
   INC CTL_FH2[NUCID],1
   INC CTL_FW2[NUCID],1
  ENDIF
- NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag() OUT WND,ERR
+ NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OR 512 OUT WND,ERR
+ VAR MW=32
+ IF MW>WIDTH THEN MW=WIDTH
+ VAR NUWID=WND AND NUWIDMASK,SP
+ SetWindowMinSize WND,CTL_FW1[NUCID]+MW,WIN_FH2[NUWID]
  CTL_FH1[NUCID]=_H
  IF ERR THEN RETURN
+ 'MENU
+ IF STYLE AND 1THEN
+  NewMenu OUT WIN_MENU[NUWID],ERR
+  WIN_MENU[NUWID]=WIN_MENU[NUWID]
+ ENDIF
+ 'RESIZABLE
+ IF STYLE AND 2THEN
+  WIN_STYLE[NUWID]=WIN_STYLE_RESIZ
+  DEC CTL_FW1[NUCID],1
+  DEC CTL_FH2[NUCID],1
+  DEC CTL_FW2[NUCID],1
+ ENDIF
+ 'TRANS
+ IF STYLE AND 4THEN
+  WIN_STYLE[NUWID]=WIN_STYLE_TRANS
+  NOIMPL "TRANS
+  NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
+ ENDIF
+ WIN_STYLE[NUWID]=STYLE
+ IF STYLE AND WIN_STYLE_HIDE THEN
+  WIN_HIDE[NUWID]=1
+  IF WIN_SP[NUWID]THEN SPHIDE WIN_SP[NUWID]AND 511
+ ENDIF
+ InitWindow WND,A1,A2
+END
+COMMON DEF NewStyleWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG,STYLE OUT WND,ERR
+ NewStyleWindowArg CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG,STYLE,0,0 OUT WND,ERR
+END
+COMMON DEF NewTopLevelStyleWindowArg CTL,NAME$,WIDTH,HEIGHT,STYLE,A1,A2 OUT WND,ERR
+ NewStyleWindowArg CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag()OR 512,STYLE,A1,A2 OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR NUCID=CTL AND 4095
+ IncTopLevelPos NUCID
+END
+COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
+ NewTopLevelStyleWindowArg CTL,NAME$,WIDTH,HEIGHT,STYLE,0,0 OUT WND,ERR
+ RETURN
+ IF!CheckControl(CTL)THEN
+  WND=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ VAR NUCID=CTL AND 4095
+' INC OTW_TOPLEVELCNT
+ VAR _H=CTL_FH1[NUCID]
+ 'ごういん
+ IF STYLE AND 1THEN
+  INC CTL_FH1[NUCID],10
+ ENDIF
+ IF STYLE AND 2THEN
+  INC CTL_FH1[NUCID],1
+  INC CTL_FW1[NUCID],1
+  INC CTL_FH2[NUCID],1
+  INC CTL_FW2[NUCID],1
+ ENDIF
+ NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag()OR 512 OUT WND,ERR
+ VAR MW=32
+ IF MW>WIDTH THEN MW=WIDTH
  VAR NUWID=WND AND NUWIDMASK,SP
+ SetWindowMinSize WND,CTL_FW1[NUCID]+MW,WIN_FH2[NUWID]
+ CTL_FH1[NUCID]=_H
+ IF ERR THEN RETURN
  'MENU
  IF STYLE AND 1THEN
   NewMenu OUT WIN_MENU[NUWID],ERR
@@ -1061,7 +1183,13 @@
   NOIMPL "TRANS
   NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
  ENDIF
+ WIN_STYLE[NUWID]=STYLE
+ IF STYLE AND WIN_STYLE_HIDE THEN
+  WIN_HIDE[NUWID]=1
+  IF WIN_SP[NUWID]THEN SPHIDE WIN_SP[NUWID]AND 511
+ ENDIF
  IncTopLevelPos NUCID
+' InitWindow WND,A1,A2
 END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF WIN_ROOTWND THEN
@@ -1262,7 +1390,7 @@
   ELSE
    WIN_GROUP[WIN_GPARENT[NUWID]]=WIN_GNEXT[NUWID]
   ENDIF
-  VOID ActiveWindow(NUWIDToWND(WIN_GPARENT[NUWID]))
+  IF WIN_ACTIVENUWID==NUWID THEN VOID ActiveWindow(NUWIDToWND(WIN_GPARENT[NUWID]))
   WIN_GPARENT[NUWID]=0
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
@@ -1276,12 +1404,17 @@
 
 DEF OTW_SPSORT
  VAR I,Z=0
- IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT)
+ IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/MAX(OTW_TOPLEVELCNT,1)
  VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
 'IF!WIN_NEXT[NUWID]THEN I=
  I=1022+255
  WHILE NUWID
   I=I-Z
+  IF WIN_HIDE[NUWID]THEN
+   SPHIDE WIN_SP[NUWID]AND 511
+  ELSE
+   SPSHOW WIN_SP[NUWID]AND 511
+  ENDIF
   SPOFS WIN_SP[NUWID]AND 511,,,-255+I
 '  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
   NUWID=WIN_NEXT[NUWID]
@@ -1385,7 +1518,7 @@
 '  NXT=WIN_NEXT[NXT]
 ' WEND
 END
-COMMON DEF OTW_CLIPWindow NUWID
+DEF OTW_CLIPWindow NUWID
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
@@ -1427,7 +1560,10 @@
   DEC WIN_AH[NUWID],(WIN_RY[NUWID]+WIN_AH[NUWID])-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
  ENDIF
 
- WIN_HIDE[NUWID]=0
+ WIN_HIDE[NUWID]=WIN_STYLE[NUWID] AND WIN_STYLE_HIDE
+ IF WIN_HIDE[PNUWID]THEN WIN_HIDE[NUWID]=1
+ 
+' IF WIN_STYLE[PNUWID] AND WIN_STYLE_HIDE THEN WIN_HIDE[NUWID]=1
  IF WIN_AH[NUWID]<0THEN
   WIN_HIDE[NUWID]=1
   RETURN
@@ -1437,6 +1573,15 @@
   RETURN
  ENDIF
 END
+DEF OTW_CLIPCHILD NUWID
+ WHILE NUWID
+  OTW_CLIPWINDOW NUWID
+  IF WIN_CHILD[NUWID]THEN
+   OTW_CLIPCHILD WIN_CHILD[NUWID]
+  ENDIF
+  NUWID=WIN_NEXT[NUWID]
+ WEND
+END
 COMMON DEF BeginWindowOP(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  RETURN 0
@@ -1472,39 +1617,37 @@
    WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
   ENDIF
  ENDIF
- WHILE NXT
-  IF WIN_CHILD[NXT]THEN
-   B=WIN_CHILD[NXT]
-   VAR MVF=NUWID==NXT
+ VAR MOVEF=0
+ B=WIN_PARENT[NUWID]
    WHILE B
-    IF MVF THEN
+    IF MOVEF THEN
      WIN_AX[B]=WIN_AX[B]+MX
      WIN_AY[B]=WIN_AY[B]+MY
-     WIN_FX[B]=WIN_FX[B]+MX
-     WIN_FY[B]=WIN_FY[B]+MY
-     WIN_RFX[B]=WIN_RFX[B]+MX
-     WIN_RFY[B]=WIN_RFY[B]+MY
-     WIN_RX[B]=WIN_RX[B]+MX
-     WIN_RY[B]=WIN_RY[B]+MY
+     WIN_FX[B]=WIN_AX[B]+WIN_FW1[B]'+MX
+     WIN_FY[B]=WIN_AY[B]+WIN_FH1[B]'+MY
+     WIN_RFX[B]=WIN_FX[B]'+MX
+     WIN_RFY[B]=WIN_FY[B]'+MY
+     WIN_RX[B]=WIN_AX[B]'+MX
+     WIN_RY[B]=WIN_AY[B]'+MY
+     OTW_CLIPWindow B
+     MOVEF=1
     ENDIF
+    IF WIN_CHILD[B]THEN
+     IF B==NUWID THEN MOVEF=1
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
     IF!WIN_NEXT[B]THEN
      WHILE B
       B=WIN_PARENT[B]
-      IF B==NXT THEN BREAK
-      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+      IF B==NUWID THEN MOVEF=0
+      IF WIN_NEXT[B]THEN BREAK
      WEND
-     IF B==NXT THEN BREAK
+     IF!B THEN RETURN 0
     ENDIF
-    IF WIN_CHILD[B]THEN
-     B=WIN_CHILD[B]
-     CONTINUE
-    ENDIF
     B=WIN_NEXT[B]
-    IF B==NXT THEN BREAK
    WEND
-  ENDIF
-  NXT=WIN_NEXT[NXT]
- WEND
+ RETURN 0
 END
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -1535,7 +1678,7 @@
   GPAGE OTW_SP,OTW_GP
   GCOPY OTW_DP,WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   GPAGE OTW_SP,OTW_DP
-  GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],RGB(224,224,224)
+  GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_BKGND
   GCOPY OTW_GP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   OTW_SPCHR NUWID
  ENDIF
@@ -1576,81 +1719,41 @@
     ENDIF
     B=WIN_NEXT[B]
    WEND
-RETURN
- WHILE NXT
-  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
-  OTW_DrawMap NXT
-  IF WIN_CHILD[NXT]THEN
-   B=WIN_CHILD[NXT]
-   VAR MVF=NUWID==NXT
-   WHILE B
-    IF MVF THEN
-     WIN_AX[B]=WIN_AX[B]+MX
-     WIN_AY[B]=WIN_AY[B]+MY
-     WIN_FX[B]=WIN_FX[B]+MX
-     WIN_FY[B]=WIN_FY[B]+MY
-     WIN_RFX[B]=WIN_RFX[B]+MX
-     WIN_RFY[B]=WIN_RFY[B]+MY
-     WIN_RX[B]=WIN_RX[B]+MX
-     WIN_RY[B]=WIN_RY[B]+MY
-    ENDIF
-    VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-    OTW_DrawMap B
-    IF!WIN_NEXT[B]THEN
-     WHILE B
-      B=WIN_PARENT[B]
-      IF B==NXT THEN BREAK
-      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
-     WEND
-     IF B==NXT THEN BREAK
-    ENDIF
-    IF WIN_CHILD[B]THEN
-     B=WIN_CHILD[B]
-     CONTINUE
-    ENDIF
-    B=WIN_NEXT[B]
-    IF B==NXT THEN BREAK
-   WEND
-  ENDIF
-  NXT=WIN_NEXT[NXT]
-'  IF NXT==NUWID THEN BREAK
- WEND
-
-RETURN 0
- NXT=WIN_CHILD[NUWID]:B=NXT
- VAR PAX2=WIN_X[NUWID]+WIN_AW[NUWID]
- VAR PAY2=WIN_Y[NUWID]+WIN_AH[NUWID]
- WHILE B
-  VAR S=WIN_WIDTH[B]-WIN_AW[B]
-  
-  WIN_AX[B]=WIN_AX[B]+MX
-  WIN_AY[B]=WIN_AY[B]+MY
-  WIN_FX[B]=WIN_FX[B]+MX
-  WIN_FY[B]=WIN_FY[B]+MY
-  WIN_RFX[B]=WIN_RFX[B]+MX
-  WIN_RFY[B]=WIN_RFY[B]+MY
-  WIN_RX[B]=WIN_RX[B]+MX
-  WIN_RY[B]=WIN_RY[B]+MY
-  VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-  OTW_DrawMap B
-  IF WIN_CHILD[B]THEN
-   B=WIN_CHILD[B]
-   CONTINUE
-  ENDIF
-  IF!WIN_NEXT[B]THEN
-   WHILE B
-    B=WIN_PARENT[B]
-    IF B==NUWID THEN BREAK
-    IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
-   WEND
-   IF B==NUWID THEN BREAK
-  ENDIF
-  B=WIN_NEXT[B]
-  IF B==NUWID THEN BREAK
- WEND
-
+ RETURN
+END
+DEF ResizeWindowF(WND,W,H)
+ VAR NUWID=WND AND NUWIDMASK
+ 'ちいさい
+ IF W+1<WIN_MINW[NUWID]THEN
+  W=WIN_MINW[NUWID]-1
+ ENDIF
+ IF H+1<WIN_MINH[NUWID]THEN
+  H=WIN_MINH[NUWID]-1
+ ENDIF
+ VOID FireResizeWindow(WND,W-WIN_FW2[NUWID],H-WIN_FH2[NUWID])
+ WIN_WIDTH[NUWID]=W
+ WIN_HEIGHT[NUWID]=H
+ OTW_CLIPWindow NUWID
+ OTW_CLIPCHILD NUWID
+ RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
+DEF MoveResizeWindowF(WND,X,Y,W,H)
+ VAR NUWID=WND AND NUWIDMASK
+ VAR E=MoveWindow2(WND,X,Y)
+ IF E THEN RETURN E
+ RETURN ResizeWindowF(WND,W,H)
+END
+COMMON DEF ResizeWindow(WND,W,H)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN ResizeWindowF(WND,W+WIN_FW2[NUWID],H+WIN_FH2[NUWID])
+END
+COMMON DEF MoveResizeWindow(WND,X,Y,W,H)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN MoveResizeWindowF(WND,X,Y,W+WIN_FW2[NUWID],H+WIN_FH2[NUWID])
+END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -1683,8 +1786,8 @@
 COMMON DEF SendButtonWindow(WND,BTN)
  RETURN SendWindowEvent(WND,CTL_BTNHANDLER,BTN,0)
 END
-COMMON DEF SendChFocusWindow(WND,FLG)
- RETURN SendWindowEvent(WND,CTL_CHFOCUSHANDLER,FLG,0)
+COMMON DEF SendChFocusWindow(WND,FLG,FOCUSW)
+ RETURN SendWindowEvent(WND,CTL_CHFOCUSHANDLER,FLG,FOCUSW)
 END
 COMMON DEF SendStrNotifWindow(WND,A1,STR$)
  RETURN SendWindowEvent(WND,CTL_STRNOTIFHANDLER,A1,AllocString(STR$))
@@ -1706,7 +1809,7 @@
 END
 DEF LDoubleClickWindow(WND)
  VAR NUWID=WND AND NUWIDMASK
- RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,,JoinInt(OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID]))
+ RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
 DEF MouseMoveWindowOnFrame(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
@@ -1723,6 +1826,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMMOUSEMVHANDLER,CTL_LEAVEFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
+DEF FireResizeWindow(WND,W,H)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_RESIZEHANDLER,0,JoinInt(W,H))
+END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
@@ -1831,11 +1938,13 @@
 END
 COMMON DEF GetWindowX(WND)
  IF!CheckWindow(WND)THEN RETURN -1
- RETURN WIN_FX[WND AND NUWIDMASK]
+'RETURN WIN_FX[WND AND NUWIDMASK]
+ RETURN WIN_X[WND AND NUWIDMASK]+WIN_FW1[WND AND NUWIDMASK]
 END
 COMMON DEF GetWindowY(WND)
  IF!CheckWindow(WND)THEN RETURN -1
- RETURN WIN_FY[WND AND NUWIDMASK]
+'RETURN WIN_FY[WND AND NUWIDMASK]
+ RETURN WIN_Y[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]
 END
 COMMON DEF GetWindowVar(WND,I)
  RETURN WIN_VAR[WND AND NUWIDMASK,I]
@@ -1925,6 +2034,8 @@
 END
 ''WINDOW GRAPHIC
 VAR GB_WND
+VAR WING_SX
+VAR WING_SY
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -1934,6 +2045,8 @@
  VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
  VAR W=WIN_AFW[NUWID]
  VAR H=WIN_AFH[NUWID]
+ WING_SX=WIN_FX[NUWID]
+ WING_SY=WIN_FY[NUWID]
  IF W<0||H<0THEN RETURN WIN_NODRAW
  GPAGE OTW_SP,OTW_BP
 'OTW1C 3.1 の GCLIP BUG の ため
@@ -1960,11 +2073,13 @@
  VAR AY=WIN_RY[NUWID]
  VAR W=WIN_AW[NUWID]'WIN_WIDTH[NUWID]
  VAR H=WIN_AH[NUWID]'WIN_HEIGHT[NUWID]
+ WING_SX=WIN_FX[NUWID]
+ WING_SY=WIN_FY[NUWID]
  GB_WND=NUWID
  GPAGE OTW_SP,OTW_BP
 'OTW1C 3.1 の GCLIP BUG の ため
 ' GCLIP 1,AX,AY,AX+W,AY+H
-' GCLS' RGB(224,224,224)
+' GCLS' WIN_BKGND
  GFILL AX,AY,AX+W,AY+H,0
  RETURN 0
 END
@@ -2032,46 +2147,46 @@
  SPOFS WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID]
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GPSET X+AX,Y+AY,COL
 END
 COMMON DEF GCLSWindow WND,COL
  GCLS COL
 END
 COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GFILL X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GLINEWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GLINE X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GCIRCLEWindow WND,X,Y,R,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GCIRCLE X+AX,Y+AY,R,COL
 END
 COMMON DEF GCIRCLE2Window WND,X,Y,R,S,E,F,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GCIRCLE X+AX,Y+AY,R,S,E,F,COL
 END
 COMMON DEF GTRIWindow WND,X,Y,X2,Y2,X3,Y3,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GTRI X+AX,Y+AY,X2+AX,Y2+AY,X3+AX,Y3+AY,COL
 END
 COMMON DEF GLOADWindow WND,X,Y,W,H,IMG[],FLG,MODE
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GLOAD X+AX,Y+AY,W,H,IMG,FLG,MODE
 END
 COMMON DEF GSAVEImage IMG,WND,X,Y,W,H,IX,IY
@@ -2088,6 +2203,9 @@
 COMMON DEF GPRINTWindowCC WND,X,Y,STR$,PAL
  GPRINTWindow WND,X,Y,STR$,OTW_CONSOLEPAL[PAL]
 END
+COMMON DEF GetConsolePalette(PAL)
+ RETURN OTW_CONSOLEPAL[PAL]
+END
 COMMON DEF GLINEArrayMemory PTR,W,H,X,Y,X2,Y2,COL
  COL=RGBToShort(COL)
  DIM M[0]
@@ -2115,8 +2233,8 @@
  WEND
 END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
- INC X,WIN_FX[WND AND NUWIDMASK]
- INC Y,WIN_FY[WND AND NUWIDMASK]
+ INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
+ INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
  IF COL AND&HFF000000THEN
   GPUTCHR X,Y,STR$,1,1,COL
  ENDIF
@@ -2131,8 +2249,8 @@
  NEXT
 END
 COMMON DEF GPRINTBWindow WND,X,Y,STR$,COL,BC
- INC X,WIN_FX[WND AND NUWIDMASK]
- INC Y,WIN_FY[WND AND NUWIDMASK]
+ INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
+ INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
  IF BC AND&HFF000000THEN
   GFILL X,Y,X+LEN(STR$)*8-1,Y+7,BC
  ENDIF
@@ -2151,8 +2269,8 @@
 END
 DIM OTW_FNTTMP[0]
 COMMON DEF GPUTCHRWindow WND,X,Y,A,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
  GPUTCHR X,Y,CHR$(A),1,1,COL
  RETURN
@@ -2164,8 +2282,8 @@
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
 COMMON DEF GPUTCHRBWindow WND,X,Y,A,COL,BC
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
  IF BC AND&HFF000000THEN
   GFILL X,Y,X+7,Y+7,BC
@@ -2197,13 +2315,13 @@
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
  VAR H2=WIN_HEIGHT[NUWID]-H
- VAR SH=FH-CTL_FH1[NUCID]
- VAR SW=WIN_FW2[NUWID]-CTL_FW1[NUCID]-CTL_FW2[NUCID]
+ VAR SH=FH-12'CTL_FH1[NUCID]
+ VAR SW=WIN_FW2[NUWID]-2'CTL_FW1[NUCID]-CTL_FW2[NUCID]
  IF WIN_MENU[NUWID]THEN DEC SH,10'TODO:MENU_HEIGHT
- VAR C=RGB(224,224,224)
+ VAR C=WIN_BKGND
  DEC H,SH
  DEC W,SW
- GCLSWindow WND,RGB(224,224,224)
+ GCLSWindow WND,WIN_BKGND
  GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
@@ -2213,10 +2331,12 @@
  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
- IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+ IF FW>1 THEN
   INC H,SH
   GLINEWindow WND,-1,-H+1,W-2,-H+1,-1
+  GLINEWindow WND,-2,-H,W-1,-H,RGB(224,224,224)
   GLINEWindow WND,-1,-H+1,-1,H2-2,-1
+  GLINEWindow WND,-2,-H+1,-2,H2-1,RGB(224,224,224)
   GLINEWindow WND,W-1,-H+1,W-1,H2-1,RGB(128,128,128)
   GLINEWindow WND,W,-H,W,H2,RGB(0,0,0)
   GLINEWindow WND,W-2,H2-1,-1,H2-1,RGB(128,128,128)
@@ -2224,7 +2344,7 @@
  ENDIF
  IF WIN_MENU[NUWID]THEN
   GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
-  GFILLWindow WND,0,-10,W-2,-2,RGB(224,224,224)
+  GFILLWindow WND,0,-10,W-2,-2,WIN_BKGND
   C=WIN_MENU[NUWID]AND 4095
   VAR I=MENU_ITEM[C]
   VAR X=0
@@ -2248,7 +2368,72 @@
  VAR X,Y
  SplitInt POS OUT X,Y
  VAR W=GetWindowFrameWidth(WND)
-  VAR NUWID=WND AND NUWIDMASK
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+  '2     3     4
+  ' 
+  ' 
+  '           
+  '5          6
+  '           
+  '           
+  '           
+  '789
+  WHILE 1
+  IF Y<4&&X<4THEN
+   OTW_MOVWINFLG=2'
+   BREAK
+  ENDIF
+  VAR EX=WIN_WIDTH[NUWID]-X
+  VAR EY=WIN_HEIGHT[NUWID]-Y
+  IF EX<4&&Y<4THEN 
+   OTW_MOVWINFLG=4'
+   BREAK
+  ENDIF
+  IF EY<4&&X<4THEN
+   OTW_MOVWINFLG=7'
+   BREAK          '
+  ENDIF
+  IF EX<4&&EY<4THEN
+   OTW_MOVWINFLG=9
+   BREAK
+  ENDIF
+  IF EY<2THEN
+   OTW_MOVWINFLG=8
+   BREAK
+  ENDIF
+  IF EX<2THEN
+   OTW_MOVWINFLG=6
+   BREAK
+  ENDIF
+  IF Y<2THEN
+   OTW_MOVWINFLG=3
+   BREAK
+  ENDIF
+  IF X<2THEN
+   OTW_MOVWINFLG=5
+   BREAK
+  ENDIF
+  BREAK
+  WEND
+  IF OTW_MOVWINFLG>=2THEN
+   VAR AX=WIN_AX[NUWID]
+   VAR AY=WIN_AY[NUWID]
+   INC X,AX
+   INC Y,AY
+   IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
+   SPSHOW OTW_MOVWINSP
+   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+   SPOFS OTW_MOVWINSP,AX,AY,-256
+   SPVAR OTW_MOVWINSP,1,NUWID
+   SPVAR OTW_MOVWINSP,2,AX-X
+   SPVAR OTW_MOVWINSP,3,AY-Y
+   VAR PNUWID=WIN_PARENT[NUWID]
+   MouseClip WIN_FX[PNUWID],WIN_FY[PNUWID],WIN_WIDTH[PNUWID]-WIN_FW2[PNUWID],WIN_HEIGHT[PNUWID]-WIN_FH2[PNUWID]
+   RETURN
+  ENDIF
+ ENDIF
  IF!IsFocusWindow(WND)THEN RETURN
  IF X&&Y>11&&Y<21&&WIN_MENU[NUWID]THEN
   IF BTN AND CTL_BTNUPFLG THEN
@@ -2277,8 +2462,9 @@
  IF BTN AND CTL_LBTNFLG THEN
   IF BTN AND CTL_BTNDWNFLG THEN
  '  IF!IsFocusWindow(WND)THEN RETURN
-   VAR AX=WIN_AX[NUWID]
-   VAR AY=WIN_AY[NUWID]
+   OTW_MOVWINFLG=1'MOV
+   AX=WIN_AX[NUWID]
+   AY=WIN_AY[NUWID]
    INC X,AX
    INC Y,AY
    IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
@@ -2290,7 +2476,7 @@
    SPVAR OTW_MOVWINSP,1,NUWID
    SPVAR OTW_MOVWINSP,2,AX-X
    SPVAR OTW_MOVWINSP,3,AY-Y
-   VAR PNUWID=WIN_PARENT[NUWID]
+   PNUWID=WIN_PARENT[NUWID]
    MouseClip WIN_FX[PNUWID],WIN_FY[PNUWID],WIN_WIDTH[PNUWID]-WIN_FW2[PNUWID],WIN_HEIGHT[PNUWID]-WIN_FH2[PNUWID]
   ENDIF
  ENDIF
@@ -2323,7 +2509,7 @@
    OTW_INITSP 4
    RETURN
   ENDIF
-  IF EX<4&&EX<4THEN
+  IF EX<4&&EY<4THEN
    OTW_INITSP 3
    RETURN
   ENDIF
@@ -2375,7 +2561,7 @@
      X2=X2+LEN(MENU_INAME$[I])*8+4
      IF I==OS THEN
       OS=0
-      GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+      GFILLWindow WND,X1,-10,X2,-2,WIN_BKGND
       GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
       BREAK
      ENDIF
@@ -2388,7 +2574,7 @@
      IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
      BEG=1
      OS=0
-     GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+     GFILLWindow WND,X1,-10,X2,-2,WIN_BKGND
      GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
     IF IN THEN BREAK
     ENDIF
@@ -2401,15 +2587,20 @@
 END
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
  VAR NUWID=WND AND NUWIDMASK
- DEC MX,WIN_AX[WIN_PARENT[NUWID]]+WIN_FW1[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
- DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
- VAR X=MX+A1X
- VAR Y=MY+A2Y
- VAR E=MoveWindow(WND,X,Y)
- E=FrontWindow(WND)
+ IF OTW_MOVWINFLG==1THEN
+  DEC MX,WIN_AX[WIN_PARENT[NUWID]]+WIN_FW1[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
+  DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
+  VAR X=MX+A1X
+  VAR Y=MY+A2Y
+  VAR E=MoveWindow(WND,X,Y)
+  E=FrontWindow(WND)
+  SPUNLINK OTW_MOVWINSP
+ ELSE
+  MoveWindowSP TRUE
+ ENDIF
  SPHIDE OTW_MOVWINSP
- SPUNLINK OTW_MOVWINSP
  MouseClipDef
+ OTW_MOVWINFLG=0
 END
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
@@ -2422,7 +2613,7 @@
  VAR B2=-1
  IF TG THEN SWAP B1,B2
  GFILLWindow W,0,0,WI,HE,RGB(192,192,192)
- GPRINTWindow W,(WI-GetTextWidth(NA$)-2)/2+TG+1,(HE-6)/2+TG,NA$,RGB(0,0,0)
+ GPRINTWindow W,(WI-GetTextWidth(NA$))/2+TG+1,(HE-6)/2+TG,NA$,RGB(0,0,0)
  GBOXWindow W,0,0,WI,HE,B1
  GLINEWindow W,0,0,0,HE-1,B2
  GLINEWindow W,0,0,WI-1,0,B2
@@ -2606,7 +2797,15 @@
   'あとしまつ
   VOID GEndWindow(WND)
  ENDIF
+ IF T==CTL_LDBLCLKHANDLER THEN
+  VOID SendNotifWindow(GetParentWindow(WND),WND,0)
+ ELSEIF GetWindowVar(WND,6)THEN
+  VOID SendNotifWindow(GetParentWindow(WND),WND,1)
+ ENDIF
 END
+COMMON DEF ListBoxChItem()
+ RETURN 1
+END
 DEF ListBoxDelete WND,CT,T,A1,A2
  VAR L=GetWindowVar(WND,1)
  IF!L THEN RETURN
@@ -2673,6 +2872,9 @@
  IF!S THEN RETURN""
  RETURN LISTSTR$[S]
 END
+COMMON DEF SetChItemListBoxNotif WND,F
+ SetWindowVar WND,6,F
+END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
@@ -2693,7 +2895,7 @@
 END
 DEF VSCRBARPainter W,_,T,XY,WH
  IF GBEGINWindow(W)THEN RETURN
- GCLSWindow W,RGB(224,224,224)
+ GCLSWindow W,WIN_BKGND
  VAR _W=GetWindowWidth(W)
  VAR _H=GetWindowHeight(W)
  GBOXWindow W,0,0,_W,_H,RGB(0,0,0)
@@ -2726,7 +2928,7 @@
  '10いか
  IF BS<10THEN
   BS=10
-  S=(S-9)*((AH-10)/SIZ)+9
+  IF SIZ THEN S=(S-9)*((AH-10)/SIZ)+9
  ENDIF
  GLINEWindow W,1,S,_W-1,S,C
  GLINEWindow W,1,S+BS,_W-1,S+BS,C
@@ -2934,6 +3136,7 @@
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  WIN_BKGND=RGB(208,208,208)
   VAR FM=FREEMEM
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
@@ -2988,7 +3191,7 @@
   NEXT
   GCLS RGB(0,224,224)
   GCLS RGB(0,128,128)
-  GCLS RGB(191,191,191)
+  'GCLS RGB(191,191,191)
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
  ' GCLS RGB(0,192,128)
@@ -3119,12 +3322,11 @@
    VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
    IF WIN_ACTIVENUWID!=OA THEN
-    E=SendChFocusWindow(NUWIDToWND(OA),FALSE)
-    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE)
+    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
+    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
    ENDIF
    VAR F=MAINCNT
-   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF THEN
-    BEEP
+   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
     OTW_LCLKWND=0
     IF NUWID AND WIN_FRAMEFLG THEN
      'TODO:Double Click
@@ -3133,7 +3335,7 @@
      WIN_ACTIVENUWID=NUWID AND 32767
     ELSE
      IF LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,CTL_LDBLCLKHANDLER])THEN
-?"A
+      E=LDoubleClickWindow(NUWIDToWND(NUWID))
      ELSE
       E=LMouseDownWindow(NUWIDToWND(NUWID))
      ENDIF
@@ -3141,6 +3343,8 @@
    ELSE
     OTW_LCLKWND=NUWID
     OTW_LCLKF=F
+    OTW_DBLCLKX=OTW_MOUSEX
+    OTW_DBLCLKY=OTW_MOUSEY
    IF NUWID AND WIN_FRAMEFLG THEN
     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
     
@@ -3165,6 +3369,7 @@
   ENDIF
  ENDIF
  IF MOVEMOUSE THEN
+  MoveWindowSP FALSE
   IF OLDMOVEMOUSEWINDOW!=NUWID THEN
    IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
     E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
@@ -3222,6 +3427,106 @@
 ' ExitProcess 1
 RETURN
 END
+  '2     3     4
+  ' 
+  ' 
+  '           
+  '5          6
+  '           
+  '           
+  '           
+  '789
+DEF MoveWindowSP F
+ IF OTW_MOVWINFLG>=2THEN
+  VAR NW=SPVAR(OTW_MOVWINSP,1)
+  VAR W=WIN_WIDTH[NW],H=WIN_HEIGHT[NW]
+  VAR X=WIN_AX[NW],Y=WIN_AY[NW]
+  VAR LTOPH,LTOPW
+  VAR RTOPH,RTOPW
+  IF OTW_MOVWINFLG==2THEN
+   LTOPH=1LTOPW=1
+  ENDIF
+  IF OTW_MOVWINFLG==3THEN
+   LTOPH=1
+  ENDIF
+  IF OTW_MOVWINFLG==5THEN
+   LTOPW=1
+  ENDIF
+   IF LTOPW THEN
+    INC W,X-OTW_MOUSEX
+    X=OTW_MOUSEX
+    IF W<WIN_MINW[NW]THEN
+     W=WIN_MINW[NW]-1
+     X=WIN_AX[NW]+WIN_WIDTH[NW]-W
+    ENDIF
+   ENDIF
+   IF LTOPH THEN
+    INC H,Y-OTW_MOUSEY
+    Y=OTW_MOUSEY
+    IF H<WIN_MINH[NW]THEN
+     H=WIN_MINH[NW]-1
+     Y=WIN_AY[NW]+WIN_HEIGHT[NW]-H
+    ENDIF
+   ENDIF
+  IF OTW_MOVWINFLG==4THEN
+   RTOPH=1RTOPW=1
+  ENDIF
+  IF OTW_MOVWINFLG==6THEN
+   RTOPW=1
+  ENDIF
+   IF RTOPW THEN
+    DEC W,X-OTW_MOUSEX+W
+    IF W<WIN_MINW[NW]THEN W=WIN_MINW[NW]-1
+   ENDIF
+   IF RTOPH THEN
+    INC H,Y-OTW_MOUSEY
+    Y=OTW_MOUSEY
+    IF H<WIN_MINH[NW]THEN
+     H=WIN_MINH[NW]-1
+     Y=WIN_AY[NW]+WIN_HEIGHT[NW]-H
+    ENDIF
+   ENDIF
+  VAR LBOTH,LBOTW
+  VAR RBOTH,RBOTW
+  IF OTW_MOVWINFLG==7THEN
+   LBOTH=1LBOTW=1
+  ENDIF
+  IF OTW_MOVWINFLG==8THEN
+   LBOTH=1
+  ENDIF
+   IF LBOTW THEN
+    INC W,X-OTW_MOUSEX
+    X=OTW_MOUSEX
+    IF W<WIN_MINW[NW]THEN
+     W=WIN_MINW[NW]-1
+     X=WIN_AX[NW]+WIN_WIDTH[NW]-W
+    ENDIF
+   ENDIF
+   IF LBOTH THEN
+    DEC H,Y-OTW_MOUSEY+H
+    IF H<WIN_MINH[NW]THEN H=WIN_MINH[NW]-1
+   ENDIF
+  IF OTW_MOVWINFLG==9THEN
+   RBOTH=1RBOTW=1
+  ENDIF
+   IF RBOTW THEN
+    DEC W,X-OTW_MOUSEX+W
+    IF W<WIN_MINW[NW]THEN W=WIN_MINW[NW]-1
+   ENDIF
+   IF RBOTH THEN
+    DEC H,Y-OTW_MOUSEY+H
+    IF H<WIN_MINH[NW]THEN H=WIN_MINH[NW]-1
+   ENDIF
+  SPOFS OTW_MOVWINSP,X,Y
+  SPSCALE OTW_MOVWINSP,W+1,H+1'TODO:WH
+  IF F THEN
+   'TODO:Move->Resizeでおかしくなる
+   'TODO:MoveResizeWindow
+'   VOID MoveWindow(NUWIDToWND(NW),X,Y)
+   VOID MoveResizeWindowF(NUWIDToWND(NW),X,Y,W,H)
+  ENDIF
+ ENDIF
+END
 VAR RUNCTL
 COMMON DEF I_RUN
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
@@ -3410,7 +3715,7 @@
   VAR E
   E=GBeginWindow(WCLOCKWND)
   IF E THEN RETURN
-  GCLSWindow WCLOCKWND,RGB(224,224,224)'255,160,16)
+  GCLSWindow WCLOCKWND,WIN_BKGND'255,160,16)
   GPRINTWindowCC WCLOCKWND,0,0,TIME$,1
   GPRINTWindowCC WCLOCKWND,0,8,TIME$,1
   GPRINTWindowCC WCLOCKWND,0,56,TIME$,1
@@ -3651,6 +3956,7 @@
   E=SetControlCreateHandler(TXTBOXEXCTL,"TextBoxExCreate")
   E=SetControlNotifHandler(TXTBOXEXCTL,"TextBoxExNotif")
   E=SetControlLMouseDownHandler(TXTBOXEXCTL,"TextBoxExLMD")
+  E=SetControlResizeHandler(TXTBOXEXCTL,"TextBoxResize")
   TXTBOXEX_LINESIZ=10000'1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -3760,6 +4066,13 @@
  VAR W=GetWindowWidth(WND),
  NewVScrollBar WND,0 OUT SCR,E
 END
+DEF TextBoxResize WND,CTL,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+END
 COMMON DEF TextBoxExPainter WND,CTL,T,_,__
  TextBoxExRepaint WND
 END
@@ -3790,6 +4103,7 @@
  IF SH THEN TC=-1
  VAR Y=1,X=32,PL,LC
  VAR LINE=(GetWindowVar(WND,7)AND 2147483647),_
+ VAR M0=MAINCNT
  WHILE 1
   INC LINE
   V$=TXTBOXEX_VAL$[L]
@@ -3833,6 +4147,7 @@
    PL=0
    BREAK
   ENDIF
+  IF MAINCNT-M0>1THEN UpdateMouse
  WEND
  GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  E=GEndWindow(WND)
@@ -3993,18 +4308,42 @@
   IF LEN(TXT$)==I THEN BREAK
   IF J==-1THEN J=LEN(TXT$)-1
   C=TXTED_NewLINE(MID$(TXT$,I,J-I+1),C)
-  IF!C THEN BREAK
   IF!OC THEN
    SetWindowVar WND,1,C
    SetWindowVar WND,2,C
    OC=1
   ENDIF
+  IF!C THEN BREAK
   IF I==LEN(TXT$)-1THEN BREAK
   I=J+1
  WEND
- SetScrollBarSize GetChildWindow(WND),L+CEIL((GetWindowHeight(WND)-2)/8)
+ IF!LEN(TXT$)THEN
+  C=TXTED_NewLINE("",C)
+  SetWindowVar WND,1,C
+  SetWindowVar WND,2,C
+ ENDIF
+ VAR S=L+CEIL((GetWindowHeight(WND)-2)/8)
+ IF S<0THEN S=0
+ SetScrollBarSize GetChildWindow(WND),S
+ SetScrollBarPosition GetChildWindow(WND),0
+ VAR F=GetWindowVar(WND,7)
+ IF F<0THEN
+  SetWindowVar WND,7,-2147483648
+ ELSE
+  SetWindowVar WND,7,0
+ ENDIF
  VOID RepaintWindow(WND)
 END
+COMMON DEF TextBoxExGetText WND OUT TXT$
+ TXT$=""
+ VAR C=GetWindowVar(WND,1)
+
+
+ WHILE C
+  PUSH TXT$,TXTBOXEX_VAL$[C]
+  C=TXTBOXEX_NEXT[C]
+ WEND
+END
 '===syntax highlighting===
 'HashSet
 VAR RTXTEDTRUE
@@ -4158,13 +4497,26 @@
 END
 '===End text editor===
 COMMON DEF TXTEDNOTIF W,C,T,A1,A2
+ IF A2==4THEN
+  VOID SaveFileDialog(W,"TXT")
+ ENDIF
  IF A2==2THEN
   VOID OpenFileDialog(W,"TXT")
  ENDIF
+ IF A2==1THEN
+  TextBoxExSetText GetWindowVar(W,0),LF$()
+ ENDIF
 END
 COMMON DEF TXTEDSTRNOTIF W,C,T,A1,A2$
  TextBoxExSetText GetWindowVar(W,0),LoadFile$(RIGHT$(A2$,LEN(A2$)-1))
 END
+COMMON DEF TXTEDRESIZE WND,C,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W>=0THEN
+  VOID ResizeWindow(GetChildWindow(WND),W,H)
+ ENDIF
+END
 COMMON DEF I_TXTED
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -4176,6 +4528,7 @@
   ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
   E=SetControlNotifHandler(TXTEDCTL,"TXTEDNOTIF")
   E=SetControlStrNotifHandler(TXTEDCTL,"TXTEDSTRNOTIF")
+  E=SetControlResizeHandler(TXTEDCTL,"TXTEDRESIZE")
  ENDIF
  NewTopLevelStyleWindow TXTEDCTL,"TXTED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
  VAR MENU
@@ -4188,6 +4541,7 @@
  SetProcessVar WND
  VAR TED
  NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT TED,E
+ TextBoxExSetText TED,LF$()
  SetWindowVar WND,0,TED
 'SetTextBoxExPRGMode WND,TRUE
 END
@@ -4206,8 +4560,10 @@
   ExtendControl "PRGED",GetWindowControl() OUT PRGEDCTL,E
   E=SetControlNotifHandler(PRGEDCTL,"TXTEDNOTIF")
   E=SetControlStrNotifHandler(PRGEDCTL,"TXTEDSTRNOTIF")
+  E=SetControlResizeHandler(PRGEDCTL,"TXTEDRESIZE")
  ENDIF
- NewTopLevelMenuWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
+ NewTopLevelStyleWindow PRGEDCTL,"PRGED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
+'NewTopLevelMenuWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  AddMenuItem MENU,"New",1
@@ -4218,6 +4574,7 @@
  SetProcessVar WND
  VAR TED
  NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT TED,E
+ TextBoxExSetText TED,LF$()
  SetWindowVar WND,0,TED
  SetTextBoxExPRGMode TED,TRUE
 END
@@ -4234,23 +4591,42 @@
 COMMON DEF RichTextStrike()
  RETURN 4
 END
-COMMON DEF RichTextUnderLine()
+COMMON DEF RichTextUnderline()
  RETURN 8
 END
 COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
- VAR I
- IF SIZE==8&&(STYLE AND 3)!=3THEN
-  GPUTCHRWindow WND,X,Y,C,COL
-  IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
+ VAR I,X2
+ IF SIZE==8THEN'&&(STYLE AND 3)!=3THEN
+  X2=X
+  @LOOP1
+  IF STYLE AND 2THEN
+   GPAGE OTW_SP,OTW_DP
+   GCLIP 1
+   GFILL 511-8,511-8,511,511,0
+   GPUTCHR 511-8,511-8,C,1,1,COL
+   GPAGE OTW_SP,OTW_BP
+   FOR I=0TO 7
+    GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
+   NEXT
+  ELSE
+   GPUTCHRWindow WND,X,Y,C,COL
+  ENDIF
+  IF STYLE AND 1 THEN
+   INC X
+   STYLE=STYLE AND NOT 1
+   GOTO @LOOP1
+   'GPUTCHRWindow WND,X+1,Y,C,COL
+  ENDIF
+  X=X2
  ELSE
   GPUTCHRWindow WND,X,Y,C,COL
   IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
  ENDIF
  IF STYLE AND 4THEN
-  GLINEWindow WND,X,Y+SIZE/2,X+SIZE,Y+SIZE/2,COL
+  GLINEWindow WND,X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
  ENDIF
  IF STYLE AND 8THEN
-  GLINEWindow WND,X,Y+SIZE,X+SIZE,Y+SIZE,COL
+  GLINEWindow WND,X,Y+SIZE-1,X+SIZE-1,Y+SIZE-1,COL
  ENDIF
 END
 VAR OTYDOCCTL
@@ -4405,6 +4781,7 @@
   X=1
   FOR J=0TO L
    C=ASC(V$[J])
+   IF C==&Hb10cTHEN CONTINUE
    IF C==&Hb10bTHEN
    IF I==CL THEN
     IF CX==J THEN
@@ -4455,10 +4832,15 @@
 END
 
 DEF OTYDOC_UpCursor(WND)
-  VAR C=GetWindowVar(WND,2)
-  IF TXTBOXEX_PREV[C]THEN
-   VAR L=TXTBOXEX_PREV[GetWindowVar(WND,1)]
-   C=TXTBOXEX_PREV[C]
+  VAR D=GetWindowVar(WND,0)
+  VAR C=OTYDOC_CurLine[D]
+  IF OTYDOC_PREV[C]THEN
+   OTYDOC_CurLine[D]=OTYDOC_PREV[C]
+   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+   RETURN 1
+'SCROLL
+   VAR L=OTYDOC_PREV[GetWindowVar(WND,1)]
+   C=OTYDOC_PREV[C]
    IF L==C THEN
      SetWindowVar WND,1,L
    ENDIF
@@ -4468,8 +4850,13 @@
   RETURN 0
 END
 DEF OTYDOC_DownCursor(WND)
-  VAR C=GetWindowVar(WND,2)
-  IF TXTBOXEX_NEXT[C]THEN
+  VAR D=GetWindowVar(WND,0)
+  VAR C=OTYDOC_CurLine[D]
+'SCROLL
+  IF OTYDOC_NEXT[C]THEN
+   OTYDOC_CurLine[D]=OTYDOC_NEXT[C]
+   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+   RETURN 1
    IF GetWindowVar(WND,6)==C THEN
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
@@ -4487,13 +4874,13 @@
  IF!BTN THEN SetWindowVar WND,5,0RETURN
  IF MAINCNT-F<R THEN RETURN
  IF BTN AND 1 THEN
-  IF TXTED_UpCursor(WND)THEN
+  IF OTYDOC_UpCursor(WND)THEN
    OTYDOCRepaint WND
   ENDIF
   U=1
  ENDIF
  IF BTN AND 2 THEN
-  IF TXTED_DownCursor(WND)THEN
+  IF OTYDOC_DownCursor(WND)THEN
    OTYDOCRepaint WND
   ENDIF
   U=1
@@ -4501,12 +4888,33 @@
  VAR D=GetWindowVar(WND,0)
  IF BTN AND 4THEN
   VAR CX=OTYDOC_CX[D]
+  VAR C=OTYDOC_CurLine[D]
+  VAR S$=OTYDOC_VAL$[C]
+  IF CX<LEN(S$)&&ASC(S$[CX])==&HB10CTHEN
+   @LOOP11
+   FOR CX=CX TO 0 STEP -1
+    IF ASC(S$[CX])==&HB10BTHEN DEC CX:BREAK
+   NEXT
+   IF CX<0THEN CX=0
+   IF ASC(S$[CX])==&HB10CTHEN @LOOP11
+   OTYDOC_CX[D]=CX
+  ENDIF
   IF CX THEN
    DEC OTYDOC_CX[D]
+   DEC CX
+   IF ASC(S$[CX])==&HB10CTHEN
+    @LOOP1
+    FOR CX=CX TO 0 STEP -1
+     IF ASC(S$[CX])==&HB10BTHEN DEC CX:BREAK
+    NEXT
+    IF CX<0THEN CX=0
+    IF ASC(S$[CX])==&HB10CTHEN @LOOP1
+    OTYDOC_CX[D]=CX
+   ENDIF
    OTYDOCRepaint WND
   ELSE
    IF OTYDOC_UpCursor(WND)THEN
-    VAR C=OTYDOC_CurLine[D]
+    'VAR C=OTYDOC_CurLine[D]
     OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
     OTYDOCRepaint WND
    ENDIF
@@ -4515,17 +4923,42 @@
  ENDIF
  IF BTN AND 8THEN
   CX=OTYDOC_CX[D]
-  INC OTYDOC_CX[D]
-  C=OTYDOC_CurLine[D]'GetWindowVar(WND,2)
+  C=OTYDOC_CurLine[D]
   VAR V$=OTYDOC_VAL$[C]
-  IF LEN(V$)<=CX||LEN(V$)-1==CX&&V$[CX]==LF$()THEN
+  IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN
+   @LOOP21
+   FOR CX=CX TO LEN(V$)-1
+    IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
+   NEXT
+   IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
+   OTYDOC_CX[D]=CX
+  ENDIF
+  INC OTYDOC_CX[D]
+  INC CX'TODO:BUG?  IF LEN(V$)<=CX||LEN(V$)-1==CX&&V$[CX]==LF$()THEN
+
+  IF LEN(V$)<=CX THEN'IF LEN(V$)<=CX||LEN(V$)==CX&&V$[CX]==LF$()THEN
+   IF LEN(V$)<CX THEN 
    IF OTYDOC_DownCursor(WND)THEN
     OTYDOC_CX[D]=0
+   ELSE
+    DEC OTYDOC_CX[D]
    ENDIF
+   ENDIF
+  ELSE
+   IF ASC(V$[CX])==&HB10BTHEN
+    @LOOP2
+    FOR CX=CX TO LEN(V$)-1
+     IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
+    NEXT
+    IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP2
+    OTYDOC_CX[D]=CX
+   ENDIF
   ENDIF
   OTYDOCRepaint WND
   U=1
  ENDIF
+ ?OTYDOC_VAL$[OTYDOC_CurLine[D]]'C]
+ ?" "*(OTYDOC_CX[D]);""
  IF U THEN
   IF R==0 THEN
    SetWindowVar WND,5,20
@@ -4548,10 +4981,48 @@
   C=S
  ENDIF
   VAR I$=CHR$(KEY)
+ IF I$==BS$()THEN
+  IF X THEN
+   DEC OTYDOC_CX[D]
+   DEC X
+   VAR S$=OTYDOC_VAL$[C]
+   IF ASC(S$[X])==&Hb10cTHEN
+    FOR X=X TO 0 STEP -1
+     IF ASC(S$[X])==&Hb10bTHEN DEC X:BREAK
+    NEXT
+    IF X<0THEN X=0
+    OTYDOC_CX[D]=X
+   ENDIF
+   IF ASC(S$[X])==&Hb10bTHEN
+    DEC X
+    DEC OTYDOC_CX[D]
+   ENDIF
+   RemoveStrB OTYDOC_VAL$[C],X,1
+  ENDIF
+ ELSE
+  IF I$==CR$()THEN
+
+   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
+   IF!C2 THEN RETURN
+   OTYDOC_VAL$[C]=MID$(OTYDOC_VAL$[C],0,X)
+   OTYDOC_CurLine[D]=C2
+   OTYDOC_CX[D]=0
+   IF FALSE THEN 
+   SetWindowVar WND,2,C2
+   SetWindowVar WND,3,0
+'  OTYDOC_VAL$[C]=MID$(TXTBOXEX_VAL$[C],0,X)+K$
+   IF GetWindowVar(WND,6)==C THEN
+'   L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
+'   IF L THEN
+'    SetWindowVar WND,1,L
+'   ENDIF
+   ENDIF
+   ENDIF
+  ELSE
   IF OTYDOC_STYLE[D]!=OTYDOC_STYLE2[D]THEN
-   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+I$+CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])
+   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+CHR$(&HB10C)+I$+CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)
    OTYDOC_STYLE[D]=OTYDOC_STYLE2[D]
-   INC OTYDOC_CX[D],3
+   INC OTYDOC_CX[D],4
   ENDIF
   INC OTYDOC_CX[D]
   IF!LEN(OTYDOC_VAL$[C])THEN
@@ -4559,8 +5030,11 @@
   ELSE
    InsertStrB OTYDOC_VAL$[C],X,I$
   ENDIF
+  ENDIF
+ ENDIF
  OTYDOCRepaint WND
  ?OTYDOC_VAL$[C]
+ ?" "*MAX(OTYDOC_CX[D],0);""
 END
 '====EVENT HANDLER====
 
@@ -4573,14 +5047,105 @@
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT 1
  ENDIF
 END
+COMMON DEF RTESetItalic WND,F
+ VAR D=OTYDOC_GetData(WND)
+ IF F THEN
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] OR RichTextItalic()
+ ELSE
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextItalic()
+ ENDIF
+END
+COMMON DEF RTESetStrike WND,F
+ VAR D=OTYDOC_GetData(WND)
+ IF F THEN
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] OR RichTextStrike()
+ ELSE
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextStrike()
+ ENDIF
+END
+COMMON DEF RTESetUnderline WND,F
+ VAR D=OTYDOC_GetData(WND)
+ IF F THEN
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] OR RichTextUnderline()
+ ELSE
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextUnderline()
+ ENDIF
+END
 '==================
+VAR OTYDOCCOLOR_CTL
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
  VAR N$=GetWindowName$(CW)
  IF N$=="B"THEN
   RTESetBold GetWindowVar(WND,0),F
   RETURN
  ENDIF
+ IF N$=="I"THEN
+  RTESetItalic GetWindowVar(WND,0),F
+  RETURN
+ ENDIF
+ IF N$=="S"THEN
+  RTESetStrike GetWindowVar(WND,0),F
+  RETURN
+ ENDIF
+ IF N$=="U"THEN
+  RTESetUnderline GetWindowVar(WND,0),F
+  RETURN
+ ENDIF
+ IF N$==""THEN
+  VAR X=GetWindowX(WND)+GetWindowX(CW),Y=GetWindowY(WND)+GetWindowY(CW)
+  OTYDOC_ShowMenu OTYDOCCOLOR_CTL,WND,X,Y,X+GetWindowWidth(CW),Y+GetWindowHeight(CW)
+ ENDIF
 END
+'2PX
+'
+'
+'
+'
+COMMON DEF OTYDOC_COLORCREATE WND,CTL,TYP,A1,A2
+ VAR E
+ NewWindow GetButtonControl(),">>>",1,GetWindowHeight(WND)-10,27,10,WND,0 OUT E,E
+ 
+END
+COMMON DEF OTYDOC_COLORPAINT WND,CTL,TYP,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,RGB(200,200,200)
+ GBOXWindow WND,0,0,GetWindowWidth(WND),GetWindowHeight(WND),RGB(0,0,0)
+ VAR X,Y,C
+ FOR Y=0TO 3
+  FOR X=0TO 3
+   VAR RGB
+   IF!C THEN
+    RGB=RGB(0,0,0)
+    GBOXWindow WND,X*8+2*X+2,Y*8+2*Y+2,X*8+7+2*X+2,Y*8+7+2*Y+2,RGB
+   ELSE
+    RGB=GetConsolePalette(C)
+    GFILLWindow WND,X*8+2*X+2,Y*8+2*Y+2,X*8+7+2*X+2,Y*8+7+2*Y+2,RGB
+   ENDIF
+   INC C
+  NEXT
+ NEXT
+ E=GEndWindow(WND)
+END
+COMMON DEF OTYDOC_ColorNotif WND,CTL,TYP,FLG,FW
+ 'そのうち まともに
+ VOID ActiveWindow(WND)
+END
+COMMON DEF OTYDOC_ColorChFocus WND,CTL,TYP,FLG,FW
+ IF!FLG THEN
+  IF GetParentWindow(FW)==WND THEN RETURN
+  VOID DeleteWindow(WND)
+ ENDIF
+END
+COMMON DEF OTYDOC_ShowMenu CTL,WND,X,Y,X2,Y2
+ VAR E,MENUWND
+ IF CTL==OTYDOCCOLOR_CTL THEN
+  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+2,4*8+2*4+2+8+2,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
+  IF E THEN RETURN
+ ENDIF
+ E=JoinWindowGroup(WND,MENUWND)
+ 
+END
 COMMON DEF I_OTYDOC
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -4591,14 +5156,25 @@
  IF!OTYDOC_WNDCTL THEN
   INIT_OTYDOC
   ExtendControl "OTYDOC",GetWindowControl() OUT OTYDOC_WNDCTL,E
+'  ExtendControl "OTYDOCCOLOR",GetWindowControl() OUT OTYDOCCOLOR_CTL,E
+  NewControl "OTYDOCCOLOR" OUT OTYDOCCOLOR_CTL,E
   E=SetControlNotifHandler(OTYDOC_WNDCTL,"OTYDOC_WNDNOTIF")
+  E=SetControlPainter(OTYDOCCOLOR_CTL,"OTYDOC_COLORPAINT")
+  E=SetControlCreateHandler(OTYDOCCOLOR_CTL,"OTYDOC_COLORCREATE")
+  E=SetControlChFocusHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorChFocus")
+  E=SetControlNotifHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorNotif")
  ENDIF
  NewTopLevelWindow OTYDOC_WNDCTL,"OTYDOC",256,128 OUT WND,E
  SetProcessVar WND
- VAR DOC
+ VAR DOC,COL
  NewWindow OTYDOCCTL,"OTYDOC",0,12,256,116,WND,0 OUT DOC,E
  SetWindowVar WND,0,DOC
  NewWindow GetToggleButtonControl(),"B",0,0,11,11,WND,0 OUT E,E
+ NewWindow GetToggleButtonControl(),"I",12*1,0,11,11,WND,0 OUT E,E
+ NewWindow GetToggleButtonControl(),"S",12*2,0,11,11,WND,0 OUT E,E
+ NewWindow GetToggleButtonControl(),"U",12*3,0,11,11,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"color",12*4,0,11+32,11,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"",12*5+32,0,11,11,WND,0 OUT E,E
 END
 COMMON DEF L_OTYDOC
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -4629,7 +5205,7 @@
  IF SEL THEN
   GCLSWindow W,RGB(0,0,255)
  ELSE
-  GCLSWindow W,RGB(224,224,224)
+  GCLSWindow W,WIN_BKGND
  ENDIF
  VAR TYP=GetWindowVar(W,1)
  IF TYP THEN
@@ -4661,7 +5237,7 @@
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
 END
 COMMON DEF OTYFILLMouse WND,CTL,T,A1,A2
- SetWindowBackColor GetWindowVar(WND,1),RGB(224,224,224)
+ SetWindowBackColor GetWindowVar(WND,1),WIN_BKGND
  SetWindowVar WND,1,0
  SetString GetWindowVar(WND,2),""
 END
@@ -4674,7 +5250,7 @@
  VAR OLD=GetWindowVar(PW,1)
  IF OLD==W THEN RETURN
  IF OLD THEN
-  SetWindowBackColor OLD,RGB(224,224,224)
+  SetWindowBackColor OLD,WIN_BKGND
  ENDIF
  SetWindowBackColor W,RGB(0,0,255)
  SetWindowVar PW,1,W
@@ -4724,7 +5300,7 @@
     ENDIF
     IF SW==I THEN
      IF N$!=SN$THEN
-      SetWindowBackColor SW,RGB(224,224,224)
+      SetWindowBackColor SW,WIN_BKGND
      ENDIF
     ENDIF
     SetWindowName I,N$
@@ -4879,7 +5455,12 @@
  E=SetControlNotifHandler(CTL_FILDIA,"FileDialogNotif")
 END
 COMMON DEF FileDialogNotif WND,C,T,W,__
- IF GetWindowName$(W)=="OK"THEN
+ IF __==ListBoxChItem()THEN
+  SetWindowName GetWindowVar(WND,2),GetListBoxSelectedText$(W)
+  VOID RepaintWindow(GetWindowVar(WND,2))
+  RETURN
+ ENDIF
+ IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
   IF!LEN(SEL$)THEN RETURN
   VOID SendStrNotifWindow(GetWindowGroupOwner(WND),1,SEL$)
@@ -4892,7 +5473,7 @@
 END
 COMMON DEF FileDialogCreate WND,C,T,_,__
  VAR E,L
- NewWindow GetListBoxControl(),"",0,0,116,64,WND,0 OUT L,E
+ NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
  DIM F$[0]
  GetFiles F$,""
  VAR I
@@ -4906,10 +5487,26 @@
   IF F$[I][1]=="*"&&T==2THEN CONTINUE
   AddListBoxItem L,F$[I]
  NEXT
+ VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
  SetWindowVar WND,0,L
+ SetWindowVar WND,1,F
  NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
  NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
+ IF F THEN
+  NewWindow GetTextBoxControl(),"",0,65,170,9,WND,0 OUT L,E
+  SetWindowVar WND,2,L
+  SetChItemListBoxNotif WND,F
+ ENDIF
 END
+COMMON DEF SaveFileDialog(OWNER,TYPE$)
+ IF!CTL_FILDIA THEN
+  OTW_FileDialog
+ ENDIF
+ IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
+ VAR TITLE$=TYPE$
+ VAR E=NewModalDialogBox(CTL_FILDIA,"Save "+TYPE$,170,74,OWNER)
+ RETURN E
+END
 COMMON DEF OpenFileDialog(OWNER,TYPE$)
  IF!CTL_FILDIA THEN
   OTW_FileDialog
@@ -5053,10 +5650,6 @@
   OTW_FNTTBL[R1]=C1
  WEND
 @RANGE
-DATA &H20,&H20,&H7F,&H7F
-DATA 57857,1,57883,27
-DATA 65280,32,65371,123
-DATA 57984,128,58015,159
 DATA -1,"A"
 @GRPFTABLE
 
@@ -5111,4 +5704,192 @@
 COMMON DEF L_ODSK
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+DEF PRUN_RMFIRSTSP P$
+ VAR I,L=LEN(P$)-1,_$
+ FOR I=0TO L
+  IF P$[0]!=" "THEN RETURN
+  _$=SHIFT(P$)
+ NEXT
+END
+DEF PRUN_ISTHEN(P$)
+ VAR I,L=LEN(P$)-1,I$,THEN$="THEN",J=LEN(THEN$)-1
+ FOR I=L TO 0STEP -1
+  I$=P$[I]
+  IF I$==" "THEN CONTINUE
+  IF J==-1THEN
+   'IF ASC(I$)>= THEN 'ISALPHA
+   'TODO AATHENなどのばあいや COMMENT
+   RETURN TRUE
+  ENDIF
+  IF P$[I]==THEN$[J] THEN
+   DEC J
+   CONTINUE
+  ENDIF
+  BREAK
+ NEXT
+ RETURN FALSE
+END
+DEF PRUN_EDITPRG
+ PRGEDIT 2,1
+ VAR I,L=PRGSIZE(2)
+ VAR H$="INT"+HEX$(RND(&HFFFF),4)
+ VAR L$=":"+H$
+ VAR H2$=HEX$(RND(&H7FFFFFFF),8)
+ VAR Y=CSRY
+ FOR I=1TO L
+  LOCATE 0,Y
+  ?I/L*100;"%";
+  PRGEDIT 2,I
+  VAR P$=PRGGET$()
+  IF LEN(P$)&&ASC(P$[LEN(P$)-1])==10THEN P$=LEFT$(P$,LEN(P$)-1)
+  PRUN_RMFIRSTSP P$
+  IF LEN(P$)&&!PRUN_ISTHEN(P$)THEN
+   PRGEDIT 2,I
+   PRGSET P$+L$
+  ENDIF
+ NEXT
+ PRGINS"DEF "+H$
+ PRGINS"IF BUTTON()=="+STR$(512+64)+" THEN GOTO"+CHR$(34)+"2:@"+H2$
+ PRGINS"END"
+ PRGINS "@"+H2$
+ PRGINS "END"
+END
+COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
+ VAR TW=GetWindowVar(NDW,0)
+ DIM U[512] 
+ DIM V[512] 
+ DIM W[512] 
+ DIM H[512] 
+ DIM A[512] 
+ DIM X[512] 
+ DIM Y[512] 
+ DIM Z[512] 
+ DIM DEFNO[512] 
+ DIM SV[512,8] 
+ VAR I
+ DIM GP0[0]
+ DIM GP1[0]
+ DIM GP2[0]
+ DIM GP3[0]
+ DIM GP4[0]
+ DIM GP5[0]
+ GCLIP 1
+ GSAVE OTW_SP,GP0,1
+ GSAVE OTW_DP,GP1,1
 
+' FOR I=0TO 511
+'  VAR J
+'  FOR J=0TO 7
+'   SV[I,J]=SPVAR(I,J)
+'  NEXT
+'  IF SV[I,0]THEN
+'   SPCHR I OUT U[I],V[I],W[I],H[I],A[I]
+'   SPOFS I OUT X[I],Y[I],Z[I]
+'  ENDIF
+' NEXT
+ LOCATE 0,29
+ ?"Now loading..."
+ LOAD"PRG2:"+GetWindowName$(TW),0
+ ?"OK"
+ ?"EXEC..."
+ PRUN_EDITPRG
+ ACLS
+ EXEC 2
+ ACLS
+ 'FOR I=0TO 511
+ ' IF SV[I,0]THEN
+ '  SPSET I,U[I],V[I],W[I],H[I],A[I]
+ '  ?SV[I,0],I,U[I],V[I],W[I],H[I],A[I]
+ '  SPOFS I,X[I],Y[I],Z[I]
+ '  FOR J=0TO 7
+ '   SPVAR I,J,SV[I,J]
+ '  NEXT
+ ' ENDIF
+ 'NEXT
+ VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
+ 
+ WHILE NW
+  VAR SP=WIN_SP[NW]AND 511
+  IF SP THEN
+   SPSET WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
+   SPOFS WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW]
+  ENDIF
+  NW=WIN_NEXT[NW]
+ WEND
+ GPRIO 1023
+ OTW_SPSORT
+ GPAGE OTW_SP,OTW_SP
+ GLOAD GP0,1,1
+ GPAGE OTW_SP,OTW_DP
+ GLOAD GP1,1,1
+ GCLIP 1,0,0,400,239
+ GPAGE OTW_SP,OTW_DP
+  '290
+  SPSET OTW_MOUSESP,0
+  OTW_SHADOWSP=1
+  SPSET OTW_SHADOWSP,0
+  OTW_INITSP 0
+  OTW_MOVWINSP=2
+  SPSET OTW_MOVWINSP,0
+  SPSCALE OTW_MOVWINSP,1,1
+  SPHIDE OTW_MOVWINSP
+  SPVAR OTW_MOVWINSP,0,1
+  OTW_MOVWINCOL=RGB(128,128,128,128)
+  OTW_MOVWINCOL=RGB(128,255,255,255)
+  SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+END
+VAR PRUNCTL
+COMMON DEF I_PRUN
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ IF!PRUNCTL THEN
+  ExtendControl "PRUN",GetWindowControl() OUT PRUNCTL,E
+ ENDIF
+ VAR WND
+ NewTopLevelStyleWindow PRUNCTL,"PRUN",128,32,WindowResizableStyle() OUT WND,E
+ IF E THEN BEEP:ExitProcess 1
+ E=SetControlNotificationHandler(PRUNCTL,"PRUNNotificationHandler")
+ SetProcessVar WND
+ VAR TW
+ NewWindow GetButtonControl(),"RUN Program",0,10,32+68,10,WND,0OUT TW,E
+ NewWindow GetTextBoxControl(),"",0,0,128,8,WND,0OUT TW,E
+ SetWindowVar WND,0,TW
+END
+COMMON DEF L_PRUN
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 0
+END
+COMMON DEF LOADERNotificationHandler NDW,C,T,CW,_
+ VAR TW=GetWindowVar(NDW,0)
+ EXEC"PRG2:"+GetWindowName$(TW)
+END
+VAR LOADERCTL
+COMMON DEF I_LOADER
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ IF!LOADERCTL THEN
+  ExtendControl "LOADER",GetWindowControl() OUT LOADERCTL,E
+ ENDIF
+ VAR WND
+ NewTopLevelStyleWindow LOADERCTL,"LOADER",128,32,WindowResizableStyle() OUT WND,E
+ IF E THEN BEEP:ExitProcess 1
+ E=SetControlNotificationHandler(LOADERCTL,"LOADERNotificationHandler")
+ SetProcessVar WND
+ VAR TW
+ NewWindow GetButtonControl(),"Load",0,10,40,10,WND,0OUT TW,E
+ NewWindow GetTextBoxControl(),"",0,0,128,8,WND,0OUT TW,E
+ SetWindowVar WND,0,TW
+END
+COMMON DEF L_LOADER
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 0
+END
+
diff -u OTW.TXT OTW1F
--- OTW.TXT
+++ OTW1F
@@ -107,6 +107,7 @@
 VAR WIN_STYLE_RESIZ
 VAR WIN_STYLE_TRANS
 VAR WIN_STYLE_HIDE
+VAR WIN_STYLE_OWNERDRAW
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -128,6 +129,7 @@
  WIN_STYLE_RESIZ=2
  WIN_STYLE_TRANS=4
  WIN_STYLE_HIDE=8
+ WIN_STYLE_OWNERDRAW=16
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -328,6 +330,7 @@
 VAR CTL_TXTBOXCTL
 VAR CTL_LABELCTL
 VAR CTL_VSCRBARCTL
+VAR CTL_NUMUPDWNCTL
 
 VAR CTL_LSTBOXCTL
 'CONTROL STYLE
@@ -410,6 +413,12 @@
  E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
 
+ ExtendControl "NUMUPDWN",CTL_TXTBOXCTL OUT CTL_NUMUPDWNCTL,E
+ E=SetControlLMouseUpHandler(CTL_NUMUPDWNCTL,"NumUpDownLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_NUMUPDWNCTL,"NumUpDownLMouseDown")
+ E=SetControlPainter(CTL_NUMUPDWNCTL,"NumUpDownPainter")
+ E=SetControlKeyHandler(CTL_NUMUPDWNCTL,"NumUpDownKey")
+ E=SetControlCreateHandler(CTL_NUMUPDWNCTL,"NumUpDownCreate")
  'MENU
  NewControl"POPUPMENU" OUT MENUCTL,E
  E=SetControlPainter(MENUCTL,"MenuPainter")
@@ -486,6 +495,9 @@
 COMMON DEF GetListBoxControl()
  RETURN CTL_LSTBOXCTL
 END
+COMMON DEF GetNumUpDownControl()
+ RETURN CTL_NUMUPDWNCTL
+END
 'CONTROL
 COMMON DEF FindControl(NAME$)
  VAR I
@@ -783,7 +795,7 @@
  IF!F THEN
   VAR M=GetWindowVar(WND,0)
   VOID DeleteWindow(WND)
-  VOID ActiveWindow(MENU_SHOW[M])
+ ' VOID ActiveWindow(MENU_SHOW[M])
   MENU_SHOW[M]=0
  ENDIF
 END
@@ -845,8 +857,8 @@
 COMMON DEF JoinWindowGroup(WND,WND2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  IF!CheckWindow(WND2)THEN RETURN WIN_INVALIDID
- VAR NW1=WND AND NUWIDMASK
- VAR NW2=WND2 AND NUWIDMASK
+ VAR NW1=WND AND NUWIDMASK'OW
+ VAR NW2=WND2 AND NUWIDMASK'CW
  IF WIN_GROUP[NW1]THEN
   VAR NW3=WIN_GROUP[NW1]
   WIN_GNEXT[NW2]=WIN_GROUP[NW1]
@@ -859,6 +871,19 @@
 COMMON DEF LeaveWindowGroup WND
  NOIMPL "LeaveWindowGroup"
 END
+COMMON DEF GetWindowGroupMember(WND)
+ RETURN NUWIDToWND(WIN_GROUP[WND AND NUWIDMASK])
+END
+COMMON DEF GetNextWindowGroupMember(WND)
+ VAR NXT=WIN_GNEXT[WND AND NUWIDMASK]
+ IF!NXT THEN RETURN 0
+ RETURN NUWIDToWND(NXT)
+END
+COMMON DEF GetPrevWindowGroupMember(WND)
+ VAR PRV=WIN_GNEXT[WND AND NUWIDMASK]
+ IF!PRV THEN RETURN 0
+ RETURN NUWIDToWND(PRV)
+END
 COMMON DEF GetWindowGroupOwner(WND)
  IF!CheckWindow(WND)THEN RETURN 0
  RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
@@ -883,6 +908,9 @@
 COMMON DEF WindowHideFlag()
  RETURN 4
 END
+COMMON DEF WindowOwnerDrawFlag()
+ RETURN 8
+END
 DEF WindowOnCreate WND,CTL,ARG1,ARG2
  VAR NUCID=CTL AND 4095
  IF LEN(CTL_HANDLER$[NUCID,CTL_CREATEHANDLER])THEN
@@ -1016,6 +1044,9 @@
   SPAllocWindow WND
  ENDIF
  WIN_BACKGND[NUWID]=WIN_BKGND
+ IF (FLG AND 8)==8THEN
+  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_OWNERDRAW
+ ENDIF
  IF (FLG AND 512)!=512THEN
   WindowOnCreate WND,CTL,0,0
  ENDIF
@@ -1837,6 +1868,11 @@
  IF LEN(CTL_HANDLER$[CTL AND 4095,TYPE])THEN CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
  RETURN 0
 END
+COMMON DEF CallControlHandler(WND,CTL,TYPE,A1,A2)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ IF LEN(CTL_HANDLER$[CTL AND 4095,TYPE])THEN CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
+ RETURN 0
+END
 COMMON DEF PeekWindowEvent(WND)
  IF!CheckWindow(WND)THEN RETURN -1
  VAR NUWID=WND AND NUWIDMASK
@@ -1849,6 +1885,9 @@
  IF WIN_GROUP[NUWID]THEN
   VAR G=WIN_GROUP[NUWID]
   WHILE G
+   'TODO:TORIAEZU STACK OVERFLOW TAISAKU
+   'IF G==WIN_GROUP[NUWID]THEN BREAK
+   IF G==NUWID THEN BREAK
    IF UpdateWindow(G OR WIN_WID[G]<<12)THEN BREAK
    G=WIN_GNEXT[G]
   WEND
@@ -1952,6 +1991,9 @@
 COMMON DEF SetWindowVar WND,I,V
  WIN_VAR[WND AND NUWIDMASK,I]=V
 END
+COMMON DEF GetControl(WND)
+ RETURN WIN_CTL[WND AND NUWIDMASK]
+END
 COMMON DEF IsFocusWindow(WND)
  RETURN(WND AND NUWIDMASK)==WIN_ACTIVENUWID
 END
@@ -2036,6 +2078,12 @@
 VAR GB_WND
 VAR WING_SX
 VAR WING_SY
+COMMON DEF SetWindowDrawPos WND,X,Y
+ IF!CheckWindow(WND)THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK
+ WING_SX=X+WIN_FX[NUWID]
+ WING_SY=Y+WIN_FY[NUWID]
+END
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -2184,6 +2232,9 @@
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GTRI X+AX,Y+AY,X2+AX,Y2+AY,X3+AX,Y3+AY,COL
 END
+COMMON DEF GCOPYWindow WND,X1,Y1,X2,Y2,X3,Y3,MODE
+ GCOPY X1+WING_SX,Y1+WING_SY,X2+WING_SX,Y2+WING_SY,X3+WING_SX,Y3+WING_SY,MODE
+END
 COMMON DEF GLOADWindow WND,X,Y,W,H,IMG[],FLG,MODE
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2281,6 +2332,12 @@
  VAR I
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
+COMMON DEF GPUTCHRSizeWindow WND,X,Y,A,SX,SY,COL
+ GPUTCHR X+WING_SX,Y+WING_SY,CHR$(A),SX,SY,COL
+END
+COMMON DEF GPUTCHRSize1Window WND,X,Y,A,S,COL
+ GPUTCHR X+WING_SX,Y+WING_SY,CHR$(A),S,S,COL
+END
 COMMON DEF GPUTCHRBWindow WND,X,Y,A,COL,BC
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2602,6 +2659,44 @@
  MouseClipDef
  OTW_MOVWINFLG=0
 END
+COMMON DEF IsOwnerDrawWindow(WND)
+ RETURN !!(WIN_STYLE[WND AND NUWIDMASK]AND WIN_STYLE_OWNERDRAW)
+END
+COMMON DEF IsCheckedButton(WND)
+ VAR CTL=GetControl(WND)
+ IF IsControlExtend(CTL,CTL_BUTTONCTL)THEN
+  IF GetWindowVar(WND,1)THEN
+   RETURN TRUE
+  ENDIF
+ ENDIF
+ RETURN FALSE
+END
+COMMON DEF UnCheckButton WND
+ VAR CTL=GetControl(WND)
+ IF IsControlExtend(CTL,CTL_BUTTONCTL)THEN
+  IF GetWindowVar(WND,1)THEN
+   SetWindowVar WND,1,FALSE
+   VOID RepaintWindow(WND)
+  ENDIF
+ ENDIF
+END
+COMMON DEF CheckButton WND
+ VAR CTL=GetControl(WND)
+ IF IsControlExtend(CTL,CTL_BUTTONCTL)THEN
+  IF!GetWindowVar(WND,1)THEN
+   SetWindowVar WND,1,TRUE
+   VOID RepaintWindow(WND)
+  ENDIF
+ ENDIF
+END
+COMMON DEF UnCheckButtonsGroup WND
+ VAR MEMBER=GetWindowGroupMember(WND)
+ WHILE MEMBER
+  UnCheckButton MEMBER
+  ?MEMBER,GetWindowName$(MEMBER)
+  MEMBER=GetNextWindowGroupMember(MEMBER)
+ WEND
+END
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
  IF E THEN RETURN
@@ -2617,30 +2712,45 @@
  GBOXWindow W,0,0,WI,HE,B1
  GLINEWindow W,0,0,0,HE-1,B2
  GLINEWindow W,0,0,WI-1,0,B2
- E=GEndWindow(W)
+ IF!IsOwnerDrawWindow(W)THEN
+  E=GEndWindow(W)
+ ELSE
+  SetWindowDrawPos W,1+TG,1+TG
+ ENDIF
 END
 DEF ButtonLMouseUP W,C,T,X,Y
  VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
  SetWindowVar W,1,FALSE
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 DEF ButtonLMouseDown W,C,T,X,Y
  SetWindowVar W,1,TRUE
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 DEF ToggleButtonLMouseUP W,C,T,X,Y
  VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,1))
 'SetWindowVar W,1,FALSE
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 DEF ToggleButtonLMouseDown W,C,T,X,Y
  VAR F=GetWindowVar(W,1)
  SetWindowVar W,1,!F
- ButtonPainter W,C,T,0,0
+ VOID RepaintWindow(W)
+'ButtonPainter W,C,T,0,0
 END
 'PlainTextBox
+COMMON DEF SetTextBoxOwnerDraw WND,FLG
+ SetWindowVar WND,7,FLG
+END
 DEF TextBoxPainter W,C,T,A1,A2
- VAR E=GBeginWindow(W)
+ IF GetWindowVar(W,7)THEN
+  VAR E=RepaintWindow(W)'CallControlHandler(W,GetControl(W),T,A1,A2)
+  RETURN
+ ENDIF
+ E=GBeginWindow(W)
  IF E THEN RETURN
  VAR HE=GetWindowHeight(W)
  VAR WI=GetWindowWidth(W)
@@ -2694,6 +2804,146 @@
  
 ' BEEP
 END
+'1F
+COMMON DEF GetNumUpDownValue(WND)
+ UpdateNumUpDown WND
+ RETURN VAL(GetWindowName$(WND))
+END
+'?
+COMMON DEF SetNumUpDownRange WND,MIN,MAX
+ SetWindowVar WND,4,MIN
+ SetWindowVar WND,3,MAX
+ UpdateNumUpDown WND
+END
+COMMON DEF UpdateNumUpDown WND
+ VAR MIN=GetWindowVar(WND,4)
+ VAR MAX=GetWindowVar(WND,3)
+ VAR VAL=VAL(GetWindowName$(WND))
+ 'MIN
+ IF VAL<MIN THEN
+  VAL=MIN
+  SetWindowName WND,STR$(VAL)
+  DrawNumUpDown WND,FALSE
+ ENDIF
+ 'MAX
+ IF VAL>MAX THEN
+  VAL=MAX
+  SetWindowName WND,STR$(VAL)
+  DrawNumUpDown WND,FALSE
+ ENDIF
+END
+DEF NumUpDownCreate WND,CTL,TYPE,X,Y
+ SetTextBoxOwnerDraw WND,TRUE
+ SetWindowVar WND,4,&H80000000
+ SetWindowVar WND,3,&H7FFFFFFF
+END
+DEF NumUpDownLMouseUP WND,CTL,TYPE,X,Y
+ IF ABS(GetWindowVar(WND,6))==1THEN
+  SetWindowVar WND,6,3
+ ELSE
+  SetWindowVar WND,6,0
+ ENDIF
+ VAR W=GetWindowWidth(WND)
+ VAR BW=8
+ VAR H=GetWindowHeight(WND)
+ IF GBeginWindow(WND) THEN RETURN
+ DrawNumUpDownButton WND,7,H/2,W-7,0,FALSE,TRUE
+ DrawNumUpDownButton WND,7,H/2-1,W-7,H/2+1,FALSE,FALSE
+ VAR E=GEndWindow(WND)
+ E=SendNotificationWindow(GetParentWindow(WND),WND,VAL(GetWindowName$(WND)))
+ RETURN
+ E=CallBaseControlHandler(WND,CTL,TYPE,X,Y)
+END
+DEF NumUpDownLMouseDown WND,CTL,TYPE,X,Y
+ VAR BTN=GetWindowVar(WND,6)
+ IF BTN THEN
+  IF BTN!=3THEN
+   VAR FRAME=GetWindowVar(WND,5)
+   IF MAINCNT-FRAME>=4THEN
+    SetWindowVar WND,5,MAINCNT
+    VAR VAL=VAL(GetWindowName$(WND))+BTN
+    'MIN
+    IF VAL<GetWindowVar(WND,4)THEN
+     VAL=GetWindowVar(WND,4)
+    ENDIF
+    'MAX
+    IF VAL>GetWindowVar(WND,3)THEN
+     VAL=GetWindowVar(WND,3)
+    ENDIF
+    SetWindowName WND,STR$(VAL)
+    DrawNumUpDown WND,FALSE
+   ENDIF
+   VOID LMouseDownWindow(WND)
+   RETURN
+  ELSE
+   SetWindowVar WND,6,FALSE
+   RETURN
+  ENDIF
+ ENDIF
+ VAR W=GetWindowWidth(WND)
+ VAR BW=8
+ IF W-BW<=X THEN
+  VAR H=GetWindowHeight(WND)
+  IF GBeginWindow(WND)THEN RETURN
+  IF H/2>=Y THEN
+   'UE
+   DrawNumUpDownButton WND,7,H/2,W-7,0,TRUE,TRUE
+   SetWindowVar WND,6,1
+   VOID LMouseDownWindow(WND)
+   SetWindowVar WND,5,MAINCNT
+  ENDIF
+  IF H/2<=Y THEN
+   DrawNumUpDownButton WND,7,H/2-1,W-7,H/2+1,TRUE,FALSE
+   SetWindowVar WND,6,-1
+   VOID LMouseDownWindow(WND)
+   SetWindowVar WND,5,MAINCNT
+  ENDIF
+  VAR E=GEndWindow(WND)
+  RETURN
+ ENDIF
+ E=CallBaseControlHandler(WND,CTL,TYPE,X,Y)
+END
+DEF DrawNumUpDownButton W,WI,HE,X,Y,PUSH,UPF
+ GFILLWindow W,X,Y,X+WI,Y+HE,RGB(192,192,192)
+ VAR B1=RGB(0,0,0),B2=-1
+ IF PUSH THEN SWAP B1,B2
+ GBOXWindow W,X,Y,X+WI,Y+HE,B1
+ GLINEWindow W,X,Y,X,Y+HE-1,B2
+ GLINEWindow W,X,Y,X+WI-1,Y,B2
+ IF UPF THEN
+  GTRIWindow W,X+2+PUSH,Y+HE-2+PUSH,X+WI-2+PUSH,Y+HE-2+PUSH,X+(WI-2)/2+2+PUSH,Y+2+PUSH,RGB(0,0,0)
+ ELSE
+  GTRIWindow W,X+2+PUSH,Y+2+PUSH,X+WI-2+PUSH,Y+2+PUSH,X+(WI-2)/2+2+PUSH,Y+HE-2+PUSH,RGB(0,0,0)
+ ENDIF
+END
+DEF NumUpDownPainter WND,CTL,TYPE,A1,A2
+ DrawNumUpDown WND,TRUE
+END
+DEF DrawNumUpDown WND,BTNDRAWFLG
+ VAR E=GBeginWindow(WND)
+ IF E THEN RETURN
+ VAR H=GetWindowHeight(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR BW=8
+ GFILLWindow WND,0,0,W-8,H,-1
+ VAR NA$=GetWindowName$(WND)
+ GBOXWindow WND,0,0,W-BW,H,RGB(0,0,0)
+ GPRINTWindow WND,1,(H-8) DIV 2+1,NA$,RGB(0,0,0)
+ VAR BTN=GetWindowVar(WND,6)
+ IF BTNDRAWFLG&&ABS(BTN)!=1THEN
+  DrawNumUpDownButton WND,7,H/2,W-7,0,FALSE,TRUE
+  DrawNumUpDownButton WND,7,H/2-1,W-7,H/2+1,FALSE,FALSE
+ ENDIF
+ E=GEndWindow(WND)
+END
+DEF NumUpDownKey WND,CTL,TYPE,KEY,A2
+ IF KEY>=ASC("0")&&KEY<=ASC("9")||KEY==ASC(BS$())THEN VAR E=CallBaseControlHandler(WND,CTL,TYPE,KEY,A2)
+ IF KEY==&H0DTHEN
+  UpdateNumUpDown WND
+  E=SendNotificationWindow(GetParentWindow(WND),WND,VAL(GetWindowName$(WND)))
+ ENDIF
+
+END
 COMMON DEF SetLabelAlignLeft WND
  SetWindowVar WND,1,0
  VAR E=RepaintWindow(WND)
@@ -3143,13 +3393,13 @@
   PrintConsole "====================="+LF$()
   PrintConsole "Ver 5.0-B"+LF$()
 ' BEEP 94,-1000
-  VAR M1$,M2$,M3$,M4$,M5$,M6$
-  M1$=":1T140<<C8 C8&C2."
-  M2$=":2T140<G8 G8&G2."
-  M3$=":3T140<E8 E8&E2."
-  M4$=":4T140>>>><<G8 G8&G2."
-  M5$=":5T140>>>><<E8 E8&E2."
-  M6$=":6T140>>>><<C8 C8&C2."
+  VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77'34
+  M1$=":1"+G$+"T140<<C8 C8&C2."
+  M2$=":2"+G$+"T140<G8 G8&G2."
+  M3$=":3"+G$+"T140<E8 E8&E2."
+  M4$=":4"+G$+"T140>>>><<G8 G8&G2."
+  M5$=":5"+G$+"T140>>>><<E8 E8&E2."
+  M6$=":6"+G$+"T140>>>><<C8 C8&C2."
   BGMPLAY M1$+M2$+M3$+M4$+M5$+M6$
 '  BEEP 96
   PrintConsole "Loading font..."+LF$()
@@ -4595,32 +4845,42 @@
  RETURN 8
 END
 COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
- VAR I,X2
+ VAR S2=SIZE DIV 8
+ VAR I,X2,BF=0
+' INC Y,SIZE MOD 8
  IF SIZE==8THEN'&&(STYLE AND 3)!=3THEN
   X2=X
   @LOOP1
   IF STYLE AND 2THEN
-   GPAGE OTW_SP,OTW_DP
-   GCLIP 1
-   GFILL 511-8,511-8,511,511,0
-   GPUTCHR 511-8,511-8,C,1,1,COL
-   GPAGE OTW_SP,OTW_BP
-   FOR I=0TO 7
-    GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
-   NEXT
+   IF!BF THEN
+    GPAGE OTW_SP,OTW_DP
+    GCLIP 1
+    GFILL 511-8,511-8,511,511,0
+    GPUTCHR 511-8,511-8,C,1,1,COL
+    GPAGE OTW_SP,OTW_BP
+   ENDIF
+'  FOR I=0TO 7
+'   GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
+'  NEXT
+   'こうそくか
+   GCOPY OTW_DP,511-8,511-8,511,511-5,X+WING_SX+1,Y+WING_SY,0
+   GCOPY OTW_DP,511-8,511-4,511,511,X+WING_SX,Y+WING_SY+4,0
   ELSE
-   GPUTCHRWindow WND,X,Y,C,COL
+   GPUTCHRSize1Window WND,X,Y,C,S2,COL
   ENDIF
   IF STYLE AND 1 THEN
    INC X
    STYLE=STYLE AND NOT 1
+   BF=TRUE
    GOTO @LOOP1
    'GPUTCHRWindow WND,X+1,Y,C,COL
   ENDIF
   X=X2
  ELSE
-  GPUTCHRWindow WND,X,Y,C,COL
-  IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
+  GPUTCHRSize1Window WND,X,Y,C,S2,COL
+  IF STYLE AND 1 THEN
+   GPUTCHRSize1Window WND,X+1,Y,C,S2,COL
+  ENDIF
  ENDIF
  IF STYLE AND 4THEN
   GLINEWindow WND,X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
@@ -4636,6 +4896,10 @@
 DIM OTYDOC_NEXT[0]
 DIM OTYDOC_PREV[0]
 DIM OTYDOC_VAL$[0]
+VAR OTYDOC_LEFT
+VAR OTYDOC_CENTER
+VAR OTYDOC_RIGHT
+DIM OTYDOC_LINESTYLE[0]
 'LINE SIZE
 DIM OTYDOC_SIZE[0]
 VAR OTYDOC_LINESIZ
@@ -4651,6 +4915,7 @@
 DIM OTYDOC_WSIZE2[0]
 DIM OTYDOC_STYLE2[0]
 DIM OTYDOC_COL[0]
+DIM OTYDOC_COL2[0]
 DIM OTYDOC_CX[0]
 
 VAR OTYDOC_BEG$
@@ -4671,6 +4936,10 @@
   OTYDOC_NEXT=NewArray(OTYDOC_LINESIZ)
   OTYDOC_PREV=NewArray(OTYDOC_LINESIZ)
   OTYDOC_SIZE=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_LINESTYLE=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_LEFT=0
+  OTYDOC_CENTER=1
+  OTYDOC_RIGHT=2
   OTYDOC_FREE=1
   VAR I
   FOR I=1TO OTYDOC_LINESIZ-2
@@ -4686,6 +4955,7 @@
   OTYDOC_WSIZE2=NewArray(OTYDOC_WSIZ)
   OTYDOC_STYLE2=NewArray(OTYDOC_WSIZ)
   OTYDOC_COL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_COL2=NewArray(OTYDOC_WSIZ)
   OTYDOC_CX=NewArray(OTYDOC_WSIZ)
   OTYDOC_WFREE=1
   FOR I=1TO OTYDOC_WSIZ-2
@@ -4744,6 +5014,51 @@
  OTYDOC_WFREE=L
  RETURN
 END
+'FONT SIZE と LINE SIZE あわせる(かいぎょうよう)
+DEF OTYDOC_AdjustLine L
+ VAR V$=OTYDOC_VAL$[L]
+ ?"OTYDOC_AdjustLine",L,V$
+ VAR I
+ VAR HASTEXT
+ IF LEN(V$)THEN VAR C=ASC(V$[I])
+ VAR YSZ=8
+ FOR I=0TO LEN(V$)-1
+  IF C==&HB10BTHEN
+   C=ASC(V$[I])
+   IF C==0THEN
+    INC I
+    VAR YSZ2=ASC(V$[I])
+    ?"L,YSZ2,YSZ",L,YSZ2,YSZ
+    'ひどいいれこ
+    'FONTSIZEしていのあと もじがないか うわがきされてたら むこう
+    IF YSZ<YSZ2 THEN
+     FOR I=I+1 TO LEN(V$)
+      IF I<LEN(V$)THEN C=ASC(V$[I])ELSE C=0
+      IF C==&HB10C THEN CONTINUE
+      IF C==&HB10BTHEN
+       IF ASC(V$[I+1])==0THEN YSZ2=0BREAK
+       FOR I=I TO LEN(V$)-1
+        IF ASC(V$[I])==&HB10C THEN BREAK
+       NEXT
+       CONTINUE
+      ENDIF
+      ?CHR$(C),HEX$(C),YSZ2
+      YSZ=MAX(YSZ,YSZ2)
+      BREAK
+     NEXT
+    ENDIF
+'    YSZ=MAX(YSZ,ASC(V$[I]))
+    CONTINUE
+   ENDIF
+  ENDIF
+  HASTEXT=TRUE
+  C=ASC(V$[I])
+ NEXT
+ OTYDOC_SIZE[L]=YSZ
+ IF!HASTEXT THEN YSZ=MAX(YSZ,YSZ2)
+'DIALOG V$
+'DIALOG STR$(YSZ)
+END
 '
 DEF OTYDOC_GetData(WND)
  RETURN GetWindowVar(WND,0)
@@ -4762,7 +5077,6 @@
  GCLSWindow WND,RGB(255,255,255)
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  IF!OTYDOC_GetData(WND)THEN OTYDOC_NewCTL WND
  VAR D=OTYDOC_GetData(WND)
  VAR I=OTYDOC_ShowLine[D]
@@ -4773,11 +5087,16 @@
  VAR SZ=8
  VAR COL=RGB(0,0,0)
  VAR OJ
+ VAR ACX=-100,ACY=-100
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
+?"YSZ",YSZ
+'?YSZ,SZ,Y
   VAR V$=OTYDOC_VAL$[I]
+  VAR LINESTYLE=OTYDOC_LINESTYLE[I]
   VAR A
   VAR L=LEN(V$)-1,J,C
+  SZ=8
   X=1
   FOR J=0TO L
    C=ASC(V$[J])
@@ -4785,8 +5104,10 @@
    IF C==&Hb10bTHEN
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
     ENDIF
    ENDIF
     INC J
@@ -4797,6 +5118,7 @@
     INC J
     A=ASC(V$[J])
     SZ=A
+'    ?"SZ",SZ
     CONTINUE
     @COL'1
     INC J
@@ -4809,23 +5131,54 @@
     ST=A
     CONTINUE
    ENDIF
-   RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
+   IF  C<128THEN
+    RICHTEXTWindow WND,X-SZ/8,Y+YSZ-SZ,C,ST,SZ,COL
+   ELSE
+    RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
+   ENDIF
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
     ENDIF
    ENDIF
 '   ?HEX$(COL)
-   INC X,SZ
+   IF  C<128THEN INC X,SZ*6/8 ELSE INC X,SZ
+   IF X+SZ>=W THEN
+    X=1
+    INC Y,YSZ
+    IF Y+YSZ>=H THEN BREAK
+   ENDIF
   NEXT
   IF I==CL&&CX>L THEN
-   GFILLWindow WND,X,Y+YSZ-SZ-1,X+1,Y+YSZ-1,RGB(0,0,0)
+   GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
    OTYDOC_STYLE[D]=ST
+   OTYDOC_COL[D]=RGBToShort(COL)
+   OTYDOC_WSIZE[D]=SZ
   ENDIF
+  IF LINESTYLE==OTYDOC_CENTER THEN
+   'CENTER
+   VAR CENT=(W-2-X)DIV 2
+   GCOPYWindow WND,1,Y,X+1,Y+YSZ,CENT,Y,0
+   IF CENT>1 THEN
+    GFILLWindow WND,1,Y,CENT-1,Y+YSZ,-1
+   ENDIF
+  ENDIF
+  IF LINESTYLE==OTYDOC_RIGHT THEN
+   'RIGHT
+   VAR MOVE=(W-2-X)
+   GCOPYWindow WND,1,Y,X+1,Y+YSZ,MOVE,Y,0
+   IF MOVE>1 THEN
+    GFILLWindow WND,1,Y,MOVE-1,Y+YSZ,-1
+   ENDIF
+  ENDIF
   INC Y,YSZ
+  IF Y+YSZ>=H THEN BREAK
   I=OTYDOC_NEXT[I]
  WEND
+ GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  VAR E=GEndWindow(WND)
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
@@ -4869,6 +5222,61 @@
   ENDIF
   RETURN 0
 END
+DEF OTYDOC_DeleteDup2 C
+ VAR V$=OTYDOC_VAL$[C]
+ VAR CX
+ FOR CX=0TO LEN(V$)-1
+ VAR S0=0,S1=0,S2=0,OC=CX
+ IF ASC(V$[CX])==&HB10BTHEN
+  @LOOP21
+  VAR A=ASC(V$[CX])
+  FOR CX=CX+1 TO LEN(V$)-1
+   IF A==&HB10B THEN
+    A=ASC(V$[CX])
+    IF A==0THEN INC S0:CONTINUE
+    IF A==1THEN INC S1:CONTINUE
+    IF A==2THEN INC S2:CONTINUE
+   ENDIF
+   A=ASC(V$[CX])
+   IF A==&HB10CTHEN BREAK
+  NEXT
+  IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
+  ?S0,S1,S2
+  IF S2||S1||S0 THEN
+   OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX
+  ENDIF
+ ENDIF
+ NEXT
+END
+DEF OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX2
+ VAR I
+ VAR A=ASC(V$[I])
+ FOR I=OC+1 TO CX
+  IF LEN(V$)<=I THEN BREAK
+  IF A==&HB10B THEN
+   A=ASC(V$[I])
+   IF A==0THEN
+    IF S0>1 THEN DEC S0 ELSE CONTINUE
+   ENDIF
+   IF A==1THEN
+    IF S1>1 THEN DEC S1 ELSE CONTINUE
+   ENDIF
+   IF A==2THEN
+    IF S2>1 THEN DEC S2 ELSE CONTINUE
+   ENDIF
+   DEC I
+   WHILE 1
+    A=ASC(V$[I])
+    V$[I]=""
+    DEC CX
+    IF A==&HB10C THEN BREAK
+   WEND
+  ENDIF
+  A=ASC(V$[I])
+  'IF A==&HB10C THEN BREAK
+ NEXT
+ CX2=CX
+END
 COMMON DEF OTYDOCButton WND,CTL,T,BTN,_
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
  IF!BTN THEN SetWindowVar WND,5,0RETURN
@@ -4902,35 +5310,55 @@
   IF CX THEN
    DEC OTYDOC_CX[D]
    DEC CX
-   IF ASC(S$[CX])==&HB10CTHEN
+   IF CX<LEN(S$)&&ASC(S$[CX])==&HB10CTHEN
+   BEEP 
     @LOOP1
     FOR CX=CX TO 0 STEP -1
      IF ASC(S$[CX])==&HB10BTHEN DEC CX:BREAK
     NEXT
-    IF CX<0THEN CX=0
+    VAR CXMF
+    IF CX<0THEN CX=0:CXMF=TRUE
     IF ASC(S$[CX])==&HB10CTHEN @LOOP1
     OTYDOC_CX[D]=CX
+    IF CXMF THEN @___
    ENDIF
    OTYDOCRepaint WND
   ELSE
+   @___
    IF OTYDOC_UpCursor(WND)THEN
-    'VAR C=OTYDOC_CurLine[D]
+    C=OTYDOC_CurLine[D]
     OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
     OTYDOCRepaint WND
+   ELSE
+    OTYDOCRepaint WND
    ENDIF
   ENDIF
+  @_M_M_M_
   U=1
  ENDIF
  IF BTN AND 8THEN
   CX=OTYDOC_CX[D]
   C=OTYDOC_CurLine[D]
   VAR V$=OTYDOC_VAL$[C]
+  VAR S0,S1,S2,OC=CX
   IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN
    @LOOP21
-   FOR CX=CX TO LEN(V$)-1
-    IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
+   VAR A=ASC(V$[CX])
+   FOR CX=CX+1 TO LEN(V$)-1
+    IF A==&HB10B THEN
+     A=ASC(V$[CX])
+     IF A==0THEN INC S0:CONTINUE
+     IF A==1THEN INC S1:CONTINUE
+     IF A==2THEN INC S2:CONTINUE
+    ENDIF
+    A=ASC(V$[CX])
+    IF A==&HB10CTHEN INC CX:BREAK
    NEXT
    IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
+   IF S2||S1||S0 THEN
+    ?S0,S1,S2,OC;"-";CX
+    OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX
+   ENDIF
    OTYDOC_CX[D]=CX
   ENDIF
   INC OTYDOC_CX[D]
@@ -4945,7 +5373,7 @@
    ENDIF
    ENDIF
   ELSE
-   IF ASC(V$[CX])==&HB10BTHEN
+   IF ASC(V$[CX])==&HB10B0THEN
     @LOOP2
     FOR CX=CX TO LEN(V$)-1
      IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
@@ -4957,8 +5385,32 @@
   OTYDOCRepaint WND
   U=1
  ENDIF
- ?OTYDOC_VAL$[OTYDOC_CurLine[D]]'C]
- ?" "*(OTYDOC_CX[D]);""
+ CX=LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]])-1
+ VAR I,LLL
+ FOR I=0TO CX
+  IF I==OTYDOC_CX[D]THEN LLL=CSRX
+  S$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
+  IF ASC(S$[I])==&HB10BTHEN
+   COLOR 2
+   ?OTYDOC_VAL$[OTYDOC_CurLine[D]][I];'C]
+   INC I
+   IF I==OTYDOC_CX[D]THEN LLL=CSRX
+   IF ASC(S$[I])==0THEN ?"<SIZE>";
+   IF ASC(S$[I])==1THEN ?"<COLOR>";
+   IF ASC(S$[I])==2THEN ?"<STYLE>";
+   INC I
+   IF I==OTYDOC_CX[D]THEN LLL=CSRX
+   ?ASC(S$[I]);
+   CONTINUE
+  ELSEIF ASC(S$[I])==&HB10CTHEN
+   COLOR 3
+  ELSE COLOR 15 ENDIF
+  ?OTYDOC_VAL$[OTYDOC_CurLine[D]][I];'C]
+ NEXT
+  IF I==OTYDOC_CX[D]THEN LLL=CSRX
+ ?
+ COLOR 15
+ ?" "*(LLL);""
  IF U THEN
   IF R==0 THEN
    SetWindowVar WND,5,20
@@ -4969,11 +5421,38 @@
  ENDIF
 END
 
+COMMON DEF OTYDOC_TextCheck(V$,I)
+ FOR I=I TO LEN(V$)-1
+  VAR A=ASC(V$[I])
+  IF A==&HB10B THEN
+   FOR I=I TO LEN(V$)-1
+    IF ASC(V$[I])==&HB10CTHEN
+     BREAK
+    ENDIF
+   NEXT
+   CONTINUE
+  ENDIF
+  RETURN TRUE
+ NEXT
+ RETURN FALSE
+END
 COMMON DEF OTYDocKey WND,CTL,TYPE,KEY,A2
  VAR D=OTYDOC_GetData(WND)
  VAR S=OTYDOC_ShowLine[D]
  VAR C=OTYDOC_CurLine[D]
  VAR X=OTYDOC_CX[D]
+ IF!OTYDOC_COL2[D]THEN
+  OTYDOC_COL2[D]=RGBToShort(RGB(0,0,0))
+ ENDIF
+ IF!OTYDOC_COL[D]THEN
+  OTYDOC_COL[D]=RGBToShort(RGB(0,0,0))
+ ENDIF
+ IF!OTYDOC_WSIZE[D]THEN
+  OTYDOC_WSIZE[D]=8
+ ENDIF
+ IF!OTYDOC_WSIZE2[D]THEN
+  OTYDOC_WSIZE2[D]=8
+ ENDIF
  IF!S THEN
   S=OTYDOC_NewLine("",0)
   OTYDOC_ShowLine[D]=S
@@ -4986,27 +5465,48 @@
    DEC OTYDOC_CX[D]
    DEC X
    VAR S$=OTYDOC_VAL$[C]
-   IF ASC(S$[X])==&Hb10cTHEN
-    FOR X=X TO 0 STEP -1
-     IF ASC(S$[X])==&Hb10bTHEN DEC X:BREAK
-    NEXT
-    IF X<0THEN X=0
-    OTYDOC_CX[D]=X
-   ENDIF
+   WHILE 1
+    IF ASC(S$[X])==&Hb10cTHEN
+     FOR X=X TO 0 STEP -1
+      IF ASC(S$[X])==&Hb10bTHEN DEC X:BREAK
+     NEXT
+     IF X<0THEN X=0OTYDOC_CX[D]=X:OTYDOCRepaint WND:RETURN
+     OTYDOC_CX[D]=X
+     CONTINUE
+    ENDIF
+    BREAK
+   WEND
    IF ASC(S$[X])==&Hb10bTHEN
     DEC X
     DEC OTYDOC_CX[D]
+    IF X<0THEN X=0OTYDOC_CX[D]=X:OTYDOCRepaint WND:RETURN
+
    ENDIF
    RemoveStrB OTYDOC_VAL$[C],X,1
+   
+   OTYDOC_AdjustLine C
+  ELSE
+   IF OTYDOC_PREV[C]THEN
+    S$=OTYDOC_VAL$[C]
+    C=OTYDOC_DeleteLine(C)
+    OTYDOC_CurLine[D]=C
+    'SCROLL
+    OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
+    OTYDOC_VAL$[C]=OTYDOC_VAL$[C]+S$
+   ENDIF
   ENDIF
  ELSE
   IF I$==CR$()THEN
-
-   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
+   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
    IF!C2 THEN RETURN
    OTYDOC_VAL$[C]=MID$(OTYDOC_VAL$[C],0,X)
+'  OTYDOC_DeleteDup2 C
+'  OTYDOC_DeleteDup2 C2
+   OTYDOC_AdjustLine C
+   OTYDOC_SIZE[C2]=OTYDOC_WSIZE[C]
+   OTYDOC_AdjustLine C2
    OTYDOC_CurLine[D]=C2
-   OTYDOC_CX[D]=0
+   OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C2])
    IF FALSE THEN 
    SetWindowVar WND,2,C2
    SetWindowVar WND,3,0
@@ -5020,16 +5520,36 @@
    ENDIF
   ELSE
   IF OTYDOC_STYLE[D]!=OTYDOC_STYLE2[D]THEN
-   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+CHR$(&HB10C)+I$+CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)
+   VAR TF=OTYDOC_TextCheck(OTYDOC_VAL$[C],X)
+   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+CHR$(&HB10C)+I$
+   IF TF THEN PUSH I$,CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)
    OTYDOC_STYLE[D]=OTYDOC_STYLE2[D]
    INC OTYDOC_CX[D],4
   ENDIF
+  IF OTYDOC_COL[D]!=OTYDOC_COL2[D]THEN
+   TF=OTYDOC_TextCheck(OTYDOC_VAL$[C],X)
+   I$=CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL2[D])+CHR$(&HB10C)+I$
+   IF TF THEN PUSH I$,CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)
+   OTYDOC_COL[D]=OTYDOC_COL2[D]
+   INC OTYDOC_CX[D],4
+  ENDIF
+  
+  IF OTYDOC_WSIZE[D]!=OTYDOC_WSIZE2[D]THEN
+   TF=OTYDOC_TextCheck(OTYDOC_VAL$[C],X)
+   I$=CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE2[D])+CHR$(&HB10C)+I$
+   IF TF THEN PUSH I$,CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)
+   ?STR$(OTYDOC_WSIZE2[D])
+   OTYDOC_WSIZE[D]=OTYDOC_WSIZE2[D]
+   INC OTYDOC_CX[D],4
+   IF OTYDOC_SIZE[C]<OTYDOC_WSIZE[D]THEN OTYDOC_SIZE[C]=OTYDOC_WSIZE[D]
+  ENDIF
   INC OTYDOC_CX[D]
   IF!LEN(OTYDOC_VAL$[C])THEN
    OTYDOC_VAL$[C]=I$
   ELSE
    InsertStrB OTYDOC_VAL$[C],X,I$
   ENDIF
+   OTYDOC_AdjustLine C
   ENDIF
  ENDIF
  OTYDOCRepaint WND
@@ -5071,6 +5591,29 @@
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextUnderline()
  ENDIF
 END
+COMMON DEF RTESetTextColor WND,COL
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_COL2[D]=RGBToShort(COL)
+END
+COMMON DEF RTESetAlignLeft WND
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_LINESTYLE[OTYDOC_CURLINE[D]]=OTYDOC_LEFT
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetAlignCenter WND
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_LINESTYLE[OTYDOC_CURLINE[D]]=OTYDOC_CENTER
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetAlignRight WND
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_LINESTYLE[OTYDOC_CURLINE[D]]=OTYDOC_RIGHT
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetFontSize WND,SIZE
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_WSIZE2[D]=SIZE
+END
 '==================
 VAR OTYDOCCOLOR_CTL
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
@@ -5091,11 +5634,48 @@
   RTESetUnderline GetWindowVar(WND,0),F
   RETURN
  ENDIF
- IF N$==""THEN
+ IF N$==""THEN
   VAR X=GetWindowX(WND)+GetWindowX(CW),Y=GetWindowY(WND)+GetWindowY(CW)
   OTYDOC_ShowMenu OTYDOCCOLOR_CTL,WND,X,Y,X+GetWindowWidth(CW),Y+GetWindowHeight(CW)
  ENDIF
+ IF N$=="OTYDOCCOLOR"THEN
+  RTESetTextColor GetWindowVar(WND,0),F
+  VOID DeleteWindow(CW)
+ ENDIF
+ IF N$==""THEN
+  VAR BTNL,BTNC,BTNR
+  BTNL=GetWindowVar(WND,1)
+  BTNC=GetWindowVar(WND,2)
+  BTNR=GetWindowVar(WND,3)
+  IF CW==BTNL THEN
+   CheckButton BTNL
+   UnCheckButton BTNR
+   UnCheckButton BTNC
+   RTESetAlignLeft GetWindowVar(WND,0)
+  ENDIF
+  IF CW==BTNC THEN
+   CheckButton BTNC
+   UnCheckButton BTNR
+   UnCheckButton BTNL
+   RTESetAlignCenter GetWindowVar(WND,0)
+  ENDIF
+  IF CW==BTNR THEN
+   CheckButton BTNR
+   UnCheckButton BTNL
+   UnCheckButton BTNC
+   RTESetAlignRight GetWindowVar(WND,0)
+  ENDIF
+'  UnCheckButtonsGroup CW
+ ENDIF
+ IF GetControl(CW)==GetNumUpDownControl()THEN
+  RTESetFontSize GetWindowVar(WND,0),GetNumUpDownValue(CW)
+ ENDIF
 END
+COMMON DEF OTYDOC_WNDRESIZE WND,CTL,TYPE,A1,A2
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ VOID ResizeWindow(GetWindowVar(WND,0),W,H-12)
+END
 '2PX
 '
 '
@@ -5104,7 +5684,7 @@
 COMMON DEF OTYDOC_COLORCREATE WND,CTL,TYP,A1,A2
  VAR E
  NewWindow GetButtonControl(),">>>",1,GetWindowHeight(WND)-10,27,10,WND,0 OUT E,E
- 
+ SetWindowVar WND,0,-1
 END
 COMMON DEF OTYDOC_COLORPAINT WND,CTL,TYP,A1,A2
  VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
@@ -5112,6 +5692,7 @@
  GCLSWindow WND,RGB(200,200,200)
  GBOXWindow WND,0,0,GetWindowWidth(WND),GetWindowHeight(WND),RGB(0,0,0)
  VAR X,Y,C
+ VAR SEL=GetWindowVar(WND,0)
  FOR Y=0TO 3
   FOR X=0TO 3
    VAR RGB
@@ -5122,6 +5703,9 @@
     RGB=GetConsolePalette(C)
     GFILLWindow WND,X*8+2*X+2,Y*8+2*Y+2,X*8+7+2*X+2,Y*8+7+2*Y+2,RGB
    ENDIF
+   IF SEL==C THEN
+    GBOXWindow WND,X*8+2*X+1,Y*8+2*Y+1,X*8+7+2*X+3,Y*8+7+2*Y+3,RGB(255,160,16)
+   ENDIF
    INC C
   NEXT
  NEXT
@@ -5134,18 +5718,63 @@
 COMMON DEF OTYDOC_ColorChFocus WND,CTL,TYP,FLG,FW
  IF!FLG THEN
   IF GetParentWindow(FW)==WND THEN RETURN
+  VAR OWN=GetWindowGroupOwner(WND)
+  IF GetWindowVar(WND,0)!=-1THEN
+   VOID SendNotifWindow(OWN,WND,GetConsolePalette(GetWindowVar(WND,0)))
+   RETURN
+  ENDIF
   VOID DeleteWindow(WND)
  ENDIF
 END
+COMMON DEF OTYDOC_ColorMouseUp WND,CTL,TYP,X,Y
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,X,Y)
+' IF X MOD 10<2THEN RETURN
+' IF Y MOD 10<2THEN RETURN
+ VAR COL=(X DIV 10)+(Y DIV 10)*4
+ IF COL>15THEN RETURN
+ SetWindowVar WND,0,COL
+ OTYDOC_COLORPAINT WND,CTL,TYP,0,0
+END
 COMMON DEF OTYDOC_ShowMenu CTL,WND,X,Y,X2,Y2
  VAR E,MENUWND
  IF CTL==OTYDOCCOLOR_CTL THEN
-  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+2,4*8+2*4+2+8+2,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
+  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+1,4*8+2*4+2+8+1,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
   IF E THEN RETURN
  ENDIF
  E=JoinWindowGroup(WND,MENUWND)
  
 END
+COMMON DEF OTYDOC_LCRPAINT WND,CTL,TYP,_,__
+ IF CallBaseControlHandler(WND,CTL,TYP,_,__)THEN RETURN
+ VAR T=GetWindowVar(WND,7)
+ REPEAT
+  ON T GOTO @LEFT,@CENTER,@RIGHT
+  @LEFT
+   GLINEWindow WND,1,1,8,1,RGB(0,0,0)
+   GLINEWindow WND,1,3,6,3,RGB(0,0,0)
+   GLINEWindow WND,1,5,8,5,RGB(0,0,0)
+   GLINEWindow WND,1,7,6,7,RGB(0,0,0)
+  BREAK
+  @CENTER
+   GLINEWindow WND,1,1,8,1,RGB(0,0,0)
+   GLINEWindow WND,2,3,7,3,RGB(0,0,0)
+   GLINEWindow WND,1,5,8,5,RGB(0,0,0)
+   GLINEWindow WND,2,7,7,7,RGB(0,0,0)
+  BREAK
+  @RIGHT
+   GLINEWindow WND,1,1,8,1,RGB(0,0,0)
+   GLINEWindow WND,3,3,8,3,RGB(0,0,0)
+   GLINEWindow WND,1,5,8,5,RGB(0,0,0)
+   GLINEWindow WND,3,7,8,7,RGB(0,0,0)
+  BREAK
+ UNTIL FALSE
+ VAR E=GEndWindow(WND)
+END
+COMMON DEF OTYDOC_LCRMouseDown WND,CTL,TYP,_,__
+ IF IsCheckedButton(WND)THEN RETURN
+ IF CallBaseControlHandler(WND,CTL,TYP,_,__)THEN RETURN
+END
+VAR OTYDOCLCRBTN_CTL
 COMMON DEF I_OTYDOC
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -5163,9 +5792,20 @@
   E=SetControlCreateHandler(OTYDOCCOLOR_CTL,"OTYDOC_COLORCREATE")
   E=SetControlChFocusHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorChFocus")
   E=SetControlNotifHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorNotif")
+  E=SetControlLMouseDownHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorMouseUp")
+  E=SetControlResizeHandler(OTYDOC_WNDCTL,"OTYDOC_WNDRESIZE")
+  ExtendControl "OTYDOCLCRBUTTON",GetToggleButtonControl() OUT OTYDOCLCRBTN_CTL,E
+  E=SetControlPainter(OTYDOCLCRBTN_CTL,"OTYDOC_LCRPAINT")
+  E=SetControlLMouseDownHandler(OTYDOCLCRBTN_CTL,"OTYDOC_LCRMouseDown")
  ENDIF
- NewTopLevelWindow OTYDOC_WNDCTL,"OTYDOC",256,128 OUT WND,E
- SetProcessVar WND
+ NewTopLevelStyleWindow OTYDOC_WNDCTL,"OTYDOC",256,128,WindowMenuStyle() OR WindowResizableStyle() OUT WND,E
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"New",1
+ AddMenuItem MENU,"Open",2
+ AddMenuItem MENU,"Save",3
+ AddMenuItem MENU,"Save as",4
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU SetProcessVar WND
  VAR DOC,COL
  NewWindow OTYDOCCTL,"OTYDOC",0,12,256,116,WND,0 OUT DOC,E
  SetWindowVar WND,0,DOC
@@ -5174,7 +5814,35 @@
  NewWindow GetToggleButtonControl(),"S",12*2,0,11,11,WND,0 OUT E,E
  NewWindow GetToggleButtonControl(),"U",12*3,0,11,11,WND,0 OUT E,E
  NewWindow GetButtonControl(),"color",12*4,0,11+32,11,WND,0 OUT E,E
- NewWindow GetButtonControl(),"",12*5+32,0,11,11,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"",12*5+32,0,11,11,WND,0 OUT E,E
+ VAR NUM
+ VAR X=12*6+32
+ NewWindow GetLabelControl(),"size",X,2,31,7,WND,0 OUT E,E
+ INC X,32
+ NewWindow GetNumUpDownControl(),"0",X,0,11+8*3,11,WND,0 OUT NUM,E
+ SetNumUpDownRange NUM,8,96
+ INC X,11+8*3+1
+ VAR BTNL,BTNC,BTNR
+ NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNL,E
+ INC X,12
+ NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNC,E
+ INC X,12
+ NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNR,E
+ INC X,12
+ SetWindowVar WND,1,BTNL
+ SetWindowVar WND,2,BTNC
+ SetWindowVar WND,3,BTNR
+ SetWindowVar BTNL,7,0
+ SetWindowVar BTNC,7,1
+ SetWindowVar BTNR,7,2
+ 'TODO:GROUPのかくちょう
+'E=JoinWindowGroup(BTNL,BTNC)
+'E=JoinWindowGroup(BTNL,BTNR)
+'E=JoinWindowGroup(BTNC,BTNL)
+'E=JoinWindowGroup(BTNC,BTNR)
+'E=JoinWindowGroup(BTNR,BTNL)
+'E=JoinWindowGroup(BTNR,BTNC)
+ VOID ActiveWindow(WND)
 END
 COMMON DEF L_OTYDOC
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
diff -u OTW.TXT OTW20
--- OTW.TXT
+++ OTW20
@@ -331,6 +331,7 @@
 VAR CTL_LABELCTL
 VAR CTL_VSCRBARCTL
 VAR CTL_NUMUPDWNCTL
+VAR CTL_DRPDWNCTL
 
 VAR CTL_LSTBOXCTL
 'CONTROL STYLE
@@ -425,6 +426,10 @@
  E=SetControlMouseMoveHandler(MENUCTL,"MenuMouseMove")
  E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
  E=SetControlChFocusHandler(MENUCTL,"MenuChFocus")
+
+ NewControl "DROPDOWNLIST" OUT CTL_DRPDWNCTL,E
+ E=SetControlPainter(CTL_DRPDWNCTL,"DropDownListPainter")
+ E=SetControlMouseMoveHandler(CTL_DRPDWNCTL,"DropDownListMouseMove")
  OTW_CTL_LIST
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
@@ -715,7 +720,7 @@
 END
 VAR MENU_NOALLOC
 COMMON DEF NewMenu OUT MENU,E
- IF !MENU_FREE THEN MENU=0RETURN
+ IF !MENU_FREE THEN MENU=0:E=MENU_NOALLOC:RETURN
  INC MENU_IDCNT
  E=0
  MENU_ID[MENU_FREE]=MENU_IDCNT
@@ -1613,6 +1618,26 @@
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
+COMMON DEF ShowWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN
+  WIN_HIDE[NUWID]=FALSE
+  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] AND NOT WIN_STYLE_HIDE
+ ELSE
+  RETURN 0
+ ENDIF
+ RETURN RepaintWindow(WND)
+END
+COMMON DEF HideWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN RETURN 0
+ WIN_HIDE[NUWID]=TRUE
+ WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_HIDE
+ RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+ RETURN 0
+END
 COMMON DEF BeginWindowOP(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  RETURN 0
@@ -1712,6 +1737,7 @@
   GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_BKGND
   GCOPY OTW_GP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   OTW_SPCHR NUWID
+  OTW_DrawMap WIN_PARENT[NUWID]
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  '   B=WIN_CHILD[NXT]
@@ -2354,6 +2380,9 @@
  VAR I
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
+COMMON DEF GetBackColor()
+ RETURN WIN_BKGND
+END
 DEF DesktopPainter WND,CTL,TYPE,A1,A2
 RETURN
  VAR E=GBEGINWindow(WND)
@@ -2700,6 +2729,10 @@
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
  IF E THEN RETURN
+ '2:LEFT
+ '1:RIGHT
+ '0:CENTER
+ VAR ALIGN=GetWindowVar(W,2)
  VAR TG=GetWindowVar(W,1)
  VAR HE=GetWindowHeight(W)
  VAR WI=GetWindowWidth(W)
@@ -2708,7 +2741,18 @@
  VAR B2=-1
  IF TG THEN SWAP B1,B2
  GFILLWindow W,0,0,WI,HE,RGB(192,192,192)
- GPRINTWindow W,(WI-GetTextWidth(NA$))/2+TG+1,(HE-6)/2+TG,NA$,RGB(0,0,0)
+ VAR TX
+ ON ALIGN GOTO @CENTER,@RIGHT,@LEFT,@DEFAULT
+ @CENTER
+ TX=(WI-GetTextWidth(NA$))/2+TG+1
+ GOTO @DEFAULT
+ @RIGHT
+ TX=WI-GetTextWidth(NA$)+TG-1
+ GOTO @DEFAULT
+ @LEFT
+ TX=TG+1
+ @DEFAULT
+ GPRINTWindow W,TX,(HE-6)/2+TG,NA$,RGB(0,0,0)
  GBOXWindow W,0,0,WI,HE,B1
  GLINEWindow W,0,0,0,HE-1,B2
  GLINEWindow W,0,0,WI-1,0,B2
@@ -2741,6 +2785,18 @@
  VOID RepaintWindow(W)
 'ButtonPainter W,C,T,0,0
 END
+COMMON DEF SetButtonAlignLeft WND
+ SetWindowVar WND,2,2
+ VAR E=RepaintWindow(WND)
+END
+COMMON DEF SetButtonAlignRight WND
+ SetWindowVar WND,2,1
+ VAR E=RepaintWindow(WND)
+END
+COMMON DEF SetButtonAlignCenter WND
+ SetWindowVar WND,2,0
+ VAR E=RepaintWindow(WND)
+END
 'PlainTextBox
 COMMON DEF SetTextBoxOwnerDraw WND,FLG
  SetWindowVar WND,7,FLG
@@ -4153,7 +4209,7 @@
   ExitProcess 1
   RETURN
  ENDIF
- VAR PTR=malloc(64*64)
+ VAR PTR=RND(256)+1'malloc(64*64)
  IF!PTR THEN BEEP:ExitProcess 1RETURN
  VAR WND,E
  IF!PAINTCTL THEN
@@ -5017,23 +5073,30 @@
 'FONT SIZE と LINE SIZE あわせる(かいぎょうよう)
 DEF OTYDOC_AdjustLine L
  VAR V$=OTYDOC_VAL$[L]
- ?"OTYDOC_AdjustLine",L,V$
+ '?"OTYDOC_AdjustLine",L,V$
  VAR I
  VAR HASTEXT
- IF LEN(V$)THEN VAR C=ASC(V$[I])
+ IF LEN(V$)THEN VAR C=-1'ASC(V$[I])
  VAR YSZ=8
  FOR I=0TO LEN(V$)-1
+  IF C==-1 THEN C=ASC(V$[I])CONTINUE
   IF C==&HB10BTHEN
    C=ASC(V$[I])
    IF C==0THEN
     INC I
     VAR YSZ2=ASC(V$[I])
-    ?"L,YSZ2,YSZ",L,YSZ2,YSZ
+    '?"L,YSZ2,YSZ",L,YSZ2,YSZ
     'ひどいいれこ
     'FONTSIZEしていのあと もじがないか うわがきされてたら むこう
     IF YSZ<YSZ2 THEN
      FOR I=I+1 TO LEN(V$)
-      IF I<LEN(V$)THEN C=ASC(V$[I])ELSE C=0
+      IF I<LEN(V$)THEN C=ASC(V$[I])ELSE
+       IF HASTEXT THEN
+        '?"EEEEEEEEEE"
+        BREAK
+       ENDIF
+       C=0
+      ENDIF
       IF C==&HB10C THEN CONTINUE
       IF C==&HB10BTHEN
        IF ASC(V$[I+1])==0THEN YSZ2=0BREAK
@@ -5042,16 +5105,23 @@
        NEXT
        CONTINUE
       ENDIF
-      ?CHR$(C),HEX$(C),YSZ2
+      '?CHR$(C),HEX$(C),YSZ2
       YSZ=MAX(YSZ,YSZ2)
       BREAK
      NEXT
     ENDIF
 '    YSZ=MAX(YSZ,ASC(V$[I]))
     CONTINUE
+   ELSE
+    FOR I=I TO LEN(V$)-1
+     IF ASC(V$[I])==&HB10C THEN BREAK
+    NEXT
+    INC I
+    IF I<LEN(V$)THEN C=ASC(V$[I])
+    CONTINUE
    ENDIF
   ENDIF
-  HASTEXT=TRUE
+  HASTEXT=MAX(C,1)'TRUE
   C=ASC(V$[I])
  NEXT
  OTYDOC_SIZE[L]=YSZ
@@ -5090,7 +5160,7 @@
  VAR ACX=-100,ACY=-100
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
-?"YSZ",YSZ
+'?"YSZ",YSZ
 '?YSZ,SZ,Y
   VAR V$=OTYDOC_VAL$[I]
   VAR LINESTYLE=OTYDOC_LINESTYLE[I]
@@ -5241,7 +5311,7 @@
    IF A==&HB10CTHEN BREAK
   NEXT
   IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
-  ?S0,S1,S2
+  '?S0,S1,S2
   IF S2||S1||S0 THEN
    OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX
   ENDIF
@@ -5250,7 +5320,7 @@
 END
 DEF OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX2
  VAR I
- VAR A=ASC(V$[I])
+ VAR A=ASC(V$[OC])
  FOR I=OC+1 TO CX
   IF LEN(V$)<=I THEN BREAK
   IF A==&HB10B THEN
@@ -5272,6 +5342,7 @@
     IF A==&HB10C THEN BREAK
    WEND
   ENDIF
+  IF LEN(V$)<=I THEN BREAK
   A=ASC(V$[I])
   'IF A==&HB10C THEN BREAK
  NEXT
@@ -5333,7 +5404,6 @@
     OTYDOCRepaint WND
    ENDIF
   ENDIF
-  @_M_M_M_
   U=1
  ENDIF
  IF BTN AND 8THEN
@@ -5356,7 +5426,7 @@
    NEXT
    IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
    IF S2||S1||S0 THEN
-    ?S0,S1,S2,OC;"-";CX
+    '?S0,S1,S2,OC;"-";CX
     OTYDOC_DeleteDup V$,OC,CX,S0,S1,S2 OUT CX
    ENDIF
    OTYDOC_CX[D]=CX
@@ -5538,7 +5608,7 @@
    TF=OTYDOC_TextCheck(OTYDOC_VAL$[C],X)
    I$=CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE2[D])+CHR$(&HB10C)+I$
    IF TF THEN PUSH I$,CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)
-   ?STR$(OTYDOC_WSIZE2[D])
+   '?STR$(OTYDOC_WSIZE2[D])
    OTYDOC_WSIZE[D]=OTYDOC_WSIZE2[D]
    INC OTYDOC_CX[D],4
    IF OTYDOC_SIZE[C]<OTYDOC_WSIZE[D]THEN OTYDOC_SIZE[C]=OTYDOC_WSIZE[D]
@@ -6561,3 +6631,71 @@
  IF E THEN ExitProcess 0
 END
 
+COMMON DEF TSKBARP WND,C,T,CW,_
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,GetBackColor()
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ GLINEWindow WND,0,0,W,0,RGB(0,0,0)
+ GLINEWindow WND,0,1,W,1,RGB(255,255,255)
+ IF GEndWindow(WND)THEN RETURN
+END
+VAR TSKBARCTL
+DIM TB_TASKLIST$[0]
+DIM TB_TASKLIST_WND[0]
+COMMON DEF I_TSKBAR
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ IF!TSKBARCTL THEN
+  NewControl "TSKBAR" OUT TSKBARCTL,E
+  E=SetControlPainter(TSKBARCTL,"TSKBARP")
+ ' E=SetControlNotificationHandler(TSKBARCTL,"TSKBARNotificationHandler")
+ ENDIF
+ VAR WND
+ VAR H=16,W=399
+ NewWindow TSKBARCTL,"TSKBAR",0,239-H,W,H,GetRootWND(),0 OUT WND,E
+ IF E THEN BEEP:ExitProcess 1
+ SetProcessVar WND
+ VAR TW
+ VAR TSKW=84,TC,TSX=24,TCM=5
+ TB_TASKLIST$=NewArray$(TCM)
+ TB_TASKLIST_WND=NewArray(TCM)
+  NewWindow GetToggleButtonControl(),"",1,3,TSX-3,11,WND,0OUT TW,E
+ FOR TC=0TO TCM-1
+  NewWindow GetToggleButtonControl(),"Task"+STR$(TC),TSKW*TC+TC*2+TSX,3,TSKW,11,WND,WindowHideFlag()OUT TW,E
+  SetButtonAlignLeft TW
+  TB_TASKLIST_WND[TC]=TW
+ NEXT
+ SetWindowVar WND,0,TW
+END
+DEF UPDATE_TSKBAR
+ VAR TSKW=84,TC,TSX=24,TCM=5
+ VAR RW=GetRootWND()
+ VAR CW=GetChildWindow(RW)
+ IF GetNextWindow(CW)THEN
+  TC=0
+  WHILE GetNextWindow(CW)
+   IF TCM<=TC THEN BREAK
+   SetWindowName TB_TASKLIST_WND[TC],GetWindowName$(CW)
+   IF ShowWindow(TB_TASKLIST_WND[TC])THEN BREAK
+   CW=GetNextWindow(CW)
+   INC TC
+  WEND
+ ENDIF
+END
+VAR TSKBAR_TIMER
+VAR TSKBAR_CWND
+COMMON DEF L_TSKBAR
+ IF TSKBAR_TIMER!=MAINCNT THEN
+  UPDATE_TSKBAR
+'  TSKBAR_CWND=OCW
+  TSKBAR_TIMER=MAINCNT DIV 100
+ ENDIF
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 0
+END
+
diff -u OTW.TXT OTW21
--- OTW.TXT
+++ OTW21
@@ -4,7 +4,8 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
-VAR WIN_BKGND
+VAR WIN_BKGND,WIN_BTNBACK
+VAR OTW_ENABLE_SHADOW
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOVWINNUWID
 '1:MOV
@@ -244,6 +245,8 @@
 VAR MENU_IDCNT
 VAR MENU_FREE
 VAR MENUCTL
+VAR MENU_STYLE_SEPARATOR
+VAR MENU_SEPARATOR_HEIGHT
 DEF OTW_MENU_INITARRAY
  PrintConsoleln "Init menu..."
  MENU_ITEMMAX=256
@@ -253,6 +256,8 @@
  MENU_ICHILD=NewArray(MENU_ITEMMAX)
  MENU_IPARENT=NewArray(MENU_ITEMMAX)
  MENU_ISTYLE=NewArray(MENU_ITEMMAX)
+ MENU_STYLE_SEPARATOR=1
+ MENU_SEPARATOR_HEIGHT=4
  MENU_IVAR=NewArray(MENU_ITEMMAX)
  OTW_INITLIST MENU_INEXT
  MENU_ITEMFREE=1
@@ -334,6 +339,7 @@
 VAR CTL_DRPDWNCTL
 
 VAR CTL_LSTBOXCTL
+VAR CTL_DRPDWNBOXCTL
 'CONTROL STYLE
 'クリックしてもFOCUSしない
 VAR CTL_STYLE_NCFOCUS
@@ -427,10 +433,15 @@
  E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
  E=SetControlChFocusHandler(MENUCTL,"MenuChFocus")
 
+
+ OTW_CTL_LIST
  NewControl "DROPDOWNLIST" OUT CTL_DRPDWNCTL,E
  E=SetControlPainter(CTL_DRPDWNCTL,"DropDownListPainter")
- E=SetControlMouseMoveHandler(CTL_DRPDWNCTL,"DropDownListMouseMove")
- OTW_CTL_LIST
+ E=SetControlLMouseDownHandler(CTL_DRPDWNCTL,"DropDownListLMD")
+ E=SetControlLMouseUpHandler(CTL_DRPDWNCTL,"DropDownListLMU")
+
+ ExtendControl "DROPDOWNLISTBOX",GetListBoxControl() OUT CTL_DRPDWNBOXCTL,E
+ E=SetControlChFocusHandler(CTL_DRPDWNBOXCTL,"DropDownListBoxChFocus")
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
  CTL_CID[0]=&Hdeadbeef
@@ -457,6 +468,7 @@
  E=SetControlLMouseDownHandler(CTL_LSTBOXCTL,"ListBoxLMD")
  E=SetControlLDoubleClickHandler(CTL_LSTBOXCTL,"ListBoxLMD")
  E=SetControlDeleteHandler(CTL_LSTBOXCTL,"ListBoxDelete")
+ E=SetControlResizeHandler(CTL_LSTBOXCTL,"ListBoxResize")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -503,6 +515,9 @@
 COMMON DEF GetNumUpDownControl()
  RETURN CTL_NUMUPDWNCTL
 END
+COMMON DEF GetDropDownListControl()
+ RETURN CTL_DRPDWNCTL
+END
 'CONTROL
 COMMON DEF FindControl(NAME$)
  VAR I
@@ -588,6 +603,16 @@
  CTL_HANDLER$[CTL AND 4095,CTL_LBTNDWNHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlRMouseUpHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_RBTNUPHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlRMouseDownHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_RBTNDWNHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlClickFrameHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
@@ -685,7 +710,7 @@
 COMMON DEF ClipboardContainsText()
  RETURN CLPBRDCTXT
 END
-COMMON DEF ClipboardGetText()
+COMMON DEF ClipboardGetText$()
  IF CLPBRDCTXT THEN RETURN CLPBRD$
  RETURN ""
 END
@@ -724,21 +749,30 @@
  INC MENU_IDCNT
  E=0
  MENU_ID[MENU_FREE]=MENU_IDCNT
- MENU_HEIGHT[MENU_FREE]=1
- MENU_WIDTH[MENU_FREE]=2
+ MENU_HEIGHT[MENU_FREE]=4
+ MENU_WIDTH[MENU_FREE]=0
  MENU=MENU_FREE OR MENU_IDCNT<<12
  MENU_FREE=MENU_NEXT[MENU_FREE]
 END
 COMMON DEF SetMenuBar MENU,WND
  NOIMPL FORMAT$("NOIMPL SetMenuBar %D,%D",MENU,WND)
 END
+'===
+'ShowContextMenu
+'MOUSEノCOORDニMENUヲSHOW
+'===
+COMMON DEF ShowContextMenu MENU,WND
+ VAR X=GetMouseX()
+ VAR Y=GetMouseY()
+ ShowMenuXY MENU AND 4095,WND,X,Y
+END
 COMMON DEF ShowMenu MENU,WND
  NOIMPL FORMAT$("NOIMPL ShowMenu %D,%D",MENU,WND)
 END
-DEF ShowMenu_ MENU,WND,X,Y
+DEF ShowMenuXY MENU,WND,X,Y
  VAR W=WND AND NUWIDMASK
  VAR E
- NewWindow MENUCTL,"",WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W],MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
  VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
  SetWindowVar MENU_NUWID[MENU],0,MENU
  MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
@@ -746,6 +780,10 @@
  WIN_ACTIVENUWID=MENU_NUWID[MENU]
 ' MENU_SEL[C],WND,X-1,0
 END
+DEF ShowMenu_ MENU,WND,X,Y
+ VAR W=WND AND NUWIDMASK
+ ShowMenuXY MENU,WND,WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W]
+END
 DEF NewMenuItem(STR$,PREV,STYLE)
  VAR I=MENU_ITEMFREE
  IF!I THEN RETURN
@@ -755,15 +793,20 @@
  MENU_IPARENT[I]=PREV
  MENU_ITEMFREE=MENU_INEXT[I]
  MENU_INEXT[I]=0
+ MENU_ISTYLE[I]=STYLE
  RETURN I
 END
 COMMON DEF GetWindowMenu(WND)
  RETURN WIN_MENU[WND AND NUWIDMASK]
 END
 COMMON DEF AddMenuItem MENU,STR$,IVAR
+ AddMenuItemStyle MENU,STR$,IVAR,0'STYLE
+END
+'COMMON?
+DEF AddMenuItemStyle MENU,STR$,IVAR,STYLE
  IF!CheckMenu(MENU)THEN RETURN
  VAR N=MENU AND 4095
- VAR I=NewMenuItem(STR$,MENU_LAST[N],0)
+ VAR I=NewMenuItem(STR$,MENU_LAST[N],STYLE)
  IF!MENU_LAST[N]THEN
   MENU_LAST[N]=I
   MENU_ITEM[N]=I
@@ -771,12 +814,18 @@
   MENU_LAST[N]=I
  ENDIF
  MENU_IVAR[I]=IVAR
- INC MENU_HEIGHT[N],8
- IF MENU_WIDTH[N]<LEN(STR$)*8THEN
-  MENU_WIDTH[N]=LEN(STR$)*8
+ IF STYLE AND MENU_STYLE_SEPARATOR THEN
+  INC MENU_HEIGHT[N],MENU_SEPARATOR_HEIGHT
+ ELSE
+  INC MENU_HEIGHT[N],8
  ENDIF
+ '3 IS MENU WIDTH
+ IF MENU_WIDTH[N]<LEN(STR$)*8+3THEN
+  MENU_WIDTH[N]=LEN(STR$)*8+3
+ ENDIF
 END
 COMMON DEF AddMenuItemSeparator MENU
+ AddMenuItemStyle MENU,"",0,MENU_STYLE_SEPARATOR'STYLE
 END
 COMMON DEF AddSubMenuItem MENU,STR$,SUBMENU
  AddMenuItem MENU,STR$,0
@@ -805,48 +854,72 @@
  ENDIF
 END
 DEF MenuMouseMove WND,C,T,X,Y
+ VAR SX=2
  VAR M=GetWindowVar(WND,0)
- VAR I=MENU_ITEM[M],Y1=1,Y2=1
+ VAR I=MENU_ITEM[M],Y1=2,Y2=Y1
  VAR OS=MENU_SEL[M]
- VAR BEG,G
+ VAR BEG,G,SELF=0'SELECT FLAG
  WHILE I
+  IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
+   INC Y2,MENU_SEPARATOR_HEIGHT
+   GOTO @SKIP
+  ENDIF
   INC Y2,8
   IF Y1<=Y&&Y2>Y THEN
+   SELF=1
    IF OS!=I&&!G THEN 
    MENU_SEL[M]=I
    IF!BEG&&GBeginWindow(WND)THEN :'BREAK
    BEG=1
-   GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(0,0,255)
-   GPRINTWindow WND,1,Y1,MENU_INAME$[I],-1
+   GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,RGB(0,0,255)
+   GPRINTWindow WND,SX,Y1,MENU_INAME$[I],-1
    G=0
    ENDIF
    IF!OS THEN BREAK
   ELSE
    IF I==OS THEN
     IF!BEG&&GBeginWindow(WND)THEN :'BREAK
-    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,WIN_BKGND
-    GPRINTWindow WND,1,Y1,MENU_INAME$[I],&HFF000000
+    GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,WIN_BKGND
+    GPRINTWindow WND,SX,Y1,MENU_INAME$[I],&HFF000000
     OS=0
     IF BEG THEN BREAK
     BEG=1
    ENDIF
   ENDIF
+  @SKIP
   Y1=Y2
   I=MENU_INEXT[I]
  WEND
+ IF!SELF THEN
+  MENU_SEL[M]=0
+ ENDIF
  IF BEG THEN BEG=GEndWindow(WND)
 END
 DEF MenuPainter WND,C,T,XY,WH
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,WIN_BKGND
+ VAR SX=2
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  GBOXWindow WND,0,0,W,H,&HFF000000
+ GBOXWindow WND,1,1,W-1,H-1,RGB(128,128,128)
+ 
+ GLINEWindow WND,0,0,W-1,0,WIN_BKGND
+ GLINEWindow WND,0,0,0,H-1,WIN_BKGND
+ 
+ GLINEWindow WND,1,1,W-2,1,RGB(255,255,255)
+ GLINEWindow WND,1,1,1,H-2,RGB(255,255,255)
  VAR M=GetWindowVar(WND,0)
- VAR I=MENU_ITEM[M],Y=1
+ VAR I=MENU_ITEM[M],Y=2
  WHILE I
-  GPRINTWindow WND,1,Y,MENU_INAME$[I],&HFF000000
-  INC Y,8
+  IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
+   GLINEWindow WND,SX+1,Y+1,W-SX-1,Y+1,RGB(128,128,128)
+   GLINEWindow WND,SX+1,Y+2,W-SX-1,Y+2,-1
+   INC Y,MENU_SEPARATOR_HEIGHT
+  ELSE
+   GPRINTWindow WND,SX,Y,MENU_INAME$[I],&HFF000000
+   INC Y,8
+  ENDIF
   I=MENU_INEXT[I]
  WEND
  VAR E=GEndWindow(WND)
@@ -1073,12 +1146,29 @@
 DEF SPAllocWindow WND
  INC OTW_TOPLEVELCNT
  VAR SP=2,NUWID=WND AND NUWIDMASK
+ IF TRUE THEN
+  VAR SP2
+  SPSET 2,511,0 OUT SP
+  IF OTW_ENABLE_SHADOW THEN
+   SPSET 2,511,0 OUT SP2
+   SPVAR SP,1,SP2
+   SPLINK SP2,SP
+   SPSCALE SP2,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+   SPCOLOR SP2,RGB(128,063,063,063)
+   SPOFS SP2,3,3,1
+   SPSHOW SP2
+   SPVAR SP2,0,WND
+  ENDIF
+  WIN_SP[NUWID]=SP OR 512
+ ELSE
+ 'FOR 3.0.X?
  WHILE SPVAR(SP,0)
   SP=(SP+1)MOD 255
  WEND
  WIN_SP[NUWID]=SP OR 512
  'SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
  SPSET SP,0
+ ENDIF
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
  SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSHOW SP
@@ -1331,7 +1421,7 @@
  WindowOnCreate WND,CTL
  VOID ActiveWindow(WND)
 END
-COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
+COMMON DEF NewDialogBoxWithArg(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,A1,A2)
  IF!CheckControl(CTL)THEN
   RETURN CTL_INVALIDID
  ENDIF
@@ -1344,14 +1434,18 @@
  VAR WND,E
  IF AX<0THEN AX=0
  IF AY<0THEN AY=0
- NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag() OUT WND,E
+ NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag()OR 512 OUT WND,E
  IF FLAG THEN
   WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
  ENDIF
  IF E THEN RETURN E
+ InitWindow WND,A1,A2
  E=JoinWindowGroup(OWNER,WND)
  RETURN E
 END
+COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
+ RETURN NewDialogBoxWithArg(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,0,0)
+END
 COMMON DEF NewModalDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER)
  RETURN NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,1)
 END
@@ -1410,6 +1504,10 @@
  WIN_NAME$[NUWID]=""
  IF WIN_SP[NUWID]THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
+  IF OTW_ENABLE_SHADOW THEN
+   SPVAR SPVAR(WIN_SP[NUWID]AND 511,1),0,0
+   SPCLR SPVAR(WIN_SP[NUWID]AND 511,1)
+  ENDIF
   SPCLR WIN_SP[NUWID]AND 511
   WIN_SP[NUWID]=0
   DEC OTW_TOPLEVELCNT
@@ -1624,9 +1722,14 @@
  IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN
   WIN_HIDE[NUWID]=FALSE
   WIN_STYLE[NUWID]=WIN_STYLE[NUWID] AND NOT WIN_STYLE_HIDE
+  IF WIN_SP[NUWID]THEN
+   OTW_SPSHOW NUWID
+   OTW_SPCHR NUWID
+  ENDIF
  ELSE
   RETURN 0
  ENDIF
+ OTW_DrawMap NUWID
  RETURN RepaintWindow(WND)
 END
 COMMON DEF HideWindow(WND)
@@ -1635,6 +1738,9 @@
  IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN RETURN 0
  WIN_HIDE[NUWID]=TRUE
  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_HIDE
+ IF WIN_SP[NUWID]THEN
+  OTW_SPHIDE NUWID 
+ ENDIF
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -1737,7 +1843,6 @@
   GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_BKGND
   GCOPY OTW_GP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   OTW_SPCHR NUWID
-  OTW_DrawMap WIN_PARENT[NUWID]
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  '   B=WIN_CHILD[NXT]
@@ -1793,6 +1898,7 @@
  OTW_CLIPWindow NUWID
  OTW_CLIPCHILD NUWID
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+'WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
 DEF MoveResizeWindowF(WND,X,Y,W,H)
@@ -1868,6 +1974,19 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF RMouseUpWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_RBTNUPHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
+DEF RMouseDownWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_RBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
+DEF RDoubleClickWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ 'FIXME:RDBLCLK
+ RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
 DEF MouseMoveWindowOnFrame(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
@@ -1879,6 +1998,14 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
+DEF RMouseDownWindowOnFrame(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_RBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
+DEF RMouseUpWindowOnFrame(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_RBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
 DEF MouseLeaveWindowOnFrame(WND)
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMMOUSEMVHANDLER,CTL_LEAVEFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
@@ -1939,6 +2066,7 @@
   DEC WIN_MSGCNT[NUWID,TYPE]
  ENDIF
  IF S2!=WIN_MSGS[NUWID]THEN BREAK
+ BREAK
  WEND
  RETURN 0
 END
@@ -2011,6 +2139,18 @@
 'RETURN WIN_FY[WND AND NUWIDMASK]
  RETURN WIN_Y[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]
 END
+'ROOT WINDOWからの ぜっだいざびょう
+COMMON DEF GetWindowAX(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+'RETURN WIN_FX[WND AND NUWIDMASK]
+ RETURN WIN_AX[WND AND NUWIDMASK]+WIN_FW1[WND AND NUWIDMASK]-WIN_AX[WIN_ROOTWND2 AND NUWIDMASK]-WIN_FW1[WIN_ROOTWND2 AND NUWIDMASK]
+END
+'ROOT WINDOWからの ぜっだいざびょう
+COMMON DEF GetWindowAY(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+'RETURN WIN_FY[WND AND NUWIDMASK]
+ RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WIN_ROOTWND2 AND NUWIDMASK]-WIN_FH1[WIN_ROOTWND2 AND NUWIDMASK]
+END
 COMMON DEF GetWindowVar(WND,I)
  RETURN WIN_VAR[WND AND NUWIDMASK,I]
 END
@@ -2023,6 +2163,14 @@
 COMMON DEF IsFocusWindow(WND)
  RETURN(WND AND NUWIDMASK)==WIN_ACTIVENUWID
 END
+COMMON DEF FocusWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR OLD=WIN_ACTIVENUWID
+ WIN_ACTIVENUWID=WND AND NUWIDMASK
+ IF OLD==WIN_ACTIVENUWID THEN RETURN 0
+ VAR E=SendChFocusWindow(NUWIDToWND(OLD),FALSE,WND)
+ E=SendChFocusWindow(WND,TRUE,NUWIDToWND(OLD)) RETURN 0
+END
 COMMON DEF IsActiveWindow(WND)
  VAR N=(WND AND NUWIDMASK)
  VAR P=WIN_ACTIVENUWID
@@ -2032,6 +2180,12 @@
  WEND
  RETURN 0
 END
+COMMON DEF GetMouseX()
+ RETURN OTW_MOUSEX
+END
+COMMON DEF GetMouseY()
+ RETURN OTW_MOUSEY
+END
 VAR WIN_DRAGHANDLER$
 VAR WIN_DRAGHANDLER_A1
 VAR WIN_DRAGHANDLER_A2
@@ -2060,6 +2214,22 @@
  WIN_DRAGHANDLER_WND=0
  RETURN 0
 END
+VAR CAPTURE_WND
+COMMON DEF GetCapture()
+ RETURN CAPTURE_WND
+END
+COMMON DEF SetCapture(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ VAR OLD=CAPTURE_WND
+ CAPTURE_WND=WND
+ RETURN OLD
+END
+COMMON DEF ReleaseCapture(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ IF CAPTURE_WND!=WND THEN RETURN 0
+ CAPTURE_WND=0
+ RETURN 1
+END
 VAR OTW_MOUSECLIPX
 VAR OTW_MOUSECLIPY
 VAR OTW_MOUSECLIPX2
@@ -2216,10 +2386,31 @@
  RETURN 0
 END
 DEF OTW_SPCHR NUWID
- SPSCALE WIN_SP[NUWID] AND 511,1,1
- SPCHR WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
- SPOFS WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID]
+ VAR SP=WIN_SP[NUWID]AND 511
+ IF OTW_ENABLE_SHADOW THEN
+  VAR SP2=SPVAR(SP,1)
+  SPSCALE SP2,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+ ENDIF
+ SPSCALE SP,1,1
+ SPCHR SP,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
+ SPOFS SP,WIN_RX[NUWID],WIN_RY[NUWID]
 END
+DEF OTW_SPSHOW NUWID
+ VAR SP=WIN_SP[NUWID]AND 511
+ IF OTW_ENABLE_SHADOW THEN
+  VAR SP2=SPVAR(SP,1)
+  SPSHOW SP2
+ ENDIF
+ SPSHOW SP
+END
+DEF OTW_SPHIDE NUWID
+ VAR SP=WIN_SP[NUWID]AND 511
+ IF OTW_ENABLE_SHADOW THEN
+  VAR SP2=SPVAR(SP,1)
+  SPHIDE SP2
+ ENDIF
+ SPHIDE SP
+END
 COMMON DEF GPSETWindow WND,X,Y,COL
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2455,6 +2646,7 @@
  SplitInt POS OUT X,Y
  VAR W=GetWindowFrameWidth(WND)
  VAR NUWID=WND AND NUWIDMASK
+ OTW_MOVWINFLG=0
  IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
   '2     3     4
   ' 
@@ -2686,7 +2878,7 @@
  ENDIF
  SPHIDE OTW_MOVWINSP
  MouseClipDef
- OTW_MOVWINFLG=0
+ 'OTW_MOVWINFLG=0
 END
 COMMON DEF IsOwnerDrawWindow(WND)
  RETURN !!(WIN_STYLE[WND AND NUWIDMASK]AND WIN_STYLE_OWNERDRAW)
@@ -2740,7 +2932,7 @@
  VAR B1=RGB(0,0,0)
  VAR B2=-1
  IF TG THEN SWAP B1,B2
- GFILLWindow W,0,0,WI,HE,RGB(192,192,192)
+ GFILLWindow W,0,0,WI,HE,WIN_BTNBACK
  VAR TX
  ON ALIGN GOTO @CENTER,@RIGHT,@LEFT,@DEFAULT
  @CENTER
@@ -2763,14 +2955,17 @@
  ENDIF
 END
 DEF ButtonLMouseUP W,C,T,X,Y
+ IF GetWindowVar(W,1)THEN
  VAR E=SendNotificationWindow(GetParentWindow(W),W,GetWindowVar(W,0))
  SetWindowVar W,1,FALSE
  VOID RepaintWindow(W)
+ ENDIF
 'ButtonPainter W,C,T,0,0
 END
 DEF ButtonLMouseDown W,C,T,X,Y
  SetWindowVar W,1,TRUE
  VOID RepaintWindow(W)
+ VOID SetCapture(W)
 'ButtonPainter W,C,T,0,0
 END
 DEF ToggleButtonLMouseUP W,C,T,X,Y
@@ -2783,6 +2978,7 @@
  VAR F=GetWindowVar(W,1)
  SetWindowVar W,1,!F
  VOID RepaintWindow(W)
+ VOID SetCapture(W)
 'ButtonPainter W,C,T,0,0
 END
 COMMON DEF SetButtonAlignLeft WND
@@ -3050,6 +3246,13 @@
 '5:POS
 '6:LEN
 '7:SEL
+COMMON DEF AddArrayListBoxItem WND,ITEM$
+ VAR L=LEN(ITEM$)-1
+ VAR I
+ FOR I=0TO L
+  AddListBoxItem WND,ITEM$[I]
+ NEXT
+END
 COMMON DEF AddListBoxItem WND,ITEM$
  VAR L=GetWindowVar(WND,2)'
  IF!LISTSTR_FREE THEN RETURN
@@ -3069,8 +3272,15 @@
  IF LEN>S THEN DEC LEN,S ELSE LEN=0
  SetScrollBarSize GetWindowVar(WND,4),LEN
 END
+DEF LISTBOX_ADJUSTSCRBAR WND
+ VAR LEN=GetWindowVar(WND,6)
+ VAR S=(GetWindowHeight(WND)-2)DIV 8
+ IF LEN>S THEN DEC LEN,S ELSE LEN=0
+ VAR SCR=GetWindowVar(WND,4)
+ SetScrollBarSize SCR,LEN
+END
 DEF ListBoxLMD WND,CT,T,X,Y
- VAR W=GetWindowWidth(WND)
+ VAR W=GetWindowWidth(WND)-1
  VAR H=GetWindowHeight(WND)
  IF X<=0||Y<=0||X>=W||Y>=H THEN RETURN
  VAR V=GetWindowVar(WND,3)
@@ -3173,6 +3383,14 @@
  GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  E=GEndWindow(WND)
 END
+COMMON DEF ListBoxResize WND,CTL,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ LISTBOX_ADJUSTSCRBAR WND
+ VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+END
 COMMON DEF GetListBoxSelectedText$(WND)
  VAR S=GetWindowVar(WND,7)
  IF!S THEN RETURN""
@@ -3181,6 +3399,89 @@
 COMMON DEF SetChItemListBoxNotif WND,F
  SetWindowVar WND,6,F
 END
+DEF DrawButton WND,X,Y,W,H,PUSHF
+ GFILLWINDOW WND,X,Y,X+W,Y+H,WIN_BTNBACK
+ VAR B1C=RGB(255,255,255)
+ VAR B2C=RGB(0,0,0)
+ IF PUSHF THEN SWAP B1C,B2C
+ GBOXWINDOW WND,X,Y,X+W,Y+H,B1C
+ GLINEWINDOW WND,X,Y+H,X+W,Y+H,B2C
+ GLINEWINDOW WND,X+W,Y,X+W,Y+H,B2C
+ SetWindowDrawPos WND,X+1+PUSHF,Y+1+PUSHF
+END
+DEF DropDownListBtn WND,F
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ VAR BTNW=8
+ VAR BTNH=H
+ DrawButton WND,W-BTNW,H-BTNH,BTNW,BTNH,F
+ GTRIWindow WND,1,5,BTNW-3,5,(BTNW-2) DIV 2,BTNH-4,RGB(0,0,0)
+ GFILLWindow WND,2,2,BTNW-4,4,RGB(0,0,0)
+END
+COMMON DEF DropDownListPainter WND,CT,T,A1,A2
+ IF GBEGINWINDOW(WND)THEN RETURN
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ GCLSWINDOW WND,-1
+ VAR LSTBOX=GetWindowVar(WND,0)
+ IF LSTBOX THEN
+  VAR TXT$=GetListBoxSelectedText$(LSTBOX)
+  GPRINTWINDOW WND,2,2,TXT$,RGB(0,0,0)
+ ENDIF
+ VAR BTNW=8
+ VAR BTNH=H
+ GBOXWINDOW WND,0,0,W-BTNW-1,H,RGB(0,0,0)
+ DropDownListBtn WND,FALSE
+ IF GENDWINDOW(WND)THEN RETURN
+END
+COMMON DEF DropDownListLMD WND,CT,T,X,Y
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ VAR BTNW=8
+ VAR BTNH=H
+ IF W-BTNW<=X THEN
+  IF GBEGINWINDOW(WND)THEN RETURN
+  DropDownListBtn WND,TRUE
+  IF GENDWINDOW(WND)THEN RETURN
+  ShowDropDownListBox WND
+ ENDIF
+END
+COMMON DEF DropDownListLMU WND,CT,T,X,Y
+ IF GBEGINWINDOW(WND)THEN RETURN
+ DropDownListBtn WND,FALSE
+ IF GENDWINDOW(WND)THEN RETURN
+END
+COMMON DEF GetDropDownListBox(WND)
+ VAR LSTBOX=GetWindowVar(WND,0)
+ IF!LSTBOX THEN
+  VAR E
+  NewWindow CTL_DRPDWNBOXCTL,"",0,0,0,0,GetRootWND(),0 OUT LSTBOX,E
+  IF E THEN @ERR
+  SetWindowVar WND,0,LSTBOX
+  IF JoinWindowGroup(WND,LSTBOX) THEN @ERR
+ ENDIF
+ RETURN LSTBOX
+ @ERR
+ RETURN 0
+END
+DEF ShowDropDownListBox WND
+ VAR LSTBOX=GetDropDownListBox(WND)
+ VAR X=GetWindowAX(WND)
+ VAR Y=GetWindowAY(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR H=64
+ INC Y,GetWindowHeight(WND)
+ IF MoveResizeWindow(LSTBOX,X,Y,W,H)||FrontWindow(LSTBOX)||ShowWindow(LSTBOX)||FocusWindow(LSTBOX)THEN @ERR
+ RETURN
+ @ERR
+ RETURN
+END
+COMMON DEF DropDownListBoxChFocus WND,CT,T,F,A2
+ IF!F THEN
+  IF HideWindow(WND)THEN RETURN
+  VOID RepaintWindow(GetParentWindow(WND))
+ ENDIF
+END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
@@ -3190,7 +3491,15 @@
 COMMON DEF SetScrollBarSize W,SIZ
  SetWindowVar W,1,SIZ
  VOID RepaintWindow(W)
+ VAR POS=GetWindowVar(W,2)
+ IF POS>SIZ THEN
+  SetWindowVar W,2,SIZ
+  VOID SendNotifWindow(GetParentWindow(W),W,SIZ)
+ ENDIF
 END
+COMMON DEF GetScrollBarSize(W)
+ RETURN GetWindowVar(W,1)
+END
 COMMON DEF IncScrollBarSize W
  SetWindowVar W,1,GetWindowVar(W,1)+1
  VOID RepaintWindow(W)
@@ -3199,6 +3508,9 @@
  SetWindowVar W,2,POS
  VOID RepaintWindow(W)
 END
+COMMON DEF GetScrollBarPosition(W)
+ RETURN GetWindowVar(W,2)
+END
 DEF VSCRBARPainter W,_,T,XY,WH
  IF GBEGINWindow(W)THEN RETURN
  GCLSWindow W,WIN_BKGND
@@ -3246,6 +3558,7 @@
 END
 DEF VSCRBARLMouseUP W,C,T,X,Y
  SetWindowVar W,3,8
+ VOID ReleaseCapture(W)
 END
 DEF VSCRBARLMouseDown W,C,T,X,Y
  VAR ID=GetWindowVar(W,3)
@@ -3260,6 +3573,7 @@
    ENDIF
    SetWindowVar W,3,ID
   ENDIF
+  VOID SetCapture(W)
   VOID LMouseDownWindow(W)
  ELSE
   SetWindowVar W,3,0
@@ -3280,7 +3594,9 @@
  IF ID==1THEN
   VAR _Y=POS'Y
   IF!SIZ THEN RETURN
-  Y=(Y-9)/((GetWindowHeight(W)-28)/SIZ)
+  VAR __TEMP__#=((GetWindowHeight(W)-28)/SIZ)
+  IF!__TEMP__# THEN RETURN'?
+  Y=(Y-9)/__TEMP__#
   IF Y<0THEN Y=0
   IF Y>SIZ THEN Y=SIZ
   IF Y==_Y THEN RETURN
@@ -3442,7 +3758,9 @@
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
+  WIN_BTNBACK=RGB(192,192,192)
   VAR FM=FREEMEM
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
@@ -3583,7 +3901,7 @@
   PrintConsoleln FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
   CLS
   LOCATE 0,29
-  NewProcess"LAUNCHER","" OUT E,E,E
+  NewProcess"LAUNCHER","" OUT E,E
  ENDIF
 RETURN
 END
@@ -3609,6 +3927,7 @@
 VAR OTW_OLDBTN
 VAR OTW_OLDBTNF
 VAR OLDMOVEMOUSEWINDOW
+VAR OTW_SMOOTH_MOVE_WINDOW
 COMMON DEF L_OTW
  VAR MOVEMOUSE
  UpdateMouse
@@ -3617,14 +3936,17 @@
  VAR NUWID,E
  VAR BTN=UpdateButton()
  IF MOVEMOUSE||BTN THEN
-'  IF WIN_DRAGHANDLER_USE THEN
-'   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
-'ENDIF
+  IF OTW_SMOOTH_MOVE_WINDOW THEN
+   IF WIN_DRAGHANDLER_USE THEN
+    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+ ENDIF
+  ENDIF
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
  IF BTN THEN
   'LEFT MOUSE DOWN
   IF BTN AND OTW_LMOUSEDWN THEN
+   CAPTURE_WND=0
    VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
    IF WIN_ACTIVENUWID!=OA THEN
@@ -3665,17 +3987,85 @@
     CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
     E=ClearWindowDragHandler()
    ELSE
+    VAR NUWIDRAW=NUWID AND 32767
+    IF NUWIDRAW!=(WIN_ACTIVENUWID AND 32767)&&CAPTURE_WND==NUWIDToWND(WIN_ACTIVENUWID)THEN
+     IF NUWID AND WIN_FRAMEFLG THEN
+      E=LMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
+      E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     ELSE
+      E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     ENDIF
+    ELSE
+     IF NUWID AND WIN_FRAMEFLG THEN
+      E=LMouseUpWindowOnFrame(NUWIDToWND(NUWIDRAW))
+      E=LMouseUpWindow(NUWIDToWND(NUWIDRAW))
+     ELSE
+      E=LMouseUpWindow(NUWIDToWND(NUWID))
+     ENDIF
+    ENDIF
+   ENDIF
+   CAPTURE_WND=0
+  ENDIF
+  
+  
+  '=====R=====
+  IF BTN AND OTW_RMOUSEDWN THEN
+   CAPTURE_WND=0
+   OA=WIN_ACTIVENUWID
+   WIN_ACTIVENUWID=NUWID
+   IF WIN_ACTIVENUWID!=OA THEN
+    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
+    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
+   ENDIF
+   F=MAINCNT
+   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
+    OTW_LCLKWND=0
     IF NUWID AND WIN_FRAMEFLG THEN
-     E=LMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
-     E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     'TODO:Double Click
+     
+     E=RMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+     WIN_ACTIVENUWID=NUWID AND 32767
     ELSE
-     E=LMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+     IF LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,CTL_LDBLCLKHANDLER])THEN
+      E=RDoubleClickWindow(NUWIDToWND(NUWID))
+     ELSE
+      E=RMouseDownWindow(NUWIDToWND(NUWID))
+     ENDIF
     ENDIF
+   ELSE
+    OTW_LCLKWND=NUWID
+    OTW_LCLKF=F
+    OTW_DBLCLKX=OTW_MOUSEX
+    OTW_DBLCLKY=OTW_MOUSEY
+   IF NUWID AND WIN_FRAMEFLG THEN
+    E=RMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+    
+    WIN_ACTIVENUWID=NUWID AND 32767
+   ELSE
+    E=RMouseDownWindow(NUWIDToWND(NUWID))
    ENDIF
+   ENDIF
   ENDIF
+
+  IF BTN AND OTW_RMOUSEUP THEN
+    CAPTURE_WND=0
+    IF NUWID AND WIN_FRAMEFLG THEN
+     E=RMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
+     E=RMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+    ELSE
+     E=RMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
+    ENDIF
+  ENDIF
+  '===========
+  
+  
+  
  ENDIF
  IF MOVEMOUSE THEN
   MoveWindowSP FALSE
+  IF CAPTURE_WND THEN
+   E=MouseMoveWindow(CAPTURE_WND AND NUWIDMASK)
+  ELSE
   IF OLDMOVEMOUSEWINDOW!=NUWID THEN
    IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
     E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
@@ -3689,6 +4079,7 @@
    E=MouseMoveWindowOnFrame(NUWID AND 32767)
   ENDIF
   OLDMOVEMOUSEWINDOW=NUWID
+  ENDIF
  ENDIF
 ' IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
@@ -3919,8 +4310,22 @@
  IF ITEM>=LAUNCHERLEN||ITEM<0THEN
   RETURN
  ENDIF
- NewProcess LAUNCHERITEM$[ITEM],"" OUT E,E,E
+ NewProcess LAUNCHERITEM$[ITEM],"" OUT E,E
 END
+COMMON DEF LauncherResize WND,CTL,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ VOID ResizeWindow(CW,W,H)
+END
+COMMON DEF LauncherNotif WND,CTL,T,A1,A2
+ IF A2==0THEN
+  VAR PROC$=GetListBoxSelectedText$(A1)
+  VAR E
+  NewProcess PROC$,"" OUT E,E
+ ENDIF
+END
 COMMON DEF I_LAUNCHER
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -3929,10 +4334,12 @@
  ENDIF
  IF LAUNCHERCTL THEN
   VAR WND,E
-  NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",80,LAUNCHERLEN*8 OUT WND,E
+  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,64,WINDOWRESIZABLESTYLE() OUT WND,E
   SetProcessVar WND
+  NewWindow GetListBoxControl(),"",0,0,80,64,WND,0 OUT WND,E
+  AddArrayListBoxItem WND,LAUNCHERITEM$
  ELSE
-  LAUNCHERLEN=10
+  LAUNCHERLEN=11
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -3944,9 +4351,12 @@
   LAUNCHERITEM$[7]="OTYFIL"
   LAUNCHERITEM$[8]="OTYDOC"
   LAUNCHERITEM$[9]="MPLAY"
+  LAUNCHERITEM$[10]="CLIPBRD"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
-  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
-  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
+'  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
+'  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
+  E=SetControlNotifHandler(LAUNCHERCTL,"LauncherNotif")
+  E=SetControlResizeHandler(LAUNCHERCTL,"LauncherResize")
   I_LAUNCHER
  ENDIF
 END
@@ -3961,8 +4371,8 @@
 VAR WCLOCKBC2
 VAR WCLOCKTIM
 COMMON DEF RunNotificationHandler W,C,T,V,A2
- VAR PID,NUPID,E
- NewProcess GetWindowName$(GetChildWindow(GetParentWindow(V))),"" OUT PID,NUPID,E
+ VAR PRC,E
+ NewProcess GetWindowName$(GetChildWindow(GetParentWindow(V))),"" OUT PRC,E
  IF E THEN BEEP
 END
 COMMON DEF I_WCLOCK
@@ -4183,6 +4593,7 @@
  SetWindowVar WND,3,1
  SetWindowVar WND,0,X
  SetWindowVar WND,1,Y
+ VOID SetCapture(WND)
 END
 COMMON DEF PaintLUP WND,CTL,T,X,Y
  SetWindowVar WND,3,0
@@ -4209,7 +4620,7 @@
   ExitProcess 1
   RETURN
  ENDIF
- VAR PTR=RND(256)+1'malloc(64*64)
+ VAR PTR=malloc(64*64)
  IF!PTR THEN BEEP:ExitProcess 1RETURN
  VAR WND,E
  IF!PAINTCTL THEN
@@ -4239,18 +4650,23 @@
 VAR TXTBOXEX_MAXCTL
 VAR TXTBOXEX_CFREE
 DIM TXTBOXEX_CLINE[0]
+DIM TXTBOXEX_CMODE[0]
 DIM TXTBOXEX_CNEXT[0]
+DIM TXTBOXEX_CFIRST[0]
+DIM TXTBOXEX_CSELLINE1[0]
+DIM TXTBOXEX_CSELPOS1[0]
+DIM TXTBOXEX_CSELLINE2[0]
+DIM TXTBOXEX_CSELPOS2[0]
+DIM TXTBOXEX_CISSEL[0]
+DIM TXTBOXEX_CISSELING[0]
 COMMON DEF GetTextBoxExControl()
  RETURN TXTBOXEXCTL
 END
 COMMON DEF SetTextBoxExPRGMode WND,FLG
- VAR G=ABS(GetWindowVar(WND,7))
- IF FLG THEN
-  SetWindowVar WND,7,G OR -2147483648
- ELSE
-  SetWindowVar WND,7,G AND 2147483647
- ENDIF
+ VAR CTL=GetWindowVar(WND,7)
+ SetTextBoxExMode CTL,FLG
 END
+VAR TextBoxEx_MENU
 COMMON DEF INIT_TXTBOXEX
  VAR E
  IF!TXTEDCTL THEN
@@ -4262,7 +4678,10 @@
   E=SetControlCreateHandler(TXTBOXEXCTL,"TextBoxExCreate")
   E=SetControlNotifHandler(TXTBOXEXCTL,"TextBoxExNotif")
   E=SetControlLMouseDownHandler(TXTBOXEXCTL,"TextBoxExLMD")
+  E=SetControlLMouseUpHandler(TXTBOXEXCTL,"TextBoxExLMU")
+  E=SetControlRMouseDownHandler(TXTBOXEXCTL,"TextBoxExRMD")
   E=SetControlResizeHandler(TXTBOXEXCTL,"TextBoxResize")
+  E=SetControlMouseMoveHandler(TXTBOXEXCTL,"TextBoxExMMOVE")
   TXTBOXEX_LINESIZ=10000'1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -4272,10 +4691,28 @@
   TXTBOXEX_MAXCTL=100'1024
   TXTBOXEX_CNEXT=NewArray(TXTBOXEX_MAXCTL)
   TXTBOXEX_CLINE=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CMODE=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CFIRST=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELLINE1=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELPOS1=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELLINE2=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CSELPOS2=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CISSEL=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CISSELING=NewArray(TXTBOXEX_MAXCTL)
   VAR I
   FOR I=1TO TXTBOXEX_LINESIZ-2
    TXTBOXEX_NEXT[I]=I+1
   NEXT
+  FOR I=1TO TXTBOXEX_MAXCTL-2
+   TXTBOXEX_CNEXT[I]=I+1
+  NEXT
+  TXTBOXEX_CFREE=1
+  NewMenu OUT TextBoxEx_MENU,E
+  AddMenuItem TextBoxEx_MENU,"Copy",1
+  AddMenuItem TextBoxEx_MENU,"Cut",2
+  AddMenuItem TextBoxEx_MENU,"Paste",3
+  AddMenuItemSeparator TextBoxEx_MENU
+  AddMenuItem TextBoxEx_MENU,"Select all",3
  ENDIF
 END
 DEF TXTED_NewCTL(WND)
@@ -4283,7 +4720,7 @@
  IF!R THEN RETURN 0
  TXTBOXEX_CFREE=TXTBOXEX_CNEXT[TXTBOXEX_CFREE]
  TXTBOXEX_CLINE[R]=1
-' SetWindowVar
+ RETURN TXTBOXEX_CFREE
 END
 DEF TXTED_NewLINE(V$,P)
  VAR R=TXTBOXEX_FREE
@@ -4324,26 +4761,112 @@
  RETURN 0
 END
 
-COMMON DEF TextBoxExLMD WND,CTL,T,X,Y
+COMMON DEF TextBoxExMMOVE WND,CTL,T,X,Y
+ IF GetCapture()!=WND THEN
+  RETURN
+ ENDIF
+ VAR MF
+ IF Y<0&&TXTED_UpCursor(WND)THEN
+  MF=TRUE
+ ENDIF
+ 
+ VAR H=GetWindowHeight(WND)
+ IF Y>H&&TXTED_DownCursor(WND)THEN
+  MF=TRUE
+ ENDIF
+ IF MF THEN
+  TextBoxExRepaint WND
+  RETURN
+ ENDIF
+ VAR LINE,POS,OL,OP
+ GetWindowVar WND,2 OUT OL
+ GetWindowVar WND,3 OUT OP
+ VAR LINEOBJ
+ TEXTBOXEX_GETLINEPOS WND,X,Y OUT LINE,POS,LINEOBJ
+ VAR BOX=GetWindowVar(WND,7)
+ SetWindowVar WND,2,LINEOBJ
+ SetWindowVar WND,3,POS
+ TXTBOXEX_CSELLINE2[BOX]=LINE
+ TXTBOXEX_CSELPOS2[BOX]=POS
+ TXTBOXEX_CISSEL[BOX]=TRUE
+ TXTBOXEX_CISSELING[BOX]=TRUE
+ IF LINE==OL&&POS==OP THEN RETURN
+ VOID RepaintWindow(WND)
+END
+COMMON DEF TextBoxExLMU WND,CTL,T,X,Y
+ VOID ReleaseCapture(WND)
+ VAR BOX=GetWindowVar(WND,7)
+ TXTBOXEX_CISSELING[BOX]=FALSE
+END
+DEF TEXTBOXEX_GETLINEPOS WND,X,Y OUT LINE,POS,V
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- IF!X||!Y||X>=W||Y>=H THEN RETURN
- VAR V=GetWindowVar(WND,1),Y1=1,Y2
+' IF!X||!Y||X>=W||Y>=H THEN RETURN
+ V=GetWindowVar(WND,1)
+ VAR Y1=1,Y2
+ LINE=TXTBOXEX_CLINE[GETWINDOWVar(WND,7)]
+ VAR OV
+' IF X<33THEN RETURN
  WHILE V
+  OV=V
+  LINE=LINE+1
   Y2=Y1+8
   IF Y>=Y1&&Y<Y2 THEN
-   SetWindowVar WND,2,V
-   VOID RepaintWindow(WND)
-   SetWindowVar WND,3,(X-1) DIV 8
    BREAK
   ENDIF
   INC Y1,8
   V=TXTBOXEX_NEXT[V]
  WEND
+ POS=MAX(0,(X-1-32) DIV 8)
+ IF!V THEN V=OV
 END
+COMMON DEF TextBoxExLMD WND,CTL,T,X,Y
+ VAR LINE,POS
+ VAR OL,OP
+ GetWindowVar WND,2 OUT OL
+ GetWindowVar WND,3 OUT OP
+ VAR LINEOBJ
+ TEXTBOXEX_GETLINEPOS WND,X,Y OUT LINE,POS,LINEOBJ
+ VAR BOX=GetWindowVar(WND,7)
+ TXTBOXEX_CISSEL[BOX]=FALSE
+ TXTBOXEX_CISSELING[BOX]=FALSE
+ IF OL==LINE&&OP==POS THEN
+ ELSE
+  SetWindowVar WND,2,LINEOBJ
+  SetWindowVar WND,3,POS
+  VOID RepaintWindow(WND)
+ ENDIF
+ TXTBOXEX_CSELLINE1[BOX]=LINE
+ TXTBOXEX_CSELPOS1[BOX]=POS
+ TXTBOXEX_CSELLINE2[BOX]=LINE
+ TXTBOXEX_CSELPOS2[BOX]=POS
+ VOID SetCapture(WND)
+END
+COMMON DEF TextBoxExRMD WND,CTL,T,X,Y
+ ShowContextMenu TextBoxEx_MENU,WND
+END
+DEF TEXTBOXEX_MENU WND,ID
+ ON ID GOTO @UNK,@COPY,@CUT,@PASTE
+ @UNK
+ ?"UNK
+ RETURN
+ @COPY
+ @CUT
+'?TEXTBOXEXGETSELECTEDTEXT(WND)
+ TextBoxExCopy WND
+ RETURN
+ @PASTE
+ TextBoxExPaste WND
+END
 COMMON DEF TextBoxExNotif WND,CTL,T,_,POS
- VAR F=GetWindowVar(WND,7)
- VAR SA=POS-(F AND 2147483647)
+ 'MENU
+ IF _==0 THEN
+  TEXTBOXEX_MENU WND,POS
+  RETURN
+ ENDIF
+ VAR BOX=GetWindowVar(WND,7)
+ VAR F=GetTextBoxExLine(BOX)
+ VAR SA=POS-F
  VAR I
  IF!SA THEN RETURN
  VAR V=GetWindowVar(WND,1)
@@ -4359,11 +4882,7 @@
    V=TXTBOXEX_PREV[V]
   NEXT
  ENDIF
- IF F<0THEN
-  SetWindowVar WND,7,POS OR -2147483648
- ELSE
-  SetWindowVar WND,7,POS
- ENDIF
+ SetTextBoxExLine BOX,POS
  SetWindowVar WND,1,V
  TextBoxExRepaint WND
 END
@@ -4371,7 +4890,29 @@
  VAR SCR,E
  VAR W=GetWindowWidth(WND),
  NewVScrollBar WND,0 OUT SCR,E
+ VAR C=TXTED_NewCTL(WND)
+ SetWindowVar WND,7,C
+ SetTextBoxExLine C,0
+ TXTBOXEX_CFIRST[C]=0
+ TXTBOXEX_CISSEL[C]=0
+ TXTBOXEX_CISSELING[C]=0
+ TXTBOXEX_CSELLINE1[C]=0
+ TXTBOXEX_CSELPOS1[C]=0
+ TXTBOXEX_CSELLINE2[C]=0
+ TXTBOXEX_CSELPOS2[C]=0
 END
+DEF GetTextBoxExMode(CTL)
+ RETURN TXTBOXEX_CMODE[CTL]
+END
+DEF SetTextBoxExMode CTL,L
+ TXTBOXEX_CMODE[CTL]=L
+END
+DEF GetTextBoxExLine(CTL)
+ RETURN TXTBOXEX_CLINE[CTL]
+END
+DEF SetTextBoxExLine CTL,L
+ TXTBOXEX_CLINE[CTL]=L
+END
 DEF TextBoxResize WND,CTL,T,A1,WH
  VAR W,H
  SplitInt WH OUT W,H
@@ -4387,7 +4928,8 @@
 END
 COMMON DEF TextBoxExRepaint WND
  VAR E=GBeginWindow(WND)
- VAR SH=GetWindowVar(WND,7)<0
+ VAR BOX=GetWindowVar(WND,7)
+ VAR SH=GetTextBoxExMode(BOX)
  IF SH THEN
   GCLSWindow WND,RGB(0,0,0)
  ELSE
@@ -4408,8 +4950,18 @@
  VAR TC=RGB(0,0,0)
  IF SH THEN TC=-1
  VAR Y=1,X=32,PL,LC
- VAR LINE=(GetWindowVar(WND,7)AND 2147483647),_
+ VAR LINE=GetTextBoxExLine(BOX),_
  VAR M0=MAINCNT
+ IF TXTBOXEX_CISSEL[BOX]THEN
+  VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
+  VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
+  VAR SELPOS1=TXTBOXEX_CSELPOS1[BOX]
+  VAR SELPOS2=TXTBOXEX_CSELPOS2[BOX]
+  IF SELLINE1>SELLINE2 THEN
+   SWAP SELLINE1,SELLINE2
+   SWAP SELPOS1,SELPOS2
+  ENDIF
+ ENDIF
  WHILE 1
   INC LINE
   V$=TXTBOXEX_VAL$[L]
@@ -4426,6 +4978,16 @@
   IF !_ THEN _=&H6E
   INC LS$,CHR$(&HE100+_)
   GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
+  IF LINE>SELLINE1&&LINE<SELLINE2 THEN
+   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+  ENDIF
+  IF LINE==SELLINE1&&LINE==SELLINE2 THEN
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+  ELSEIF LINE==SELLINE1 THEN
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+  ELSEIF LINE==SELLINE2 THEN
+   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+  ENDIF
   IF SH THEN
    TXTED_PRGPRINT WND,X,Y,V$
   ELSE
@@ -4466,6 +5028,11 @@
    C=TXTBOXEX_PREV[C]
    IF L==C THEN
      SetWindowVar WND,1,L
+    VAR BOX=GetWindowVar(WND,7)
+    VAR LINE=GetTextBoxExLine(BOX)-1
+    SetTextBoxExLine BOX,LINE
+    SetScrollBarPosition GetChildWindow(WND),LINE
+
    ENDIF
    SetWindowVar WND,2,C
    RETURN 1
@@ -4479,6 +5046,10 @@
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
      SetWindowVar WND,1,L
+     VAR BOX=GetWindowVar(WND,7)
+     VAR LINE=GetTextBoxExLine(BOX)+1
+     SetTextBoxExLine BOX,LINE
+     SetScrollBarPosition GetChildWindow(WND),LINE
     ENDIF
    ENDIF
    C=TXTBOXEX_NEXT[C]
@@ -4488,7 +5059,10 @@
   RETURN 0
 END
 COMMON DEF TextBoxExButton WND,CTL,T,BTN,_
+ VAR BOX=GetWindowVar(WND,7)
+ IF TXTBOXEX_CISSELING[BOX]THEN RETURN
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
+ TXTBOXEX_CISSEL[BOX]=0
  IF!BTN THEN SetWindowVar WND,5,0RETURN
  IF MAINCNT-F<R THEN RETURN
 
@@ -4543,10 +5117,14 @@
 END
 COMMON DEF TextBoxExKey WND,CTL,T,KEY,_
  VAR C=GetWindowVar(WND,2)
+ VAR BOX=GetWindowVar(WND,7)
+ IF TXTBOXEX_CISSELING[BOX]THEN RETURN
+ TXTBOXEX_CISSEL[BOX]=0
  IF!C THEN
   C=TXTED_NewLINE("",0)
   SetWindowVar WND,1,C
   SetWindowVar WND,2,C
+  TXTBOXEX_CFIRST[BOX]=C
   IF!C THEN RETURN
  ENDIF
  VAR X=GetWindowVar(WND,3)
@@ -4561,8 +5139,11 @@
    IF P THEN
     VAR L=GetWindowVar(WND,1)
     VAR V$=TXTBOXEX_VAL$[C]
-    SetWindowVar WND,2,TXTED_DeleteLine(C)
-    L=GetWindowVar(WND,2)
+    L=TXTED_DeleteLine(C)
+    IF C==TXTBOXEX_CFIRST[BOX]THEN
+     TXTBOXEX_CFIRST[BOX]=L
+    ENDIF
+    SetWindowVar WND,2,L
     TXTBOXEX_VAL$[L]=LEFT$(TXTBOXEX_VAL$[L],LEN(TXTBOXEX_VAL$[L])-1)
     SetWindowVar WND,3,LEN(TXTBOXEX_VAL$[L])
     INC TXTBOXEX_VAL$[L],MID$(V$,X,LEN(V$)-X)
@@ -4582,10 +5163,19 @@
    IF GetWindowVar(WND,6)==C THEN
     L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
+     VAR LINE=GetTextBoxExLine(BOX)+1
+     SetTextBoxExLine BOX,LINE
+     VAR SCRBAR=GetChildWindow(WND)
+     IF GetScrollBarSize(SCRBAR)<LINE THEN
+      SetScrollBarSize SCRBAR,LINE
+     ENDIF
+     SetScrollBarPosition SCRBAR,LINE
      SetWindowVar WND,1,L
     ENDIF
    ENDIF
   ELSE
+'   X=MIN(MAX(LEN(TXTBOXEX_VAL$[C]),-80),X)
+'   SetWindowVar WND,3,X
    TXTBOXEX_VAL$[C]=InsertStr$(TXTBOXEX_VAL$[C],X,K$)
    SetWindowVar WND,3,X+1
   ENDIF
@@ -4593,6 +5183,7 @@
  TextBoxExRepaint WND
 END
 COMMON DEF TextBoxExSetText WND,TXT$
+ VAR BOX=GetWindowVar(WND,7)
  VAR C=GetWindowVar(WND,1),I,J
  IF C THEN
   I=C
@@ -4617,6 +5208,7 @@
   IF!OC THEN
    SetWindowVar WND,1,C
    SetWindowVar WND,2,C
+   TXTBOXEX_CFIRST[BOX]=C
    OC=1
   ENDIF
   IF!C THEN BREAK
@@ -4627,29 +5219,194 @@
   C=TXTED_NewLINE("",C)
   SetWindowVar WND,1,C
   SetWindowVar WND,2,C
+  TXTBOXEX_CFIRST[BOX]=C
  ENDIF
  VAR S=L+CEIL((GetWindowHeight(WND)-2)/8)
  IF S<0THEN S=0
  SetScrollBarSize GetChildWindow(WND),S
  SetScrollBarPosition GetChildWindow(WND),0
- VAR F=GetWindowVar(WND,7)
- IF F<0THEN
-  SetWindowVar WND,7,-2147483648
- ELSE
-  SetWindowVar WND,7,0
- ENDIF
+ SetTextBoxExLine BOX,0
  VOID RepaintWindow(WND)
 END
 COMMON DEF TextBoxExGetText WND OUT TXT$
- TXT$=""
- VAR C=GetWindowVar(WND,1)
-
-
+ TXT$=""+""
+ VAR BOX=GetWindowVar(WND,7)
+ VAR C=TXTBOXEX_CFIRST[BOX]
  WHILE C
   PUSH TXT$,TXTBOXEX_VAL$[C]
   C=TXTBOXEX_NEXT[C]
  WEND
 END
+COMMON DEF TextBoxExCopy WND
+ VAR TXT$
+ TextBoxExGetSelectedText WND OUT TXT$
+ ClearClipboard
+ ClipboardSetText TXT$
+END
+COMMON DEF TextBoxExPaste WND
+ IF!ClipboardContainsText()THEN RETURN
+ VAR TXT$=ClipboardGetText$()
+ TextBoxExSetSelectedText WND,TXT$
+END
+'TXT$->LINEOBJ
+DEF TEXTBOXEX_PARSETXT TXT$ OUT LINEFIRST,LINELAST,LINECOUNT
+ VAR I,J
+ VAR C=0
+ VAR OC=0,L
+ VAR LF$=LF$()
+ WHILE 1
+  INC L
+  J=INSTR(I,TXT$,LF$)
+  IF LEN(TXT$)==I THEN BREAK
+  IF J==-1THEN J=LEN(TXT$)-1
+  C=TXTED_NewLINE(MID$(TXT$,I,J-I+1),C)
+  IF!OC THEN
+   LINEFIRST=C
+   OC=TRUE
+  ENDIF
+  IF!C THEN BREAK
+  IF I==LEN(TXT$)-1THEN BREAK
+  I=J+1
+ WEND
+ IF!LEN(TXT$)THEN
+  C=TXTED_NewLINE("",C)
+  LINEFIRST=C
+ ENDIF
+ LINELAST=C
+ TXTBOXEX_NEXT[C]=0
+ LINECOUNT=L
+END
+'RET:LINE
+DEF TEXTBOXEX_REMOVESELECTEDTEXT WND OUT L,CX
+ VAR BOX=GetWindowVar(WND,7)
+ IF!TXTBOXEX_CISSEL[BOX]THEN
+  L=GetWindowVar(WND,2)
+  CX=GetWindowVar(WND,3)
+  RETURN
+ ENDIF
+ TXTBOXEX_CISSEL[BOX]=FALSE
+ VAR C=TXTBOXEX_CFIRST[BOX]
+ VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
+ VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
+ VAR SELPOS1=TXTBOXEX_CSELPOS1[BOX]
+ VAR SELPOS2=TXTBOXEX_CSELPOS2[BOX]
+ IF SELLINE1>SELLINE2 THEN
+  SWAP SELLINE1,SELLINE2
+  SWAP SELPOS1,SELPOS2
+ ENDIF
+ VAR LINE
+ CX=SELPOS1
+ WHILE C
+  INC LINE
+  IF SELLINE1==LINE THEN
+   L=C
+  ENDIF
+  IF SELLINE1==LINE&&SELLINE2==LINE THEN
+   IF SELPOS2<SELPOS1 THEN
+    SWAP SELPOS2,SELPOS1
+   ENDIF
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   TXTBOXEX_VAL$[C]=RemoveStr$(TXTBOXEX_VAL$[C],SELPOS1,SELPOS2-SELPOS1)
+   CX=MIN(CX,LEN(TXTBOXEX_VAL$[C])-1)
+   BREAK
+  ELSEIF SELLINE1==LINE THEN
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   IF SELPOS1 THEN
+    TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],SELPOS1-1)
+   ELSE
+    TXTBOXEX_VAL$[C]=""
+   ENDIF
+   CX=MIN(CX,MAX(LEN(TXTBOXEX_VAL$[C])-1,0))
+  ELSEIF SELLINE2==LINE THEN
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   TXTBOXEX_VAL$[C]=RIGHT$(TXTBOXEX_VAL$[C],LEN(TXTBOXEX_VAL$[C])-SELPOS2-1)
+   BREAK
+  ELSEIF SELLINE1<LINE THEN
+   C=TXTED_DeleteLine(C)
+   CONTINUE
+  ENDIF
+  C=TXTBOXEX_NEXT[C]
+ WEND
+END
+COMMON DEF TextBoxExSetSelectedText WND,TXT$
+ VAR _1,_3,_2,LF$=LF$()
+ TEXTBOXEX_PARSETXT TXT$ OUT _1,_2,_3
+ IF _1==0THEN RETURN
+ VAR T1$=TXTBOXEX_VAL$[_1]
+ VAR LASTLF
+ IF LEN(T1$)&&T1$[LEN(T1$)-1]==LF$THEN
+  LASTLF=TRUE
+ ENDIF
+ VAR T2$=TXTBOXEX_VAL$[_2]
+ VAR LASTLF2
+ IF LEN(T2$)&&T2$[LEN(T2$)-1]==LF$THEN
+  LASTLF2=TRUE
+ ENDIF
+ VAR C
+ VAR CX
+ TEXTBOXEX_REMOVESELECTEDTEXT WND OUT C,CX
+ IF LASTLF THEN
+  VAR MATSUO$=MID$(TXTBOXEX_VAL$[C],CX,LEN(TXTBOXEX_VAL$[C])-CX)
+  TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],CX)+T1$
+  IF!LASTLF2 THEN
+   TXTBOXEX_VAL$[_2]=TXTBOXEX_VAL$[_2]+MATSUO$
+  ELSE
+   VOID TXTED_NewLine(MATSUO$,C)
+  ENDIF
+ ELSE
+  TXTBOXEX_VAL$[C]=InsertStr$(TXTBOXEX_VAL$[C],CX,T1$)
+ ENDIF
+ IF _1==_2 THEN
+  VOID TXTED_DeleteLine(_1)
+  RETURN
+ ENDIF
+ _1=TXTBOXEX_NEXT[_1]
+ VAR CN=TXTBOXEX_NEXT[C]
+ TXTBOXEX_NEXT[C]=_1
+ TXTBOXEX_PREV[_1]=C
+ TXTBOXEX_NEXT[_2]=CN
+ TXTBOXEX_PREV[CN]=_2
+ VOID RepaintWindow(WND)
+RETURN
+
+END
+COMMON DEF TextBoxExGetSelectedText WND OUT TXT$
+ TXT$=""+""
+ VAR BOX=GetWindowVar(WND,7)
+ VAR C=TXTBOXEX_CFIRST[BOX]
+ VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
+ VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
+ VAR SELPOS1=TXTBOXEX_CSELPOS1[BOX]
+ VAR SELPOS2=TXTBOXEX_CSELPOS2[BOX]
+ IF SELLINE1>SELLINE2 THEN
+  SWAP SELLINE1,SELLINE2
+  SWAP SELPOS1,SELPOS2
+ ENDIF
+ VAR LINE
+ WHILE C
+  INC LINE
+  IF SELLINE1==LINE&&SELLINE2==LINE THEN
+   IF SELPOS2<SELPOS1 THEN
+    SWAP SELPOS2,SELPOS1
+   ENDIF
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   TXT$=MID$(TXTBOXEX_VAL$[C],SELPOS1,SELPOS2-SELPOS1)
+   BREAK
+  ELSEIF SELLINE1==LINE THEN
+   SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
+   PUSH TXT$,MID$(TXTBOXEX_VAL$[C],SELPOS1,LEN(TXTBOXEX_VAL$[C])-SELPOS1)
+  ELSEIF SELLINE2==LINE THEN
+   SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+   PUSH TXT$,MID$(TXTBOXEX_VAL$[C],0,SELPOS2)
+   BREAK
+  ELSEIF SELLINE1<LINE THEN
+   PUSH TXT$,TXTBOXEX_VAL$[C]
+  ENDIF
+  C=TXTBOXEX_NEXT[C]
+ WEND
+END
 '===syntax highlighting===
 'HashSet
 VAR RTXTEDTRUE
@@ -4787,7 +5544,8 @@
      NEXT
      BREAK
     ENDIF
-    DEC X,8
+    GPUTCHRWindow WND,X-8,Y,S,RGB(255,255,255)
+    DEC I
     BREAK
    NEXT
    CONTINUE
@@ -4804,17 +5562,26 @@
 '===End text editor===
 COMMON DEF TXTEDNOTIF W,C,T,A1,A2
  IF A2==4THEN
-  VOID SaveFileDialog(W,"TXT")
+  VOID SaveFileDialog(W,"TXT",1)
  ENDIF
  IF A2==2THEN
-  VOID OpenFileDialog(W,"TXT")
+  VOID OpenFileDialog(W,"TXT",0)
  ENDIF
  IF A2==1THEN
   TextBoxExSetText GetWindowVar(W,0),LF$()
  ENDIF
 END
-COMMON DEF TXTEDSTRNOTIF W,C,T,A1,A2$
+COMMON DEF TXTEDSTRNOTIF W,C,T,ID,A2$
+ ON ID GOTO @OPEN,@SAVE
+ RETURN
+ @OPEN
  TextBoxExSetText GetWindowVar(W,0),LoadFile$(RIGHT$(A2$,LEN(A2$)-1))
+ RETURN
+ @SAVE
+ VAR T$
+ TextBoxExGetText GetWindowVar(W,0) OUT T$
+ SaveFile$ RIGHT$(A2$,LEN(A2$)-1),T$
+ RETURN
 END
 COMMON DEF TXTEDRESIZE WND,C,T,A1,WH
  VAR W,H
@@ -4986,6 +5753,9 @@
   E=SetControlKeyHandler(OTYDOCCTL,"OTYDocKey")
   E=SetControlButtonHandler(OTYDOCCTL,"OTYDocButton")
   E=SetControlChFocusHandler(OTYDOCCTL,"OTYDocChFocus")
+  E=SetControlCreateHandler(OTYDOCCTL,"OTYDocCreate")
+  E=SetControlResizeHandler(OTYDOCCTL,"OTYDocResize")
+  E=SetControlLMouseDownHandler(OTYDOCCTL,"OTYDocLMouseUp")
   OTYDOC_LINESIZ=1024
   OTYDOC_VAL$=NewArray$(OTYDOC_LINESIZ)
   OTYDOC_LINE=NewArray(OTYDOC_LINESIZ)
@@ -5138,11 +5908,24 @@
 END
 '====EVENT HANDLER====
 COMMON DEF OTYDocCreate WND,CTL,TYPE,A1,A2
+ VAR SCR,E
+ VAR W=GetWindowWidth(WND),
+ NewVScrollBar WND,0 OUT SCR,E
 END
+COMMON DEF OTYDocResize WND,C,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+END
 COMMON DEF OTYDocPainter WND,CTL,TYPE,A1,A2
  OTYDOCRepaint WND
 END
 DEF OTYDOCRepaint WND
+ OTYDOCRepaintSEL WND,FALSE,0,0
+END
+DEF OTYDOCRepaintSEL WND,SEL_FLG,SX,SY
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,RGB(255,255,255)
  VAR W=GetWindowWidth(WND)
@@ -5202,7 +5985,7 @@
     CONTINUE
    ENDIF
    IF  C<128THEN
-    RICHTEXTWindow WND,X-SZ/8,Y+YSZ-SZ,C,ST,SZ,COL
+    RICHTEXTWindow WND,X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,COL
    ELSE
     RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
    ENDIF
@@ -5216,6 +5999,9 @@
    ENDIF
 '   ?HEX$(COL)
    IF  C<128THEN INC X,SZ*6/8 ELSE INC X,SZ
+   IF SEL_FLG THEN
+    
+   ENDIF
    IF X+SZ>=W THEN
     X=1
     INC Y,YSZ
@@ -5253,7 +6039,12 @@
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
 END
+DEF OTYDOC_CLK X,Y
 
+END
+COMMON DEF OTYDocLMouseUp WND,CTL,TYPE,X,Y
+ ?X,Y
+END
 DEF OTYDOC_UpCursor(WND)
   VAR D=GetWindowVar(WND,0)
   VAR C=OTYDOC_CurLine[D]
@@ -5899,6 +6690,17 @@
  INC X,12
  NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNR,E
  INC X,12
+ VAR DRP
+ NewWindow GetDropDownListControl(),"",X,0,56,11,WND,0 OUT DRP,E
+ VAR LST=GetDropDownListBox(DRP)
+ AddListBoxItem LST,"H1"
+ AddListBoxItem LST,"H2"
+ AddListBoxItem LST,"H3"
+ AddListBoxItem LST,"H4"
+ AddListBoxItem LST," xxx"
+ AddListBoxItem LST,"1. xxx"
+ AddListBoxItem LST,"'quote'"
+ INC X,56
  SetWindowVar WND,1,BTNL
  SetWindowVar WND,2,BTNC
  SetWindowVar WND,3,BTNR
@@ -6138,13 +6940,16 @@
   RETURN
  ENDIF
  IF ID==1THEN
-  VOID OpenFileDialog(WND,"TXT")
+  VOID OpenFileDialog(WND,"TXT",0)
   RETURN
  ENDIF
  IF ID==3THEN
   VOID DeleteWindow(WND)
   RETURN
  ENDIF
+ IF ID==4THEN
+  VAR E=NewModalDialogBox(MPLAYABOUTCTL,"ABOUT",128,40,WND)
+ ENDIF
 END
 COMMON DEF MPLAYSNOTIF W,C,T,A1,A2$
  SetWindowName GetWindowVar(W,0),RIGHT$(A2$,LEN(A2$)-1)
@@ -6182,7 +6987,55 @@
 COMMON DEF L_MPLAY
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
-
+DEF GETBGMLIST()
+ DIM BGM$[43]
+ COPY BGM$,@BGMNAME
+ RETURN BGM$
+@BGMNAME
+DATA "Kung-Fu POP"
+DATA "With stealthy steps"
+DATA "Flat out run"
+DATA "Nostalgia TECHNO"
+DATA "Feel easy"
+DATA "Have a good time"
+DATA "Relief"
+DATA "Exciting days"
+DATA "Skipping march"
+DATA "Valiant departure"
+DATA "Important thing"
+DATA "Chasing at 'Ooedo'"
+DATA "Funny land"
+DATA "Step on the accelerator"
+DATA "Experiment"
+DATA "New discovery"
+DATA "Thinking time"
+DATA "Mischievous boy"
+DATA "Float"
+DATA "Sound of the surf"
+DATA "Sound of the surf2"
+DATA "Spy movie"
+DATA "Calculating"
+DATA "Take Off!"
+DATA "The evening moon."
+DATA "Sensibility"
+DATA "Pure water"
+DATA "Strategy"
+DATA "cure"
+DATA "Intense battle"
+DATA "Keen competition"
+DATA "Heat uuuup!!"
+DATA "Rise with force"
+DATA "Bright blue"
+DATA "Storyteller"
+DATA "Return trip"
+DATA "High spirits"
+DATA "Welcome to the party"
+DATA "Funky claps"
+DATA "Night surfer"
+DATA "Ready to FLY"
+DATA "We are heroes"
+DATA "Pure water2"
+END
 'Init common dialogs
 VAR CTL_FILDIA
 DEF OTW_FileDialog
@@ -6193,15 +7046,26 @@
  E=SetControlNotifHandler(CTL_FILDIA,"FileDialogNotif")
 END
 COMMON DEF FileDialogNotif WND,C,T,W,__
- IF __==ListBoxChItem()THEN
+ VAR ISSAVE=GetWindowVar(WND,1)
+ IF ISSAVE&&__==ListBoxChItem()THEN
   SetWindowName GetWindowVar(WND,2),GetListBoxSelectedText$(W)
   VOID RepaintWindow(GetWindowVar(WND,2))
   RETURN
  ENDIF
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
-  VAR SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
-  IF!LEN(SEL$)THEN RETURN
-  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),1,SEL$)
+  VAR SEL$
+  IF ISSAVE THEN
+   SEL$=GetWindowName$(GetWindowVar(WND,2))
+   IF!LEN(SEL$)THEN RETURN
+   IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
+    SEL$="*"+SEL$
+   ENDIF
+  ELSE
+   SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
+   IF!LEN(SEL$)THEN RETURN
+  ENDIF
+  VAR ID=GetWindowVar(WND,3)
+  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,SEL$)
   VOID DeleteWindow(WND)
  ELSE
   IF GetWindowName$(W)=="Cancel"THEN
@@ -6209,7 +7073,7 @@
   ENDIF
  ENDIF
 END
-COMMON DEF FileDialogCreate WND,C,T,_,__
+COMMON DEF FileDialogCreate WND,C,T,ID,__
  VAR E,L
  NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
  DIM F$[0]
@@ -6235,23 +7099,24 @@
   SetWindowVar WND,2,L
   SetChItemListBoxNotif WND,F
  ENDIF
+ SetWindowVar WND,3,ID
 END
-COMMON DEF SaveFileDialog(OWNER,TYPE$)
+COMMON DEF SaveFileDialog(OWNER,TYPE$,ID)
  IF!CTL_FILDIA THEN
   OTW_FileDialog
  ENDIF
  IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
  VAR TITLE$=TYPE$
- VAR E=NewModalDialogBox(CTL_FILDIA,"Save "+TYPE$,170,74,OWNER)
+ VAR E=NewDialogBoxWithArg(CTL_FILDIA,"Save "+TYPE$,170,74,OWNER,TRUE,ID,0)
  RETURN E
 END
-COMMON DEF OpenFileDialog(OWNER,TYPE$)
+COMMON DEF OpenFileDialog(OWNER,TYPE$,ID)
  IF!CTL_FILDIA THEN
   OTW_FileDialog
  ENDIF
  IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
  VAR TITLE$=TYPE$
- VAR E=NewModalDialogBox(CTL_FILDIA,"Open "+TYPE$,170,64,OWNER)
+ VAR E=NewDialogBoxWithArg(CTL_FILDIA,"Open "+TYPE$,170,64,OWNER,TRUE,ID,0)
  RETURN E
 END
 
@@ -6436,7 +7301,7 @@
  IF!ODSKCTL THEN
   ExtendControl "ODSK",GetWindowControl() OUT ODSKCTL,E
  ENDIF
- NewTopLevelWindow ODSKCTL,"Desktop",256,128 OUT WIN_ROOTWND2,E
+ NewTopLevelStyleWindow ODSKCTL,"Desktop",256,128,WINDOWRESIZABLESTYLE() OUT WIN_ROOTWND2,E
  SetProcessVar WIN_ROOTWND2
 END
 COMMON DEF L_ODSK
@@ -6698,4 +7563,77 @@
  VAR E=UpdateWindow(GetProcessVar())
  IF E THEN ExitProcess 0
 END
+VAR CLIPBRDCTL
+VAR CLIPBRD_MENU_UPDATE
+VAR CLIPBRD_MENU_ABOUT
+COMMON DEF CLIPBRDNOTIF WND,CTL,TYP,A1,A2
+ IF A2==CLIPBRD_MENU_UPDATE THEN
+  VOID RepaintWindow(WND)
+ ENDIF
+END
+DEF SUGOIGPRINTWindow WND,X,Y,W,H,TXT$,COL
+ W=W DIV 8
+ H=H DIV 8
+ VAR I,J
+ VAR LF$=LF$()
+ WHILE 1
+  VAR T$=MID$(TXT$,I,W)
+  VAR LFPOS=INSTR(T$,LF$)
+  IF LFPOS!=-1THEN
+   T$=MID$(T$,0,LFPOS)
+   I=I+LFPOS+1
+  ELSE
+   I=I+W
+  ENDIF
+  GPRINTWindow WND,X,Y,T$,COL
+  J=J+1
+  IF H<J THEN RETURN
+  Y=Y+8
+ WEND
+END
+COMMON DEF CLIPBRDPAINTER WND,CTL,TYP,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
+ 
+ IF GBeginWindow(WND)THEN RETURN
+ IF ClipboardContainsText()THEN
+  GCLSWindow WND,-1
+ ELSE
+  GCLSWindow WND,GetBackColor()
+ ENDIF
+ VAR W=GETWINDOWWIDTH(WND)
+ VAR H=GETWINDOWHEIGHT(WND)
+ IF ClipboardContainsText()THEN
+  VAR TXT$=ClipboardGetText$()
+  SUGOIGPRINTWindow WND,0,0,W,H,TXT$,RGB(0,0,0)
+ ELSE
+ ENDIF
+ E=GEndWindow(WND)
+END
+COMMON DEF I_CLIPBRD
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!CLIPBRDCTL THEN
+  ExtendControl "ClipBook Viewer",GetWindowControl() OUT CLIPBRDCTL,E
+  E=SetControlPainter(CLIPBRDCTL,"CLIPBRDPAINTER")
+  E=SetControlNotifHandler(CLIPBRDCTL,"CLIPBRDNOTIF")
+ ENDIF
+ VAR MENU
+ NewTopLevelStyleWindow CLIPBRDCTL,"ClipBook Viewer",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE() OUT WND,E
+ NewMenu OUT MENU,E
+ CLIPBRD_MENU_UPDATE=1
+ AddMenuItem MENU,"Update",CLIPBRD_MENU_UPDATE
+ AddSubMenuItem GetWindowMenu(WND),"View",MENU
+ NewMenu OUT MENU,E
+ CLIPBRD_MENU_ABOUT=2
+ AddMenuItem MENU,"About",CLIPBRD_MENU_ABOUT
+ AddSubMenuItem GetWindowMenu(WND),"Help",MENU
+ SetProcessVar WND
+END
+COMMON DEF L_CLIPBRD
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
diff -u OTW.TXT OTW22
--- OTW.TXT
+++ OTW22
@@ -277,6 +277,46 @@
  MENU_FREE=1
  VAR E
 END
+'FILE
+VAR ASSOC_LEN
+DIM ASSOC_TYP$[0]
+DIM ASSOC_EXT$[0]
+DIM ASSOC_NAME$[0]
+DEF OTW_ASSOC_INIT
+ ASSOC_TYP$=NewArray$(0)
+ ASSOC_EXT$=NewArray$(0)
+ ASSOC_NAME$=NewArray$(0)
+ VAR E=AssociateFile("TXT","","EDITORSEL")
+ E=AssociateFile("TXT","TXT","TXTED")
+ E=AssociateFile("TXT","PRG","PRGED")
+ E=AssociateFile("TXT","MML","MPLAY")
+END
+DEF GetAssociatedIndex(TYP$,EXT$)
+ VAR I
+ FOR I=0TO ASSOC_LEN-1
+  IF ASSOC_EXT$[I]==EXT$&&ASSOC_TYP$[I]==TYP$THEN 
+   RETURN I
+  ENDIF
+ NEXT
+ RETURN -1
+END
+COMMON DEF GetAssociatedProgram$(TYP$,EXT$)
+ VAR I=GetAssociatedIndex(TYP$,EXT$)
+ IF I!=-1THEN RETURN ASSOC_NAME$[I]
+ RETURN ""
+END
+COMMON DEF AssociateFile(TYP$,EXT$,NAME$)
+ VAR I=GetAssociatedIndex(TYP$,EXT$)
+ IF I!=-1THEN
+  ASSOC_NAME$[I]=NAME$
+  RETURN 0
+ ENDIF
+ PUSH ASSOC_EXT$,EXT$
+ PUSH ASSOC_TYP$,TYP$
+ PUSH ASSOC_NAME$,NAME$
+ INC ASSOC_LEN
+ RETURN 0
+END
 'IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
 'ExitProcess 1
 'ENDIF
@@ -701,11 +741,15 @@
 '->ClipboardSetText
 VAR CLPBRD
 VAR CLPBRDCTXT
+VAR CLPBRDCFIL
+VAR CLPBRDFIL$
+VAR CLPBRDFILCUT
 VAR CLPBRD$
 VAR CLPBRD#
 VAR CLPBRDPTR
 COMMON DEF ClearClipboard
  CLPBRDCTXT=FALSE
+ CLPBRDCFIL=FALSE
 END
 COMMON DEF ClipboardContainsText()
  RETURN CLPBRDCTXT
@@ -718,6 +762,23 @@
  CLPBRDCTXT=1
  CLPBRD$=V$
 END
+COMMON DEF ClipboardContainsFile()
+ RETURN CLPBRDCFIL
+END
+COMMON DEF ClipboardGetFile OUT ISCUT,PATH$
+ IF CLPBRDCFIL THEN
+  PATH$=CLPBRDFIL$
+  ISCUT=CLPBRDFILCUT
+  RETURN
+ ENDIF
+ ISCUT=FALSE
+ PATH$=""
+END
+COMMON DEF ClipboardSetFile ISCUT,PATH$
+ CLPBRDFIL$=PATH$
+ CLPBRDFILCUT=ISCUT
+ CLPBRDCFIL=TRUE
+END
 COMMON DEF NewImage WIDTH,HEIGHT OUT IMG,E
  IF !IMAGE_FREE THEN IMG=0:E=IMAGE_NOALLOC:RETURN
  VAR PTR=malloc(WIDTH*HEIGHT)
@@ -3784,6 +3845,7 @@
   OTW_WIN_INITARRAY
   OTW_CTL_INITARRAY
   OTW_INIT_ERR
+  OTW_ASSOC_INIT
   PrintConsoleln "Init setting..."
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -5616,6 +5678,10 @@
  NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT TED,E
  TextBoxExSetText TED,LF$()
  SetWindowVar WND,0,TED
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+ IF LEN(CMD$)THEN
+  TextBoxExSetText GetWindowVar(WND,0),LoadFile$(CMD$)
+ ENDIF
 'SetTextBoxExPRGMode WND,TRUE
 END
 COMMON DEF L_TXTED
@@ -5650,6 +5716,10 @@
  TextBoxExSetText TED,LF$()
  SetWindowVar WND,0,TED
  SetTextBoxExPRGMode TED,TRUE
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+  IF LEN(CMD$)THEN
+   TextBoxExSetText GetWindowVar(WND,0),LoadFile$(CMD$)
+  ENDIF
 END
 COMMON DEF L_PRGED
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -6720,6 +6790,13 @@
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
 '===OTYA DOCUMENT EDITOR===
+VAR OTYFIL_MOPEN
+VAR OTYFIL_MCOPY
+VAR OTYFIL_MCUT
+VAR OTYFIL_MDEL
+VAR OTYFIL_MREN
+VAR OTYFIL_MABOUT
+VAR OTYFIL_MPASTE
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
 DIM OTYFILICON[0]
@@ -6734,11 +6811,9 @@
  COPY OTYFILICON,ICONS,16*16*2,16*16
 END
 VAR OTYFILCTL
-VAR OTYFILESWND
-VAR OTYFILES$[0]
 VAR OTYFILICONCTL
 VAR OTYFILABOUTCTL
-VAR OTYFILLBLCTL
+VAR OTYFILRENCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
  VAR SEL=GetWindowVar(W,3)
@@ -6776,95 +6851,248 @@
  S$="OK"
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
 END
-COMMON DEF OTYFILLMouse WND,CTL,T,A1,A2
- SetWindowBackColor GetWindowVar(WND,1),WIN_BKGND
- SetWindowVar WND,1,0
- SetString GetWindowVar(WND,2),""
+DEF OTYFIL_GETSELECTEDFILE$ WND OUT F$
+ VAR ARY$=GetString$(GetWindowVar(WND,3))
+ VAR KL=LEN(ARY$)
+ VAR SELECT=GetWindowVar(WND,4)
+ F$=""
+ IF SELECT<0||KL<SELECT THEN RETURN
+ F$=GetString$(ASC(ARY$[SELECT])OR ASC(ARY$[SELECT+1])<<16)
 END
-COMMON DEF OTYFILICONCTLMouse WND,CTL,T,A1,A2
- VAR W=WND
- IF!LEN(GetWindowName$(WND))THEN
-  W=GetWindowVar(W,2)
+DEF OTYFIL_OPEN WND
+ VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
+ IF F$==""THEN RETURN
+ VAR TYP$
+ IF F$[0]==" "THEN
+  TYP$="DAT"
  ENDIF
- VAR PW=GetParentWindow(WND)
- VAR OLD=GetWindowVar(PW,1)
- IF OLD==W THEN RETURN
- IF OLD THEN
-  SetWindowBackColor OLD,WIN_BKGND
+ IF F$[0]=="*"THEN
+  TYP$="TXT"
  ENDIF
- SetWindowBackColor W,RGB(0,0,255)
- SetWindowVar PW,1,W
- SetString GetWindowVar(PW,2),GetWindowName$(W)
+ F$=MID$(F$,1,99999)
+ VAR EXT$=GetFileExtension$(F$)
+ VAR PRG$=GetAssociatedProgram$(TYP$,EXT$)
+ VAR PRC,E
+ NewProcess PRG$,F$ OUT PRC,E
 END
-COMMON DEF OTYFILDEL WND,CTL,T,A1,A2
- FreeString GetWindowVar(WND,2)
+DEF OTYFIL_COPY WND
+ VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
+ IF F$==""THEN RETURN
+ ClearClipboard
+ ClipboardSetFile FALSE,F$
 END
-COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
- IF ID<=6THEN
-  VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
+DEF OTYFIL_CUT WND
+ VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
+ IF F$==""THEN RETURN
+ ClearClipboard
+ ClipboardSetFile TRUE,F$
+END
+'
+'From[HOGEHOGE.TXT]
+'To  [FUGAFUGA.TXT]
+'       [OK]
+COMMON DEF OTYFILRENCREATE WND,CTL,T,A1,A2
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ VAR FROM=LEN("FROM")*8+8
+ VAR E,W2,FROMW,TOW
+ VAR FROM$=GetWindowName$(WND)
+ NewWindow GetLabelControl(),"From",1,1,32,7,WND,0 OUT W2,E
+ NewWindow GetLabelControl(),"To",1,11,16,7,WND,0 OUT W2,E
+ NewWindow GetTextBoxControl(),FROM$,FROM,0,W-FROM,9,WND,0 OUT FROMW,E
+ NewWindow GetTextBoxControl(),"",FROM,11,W-FROM,9,WND,0 OUT TOW,E
+ VAR BW=24
+ NewWindow GetButtonControl(),"OK",(W-BW) DIV 2,22,BW,10,WND,0 OUT W2,E
+ SetWindowName WND,"Rename"
+ SetWindowVar WND,0,FROMW
+ SetWindowVar WND,1,TOW
+ IF FROM$[0]==" "THEN
+  SetWindowVar WND,2,1
+ ENDIF
+END
+COMMON DEF OTYFILRENNOTIF WND,CTL,T,A1,A2
+ VAR FROMW,TOW
+ GetWindowVar WND,0OUT FROMW
+ GetWindowVar WND,1OUT TOW
+ VAR FROM$=GetWindowName$(FROMW)
+ VAR TO$=GetWindowName$(TOW)
+ RenameFile FROM$,TO$
+ VOID DeleteWindow(WND)
+END
+DEF OTYFIL_DEL WND
+ VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
+ IF F$==""THEN RETURN
+ DeleteFile F$
+END
+DEF OTYFIL_PASTE WND
+ IF!ClipboardContainsFile()THEN
   RETURN
  ENDIF
- VAR I=GetNextWindow(GetChildWindow(WND))
- IF BeginWindowOP(WND)THEN RETURN
- POS=POS*2
- VAR W=36*4+8,H=64
- VAR R=W/36
- VAR C=CEIL(H/40.0)
+ VAR CUT,F$
+ ClipboardGetFile OUT CUT,F$
+ ?"PASTE:",F$
+END
+DEF OTYFIL_REN WND
+ VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
+ IF F$==""THEN RETURN
+ VAR E=NewModalDialogBox(OTYFILRENCTL,F$,40+15*8+4,32,WND)
+END
+COMMON DEF OTYFILLDBL WND,CTL,T,X,Y
+ OTYFILLMouse WND,CTL,T,X,Y
+ OTYFIL_OPEN WND
+END
+VAR OTYFIL_CONTEXTMENU
+COMMON DEF OTYFILRMouse WND,CTL,T,X,Y
+ ShowContextMenu OTYFIL_CONTEXTMENU,WND
+END
+COMMON DEF OTYFILLMouse WND,CTL,T,X,Y
+ VAR S=GetChildWindow(WND)
+ VAR POS=GetScrollBarPosition(S)*2
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ VAR R=WIDTH DIV 42
  VAR BY1=(POS MOD 40)+7
  VAR BY2=(POS MOD 40)-9
- IF OTYFILESWND!=WND THEN
-  GetFiles OTYFILES$,""
-  OTYFILESWND=WND
- ENDIF
-' ?R,C,POS,POS DIV 16,POS DIV 40,BY1
- VAR X=0,Y=7'-22
- VAR J
- VAR L2=R*2
- VAR F
  VAR K=(POS DIV 40)*R
- VAR KL=LEN(OTYFILES$)
- VAR N$
- VAR SW=GetwindowVar(WND,1)
- VAR SN$=GetString$(GetwindowVar(WND,2))
- WHILE I
-  IF J&&!(J MOD L2) THEN INC Y,41X=0
-  IF F THEN
-   IF KL<=K THEN
-    VOID MoveWindow2(I,-256,-256)
-   ELSE
-    VOID MoveWindow2(I,X,Y-BY2)
-    N$=RIGHT$(OTYFILES$[K],LEN(OTYFILES$[K])-1)
-    IF N$==SN$THEN
-     SetWindowBackColor I,RGB(0,0,255)
-     SetWindowVar WND,1,I
-    ENDIF
-    IF SW==I THEN
-     IF N$!=SN$THEN
-      SetWindowBackColor SW,WIN_BKGND
-     ENDIF
-    ENDIF
-    SetWindowName I,N$
-   ENDIF
-   INC K
-   INC X,36
+ VAR ARY$=GetString$(GetWindowVar(WND,3))
+ VAR KL=LEN(ARY$)
+ VAR W=42
+ VAR H=40
+ K=K+((Y+(POS MOD 40)) DIV H)*R
+ K=K+X DIV W
+ K=K*2
+ IF GetWindowVar(WND,4)!=K THEN
+  SetWindowVar WND,4,K
+  OTYFILPAINT WND,CTL,T,0,0
+ ENDIF
+END
+COMMON DEF OTYFILDEL WND,CTL,T,A1,A2
+ FreeString GetWindowVar(WND,2)
+ StrArrayFree GetWindowVar(WND,3)
+END
+DEF OTYFILGETSCRBARLEN(WND)
+ VAR CW=GetChildWindow(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR OL=W DIV 42
+ VAR LEN=LEN(GetString$(GetWindowVar(WND,3)))
+ VAR AW=(LEN DIV OL)*10
+ RETURN AW
+END
+COMMON DEF OTYFILRESIZ WND,CTL,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ SetScrollBarSize CW,OTYFILGETSCRBARLEN(WND)
+ VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+END
+COMMON DEF OTYFILPAINT WND,CTL,T,A1,A2
+ IF CallBaseControlHandler(WND,CTL,T,A1,A2)THEN RETURN
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,GetBackColor()
+ VAR S=GetChildWindow(WND)
+ VAR POS=GetScrollBarPosition(S)*2
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ VAR R=WIDTH DIV 42
+ VAR BY1=(POS MOD 40)+7
+ VAR BY2=(POS MOD 40)-9
+ VAR X=0,Y=7
+ VAR K=((POS DIV 40)*R)*2
+ VAR ARY$=GetString$(GetWindowVar(WND,3))
+ VAR KL=LEN(ARY$)
+ VAR W=42
+ VAR H=40
+ VAR SELECT=GetWindowVar(WND,4)
+ VAR IX=(40-16) DIV 2
+ VAR C=RGB(0,0,0)
+ WHILE K<KL
+  VAR F$=GetString$(ASC(ARY$[K])OR ASC(ARY$[K+1])<<16)
+  IF F$[0]==" "THEN
+   GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICODAT,1,0
   ELSE
-   IF KL<=K THEN
-    VOID MoveWindow2(I,-256,-256)
-   ELSE
-    VOID MoveWindow2(I,X+8,Y-BY1)
-    IF OTYFILES$[K][0]==" "THEN
-     SetWindowVar I,1,1
-    ELSE
-     SetWindowVar I,1,0
-    ENDIF
-   ENDIF
+   GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICOTXT,1,0
   ENDIF
-  F=!F
-  I=GetNextWindow(I)
-  INC J
+  IF SELECT==K THEN
+   GFILLWindow WND,X,Y-BY2,X+39,Y-BY2+23,RGB(0,0,255)
+   C=-1
+  ENDIF
+  VAR L=LEN(F$)-1
+  IF L<=5 THEN 
+  GPRINTWindow WND,X+(5-L)*4,Y-BY2,MID$(F$,1,5),C
+  ELSEIF L>10THEN
+   GPRINTWindow WND,X,Y-BY2+8,MID$(F$,6,5),C
+   GPRINTWindow WND,X+((5-(L-10))*4),Y-BY2+16,MID$(F$,11,4),C
+   GPRINTWindow WND,X,Y-BY2,MID$(F$,1,5),C
+  ELSEIF L>5THEN
+   GPRINTWindow WND,X+((5-(L-5))*4),Y-BY2+8,MID$(F$,6,5),C
+   GPRINTWindow WND,X,Y-BY2,MID$(F$,1,5),C
+  ENDIF
+  X=X+W
+  IF X+W>=WIDTH THEN
+   X=0
+   IF Y>=HEIGHT THEN BREAK
+   Y=Y+H
+  ENDIF
+  IF SELECT==K THEN
+   C=RGB(0,0,0)
+  ENDIF
+  K=K+2
  WEND
- IF EndWindowOP(WND)THEN RETURN
+ IF GENDWindow(WND)THEN RETURN
 END
+COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
+ IF!ID THEN
+  IF POS==OTYFIL_MOPEN THEN
+   OTYFIL_OPEN WND
+   RETURN
+  ENDIF
+  IF POS==OTYFIL_MCOPY THEN
+   OTYFIL_COPY WND
+   RETURN
+  ENDIF
+  IF POS==OTYFIL_MCUT THEN
+   OTYFIL_CUT WND
+   RETURN
+  ENDIF
+  IF POS==OTYFIL_MDEL THEN
+   OTYFIL_DEL WND
+   RETURN
+  ENDIF
+  IF POS==OTYFIL_MREN THEN
+   OTYFIL_REN WND
+   RETURN
+  ENDIF
+  IF POS==OTYFIL_MPASTE THEN
+   OTYFIL_PASTE WND
+   RETURN
+  ENDIF
+  VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
+  RETURN
+ ENDIF
+ OTYFILPAINT WND,CTL,T,0,0
+ RETURN
+END
+DEF StrArrayGetFiles PTR,DIR$
+ DIM FILES$[0]
+ GetFiles FILES$,""
+ VAR S$=CHR$(0)*(2*LEN(FILES$))
+ VAR I,L=LEN(FILES$)-1
+ FOR I=0TO L
+  VAR A=AllocString(FILES$[I])
+  S$[I*2]=CHR$(A)
+  S$[I*2+1]=CHR$(A>>16)
+ NEXT
+ SetString PTR,S$
+END
+DEF StrArrayFree PTR
+ VAR OLD$=GetString$(PTR)
+ VAR I,L=LEN(OLD$)-1
+ FOR I=0 TO L STEP 2
+  VAR J=ASC(OLD$[I])OR ASC(OLD$[I+1])<<16
+  FreeString J
+ NEXT
+END
 COMMON DEF I_OTYFIL
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -6874,58 +7102,53 @@
  VAR WND,E
  IF!OTYFILCTL THEN
   ExtendControl "Files",GetWindowControl() OUT OTYFILCTL,E
-  ExtendControl "FilesLabel",GetLabelControl() OUT OTYFILLBLCTL,E
   E=SetControlNotifHandler(OTYFILCTL,"OTYFILNOTIF")
+  E=SetControlPainter(OTYFILCTL,"OTYFILPAINT")
+  E=SetControlResizeHandler(OTYFILCTL,"OTYFILRESIZ")
   E=SetControlDeleteHandler(OTYFILCTL,"OTYFILDEL")
   E=SetControlLMouseDownHandler(OTYFILCTL,"OTYFILLMouse")
+  E=SetControlRMouseUpHandler(OTYFILCTL,"OTYFILRMouse")
+  E=SetControlLDoubleClickHandler(OTYFILCTL,"OTYFILLDBL")
   NewControl "OTYFILICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
-  E=SetControlLMouseDownHandler(OTYFILICONCTL,"OTYFILICONCTLMouse")
-  E=SetControlLMouseDownHandler(OTYFILLBLCTL,"OTYFILICONCTLMouse")
   RC_OTYFIL
   ExtendControl "FilesAbout",GetWindowControl() OUT OTYFILABOUTCTL,E
   E=SetControlNotifHandler(OTYFILABOUTCTL,"OTYFILABOUTNOTIF")
   E=SetControlCreateHandler(OTYFILABOUTCTL,"OTYFILABOUTCREATE")
+  ExtendControl "Files_Rename",GetWindowControl() OUT OTYFILRENCTL,E
+  E=SetControlCreateHandler(OTYFILRENCTL,"OTYFILRENCREATE")
+  E=SetControlNotifHandler(OTYFILRENCTL,"OTYFILRENNOTIF")
  ENDIF
- VAR W=36*4+8,H=64,LBL
- NewTopLevelMenuWindow OTYFILCTL,"Files",W,H OUT WND,E
+ VAR W=42*4+8,H=64,LBL
+ NewTopLevelStyleWindow OTYFILCTL,"Files",W,H,WINDOWMENUSTYLE()OR WINDOWRESIZABLESTYLE() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
- AddMenuItem MENU,"Open",1
- AddMenuItem MENU,"Copy",2
- AddMenuItem MENU,"Move",3
- AddMenuItem MENU,"Delete",4
- AddMenuItem MENU,"Rename",5
+ OTYFIL_MOPEN=1
+ OTYFIL_MCOPY=2
+ OTYFIL_MCUT=3
+ OTYFIL_MDEL=4
+ OTYFIL_MREN=5
+ OTYFIL_MABOUT=6
+ OTYFIL_MPASTE=7
+ AddMenuItem MENU,"Open",OTYFIL_MOPEN
+'AddMenuItem MENU,"Copy",OTYFIL_MCOPY
+'AddMenuItem MENU,"Cut",OTYFIL_MCUT
+'AddMenuItem MENU,"Paste",OTYFIL_MPASTE
+ AddMenuItem MENU,"Delete",OTYFIL_MDEL
+ AddMenuItem MENU,"Rename",OTYFIL_MREN
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ OTYFIL_CONTEXTMENU=MENU
  NewMenu OUT MENU,E
- AddMenuItem MENU,"About",6
+ AddMenuItem MENU,"About",OTYFIL_MABOUT
  AddSubMenuItem GetWindowMenu(WND),"Help",MENU
- VAR X=8,Y,I
- OTYFILES$=NewArray$(0)
- GetFiles OTYFILES$,""
- OTYFILESWND=WND
- VAR R=W/36
- VAR C=CEIL(H/40.0)+1
- VAR L=R*C
- IF LEN(OTYFILES$)<=L THEN L=LEN(OTYFILES$)-1
- VAR ICN
- FOR I=0TO L'LEN(OTYFILES$)-1
-  IF X+32+4>W THEN INC Y,40:X=8
-'  IF Y+16>=H THEN BREAK
-  NewWindow OTYFILLBLCTL,RIGHT$(OTYFILES$[I],LEN(OTYFILES$[I])-1),X-8,Y+16,32,24,WND,0 OUT LBL,E
-  SetLabelAlignCenter LBL
-  SetWindowVar LBL,2,LBL
-  NewWindow OTYFILICONCTL,"",X,Y,15,15,WND,0 OUT ICN,E
-  IF OTYFILES$[I][0]==" "THEN SetWindowVar ICN,1,1
-  SetWindowVar ICN,2,LBL
-  INC X,32+4
- NEXT
  VAR SCR
- VAR OL=W/36
- VAR AW=FLOOR(LEN(OTYFILES$)/OL)*20
- NewVScrollBAR WND,AW OUT SCR,E
  SetProcessVar WND
  SetWindowVar WND,2,AllocString("")
+ VAR PTR=AllocString("")
+ StrArrayGetFiles PTR,""
+ SetWindowVar WND,3,PTR
+ NewVScrollBAR WND,OTYFILGETSCRBARLEN(WND) OUT SCR,E
+ SetWindowVar WND,4,-1'SELECTED
  OTYFILNOTIF WND,0,0,WND,0
 END
 COMMON DEF L_OTYFIL
@@ -6981,7 +7204,8 @@
  SetProcessVar WND
  VAR W2
  NewWindow GetButtonControl(),"",0,0,10,10,WND,0 OUT W2,E
- NewWindow GetLabelControl(),"",12,2,128-12,8,WND,1 OUT W2,E
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+ NewWindow GetLabelControl(),CMD$,12,2,128-12,8,WND,1 OUT W2,E
  SetWindowVar WND,0,W2
 END
 COMMON DEF L_MPLAY
@@ -7571,13 +7795,14 @@
   VOID RepaintWindow(WND)
  ENDIF
 END
-DEF SUGOIGPRINTWindow WND,X,Y,W,H,TXT$,COL
+DEF SUGOIGPRINTWindow WND,X,Y,W,H,TXT$,COL OUT OX,OY
  W=W DIV 8
  H=H DIV 8
  VAR I,J
  VAR LF$=LF$()
  WHILE 1
   VAR T$=MID$(TXT$,I,W)
+  IF!LEN(T$)THEN BREAK
   VAR LFPOS=INSTR(T$,LF$)
   IF LFPOS!=-1THEN
    T$=MID$(T$,0,LFPOS)
@@ -7587,9 +7812,11 @@
   ENDIF
   GPRINTWindow WND,X,Y,T$,COL
   J=J+1
-  IF H<J THEN RETURN
+  IF H<J THEN BREAK
   Y=Y+8
  WEND
+ OX=X
+ OY=Y
 END
 COMMON DEF CLIPBRDPAINTER WND,CTL,TYP,A1,A2
  VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
@@ -7602,11 +7829,24 @@
  ENDIF
  VAR W=GETWINDOWWIDTH(WND)
  VAR H=GETWINDOWHEIGHT(WND)
+ VAR X,Y
  IF ClipboardContainsText()THEN
   VAR TXT$=ClipboardGetText$()
-  SUGOIGPRINTWindow WND,0,0,W,H,TXT$,RGB(0,0,0)
+  
+  SUGOIGPRINTWindow WND,0,Y,W,H-Y,"Text:",RGB(0,0,0) OUT X,Y
+  SUGOIGPRINTWindow WND,0,Y,W,H-Y,TXT$,RGB(0,0,0) OUT X,Y
  ELSE
  ENDIF
+ IF ClipboardContainsFile()THEN
+  VAR CUT,FILE$
+  ClipboardGetFile OUT CUT,FILE$
+  IF!CUT THEN
+   SUGOIGPRINTWindow WND,0,Y,W,H-Y,"File:",RGB(0,0,0) OUT X,Y
+  ELSE
+   SUGOIGPRINTWindow WND,0,Y,W,H-Y,"File(cut):",RGB(0,0,0) OUT X,Y
+  ENDIF
+  SUGOIGPRINTWindow WND,0,Y,W,H-Y,FILE$,RGB(0,0,0) OUT X,Y
+ ENDIF
  E=GEndWindow(WND)
 END
 COMMON DEF I_CLIPBRD
@@ -7636,4 +7876,35 @@
 COMMON DEF L_CLIPBRD
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR EDITORSELCTL
+COMMON DEF EDITORSELNOTIF A,B,C,D,E
+ IF E==0THEN
+  VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+  VAR PRC
+  NewProcess GetListBoxSelectedText$(D),CMD$ OUT PRC,E
+  VOID DeleteWindow(A)
+ ENDIF
+END
+COMMON DEF I_EDITORSEL
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!EDITORSELCTL THEN
+  ExtendControl "EditorSelector",GetWindowControl() OUT EDITORSELCTL,E
+  E=SetControlNotifHandler(EDITORSELCTL,"EDITORSELNOTIF")
+ ENDIF
+ NewTopLevelWindow EDITORSELCTL,"EditorSelector",128,40 OUT WND,E
+ SetProcessVar WND
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+ NewWindow GetLabelControl(),"Open "+CMD$,1,1,128,7,WND,0 OUT E,E
+ NewWindow GetListBoxControl(),"",0,9,127,32,WND,0 OUT WND,E
+ AddListBoxItem WND,"TXTED"
+ AddListBoxItem WND,"PRGED"
+END
+COMMON DEF L_EDITORSEL
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
diff -u OTW.TXT OTW23
--- OTW.TXT
+++ OTW23
@@ -87,6 +87,7 @@
 VAR OTW_BP
 'GPAGE
 VAR OTW_GP
+VAR OTW_DDRAWPAGE
 'VAR WIN_FWIDTH1
 'VAR WIN_FHEIGHT1
 'VAR WIN_FWIDTH2
@@ -364,6 +365,7 @@
 VAR CTL_LDBLCLKHANDLER
 VAR CTL_MSLEAVEHANDLER
 VAR CTL_RESIZEHANDLER
+VAR CTL_FRMPAINTHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -387,7 +389,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=18
+ CTL_HANDLER_MAX=19
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -427,6 +429,7 @@
  CTL_LDBLCLKHANDLER=15
  CTL_MSLEAVEHANDLER=16
  CTL_RESIZEHANDLER=17
+ CTL_FRMPAINTHANDLER=18
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -437,6 +440,7 @@
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
+ E=SetControlFramePainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseDownHandler(CTL_WINDOWCTL,"WindowLMouseDown")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
@@ -516,6 +520,17 @@
   ARY[I]=I+1
  NEXT
 END
+VAR IM_MAX
+VAR IM_FREE
+DIM IM_NEXT[0]
+DIM IM_KEY_HANDLER$[0]
+DEF WIN_IM_INITARRAY
+ IM_MAX=5
+ IM_NEXT=NeeArray(IM_MAX)
+ IM_KEY_HANDLER$=NeeArray$(IM_MAX)
+ OTW_INITLIST IM_NEXT
+ IM_FREE=1
+END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
 VAR WIN_EVENTERR
@@ -633,6 +648,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlFramePainter(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_FRMPAINTHANDLER]=HANDLER$
+ RETURN 0
+END
 COMMON DEF SetControlLMouseUpHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_LBTNUPHANDLER]=HANDLER$
@@ -779,10 +799,18 @@
  CLPBRDFILCUT=ISCUT
  CLPBRDCFIL=TRUE
 END
+COMMON DEF LoadGRPImage FIL$ OUT IMG,E
+ NewImage 512,512 OUT IMG,E
+ VAR I=IMG AND 4095
+ LoadData FIL$,GetSBArray(IMAGE_PTR[I])
+END
+COMMON DEF NewArrayImage ARRAY OUT IMG,E
+ 
+END
 COMMON DEF NewImage WIDTH,HEIGHT OUT IMG,E
  IF !IMAGE_FREE THEN IMG=0:E=IMAGE_NOALLOC:RETURN
- VAR PTR=malloc(WIDTH*HEIGHT)
- IF!PTR THEN IMG=0:E=IMAGE_NOALLOC:RETURN
+ VAR PTR=AllocSBArray()
+ IF PTR==-1 THEN IMG=0:E=IMAGE_NOALLOC:RETURN
  INC IMAGE_IDCNT
  IMAGE_ID[IMAGE_FREE]=IMAGE_IDCNT
  IMAGE_HEIGHT[IMAGE_FREE]=WIDTH
@@ -790,6 +818,7 @@
  IMAGE_PTR[IMAGE_FREE]=PTR
  IMG=IMAGE_FREE OR IMAGE_IDCNT<<12
  IMAGE_FREE=IMAGE_NEXT[IMAGE_FREE]
+ SetSBArray PTR,NewArray(WIDTH,HEIGHT)
  E=0
  RETURN
 END
@@ -1685,13 +1714,53 @@
 DEF RepaintAllWindow WND,X,Y,W,H
  VAR NXT=WND AND NUWIDMASK
  VAR B=NXT
-' WHILE NXT
-'  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDHIFT))
-'  OTW_DrawMap NXT
-'  IF WIN_CHILD[NXT]THEN
-'   B=WIN_CHILD[NXT]
+CLS
+ VAR CLIPMODE=1
+ IF!X&&!Y&&!W&&!H THEN CLIPMODE=0
+ VAR X2=X+W
+ VAR Y2=Y+H
+ 
    WHILE B
-    IF!WIN_HIDE[B]THEN VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+    IF B!=1&&!WIN_HIDE[B] THEN
+     IF!CLIPMODE THEN
+      VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+      GOTO @CONT
+     ENDIF
+     VAR FX=WIN_AX[B]+WIN_FW1[B]
+     VAR FY=WIN_AY[B]+WIN_FH1[B]
+     VAR FW=WIN_WIDTH[B]-WIN_FW2[B]
+     VAR FH=WIN_HEIGHT[B]-WIN_FH2[B]
+     VAR CX=MAX(X,FX)
+     VAR CY=MAX(Y,FY)
+     VAR CX2=MIN(X2,FX+FW)
+     VAR CY2=MIN(Y2,FY+FH)
+     VAR CW=CX2-CX
+     VAR CH=CY2-CY
+     CX=CX-FX
+     CY=CY-FY
+     IF CX>=0&&CX<=FW&&CY>=0&&CY<=FH&&CW>=0&&CH>=0THEN
+      VOID RepaintWindowWithARect(B OR(WIN_WID[B]<<WIDSHIFT),MAX(0,CX),MAX(0,CY),CW,CH)
+     ELSE
+      FX=WIN_AX[B]
+      FY=WIN_AY[B]
+      FW=WIN_WIDTH[B]
+      FH=WIN_HEIGHT[B]
+      CX=MAX(X,FX)
+      CY=MAX(Y,FY)
+      CX2=MIN(X2,FX+FW)
+      CY2=MIN(Y2,FY+FH)
+      CW=CX2-CX
+      CH=CY2-CY
+      CX=CX-FX
+      CY=CY-FY
+      
+      IF CX>=0&&CX<=FW&&CY>=0&&CY<=FH&&CW>=0&&CH>=0 THEN
+       VOID RepaintFrameWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+       
+      ENDIF
+     ENDIF
+    ENDIF
+    @CONT
     OTW_DrawMap B
     IF WIN_CHILD[B]THEN
      B=WIN_CHILD[B]
@@ -1875,8 +1944,9 @@
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ VAR OX=WIN_AX[NUWID],OY=WIN_AY[NUWID]
  VAR MX=X-WIN_X[NUWID],MY=Y-WIN_Y[NUWID]
- IF!MX&&!MY THEN RETURN 0
+' IF!MX&&!MY THEN RETURN 0
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
  WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
@@ -1907,8 +1977,8 @@
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  '   B=WIN_CHILD[NXT]
- VAR MOVEF=0
- B=WIN_PARENT[NUWID]
+ VAR MOVEF=1
+ B=WIN_CHILD[NUWID]
    WHILE B
     IF MOVEF THEN
      WIN_AX[B]=WIN_AX[B]+MX
@@ -1922,27 +1992,22 @@
      OTW_CLIPWindow B
      MOVEF=1
     ENDIF
-    IF!WIN_HIDE[B]THEN
-     VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-     OTW_DrawMap B
-    ENDIF
-
     IF WIN_CHILD[B]THEN
-     IF B==NUWID THEN MOVEF=1
      B=WIN_CHILD[B]
      CONTINUE
     ENDIF
     IF!WIN_NEXT[B]THEN
      WHILE B
       B=WIN_PARENT[B]
-      IF B==NUWID THEN MOVEF=0
+      IF B==NUWID THEN B=0
       IF WIN_NEXT[B]THEN BREAK
      WEND
-     IF!B THEN RETURN 0
+     IF!B THEN BREAK
     ENDIF
     B=WIN_NEXT[B]
    WEND
- RETURN
+   RepaintAllWindow NUWIDToWND(WIN_PARENT[NUWID]),OX,OY,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+ RETURN 0
 END
 DEF ResizeWindowF(WND,W,H)
  VAR NUWID=WND AND NUWIDMASK
@@ -1954,11 +2019,13 @@
   H=WIN_MINH[NUWID]-1
  ENDIF
  VOID FireResizeWindow(WND,W-WIN_FW2[NUWID],H-WIN_FH2[NUWID])
+ VAR OW=WIN_WIDTH[NUWID]
+ VAR OH=WIN_HEIGHT[NUWID]
  WIN_WIDTH[NUWID]=W
  WIN_HEIGHT[NUWID]=H
  OTW_CLIPWindow NUWID
  OTW_CLIPCHILD NUWID
- RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+ RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],OW,OH
 'WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -1994,10 +2061,18 @@
  IF WIN_MSGS[NUWID]>=WIN_MSGMAX THEN WIN_MSGS[NUWID]=0
  RETURN 0
 END
+DEF RepaintFrameWindow(WND)
+ IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
+ RETURN SendWindowEvent(WND,CTL_FRMPAINTHANDLER,0,0)
+END
 COMMON DEF RepaintWindow(WND)
  IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
+DEF RepaintWindowWithARect(WND,AX,AY,AX2,AY2)
+ IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
+ RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,AX OR AY<<16,AX2 OR AY2<<16)
+END
 COMMON DEF SendNotificationWindow(WND,DAT,DAT2)
  RETURN SendWindowEvent(WND,CTL_NOTIFHANDLER,DAT,DAT2)
 END
@@ -2127,7 +2202,7 @@
   DEC WIN_MSGCNT[NUWID,TYPE]
  ENDIF
  IF S2!=WIN_MSGS[NUWID]THEN BREAK
- BREAK
+'BREAK
  WEND
  RETURN 0
 END
@@ -2341,6 +2416,18 @@
  WING_SX=X+WIN_FX[NUWID]
  WING_SY=Y+WIN_FY[NUWID]
 END
+COMMON DEF GBeginDirect(WND)
+ GPAGE OTW_SP,OTW_DDRAWPAGE
+END
+COMMON DEF GEndDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
+ GPAGE OTW_SP,OTW_BP
+END
+COMMON DEF GCopyDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
+ GPAGE OTW_SP,OTW_BP
+ VAR E=GBeginWindow(WND)
+ IF E THEN RETURN E
+ GCOPY OTW_DDRAWPAGE,X1+WING_SX,Y1+WING_SY,X2+WING_SX,Y2+WING_SY,X3+WING_SX,Y3+WING_SY,MODE
+END
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -2472,6 +2559,15 @@
  ENDIF
  SPHIDE SP
 END
+COMMON DEF __GPSETWindow__ WND,X,Y,COL
+ GPAGE OTW_SP,OTW_DP
+ VAR AX=WIN_FX[WND AND NUWIDMASK]+X
+ VAR AY=WIN_FY[WND AND NUWIDMASK]+Y
+ GCLIP 1
+ IF RGBToShort(GSPOIT(AX,AY+240))==(WND AND NUWIDMASK)THEN
+  GPSET AX,AY,COL
+ ENDIF
+END
 COMMON DEF GPSETWindow WND,X,Y,COL
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2659,7 +2755,7 @@
  VAR C=WIN_BKGND
  DEC H,SH
  DEC W,SW
- GCLSWindow WND,WIN_BKGND
+ GCLSWindow WND,WIN_BACKGND[NUWID]
  GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
@@ -2931,6 +3027,7 @@
   DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
   VAR X=MX+A1X
   VAR Y=MY+A2Y
+  OTW_INITSP 5
   VAR E=MoveWindow(WND,X,Y)
   E=FrontWindow(WND)
   SPUNLINK OTW_MOVWINSP
@@ -3578,24 +3675,52 @@
  VAR _W=GetWindowWidth(W)
  VAR _H=GetWindowHeight(W)
  GBOXWindow W,0,0,_W,_H,RGB(0,0,0)
+ VAR ID=GetWindowVar(W,3)
  '====
  'BOX
- GLINEWindow W,0,0,0,7,-1
- GLINEWindow W,0,0,7,0,-1
  VAR C=RGB(0,0,0)
- '
- GLINEWindow W,4,2,2,4,C
- GFILLWindow W,3,3,5,6,C
- GPSETWindow W,6,4,C
- GLINEWindow W,0,8,8,8,C
+ IF ID==2THEN
+  VAR P=1
+  GLINEWindow W,4+P,2+P,2+P,4+P,C
+  GFILLWindow W,3+P,3+P,5+P,6+P,C
+  GPSETWindow W,6+P,4+P,C
+  GLINEWindow W,P,8+P,8+P,8+P,C
+  
+  GLINEWindow W,0,0,0,7,C
+  GLINEWindow W,0,0,7,0,C
+  GLINEWindow W,8,0,8,8,-1
+  GLINEWindow W,0,8,8,8,-1
+ ELSE
+  GLINEWindow W,0,0,0,7,-1
+  GLINEWindow W,0,0,7,0,-1
+  '
+  GLINEWindow W,4,2,2,4,C
+  GFILLWindow W,3,3,5,6,C
+  GPSETWindow W,6,4,C
+  GLINEWindow W,0,8,8,8,C
+ ENDIF
  '====
- 'BOX
- GLINEWindow W,0,_H-1,0,_H-8,-1
- GLINEWindow W,0,_H-8,7,_H-8,-1 
- '
- GLINEWindow W,2,_H-4,4,_H-2,C
- GFILLWindow W,3,_H-6,5,_H-3,C
- GPSETWindow W,6,_H-4,C
+ IF ID==3THEN
+  'BOX
+  GLINEWindow W,0,_H-1,0,_H-8,C
+  GLINEWindow W,0,_H-8,7,_H-8,C
+  
+  GLINEWindow W,0,_H,8,_H,-1
+  GLINEWindow W,8,_H-8,8,_H,-1
+  '
+  P=1
+  GLINEWindow W,2+P,_H-4+P,4+P,_H-2+P,C
+  GFILLWindow W,3+P,_H-6+P,5+P,_H-3+P,C
+  GPSETWindow W,6+P,_H-4+P,C
+ ELSE
+  'BOX
+  GLINEWindow W,0,_H-1,0,_H-8,-1
+  GLINEWindow W,0,_H-8,7,_H-8,-1
+  '
+  GLINEWindow W,2,_H-4,4,_H-2,C
+  GFILLWindow W,3,_H-6,5,_H-3,C
+  GPSETWindow W,6,_H-4,C
+ ENDIF
  
  '==BAR==
  VAR AH=_H-18
@@ -3620,6 +3745,7 @@
 DEF VSCRBARLMouseUP W,C,T,X,Y
  SetWindowVar W,3,8
  VOID ReleaseCapture(W)
+ VSCRBARPainter W,C,0,0,0
 END
 DEF VSCRBARLMouseDown W,C,T,X,Y
  VAR ID=GetWindowVar(W,3)
@@ -3669,8 +3795,11 @@
 VAR OTW_MOUSESIZE
 VAR OTW_MOUSE_HOMEX
 VAR OTW_MOUSE_HOMEY
+VAR OTW_MOUSE
 'ざんてい じっそう
 DEF OTW_INITSP NUM
+ IF OTW_MOUSE==NUM THEN RETURN
+ OTW_MOUSE=NUM
  GCLIP 1
  GPSET 408,0,-1
  SPDEF 0,408,0,1,1,1
@@ -3678,7 +3807,7 @@
  VAR BACK=RGB(255,255,255)
  GCOLOR FORE
  VAR SC#=1,B=416
- IF !NUM THEN
+ IF 0&&!NUM THEN
   OTW_MOUSE_HOMEX=0
   OTW_MOUSE_HOMEY=0
   GFILL B,0,B+10*SC#,18*SC#,0
@@ -3715,9 +3844,10 @@
     X2=I
     IF RVSF THEN X2=L-I
     VAR C=ASC(D$[I])-48
+    IF C<0THEN IF W<X2+1 THEN W=X2+1
     IF C<0THEN C=0
     IF C>9THEN DEC C,7'HEX
-    IF C>9THEN IF W<X2+1 THEN W=X2+1
+'    IF C>9THEN IF W<X2+1 THEN W=X2+1
     IF SWPF THEN
      GPSET B+Y,X+X2,OTW_CONSOLEPAL[C]
     ELSE
@@ -3743,11 +3873,30 @@
  SPCOL 0,0,0,1,1
  SPCHR OTW_SHADOWSP,290
  SPLINK OTW_SHADOWSP,OTW_MOUSESP
- SPOFS OTW_SHADOWSP,-2,2,-00
+ SPOFS OTW_SHADOWSP,-2,2,1
  SPCOLOR OTW_SHADOWSP,RGB(128,0,0,0)
  SPVAR OTW_SHADOWSP,0,1
  SPHOME OTW_SHADOWSP,OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
  'NORMAL CURSOR
+ @0
+ DATA "1         
+ DATA 0,0
+ DATA "11        
+ DATA "1F1       
+ DATA "1FF1      
+ DATA "1FFF1     
+ DATA "1FFFF1    
+ DATA "1FFFFF1   
+ DATA "1FFFFFF1  
+ DATA "1FFFFFFF1 
+ DATA "1FFFFF1111
+ DATA "1FF1FF1   
+ DATA "1F1 1FF1  
+ DATA "11  1FF1  
+ DATA "1    1FF1 
+ DATA "     1FF1 
+ DATA "      11  
+ DATA ""
  @1
  DATA "    F    
  DATA 4,10
@@ -3775,25 +3924,48 @@
  @2
  DATA "S",1
  @3
- DATA "FFFFFFF         
+ DATA "FFFFFFF        
  DATA 7,7
- DATA "F11111F         
- DATA "F1111F          
- DATA "F111F           
- DATA "F11F1F          
- DATA "F1F F1F         
- DATA "FF   F1F        
- DATA "      F1F       
- DATA "       F1F   FF 
- DATA "        F1F F1F 
- DATA "         F1F11F 
- DATA "          F111F 
- DATA "         F1111F 
- DATA "        F11111F 
- DATA "        FFFFFFF 
+ DATA "F11111F        
+ DATA "F1111F         
+ DATA "F111F          
+ DATA "F11F1F         
+ DATA "F1F F1F        
+ DATA "FF   F1F       
+ DATA "      F1F      
+ DATA "       F1F   FF
+ DATA "        F1F F1F
+ DATA "         F1F11F
+ DATA "          F111F
+ DATA "         F1111F
+ DATA "        F11111F
+ DATA "        FFFFFFF
  DATA "
  @4
  DATA "R",3'REVERSE 3
+ @5
+ DATA "11111111111   
+ DATA 0,0
+ DATA "11FFFFFFF11   
+ DATA "11111111111   
+ DATA "1FFFFFFFFF1   
+ DATA "1FFFFFFFFF1   
+ DATA "1FFFFFFFFF1   
+ DATA "1FFFF1FFFF1   
+ DATA "11FF1F1FF11   
+ DATA " 11FF1FF11    
+ DATA "  11FFF11     
+ DATA "   11F11      
+ DATA "  11FFF11     
+ DATA " 11FFFFF11    
+ DATA "11FFF1FFF11   
+ DATA "1FFF1F1FFF1   
+ DATA "1FF1F1F1FF1   
+ DATA "1F1F1F1F1F1   
+ DATA "11111111111   
+ DATA "11FFFFFFF11   
+ DATA "11111111111   
+ DATA ""
 END
 VAR WIN_ROOTCTL
 VAR TSTWND,TSTCTL
@@ -3819,6 +3991,7 @@
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  KEY 1,"KEY OFF"
   OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
   WIN_BTNBACK=RGB(192,192,192)
@@ -3857,6 +4030,7 @@
   OTW_SP=0
   OTW_BP=1
   OTW_GP=2
+  OTW_DDRAWPAGE=2
   PrintConsoleln "Init screen..."
   MouseClipDef
   GPAGE OTW_SP,OTW_SP
@@ -3925,7 +4099,7 @@
   OTW_INIT=TRUE
   VAR E
   NewControl "DESKTOP" OUT WIN_ROOTCTL,E
-  E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
+' E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
   NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
 ' NewTopLevelWindow TSTCTL,"HELLO",164,164 OUT TSTWND,E
@@ -3950,6 +4124,7 @@
   SPSET OTW_MOUSESP,0
   OTW_SHADOWSP=1
   SPSET OTW_SHADOWSP,0
+  OTW_MOUSE=-1
   OTW_INITSP 0
   OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
@@ -3990,7 +4165,25 @@
 VAR OTW_OLDBTNF
 VAR OLDMOVEMOUSEWINDOW
 VAR OTW_SMOOTH_MOVE_WINDOW
+VAR OTW_ENKEY_STATE
+VAR OTW_ENABLEKEY
 COMMON DEF L_OTW
+ VAR X,Y,MMM
+ TOUCH OUT MMM,X,Y
+ IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
+  OTW_ENKEY_STATE=1
+  OTW_ENABLEKEY=!OTW_ENABLEKEY
+  IF OTW_ENABLEKEY THEN
+   KEY 1,"KEY ON"
+  ELSE
+   KEY 1,"KEY OFF"
+  ENDIF
+  BEEP 9
+ ENDIF
+ IF!MMM THEN OTW_ENKEY_STATE=0
+ IF OTW_MOUSE==5THEN
+  OTW_INITSP 0
+ ENDIF
  VAR MOVEMOUSE
  UpdateMouse
  IF OTW_MOUSEX!=OTW_OLDMOUSEX THEN MOVEMOUSE=1
@@ -4147,7 +4340,7 @@
  OTW_OLDMOUSEX=OTW_MOUSEX
  OTW_OLDMOUSEY=OTW_MOUSEY
  VAR K$=INKEY$()
- IF LEN(K$)THEN
+ IF OTW_ENABLEKEY&&LEN(K$)THEN
   E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
@@ -4744,6 +4937,7 @@
   E=SetControlRMouseDownHandler(TXTBOXEXCTL,"TextBoxExRMD")
   E=SetControlResizeHandler(TXTBOXEXCTL,"TextBoxResize")
   E=SetControlMouseMoveHandler(TXTBOXEXCTL,"TextBoxExMMOVE")
+  E=SetControlDeleteHandler(TXTBOXEXCTL,"TextBoxExDelete")
   TXTBOXEX_LINESIZ=10000'1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -4816,6 +5010,7 @@
  IF P THEN
   TXTBOXEX_NEXT[P]=N
  ENDIF
+ TXTBOXEX_VAL$[L]=""
  TXTBOXEX_NEXT[L]=TXTBOXEX_FREE
  TXTBOXEX_FREE=L
  IF P THEN RETURN P
@@ -4963,6 +5158,13 @@
  TXTBOXEX_CSELLINE2[C]=0
  TXTBOXEX_CSELPOS2[C]=0
 END
+COMMON DEF TextBoxExDelete WND,CTL,T,_,__
+ VAR BOX=GetWindowVar(WND,7)
+ VAR F=TXTBOXEX_CFIRST[BOX]
+ WHILE F
+  F=TXTED_DeleteLine(F)
+ WEND
+END
 DEF GetTextBoxExMode(CTL)
  RETURN TXTBOXEX_CMODE[CTL]
 END
@@ -6797,6 +6999,8 @@
 VAR OTYFIL_MREN
 VAR OTYFIL_MABOUT
 VAR OTYFIL_MPASTE
+VAR OTYFIL_MFIL
+VAR OTYFIL_MUPD
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
 DIM OTYFILICON[0]
@@ -6856,7 +7060,7 @@
  VAR KL=LEN(ARY$)
  VAR SELECT=GetWindowVar(WND,4)
  F$=""
- IF SELECT<0||KL<SELECT THEN RETURN
+ IF SELECT<0||KL<=SELECT THEN RETURN
  F$=GetString$(ASC(ARY$[SELECT])OR ASC(ARY$[SELECT+1])<<16)
 END
 DEF OTYFIL_OPEN WND
@@ -6887,6 +7091,14 @@
  ClearClipboard
  ClipboardSetFile TRUE,F$
 END
+DEF OTYFIL_FIL WND
+ 
+END
+DEF OTYFIL_UPD WND
+ VAR PTR=GetWindowVar(WND,3)
+ StrArrayGetFiles PTR,""
+ void(repaintWindow(WND))
+END
 '
 'From[HOGEHOGE.TXT]
 'To  [FUGAFUGA.TXT]
@@ -6894,29 +7106,29 @@
 COMMON DEF OTYFILRENCREATE WND,CTL,T,A1,A2
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- VAR FROM=LEN("FROM")*8+8
- VAR E,W2,FROMW,TOW
- VAR FROM$=GetWindowName$(WND)
- NewWindow GetLabelControl(),"From",1,1,32,7,WND,0 OUT W2,E
- NewWindow GetLabelControl(),"To",1,11,16,7,WND,0 OUT W2,E
- NewWindow GetTextBoxControl(),FROM$,FROM,0,W-FROM,9,WND,0 OUT FROMW,E
- NewWindow GetTextBoxControl(),"",FROM,11,W-FROM,9,WND,0 OUT TOW,E
+ VAR OLD=LEN("Old")*8+8
+ VAR E,W2,OLDW,NEWW
+ VAR OLD$=GetWindowName$(WND)
+ NewWindow GetLabelControl(),"Old",1,1,OLD-2,7,WND,0 OUT W2,E
+ NewWindow GetLabelControl(),"New",1,11,OLD-2,7,WND,0 OUT W2,E
+ NewWindow GetTextBoxControl(),OLD$,OLD,0,W-OLD,8,WND,0 OUT OLDW,E
+ NewWindow GetTextBoxControl(),"",OLD,11,W-OLD,8,WND,0 OUT NEWW,E
  VAR BW=24
  NewWindow GetButtonControl(),"OK",(W-BW) DIV 2,22,BW,10,WND,0 OUT W2,E
  SetWindowName WND,"Rename"
- SetWindowVar WND,0,FROMW
- SetWindowVar WND,1,TOW
- IF FROM$[0]==" "THEN
+ SetWindowVar WND,0,OLDW
+ SetWindowVar WND,1,NEWW
+ IF OLD$[0]==" "THEN
   SetWindowVar WND,2,1
  ENDIF
 END
 COMMON DEF OTYFILRENNOTIF WND,CTL,T,A1,A2
- VAR FROMW,TOW
- GetWindowVar WND,0OUT FROMW
- GetWindowVar WND,1OUT TOW
- VAR FROM$=GetWindowName$(FROMW)
- VAR TO$=GetWindowName$(TOW)
- RenameFile FROM$,TO$
+ VAR OLDW,NEWW
+ GetWindowVar WND,0OUT OLDW
+ GetWindowVar WND,1OUT NEWW
+ VAR OLD$=GetWindowName$(OLDW)
+ VAR NEW$=GetWindowName$(NEWW)
+ RenameFile OLD$,NEW$
  VOID DeleteWindow(WND)
 END
 DEF OTYFIL_DEL WND
@@ -6975,6 +7187,7 @@
  VAR W=GetWindowWidth(WND)
  VAR OL=W DIV 42
  VAR LEN=LEN(GetString$(GetWindowVar(WND,3)))
+ IF OL==0THEN OL=1
  VAR AW=(LEN DIV OL)*10
  RETURN AW
 END
@@ -7029,7 +7242,7 @@
    GPRINTWindow WND,X,Y-BY2,MID$(F$,1,5),C
   ENDIF
   X=X+W
-  IF X+W>=WIDTH THEN
+  IF X+W>WIDTH THEN
    X=0
    IF Y>=HEIGHT THEN BREAK
    Y=Y+H
@@ -7041,6 +7254,48 @@
  WEND
  IF GENDWindow(WND)THEN RETURN
 END
+DEF OTYFILSCR WND,SEL
+ VAR S=GetChildWindow(WND)
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ VAR R=WIDTH DIV 42
+ SetScrollBarPosition S,((SEL DIV 2)DIV R)*20
+END
+COMMON DEF OTYFILKEY WND,CTL,T,KEY,A2
+ VAR IND=0
+ VAR K$=CHR$(KEY)
+ VAR ARY$=GetString$(GetWindowVar(WND,3))
+ VAR KL=LEN(ARY$)
+ VAR K=GetWindowVar(WND,4),SEL=-1,ISSEL=TRUE
+ IF K==-1THEN
+  K=0
+  ISSEL=FALSE
+ ELSE
+  K=K+2
+ ENDIF
+ WHILE TRUE
+  IF K>=KL THEN
+   IF ISSEL THEN
+    ISSEL=0
+    KL=GetWindowVar(WND,4)
+    K=0
+   ELSE
+    BREAK
+   ENDIF
+  ENDIF
+  VAR F$=GetString$(ASC(ARY$[K])OR ASC(ARY$[K+1])<<16)
+  IF LEN(F$)>IND+1&&F$[IND+1]==K$ THEN
+   SEL=K
+   BREAK
+  ENDIF
+  K=K+2
+ WEND
+ IF SEL!=-1THEN
+  SetWindowVar WND,4,SEL
+  OTYFILSCR WND,SEL
+ ENDIF
+ void(repaintWindow(WND))
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
  IF!ID THEN
   IF POS==OTYFIL_MOPEN THEN
@@ -7067,6 +7322,14 @@
    OTYFIL_PASTE WND
    RETURN
   ENDIF
+  IF POS==OTYFIL_MFIL THEN
+   OTYFIL_FIL WND
+   RETURN
+  ENDIF
+  IF POS==OTYFIL_MUPD THEN
+   OTYFIL_UPD WND
+   RETURN
+  ENDIF
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -7109,6 +7372,7 @@
   E=SetControlLMouseDownHandler(OTYFILCTL,"OTYFILLMouse")
   E=SetControlRMouseUpHandler(OTYFILCTL,"OTYFILRMouse")
   E=SetControlLDoubleClickHandler(OTYFILCTL,"OTYFILLDBL")
+  E=SetControlKeyHandler(OTYFILCTL,"OTYFILKEY")
   NewControl "OTYFILICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
   RC_OTYFIL
@@ -7130,6 +7394,8 @@
  OTYFIL_MREN=5
  OTYFIL_MABOUT=6
  OTYFIL_MPASTE=7
+ OTYFIL_MFIL=8
+ OTYFIL_MUPD=9
  AddMenuItem MENU,"Open",OTYFIL_MOPEN
 'AddMenuItem MENU,"Copy",OTYFIL_MCOPY
 'AddMenuItem MENU,"Cut",OTYFIL_MCUT
@@ -7139,6 +7405,9 @@
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  OTYFIL_CONTEXTMENU=MENU
  NewMenu OUT MENU,E
+ AddMenuItem MENU,"Filter",OTYFIL_MFIL
+ AddMenuItem MENU,"Update",OTYFIL_MUPD
+ AddSubMenuItem GetWindowMenu(WND),"View",MENU NewMenu OUT MENU,E
  AddMenuItem MENU,"About",OTYFIL_MABOUT
  AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR SCR
@@ -7150,6 +7419,7 @@
  NewVScrollBAR WND,OTYFILGETSCRBARLEN(WND) OUT SCR,E
  SetWindowVar WND,4,-1'SELECTED
  OTYFILNOTIF WND,0,0,WND,0
+ SetWindowMinSize WND,52,64
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -7566,6 +7836,10 @@
  FOR I=1TO L
   LOCATE 0,Y
   ?I/L*100;"%";
+  VAR __$=PRGGET$()
+  PRGINS H$,0
+      __$=PRGGET$()
+  CONTINUE
   PRGEDIT 2,I
   VAR P$=PRGGET$()
   IF LEN(P$)&&ASC(P$[LEN(P$)-1])==10THEN P$=LEFT$(P$,LEN(P$)-1)
@@ -7575,6 +7849,9 @@
    PRGSET P$+L$
   ENDIF
  NEXT
+ __$=PRGGET$()
+ PRGINS "",1
+ __$=PRGGET$()
  PRGINS"DEF "+H$
  PRGINS"IF BUTTON()=="+STR$(512+64)+" THEN GOTO"+CHR$(34)+"2:@"+H2$
  PRGINS"END"
@@ -7583,37 +7860,8 @@
 END
 COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
  VAR TW=GetWindowVar(NDW,0)
- DIM U[512] 
- DIM V[512] 
- DIM W[512] 
- DIM H[512] 
- DIM A[512] 
- DIM X[512] 
- DIM Y[512] 
- DIM Z[512] 
- DIM DEFNO[512] 
- DIM SV[512,8] 
  VAR I
- DIM GP0[0]
- DIM GP1[0]
- DIM GP2[0]
- DIM GP3[0]
- DIM GP4[0]
- DIM GP5[0]
  GCLIP 1
- GSAVE OTW_SP,GP0,1
- GSAVE OTW_DP,GP1,1
-
-' FOR I=0TO 511
-'  VAR J
-'  FOR J=0TO 7
-'   SV[I,J]=SPVAR(I,J)
-'  NEXT
-'  IF SV[I,0]THEN
-'   SPCHR I OUT U[I],V[I],W[I],H[I],A[I]
-'   SPOFS I OUT X[I],Y[I],Z[I]
-'  ENDIF
-' NEXT
  LOCATE 0,29
  ?"Now loading..."
  LOAD"PRG2:"+GetWindowName$(TW),0
@@ -7623,39 +7871,15 @@
  ACLS
  EXEC 2
  ACLS
- 'FOR I=0TO 511
- ' IF SV[I,0]THEN
- '  SPSET I,U[I],V[I],W[I],H[I],A[I]
- '  ?SV[I,0],I,U[I],V[I],W[I],H[I],A[I]
- '  SPOFS I,X[I],Y[I],Z[I]
- '  FOR J=0TO 7
- '   SPVAR I,J,SV[I,J]
- '  NEXT
- ' ENDIF
- 'NEXT
  VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
- 
- WHILE NW
-  VAR SP=WIN_SP[NW]AND 511
-  IF SP THEN
-   SPSET WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
-   SPOFS WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW]
-  ENDIF
-  NW=WIN_NEXT[NW]
- WEND
- GPRIO 1023
- OTW_SPSORT
- GPAGE OTW_SP,OTW_SP
- GLOAD GP0,1,1
  GPAGE OTW_SP,OTW_DP
- GLOAD GP1,1,1
- GCLIP 1,0,0,400,239
- GPAGE OTW_SP,OTW_DP
   '290
   SPSET OTW_MOUSESP,0
   OTW_SHADOWSP=1
   SPSET OTW_SHADOWSP,0
+  OTW_MOUSE=-1
   OTW_INITSP 0
+  OTW_MOUSE=0
   OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
   SPSCALE OTW_MOVWINSP,1,1
@@ -7664,6 +7888,34 @@
   OTW_MOVWINCOL=RGB(128,128,128,128)
   OTW_MOVWINCOL=RGB(128,255,255,255)
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+ 
+ WHILE NW
+  VAR SP=WIN_SP[NW]AND 511,SP2
+  IF SP THEN
+   SPSET SP,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
+   SPOFS SP,WIN_RX[NW],WIN_RY[NW]
+  IF OTW_ENABLE_SHADOW THEN
+   SPSET 2,511,0 OUT SP2
+   IF SP>SP2 THEN
+    SWAP SP,SP2
+    SPSET SP,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
+    SPOFS SP,WIN_RX[NW],WIN_RY[NW]
+    SPSET SP2,511
+   ENDIF
+   SPVAR SP,1,SP2
+   SPLINK SP2,SP
+   SPSCALE SP2,WIN_WIDTH[NW]+1,WIN_HEIGHT[NW]+1
+   SPCOLOR SP2,RGB(128,063,063,063)
+   SPOFS SP2,3,3,1
+   SPSHOW SP2
+   SPVAR SP2,0,NUWIDToWND(NW)
+  ENDIF
+  ENDIF
+  NW=WIN_NEXT[NW]
+ WEND
+ GPRIO 1023
+ OTW_SPSORT
+ RepaintAllWindow WIN_ROOTWND,0,0,0,0
 END
 VAR PRUNCTL
 COMMON DEF I_PRUN
@@ -7907,4 +8159,91 @@
 COMMON DEF L_EDITORSEL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR IMGVIEWCTL
+VAR IMGOPTCTL
+COMMON DEF IMGVIEWNOTIF WND,CTL,TYP,A1,A2
+ VAR B$=GetWindowName$(A1)
+ IF B$=="Open"THEN
+  VAR E=NewModalDialogBox(IMGOPTCTL,"Option",128,40,WND)
+ ENDIF
+END
+COMMON DEF IMGVIEWOPTCREATE WND,CTL,TYP,A1,A2
+END
+COMMON DEF I_IMGVIEW
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!IMGVIEWCTL THEN
+  ExtendControl "Image Viewer",GetWindowControl() OUT IMGVIEWCTL,E
+  E=SetControlNotifHandler(IMGVIEWCTL,"IMGVIEWNOTIF")
+  ExtendControl "Option",GetWindowControl() OUT IMGOPTCTL,E
+  E=SetControlCreateHandler(IMGOPTCTL,"IMGVIEWOPTCREATE")
 
+ ENDIF
+ VAR W1=128+32
+ VAR W=128+32+52
+ NewTopLevelWindow IMGVIEWCTL,"Image Viewer",W,32 OUT WND,E
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+ NewWindow GetLabelControl(),"File:",1,2,39,7,WND,0 OUT E,E
+ NewWindow GetTextBoxControl(),"File:",41,1,W1-41,8,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"Browse",W1+1,0,51,10,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"Open",1,12,51,10,WND,0 OUT E,E
+' NewWindow GetButtonControl(),"Option",54,12,51,10,WND,0 OUT E,E
+ 
+ SetProcessVar WND
+END
+COMMON DEF L_IMGVIEW
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+COMMON DEF COLORPAINT WND,CTL,TYP,XY,WH
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH)
+ VAR X=XY AND 65535,Y=XY>>16
+ VAR W1=GetWindowWidth(WND)
+ VAR H1=GetWindowHeight(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ IF WH THEN
+  W=X+(WH AND 65535)'GetWindowWidth(WND)
+  H=Y+(WH>>16)'GetWindowHeight(WND)
+  
+ ENDIF
+ IF!W||!H THEN RETURN
+' GBOXWindow WND,X,Y,X+W,Y+H,-1
+ E=GEndWindow(WND)
+ VAR X1,Y1
+ ?"AAAAA",X,Y,W,H
+ FOR Y1=Y TO H
+  FOR X1=X TO W
+   VAR C=RGB(255,X1*(255/W1),Y1*(255/H1),0)
+   IF X1==X THEN C=-1
+   IF Y1==Y THEN C=-1
+   IF X1==H THEN C=-1
+   IF Y1==W THEN C=-1
+   __GPSETWindow__ WND,X1,Y1,C
+  NEXT
+  UpdateMouse
+ NEXT
+END
+VAR COLORCTL
+COMMON DEF I_COLOR
+IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!COLORCTL THEN
+  ExtendControl "COLOR",GetWindowControl() OUT COLORCTL,E
+  E=SetControlPainter(COLORCTL,"COLORPAINT")
+ ENDIF
+ NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
+ SetWindowBackColor WND,0
+ SetProcessVar WND
+END
+COMMON DEF L_COLOR
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
diff -u OTW.TXT OTW24
--- OTW.TXT
+++ OTW24
@@ -440,7 +440,7 @@
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
- E=SetControlFramePainter(CTL_WINDOWCTL,"WindowPainter")
+ E=SetControlFramePainter(CTL_WINDOWCTL,"WindowFramePainter")
  E=SetControlLMouseDownHandler(CTL_WINDOWCTL,"WindowLMouseDown")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
@@ -1992,6 +1992,7 @@
      OTW_CLIPWindow B
      MOVEF=1
     ENDIF
+   VOID RepaintWindow(NUWIDTOWND(B))
     IF WIN_CHILD[B]THEN
      B=WIN_CHILD[B]
      CONTINUE
@@ -2006,6 +2007,7 @@
     ENDIF
     B=WIN_NEXT[B]
    WEND
+   VOID RepaintWindow(WND)
    RepaintAllWindow NUWIDToWND(WIN_PARENT[NUWID]),OX,OY,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -2025,6 +2027,7 @@
  WIN_HEIGHT[NUWID]=H
  OTW_CLIPWindow NUWID
  OTW_CLIPCHILD NUWID
+ RepaintAllWindow WND,0,0,0,0
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],OW,OH
 'WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
@@ -2740,6 +2743,13 @@
  E=GENDWindow(WND)
 END
 DEF WindowPainter WND,CTL,TYPE,A1,A2
+ WindowFramePainter WND,CTL,TYPE,A1,A2
+ VAR E=ReGBeginWindow(WND)
+ IF!E THEN
+  GCLSWindow WND,WIN_BACKGND[WND AND NUWIDMASK]
+ ENDIF
+END
+DEF WindowFramePainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  VAR NUWID=WND AND NUWIDMASK
@@ -2755,7 +2765,7 @@
  VAR C=WIN_BKGND
  DEC H,SH
  DEC W,SW
- GCLSWindow WND,WIN_BACKGND[NUWID]
+ 'GCLSWindow WND,WIN_BACKGND[NUWID]
  GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
@@ -8198,6 +8208,15 @@
 COMMON DEF L_IMGVIEW
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+DIM CMATRIX[4,4]
+DEF CONVDITHERCOLOR X,Y,R,G,B OUT RGB
+ VAR PX=X MOD 4
+ VAR PY=Y MOD 4
+ IF CMATRIX[PX,PY]>=R THEN R=0 ELSE R=255
+ IF CMATRIX[PX,PY]>=G THEN G=0 ELSE G=255
+ IF CMATRIX[PX,PY]>=B THEN B=0 ELSE B=255
+ RGB=RGB(R,G,B)
+END
 COMMON DEF COLORPAINT WND,CTL,TYP,XY,WH
  VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH)
  VAR X=XY AND 65535,Y=XY>>16
@@ -8217,7 +8236,9 @@
  ?"AAAAA",X,Y,W,H
  FOR Y1=Y TO H
   FOR X1=X TO W
-   VAR C=RGB(255,X1*(255/W1),Y1*(255/H1),0)
+   VAR XC=X1*(255/W1)
+   VAR YC=Y1*(255/H1)
+   VAR C=CONVDITHERCOLOR(X1,Y1,255-YC,XC,YC-XC)'RGB(255,X1*(255/W1),Y1*(255/H1),255)
    IF X1==X THEN C=-1
    IF Y1==Y THEN C=-1
    IF X1==H THEN C=-1
@@ -8236,8 +8257,19 @@
  ENDIF
  VAR WND,E
  IF!COLORCTL THEN
-  ExtendControl "COLOR",GetWindowControl() OUT COLORCTL,E
+  CMATRIX=NewArray2(4,4)
+  COPY CMATRIX,"@CMATRIX"
+  VAR I
+  FOR I=0TO 15
+  CMATRIX[I DIV 4,I MOD 4]=CMATRIX[I DIV 4,I MOD 4]*16'DIV 2' 2'8
+  NEXT
+  ExtendControl "COLOR-DITHER",GetWindowControl() OUT COLORCTL,E
   E=SetControlPainter(COLORCTL,"COLORPAINT")
+@CMATRIX
+DATA 00,08,02,10
+DATA 12,04,14,06
+DATA 03,11,01,09
+DATA 15,07,13,05
  ENDIF
  NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
  SetWindowBackColor WND,0
diff -u OTW.TXT OTW25
--- OTW.TXT
+++ OTW25
@@ -385,6 +385,9 @@
 'CONTROL STYLE
 'クリックしてもFOCUSしない
 VAR CTL_STYLE_NCFOCUS
+
+VAR CTL_MSGBOXCTL
+
 DEF OTW_CTL_INITARRAY
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
@@ -486,6 +489,11 @@
 
  ExtendControl "DROPDOWNLISTBOX",GetListBoxControl() OUT CTL_DRPDWNBOXCTL,E
  E=SetControlChFocusHandler(CTL_DRPDWNBOXCTL,"DropDownListBoxChFocus")
+
+ 'MESSAGE BOX
+ ExtendControl "MESSAGEBOX",GetWindowControl() OUT CTL_MSGBOXCTL,E
+ E=SetControlCreateHandler(CTL_MSGBOXCTL,"MessageBoxOnCreate")
+ E=SetControlNotifHandler(CTL_MSGBOXCTL,"MessageBoxOnNotif")
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
  CTL_CID[0]=&Hdeadbeef
@@ -841,8 +849,10 @@
  MENU_ID[MENU_FREE]=MENU_IDCNT
  MENU_HEIGHT[MENU_FREE]=4
  MENU_WIDTH[MENU_FREE]=0
+ VAR M=MENU_FREE
  MENU=MENU_FREE OR MENU_IDCNT<<12
  MENU_FREE=MENU_NEXT[MENU_FREE]
+ MENU_ITEM[M]=0'(MENU_ITEM=MENU_NEXT)
 END
 COMMON DEF SetMenuBar MENU,WND
  NOIMPL FORMAT$("NOIMPL SetMenuBar %D,%D",MENU,WND)
@@ -1542,6 +1552,79 @@
 COMMON DEF NewModelessDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER)
  RETURN NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,0)
 END
+COMMON DEF MessageBoxOK()
+ RETURN 1
+END
+COMMON DEF CalcTextSize TEXT$ OUT W,H
+ VAR I,J
+ W=0H=0
+ VAR LF$=CHR$(10)
+ WHILE 1
+  J=INSTR(I,TEXT$,LF$)
+  IF J==-1THEN
+   W=MAX(W,(LEN(TEXT$)-I)*8)
+   IF I==LEN(TEXT$)-1THEN BREAK
+   INC H,8
+   BREAK
+  ENDIF
+  W=MAX(W,(J-I)*8)
+  INC H,8
+  I=J+1
+ WEND
+END
+DEF MessageBoxOnNotif WND,CTL,TYP,A1,A2
+ IF A2==0THEN
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MessageBoxNotifID(),MessageBoxNotifOK())
+  VOID DeleteWindow(WND)
+  RETURN
+ ENDIF
+END
+VAR MSGBOX_MARGIN_TOP
+VAR MSGBOX_MARGIN_LEFT
+DEF MessageBoxOnCreate WND,CTL,TYP,FLAG,TEXT
+ VAR TEXT$=GetString$(TEXT)
+ VAR TW,TH,BW,BH
+ CalcTextSize TEXT$ OUT TW,TH
+ VAR LWND,E
+ NewWindow GetLabelControl(),TEXT$,MSGBOX_MARGIN_LEFT,MSGBOX_MARGIN_TOP,TW,TH,WND,0 OUT LWND,E
+ IF FLAG==MessageBoxOK()THEN
+  CalcTextSize "OK" OUT BW,BH
+  'Button margin
+  INC BW,4
+  INC BH,4
+  NewWindow GetButtonControl(),"OK",MSGBOX_MARGIN_LEFT,TH+MSGBOX_MARGIN_LEFT*2,BW,BH,WND,0 OUT LWND,E
+ ENDIF
+END
+COMMON DEF MessageBoxNotifID()
+ RETURN &H4D534742
+END
+COMMON DEF MessageBoxNotifOK()
+ RETURN 0
+END
+COMMON DEF MessageBoxNotifCancel()
+ RETURN 1
+END
+COMMON DEF MessageBox(WND,TITLE$,TEXT$,FLAG)
+ 'CALC WIDTH
+ VAR TW,TH,BW,BH
+ CalcTextSize TEXT$ OUT TW,TH
+ IF FLAG AND MessageBoxOK()THEN
+  'OK
+  CalcTextSize "OK" OUT BW,BH
+  'Button margin
+  INC BW,4
+  INC BH,4
+ ENDIF
+ VAR W=TW+BW,H=BH+TH
+ MSGBOX_MARGIN_TOP=4
+ MSGBOX_MARGIN_LEFT=4
+ INC W,16'MARGIN
+ INC H,16'MARGIN
+ VAR TEXT=AllocString(TEXT$)
+ VAR RET=NewDialogBoxWithArg(CTL_MSGBOXCTL,TITLE$,W,H,WND,TRUE,FLAG,TEXT)
+ FreeString TEXT
+ RETURN RET
+END
 COMMON DEF DeleteWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -1714,7 +1797,6 @@
 DEF RepaintAllWindow WND,X,Y,W,H
  VAR NXT=WND AND NUWIDMASK
  VAR B=NXT
-CLS
  VAR CLIPMODE=1
  IF!X&&!Y&&!W&&!H THEN CLIPMODE=0
  VAR X2=X+W
@@ -2072,7 +2154,7 @@
  IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
-DEF RepaintWindowWithARect(WND,AX,AY,AX2,AY2)
+COMMON DEF RepaintWindowWithARect(WND,AX,AY,AX2,AY2)
  IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,AX OR AY<<16,AX2 OR AY2<<16)
 END
@@ -4604,7 +4686,7 @@
   NewWindow GetListBoxControl(),"",0,0,80,64,WND,0 OUT WND,E
   AddArrayListBoxItem WND,LAUNCHERITEM$
  ELSE
-  LAUNCHERLEN=11
+  LAUNCHERLEN=12
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -4617,6 +4699,7 @@
   LAUNCHERITEM$[8]="OTYDOC"
   LAUNCHERITEM$[9]="MPLAY"
   LAUNCHERITEM$[10]="CLIPBRD"
+  LAUNCHERITEM$[11]="OTYMINE"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
 '  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
 '  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
@@ -4809,7 +4892,7 @@
  VAR K$
  INC K$,"VAR _1CTL"+LF$()
  INC K$,"COMMON DEF I__1"+LF$()
- INC K$, "IF!CHKCALL(_QIsWinRunning_Q)||!IsWinRunning()THEN"+LF$()
+ INC K$," IF!CHKCALL(_QIsWinRunning_Q)||!IsWinRunning()THEN"+LF$()
  INC K$,"  PrintConsole _QRequire window system_Q+LF$()"+LF$()
  INC K$,"  ExitProcess 1"+LF$()
  INC K$,"  RETURN"+LF$()
@@ -4819,10 +4902,10 @@
  INC K$,"  ExtendControl _Q_2_Q,GetWindowControl() OUT _1CTL,E"+LF$()
  INC K$," ENDIF"+LF$()
  INC K$," NewTopLevelWindow _1CTL,_Q_2_Q,_W,_H OUT WND,E"+LF$()
- INC K$,"SetProcessVar WND"+LF$()
+ INC K$," SetProcessVar WND"+LF$()
  INC K$,"END"+LF$()
  INC K$,"COMMON DEF L__1"+LF$()
- INC K$,"IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
+ INC K$," IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
  INC K$,"END
  VAR _1$
  VAR _2$,_W,_H
@@ -7836,6 +7919,43 @@
  NEXT
  RETURN FALSE
 END
+
+VAR PRUN_CONT
+COMMON DEF __PRUN_CONT
+ PRUN_CONT=1
+ VAR P
+ FOR P=0TO 5
+  SAVE FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+ NEXT
+ DIM SP[512],I
+ FOR I=0TO 511
+  
+ NEXT
+ VAR VP,WP
+ GPAGE OUT VP,WP
+ VISIBLE 1,1,0,1
+ DIM B0[0],B1[0],B2[0],B3[0]
+ VAR BPP=BGPAGE()
+ VAR SPP=SPPAGE()
+ BGSAVE 0,B0
+ BGSAVE 1,B1
+ BGSAVE 2,B2
+ BGSAVE 3,B3
+ PRUN_RESTORE
+ OTX_CONT
+ FOR P=0TO 5
+  LOAD FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+ NEXT
+ VISIBLE 1,1,1,1
+ GPAGE VP,WP
+ BGPAGE BPP
+ SPPAGE SPP
+ BGLOAD 0,B0
+ BGLOAD 1,B1
+ BGLOAD 2,B2
+ BGLOAD 3,B3
+END
+
 DEF PRUN_EDITPRG
  PRGEDIT 2,1
  VAR I,L=PRGSIZE(2)
@@ -7864,23 +7984,13 @@
  __$=PRGGET$()
  PRGINS"DEF "+H$
  PRGINS"IF BUTTON()=="+STR$(512+64)+" THEN GOTO"+CHR$(34)+"2:@"+H2$
+ PRGINS"IF BUTTON()=="+STR$(512+64+128)+" THEN __PRUN_CONT"
  PRGINS"END"
  PRGINS "@"+H2$
  PRGINS "END"
 END
-COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
- VAR TW=GetWindowVar(NDW,0)
- VAR I
- GCLIP 1
- LOCATE 0,29
- ?"Now loading..."
- LOAD"PRG2:"+GetWindowName$(TW),0
- ?"OK"
- ?"EXEC..."
- PRUN_EDITPRG
+DEF PRUN_RESTORE
  ACLS
- EXEC 2
- ACLS
  VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
  GPAGE OTW_SP,OTW_DP
   '290
@@ -7927,6 +8037,25 @@
  OTW_SPSORT
  RepaintAllWindow WIN_ROOTWND,0,0,0,0
 END
+COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
+ IF PRUN_CONT THEN
+  OTX_BREAK
+  RETURN
+ ENDIF
+ VAR TW=GetWindowVar(NDW,0)
+ VAR I
+ GCLIP 1
+ LOCATE 0,29
+ ?"Now loading..."
+ LOAD"PRG2:"+GetWindowName$(TW),0
+ ?"OK"
+ ?"EXEC..."
+ PRUN_EDITPRG
+ ACLS
+ EXEC 2
+ PRUN_RESTORE
+ PRUN_CONT=0
+END
 VAR PRUNCTL
 COMMON DEF I_PRUN
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
@@ -8278,4 +8407,378 @@
 COMMON DEF L_COLOR
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR OTYMINE_MINE
+VAR OTYMINE_FLAG
+VAR OTYMINE_UNK
+VAR OTYMINE_OPENED
+VAR OTYMINE_MISS
+VAR OTYMINE_1
 
+VAR OTYMINE_MENU_START=1
+VAR OTYMINE_MENU_EASY=2
+VAR OTYMINE_MENU_NORMAL=3
+VAR OTYMINE_MENU_HARD=4
+VAR OTYMINE_MENU_EXIT=5
+VAR OTYMINE_MENU_ABOUT=101
+
+DEF OTYMINE_INC F,X,Y,CX,CY
+ IF X<0||Y<0||X>=CX||Y>=CY THEN RETURN
+ IF F[X,Y]==OTYMINE_MINE THEN RETURN
+ IF!F[X,Y]THEN F[X,Y]=OTYMINE_1:RETURN
+ IF F[X,Y]>=OTYMINE_1 THEN
+  INC F[X,Y]
+ ENDIF
+END
+DEF OTYMINE_GENFIELD(CX,CY,CNT)
+ DIM F[CX,CY]
+ CNT=MIN(CX*CY,CNT)
+ VAR X,Y,I
+ FOR I=0TO CNT-1
+  X=RND(CX)
+  Y=RND(CY)
+  IF F[X,Y]THEN
+   DEC I
+   CONTINUE
+  ENDIF
+  F[X,Y]=OTYMINE_MINE
+ NEXT
+ FOR Y=0TO CY-1
+  FOR X=0TO CX-1
+   IF F[X,Y]==OTYMINE_MINE THEN
+    OTYMINE_INC F,X-1,Y,CX,CY
+    OTYMINE_INC F,X-1,Y+1,CX,CY
+    OTYMINE_INC F,X,Y-1,CX,CY
+    OTYMINE_INC F,X+1,Y-1,CX,CY
+    OTYMINE_INC F,X+1,Y+1,CX,CY
+    OTYMINE_INC F,X+1,Y,CX,CY
+    OTYMINE_INC F,X,Y+1,CX,CY
+    OTYMINE_INC F,X-1,Y-1,CX,CY
+   ENDIF
+  NEXT
+ NEXT
+ RETURN F
+END
+DEF OTYMINE_INIT WND
+ VAR CX=8'DEFAULT
+ VAR CY=8'DEFAULT
+ VAR CNT=10'DEFAULT
+ 
+ VAR ARY=AllocSBArray()
+ IF !ARY THEN RETURN
+ SetSBArray ARY,OTYMINE_GENFIELD(CX,CY,CNT)
+ SetWindowVar WND,0,ARY
+ SetWindowVar WND,1,CX
+ SetWindowVar WND,2,CY
+ SetWindowVar WND,3,CNT
+ SetWindowVar WND,4,0
+END
+DEF OTYMINE_RESTART WND
+ VAR CX,CY,CNT,ARY
+ GetWindowVar WND,1 OUT CX
+ GetWindowVar WND,2 OUT CY
+ GetWindowVar WND,3 OUT CNT
+ GetWindowVar WND,0 OUT ARY
+ SetSBArray ARY,OTYMINE_GENFIELD(CX,CY,CNT)
+ SetWindowVar WND,4,0
+ VOID RepaintWindow(WND)
+END
+DEF OTYMINE_CHBOARD WND,CX,CY,CNT
+ SetWindowVar WND,1,CX
+ SetWindowVar WND,2,CY
+ SetWindowVar WND,3,CNT
+ OTYMINE_RESTART WND
+END
+DEF OTYMINE_ADJUST WND
+ VAR W2=GetwindowVar(WND,0)
+ VAR CX,CY
+ GetWindowVar W2,1 OUT CX
+ GetWindowVar W2,2 OUT CY
+ VOID ResizeWindow(WND,CX*12,CY*12)
+ VOID ResizeWindow(W2,CX*12,CY*12)
+END
+VAR OTYMINE_CTBL[0]
+DEF ONOTYMINELMD WND,CTL,TYP,A1,A2
+END
+DEF OTYMINE_TOGGLEFLG FIELD,X,Y,CX,CY
+ IF X<0||Y<0||X>=CX||Y>=CY THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_OPENED THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_FLAG THEN
+  FIELD[X,Y]=FIELD[X,Y] AND NOT OTYMINE_FLAG OR OTYMINE_UNK
+  RETURN
+ ENDIF
+ IF FIELD[X,Y]AND OTYMINE_UNK THEN
+  FIELD[X,Y]=FIELD[X,Y] AND NOT OTYMINE_UNK
+  RETURN
+ ENDIF
+ FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_FLAG
+END
+DEF OTYMINE_OPENALL FIELD,CX,CY
+ VAR X,Y
+ FOR X=0TO CX-1
+  FOR Y=0TO CY-1
+   IF (FIELD[X,Y] AND &B1111)==OTYMINE_MINE THEN
+    FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_OPENED
+   ENDIF
+  NEXT
+ NEXT
+END
+DEF OTYMINE_CHECKCLEAR(FIELD,CX,CY,CNT)
+ VAR X,Y
+ VAR B=CX*CY
+ FOR X=0TO CX-1
+  FOR Y=0TO CY-1
+   IF FIELD[X,Y] AND OTYMINE_OPENED THEN
+    DEC B
+   ENDIF
+  NEXT
+ NEXT
+ RETURN B<=CNT
+END
+DEF OTYMINE_OPEN FIELD,X,Y,CX,CY
+ IF X<0||Y<0||X>=CX||Y>=CY THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_OPENED THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_FLAG THEN RETURN
+ IF (FIELD[X,Y]AND &B1111)==OTYMINE_MINE THEN RETURN
+ FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_OPENED
+ IF (FIELD[X,Y] AND &B1111)>=OTYMINE_1 THEN RETURN
+ OTYMINE_OPEN FIELD,X,Y-1,CX,CY
+ OTYMINE_OPEN FIELD,X-1,Y,CX,CY
+ OTYMINE_OPEN FIELD,X-1,Y-1,CX,CY
+ OTYMINE_OPEN FIELD,X,Y+1,CX,CY
+ OTYMINE_OPEN FIELD,X+1,Y,CX,CY
+ OTYMINE_OPEN FIELD,X+1,Y+1,CX,CY
+ OTYMINE_OPEN FIELD,X+1,Y-1,CX,CY
+ OTYMINE_OPEN FIELD,X-1,Y+1,CX,CY
+END
+DEF ONOTYMINELMU WND,CTL,TYP,X,Y
+ IF GetWindowVar(WND,4)THEN RETURN
+ X=X DIV 12
+ Y=Y DIV 12
+ VAR FIELD[0]
+ FIELD=GetSBArray(GetWindowVar(WND,0))
+ VAR CX=GetWindowVar(WND,1)
+ VAR CY=GetWindowVar(WND,2)
+ VAR CNT=GetWindowVar(WND,3)
+ IF CX<=X||CY<=Y THEN RETURN
+ IF (FIELD[X,Y]AND&B1111)==OTYMINE_MINE THEN
+  SetWindowVar WND,4,TRUE'GAMEOVER
+  FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_MISS
+  OTYMINE_OPENALL FIELD,CX,CY
+ ENDIF
+ OTYMINE_OPEN FIELD,X,Y,CX,CY
+ IF (FIELD[X,Y]AND &B1111)>=OTYMINE_1 THEN
+  VOID RepaintWindowWithARect(WND,X*12,Y*12,X*12+11,Y*12+11)
+ ELSE
+  VOID RepaintWindow(WND)
+ ENDIF
+ IF!GetWindowVar(WND,4)&&OTYMINE_CHECKCLEAR(FIELD,CX,CY,CNT)THEN
+  VOID MessageBox(WND,"Minesweeper","Congratulations!",MessageBoxOK())
+  SetWindowVar WND,4,TRUE'GAMEOVER
+ ENDIF
+END
+DEF ONOTYMINERMD WND,CTL,TYP,X,Y
+ IF GetWindowVar(WND,4)THEN RETURN
+ X=X DIV 12
+ Y=Y DIV 12
+ VAR FIELD[0]
+ FIELD=GetSBArray(GetWindowVar(WND,0))
+ VAR CX=GetWindowVar(WND,1)
+ VAR CY=GetWindowVar(WND,2)
+ IF CX<=X||CY<=Y THEN RETURN
+ OTYMINE_TOGGLEFLG FIELD,X,Y,CX,CY
+ VOID RepaintWindow(WND)
+END
+DEF ONOTYMINEDEL WND,CTL,TYP,A1,A2
+ VAR ARY=GetWindowVar(WND,0)
+ FreeSBArray ARY
+END
+DEF ONOTYMINEPAINT WND,CTL,TYP,XY,WH
+ IF GBeginWindow(WND)THEN RETURN
+  VAR CX=GetWindowVar(WND,1)
+  VAR CY=GetWindowVar(WND,2)
+  IF XY&&WH THEN
+   VAR RX=XY AND 65535,RY=XY>>16
+   VAR RW=WH AND 65535,RH=WH>>16
+   GFILLWindow WND,RX,RY,RX+RW,RY+RH,RGB(192,192,192)
+   RW=CEIL((RW+RX)/12)
+   RH=CEIL((RH+RY)/12)
+   RX=RX DIV 12
+   RY=RY DIV 12
+   CX=MIN(CX,RW)
+   CY=MIN(CY,RH)
+  ELSE
+   GCLSWindow WND,RGB(192,192,192)
+  ENDIF
+  VAR FIELD[0]
+  FIELD=GetSBArray(GetWindowVar(WND,0))
+  VAR X,Y
+  FOR Y=RY TO CY-1
+   FOR X=RX TO CX-1
+    VAR F=FIELD[X,Y]
+    IF F AND OTYMINE_OPENED THEN
+     VAR F2=F
+     F=F AND &B1111
+     GLINEWindow WND,X*12,Y*12,X*12+11,Y*12,RGB(128,128,128)
+     GLINEWindow WND,X*12,Y*12,X*12,Y*12+11,RGB(128,128,128)
+     IF F>=OTYMINE_1 THEN
+      VAR C=F-OTYMINE_1+1
+      GPRINTWindow WND,X*12+2,Y*12+2,CHR$(C+48),OTYMINE_CTBL[C]
+      GPRINTWindow WND,X*12+3,Y*12+2,CHR$(C+48),OTYMINE_CTBL[C]
+      GPRINTWindow WND,X*12+4,Y*12+2,CHR$(C+48),OTYMINE_CTBL[C]
+     ENDIF
+     IF F==OTYMINE_MINE THEN
+      IF F2 AND OTYMINE_MISS THEN
+       GFILLWindow WND,X*12+1,Y*12+1,X*12+11,Y*12+11,#RED
+      ENDIF
+      GLINEWindow WND,X*12+3,Y*12+3,X*12+9,Y*12+9,#BLACK
+      GLINEWindow WND,X*12+3,Y*12+9,X*12+9,Y*12+3,#BLACK
+      GLINEWindow WND,X*12+6,Y*12+2,X*12+6,Y*12+10,#BLACK
+      GLINEWindow WND,X*12+2,Y*12+6,X*12+10,Y*12+6,#BLACK
+      GFILLWindow WND,X*12+4,Y*12+4,X*12+8,Y*12+8,#BLACK
+      GPSETWindow WND,X*12+5,Y*12+5,#WHITE
+      IF F2 AND OTYMINE_FLAG THEN
+       GLINEWindow WND,X*12+2,Y*12+2,X*12+10,Y*12+10,#RED
+       GLINEWindow WND,X*12+3,Y*12+2,X*12+11,Y*12+10,#RED
+       GLINEWindow WND,X*12+10,Y*12+2,X*12+2,Y*12+10,#RED
+       GLINEWindow WND,X*12+11,Y*12+2,X*12+3,Y*12+10,#RED
+      ENDIF
+     ENDIF
+    ELSE
+     IF F AND OTYMINE_FLAG THEN
+      GLINEWindow WND,X*12+5,Y*12+5,X*12+5,Y*12+6,RGB(0,0,0)
+      GTRIWindow WND,X*12+5,Y*12+7,X*12+3,Y*12+9,X*12+7,Y*12+9,RGB(0,0,0)
+      GTRIWindow WND,X*12+5,Y*12+3,X*12+8-6,Y*12+4,X*12+5,Y*12+5,RGB(255,0,0)
+     ENDIF
+     IF F AND OTYMINE_UNK THEN
+      GPRINTWindow WND,X*12+2,Y*12+2,"?",RGB(0,0,0)
+      GPRINTWindow WND,X*12+3,Y*12+2,"?",RGB(0,0,0)
+      GPRINTWindow WND,X*12+4,Y*12+2,"?",RGB(0,0,0)
+     ENDIF
+     F=F AND &H1111
+     GFILLWindow WND,X*12,Y*12,X*12+11,Y*12+1,-1
+     GFILLWindow WND,X*12,Y*12,X*12+1,Y*12+11,-1
+     GLINEWindow WND,X*12+11,Y*12,X*12+11,Y*12+11,RGB(128,128,128)
+     GLINEWindow WND,X*12,Y*12+11,X*12+11,Y*12+11,RGB(128,128,128)
+
+     GLINEWindow WND,X*12+10,Y*12+1,X*12+10,Y*12+11,RGB(128,128,128)
+     GLINEWindow WND,X*12+1,Y*12+10,X*12+11,Y*12+10,RGB(128,128,128)
+    ENDIF
+   NEXT
+  NEXT
+ IF GEndWindow(WND)THEN RETURN
+END
+VAR OTYMINEWNDCTL
+VAR OTYMINECTL
+VAR OTYMINEABOUTCTL
+DEF ONOTYMINENOTIF WND,CTL,TYP,A1,A2
+ IF A2==OTYMINE_MENU_START THEN 
+  OTYMINE_RESTART GetWindowVar(WND,0)
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_EASY THEN 
+  OTYMINE_CHBOARD GetWindowVar(WND,0),8,8,10
+  OTYMINE_ADJUST WND
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_NORMAL THEN 
+  OTYMINE_CHBOARD GetWindowVar(WND,0),16,16,40
+  OTYMINE_ADJUST WND
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_HARD THEN 
+  OTYMINE_CHBOARD GetWindowVar(WND,0),30,16,99
+  OTYMINE_ADJUST WND
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_EXIT THEN
+  VOID DeleteWindow(WND)
+ ENDIF
+ IF A2==OTYMINE_MENU_ABOUT THEN
+  VOID NewModalDialogBox(OTYMINEABOUTCTL,"About",128,40,WND)
+  RETURN
+ ENDIF
+END
+DEF OTYMINEABOUTONONCREATE WND,CTL,TYP,A1,A2
+ VAR LWND,E
+ NewWindow GetLabelControl(),"OTW Minesweeper",0,0,15*8,8,WND,0 OUT LWND,E
+ NewWindow GetButtonControl(),"OK",(128-24)/2,14,24,12,WND,0 OUT LWND,E
+END
+DEF OTYMINEABOUTONONNOTIF WND,CTL,TYP,A1,A2
+ VOID DeleteWindow(WND)
+END
+COMMON DEF I_OTYMINE
+ OTYMINE_MINE=1
+ OTYMINE_FLAG=32
+ OTYMINE_UNK=64
+ OTYMINE_MISS=128
+ OTYMINE_OPENED=16
+ OTYMINE_1=4
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTYMINECTL THEN
+  OTYMINE_CTBL=NewArray(9)
+  OTYMINE_CTBL[1]=RGB(&H00,&H00,&HFF)
+  OTYMINE_CTBL[2]=RGB(&H00,&H80,&H00)
+  OTYMINE_CTBL[3]=RGB(&HFF,&H00,&H00)
+  OTYMINE_CTBL[4]=RGB(&H00,&H00,&H80)
+  OTYMINE_CTBL[5]=RGB(&H80,&H00,&H00)
+  OTYMINE_CTBL[6]=RGB(&H00,&H80,&H80)
+  OTYMINE_CTBL[7]=RGB(&H00,&H00,&H00)
+  OTYMINE_CTBL[8]=RGB(&H80,&H80,&H80)
+  OTYMINE_MENU_START=1
+  OTYMINE_MENU_EASY=2
+  OTYMINE_MENU_NORMAL=3
+  OTYMINE_MENU_HARD=4
+  OTYMINE_MENU_EXIT=5
+  OTYMINE_MENU_ABOUT=101
+  ExtendControl "OTYMINEWND",GetWindowControl() OUT OTYMINEWNDCTL,E
+  ExtendControl "OTYMINEABOUT",GetWindowControl() OUT OTYMINEABOUTCTL,E
+  NewControl "OTYMINE" OUT OTYMINECTL,E
+  IF SetControlNotifHandler(OTYMINEWNDCTL,"ONOTYMINENOTIF")THEN @ERR
+  IF SetControlPainter(OTYMINECTL,"ONOTYMINEPAINT")THEN @ERR
+  IF SetControlLMouseDownHandler(OTYMINECTL,"ONOTYMINELMD")THEN @ERR
+  IF SetControlLMouseUpHandler(OTYMINECTL,"ONOTYMINELMU")THEN @ERR
+  IF SetControlRMouseDownHandler(OTYMINECTL,"ONOTYMINERMD")THEN @ERR
+  IF SetControlDeleteHandler(OTYMINECTL,"ONOTYMINEDEL")THEN @ERR
+  IF SetControlCreateHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONCREATE")THEN @ERR
+  IF SetControlNotifHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONNOTIF")THEN @ERR
+ ENDIF
+ NewTopLevelMenuWindow OTYMINEWNDCTL,"Minesweeper",96,96 OUT WND,E
+ IF E THEN
+  E=DeleteWindow(WND)
+  GOTO @ERR
+ ENDIF
+ SetProcessVar WND
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Start",OTYMINE_MENU_START
+ AddMenuItemSeparator MENU
+ AddMenuItem MENU,"Easy",OTYMINE_MENU_EASY
+ AddMenuItem MENU,"Normal",OTYMINE_MENU_NORMAL
+ AddMenuItem MENU,"Hard",OTYMINE_MENU_HARD
+ AddMenuItemSeparator MENU
+ AddMenuItem MENU,"Exit",OTYMINE_MENU_EXIT
+ AddSubMenuItem GetWindowMenu(WND),"Game",MENU NewMenu OUT MENU,E
+ AddMenuItem MENU,"About",OTYMINE_MENU_ABOUT
+ AddSubMenuItem GetWindowMenu(WND),"Help",MENU
+ VAR MWND
+ NewWindow OTYMINECTL,"",0,0,96,96,WND,0 OUT MWND,E
+ IF E THEN
+  E=DeleteWindow(GetProcessVar())
+  E=DeleteWindow(WND)
+  GOTO @ERR
+ ENDIF
+ SetwindowVar WND,0,MWND
+ OTYMINE_INIT MWND
+ RETURN
+ @ERR
+ ExitProcess 1
+END
+COMMON DEF L_OTYMINE
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
diff -u OTW.TXT OTW26
--- OTW.TXT
+++ OTW26
@@ -4,7 +4,7 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
-VAR WIN_BKGND,WIN_BTNBACK
+VAR WIN_BKGND,WIN_BTNBACK,WIN_SELCOL,WIN_SELTXTCOL
 VAR OTW_ENABLE_SHADOW
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOVWINNUWID
@@ -122,6 +122,8 @@
 VAR OTW_DBLCLKXY
 VAR OTW_DBLCLKX
 VAR OTW_DBLCLKY
+
+VAR OTW_SMOOTH_MOVE_WINDOW
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
@@ -287,13 +289,15 @@
  ASSOC_TYP$=NewArray$(0)
  ASSOC_EXT$=NewArray$(0)
  ASSOC_NAME$=NewArray$(0)
- VAR E=AssociateFile("TXT","","EDITORSEL")
- E=AssociateFile("TXT","TXT","TXTED")
- E=AssociateFile("TXT","PRG","PRGED")
- E=AssociateFile("TXT","MML","MPLAY")
+ VAR E=AssociateFile("*","","EDITORSEL")
+ E=AssociateFile("*","TXT","TXTED")
+ E=AssociateFile("*","PRG","PRGED")
+ E=AssociateFile("*","MML","MPLAY")
+ E=AssociateFile("/","","OTYFIL")
 END
 DEF GetAssociatedIndex(TYP$,EXT$)
  VAR I
+ EXT$=ToUpper$(EXT$)
  FOR I=0TO ASSOC_LEN-1
   IF ASSOC_EXT$[I]==EXT$&&ASSOC_TYP$[I]==TYP$THEN 
    RETURN I
@@ -304,6 +308,10 @@
 COMMON DEF GetAssociatedProgram$(TYP$,EXT$)
  VAR I=GetAssociatedIndex(TYP$,EXT$)
  IF I!=-1THEN RETURN ASSOC_NAME$[I]
+ 'unknown EXT
+ IF LEN(EXT$)THEN
+  RETURN GetAssociatedProgram$(TYP$,"")
+ ENDIF
  RETURN ""
 END
 COMMON DEF AssociateFile(TYP$,EXT$,NAME$)
@@ -318,8 +326,25 @@
  INC ASSOC_LEN
  RETURN 0
 END
+'HOGE
+COMMON DEF ExecFile(F$)
+ VAR TYPE$,E
+ F$=GetAbsolutePath$(F$)
+ GetFileType F$ OUT TYPE$,E
+ IF E THEN RETURN E
+ IF TYPE$=="/"THEN
+  
+ ENDIF
+ VAR EXT$=GetFileExtension$(F$)
+ VAR PRG$=GetAssociatedProgram$(TYPE$,EXT$)
+ VAR PRC
+ NewProcess PRG$,F$ OUT PRC,E
+ IF E THEN RETURN E
+ RETURN 0
+END
+
 'IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
-'ExitProcess 1
+' ExitProcess 1
 'ENDIF
 VAR OTWRunning
 COMMON DEF IsWinRunning()
@@ -530,15 +555,89 @@
 END
 VAR IM_MAX
 VAR IM_FREE
+VAR IM_IDCNT
 DIM IM_NEXT[0]
+DIM IM_ID[0]
 DIM IM_KEY_HANDLER$[0]
-DEF WIN_IM_INITARRAY
+DIM IM_DEL_HANDLER$[0]
+'IM>
+DEF OTW_IM_INITARRAY
  IM_MAX=5
- IM_NEXT=NeeArray(IM_MAX)
- IM_KEY_HANDLER$=NeeArray$(IM_MAX)
+ IM_NEXT=NewArray(IM_MAX)
+ IM_ID=NewArray(IM_MAX)
+ IM_KEY_HANDLER$=NewArray$(IM_MAX)
+ IM_DEL_HANDLER$=NewArray$(IM_MAX)
+ IM_IDCNT=1
  OTW_INITLIST IM_NEXT
  IM_FREE=1
 END
+VAR IM_NOALLOC
+VAR IM_INVALIDID
+COMMON DEF CheckIM(IM)
+ RETURN IM_ID[IM AND 4095]==IM>>12
+END
+COMMON DEF SetIMKeyHandler(IM,FUNC$)
+ IF!CheckIM(IM)THEN
+  RETURN IM_INVALIDID
+ ENDIF
+ VAR NIM=IM AND 4095
+ IM_KEY_HANDLER$[NIM]=FUNC$
+ RETURN 0
+END
+COMMON DEF SetIMDeleteHandler(IM,FUNC$)
+ IF!CheckIM(IM)THEN
+  RETURN IM_INVALIDID
+ ENDIF
+ VAR NIM=IM AND 4095
+ IM_DEL_HANDLER$[NIM]=FUNC$
+ RETURN 0
+END
+COMMON DEF DeleteIM IM OUT ERR
+ IF!CheckIM(IM)THEN
+  ERR=IM_INVALIDID
+  RETURN
+ ENDIF
+ VAR NIM=IM AND 4095
+ IM_ID[NIM]=0
+ IM_NEXT[NIM]=IM_FREE
+ CALL IM_DEL_HANDLER$[NIM],IM
+ IM_KEY_HANDLER$[NIM]=""
+ IM_DEL_HANDLER$[NIM]=""
+ ERR=0
+ IM_FREE=NIM
+END
+COMMON DEF NewIM OUT IM,ERR
+ IM=IM_FREE
+ IF!IM THEN
+  ERR=IM_NOALLOC
+  RETURN
+ ENDIF
+ IM_ID[IM]=IM_IDCNT
+ INC IM_IDCNT
+ IM_FREE=IM_NEXT[IM_FREE]
+ ERR=0
+ IM=IM_ID[IM]<<12 OR IM
+END
+COMMON DEF ProcessIM(IM)
+ IF!CheckIM(IM)THEN
+  RETURN IM_INVALIDID
+ ENDIF
+ VAR NIM=IM AND 4095
+ VAR KH$=IM_KEY_HANDLER$[NIM]
+ WHILE 1
+  VAR INK$=INKEY$()
+  IF!LEN(INK$)THEN RETURN 0
+  CALL KH$,IM,ASC(INK$)
+ WEND
+ RETURN 0
+END
+'IM->PROGRAM
+COMMON DEF SendIMText(IM,TEXT$)
+ VAR I
+ FOR I=0TO LEN(TEXT$)-1
+  VOID SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(TEXT$[I]))
+ NEXT
+END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
 VAR WIN_EVENTERR
@@ -553,6 +652,8 @@
  WIN_NODRAW=3
  CTL_NOALLOC=201
  CTL_INVALIDID=202
+ IM_NOALLOC=301
+ IM_INVALIDID=302
 END
 COMMON DEF GetWindowControl()
  RETURN CTL_WINDOWCTL
@@ -803,7 +904,7 @@
  PATH$=""
 END
 COMMON DEF ClipboardSetFile ISCUT,PATH$
- CLPBRDFIL$=PATH$
+ CLPBRDFIL$=GetAbsolutePath$(PATH$)
  CLPBRDFILCUT=ISCUT
  CLPBRDCFIL=TRUE
 END
@@ -872,7 +973,7 @@
 DEF ShowMenuXY MENU,WND,X,Y
  VAR W=WND AND NUWIDMASK
  VAR E
- NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWindow(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
  VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
  SetWindowVar MENU_NUWID[MENU],0,MENU
  MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
@@ -886,7 +987,7 @@
 END
 DEF NewMenuItem(STR$,PREV,STYLE)
  VAR I=MENU_ITEMFREE
- IF!I THEN RETURN
+ IF!I THEN RETURN 0
  MENU_INAME$[I]=STR$
  MENU_IPREV[I]=PREV
  IF PREV THEN MENU_INEXT[PREV]=I
@@ -971,8 +1072,8 @@
    MENU_SEL[M]=I
    IF!BEG&&GBeginWindow(WND)THEN :'BREAK
    BEG=1
-   GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,RGB(0,0,255)
-   GPRINTWindow WND,SX,Y1,MENU_INAME$[I],-1
+   GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,GetSelectionColor()
+   GPRINTWindow WND,SX,Y1,MENU_INAME$[I],GetSelectionTextColor()
    G=0
    ENDIF
    IF!OS THEN BREAK
@@ -1068,11 +1169,11 @@
 END
 VAR WIN_ROOTWND
 VAR WIN_ROOTWND2
-COMMON DEF GetRootWND()
+COMMON DEF GetRootWindow()
  RETURN WIN_ROOTWND2
 END
 COMMON DEF CheckWindow(WND)
- RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
+ RETURN (WND AND NUWIDMASK)>0&&(WND AND NUWIDMASK)<LEN(WIN_WID)&&WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
 END
 VAR WIN_TopLevelX
 VAR WIN_TopLevelY
@@ -1270,6 +1371,7 @@
  SPSET SP,0
  ENDIF
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
+'SPANIM SP,"S",-60,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSHOW SP
  SPVAR SP,0,WND
@@ -1534,7 +1636,7 @@
  VAR WND,E
  IF AX<0THEN AX=0
  IF AY<0THEN AY=0
- NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag()OR 512 OUT WND,E
+ NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWindow(),WindowFrontFlag()OR 512 OUT WND,E
  IF FLAG THEN
   WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
  ENDIF
@@ -2042,7 +2144,7 @@
  WIN_RY[NUWID]=WIN_AY[NUWID]
  OTW_CLIPWindow NUWID
  VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
- VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
+' VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
 
  IF!NXT THEN RETURN 'WIN_
  B=NXT
@@ -2115,10 +2217,78 @@
  RETURN 0
 END
 DEF MoveResizeWindowF(WND,X,Y,W,H)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- VAR E=MoveWindow2(WND,X,Y)
- IF E THEN RETURN E
- RETURN ResizeWindowF(WND,W,H)
+ IF W+1<WIN_MINW[NUWID]THEN
+  W=WIN_MINW[NUWID]-1
+ ENDIF
+ IF H+1<WIN_MINH[NUWID]THEN
+  H=WIN_MINH[NUWID]-1
+ ENDIF
+ VAR OX=WIN_AX[NUWID],OY=WIN_AY[NUWID]
+ VAR MX=X-WIN_X[NUWID],MY=Y-WIN_Y[NUWID]
+ VAR OW=WIN_WIDTH[NUWID]
+ VAR OH=WIN_HEIGHT[NUWID]
+
+ IF!MX&&!MY&&W==OW&&H==OH THEN RETURN 0
+ VOID FireResizeWindow(WND,W-WIN_FW2[NUWID],H-WIN_FH2[NUWID])
+ VAR PNUWID=WIN_PARENT[NUWID]
+ WIN_WIDTH[NUWID]=W
+ WIN_HEIGHT[NUWID]=H
+ WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
+ WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+WIN_FW1[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+WIN_FH1[PNUWID]+Y
+ WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ OTW_CLIPWindow NUWID
+ VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
+
+' IF!NXT THEN RETURN 0
+ B=NXT
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
+  IF WIN_SP[NUWID]THEN
+   WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
+  ENDIF
+ ENDIF
+ VAR MOVEF=0
+ B=WIN_PARENT[NUWID]
+   WHILE B
+    IF MOVEF THEN
+     WIN_AX[B]=WIN_AX[B]+MX
+     WIN_AY[B]=WIN_AY[B]+MY
+     WIN_FX[B]=WIN_AX[B]+WIN_FW1[B]'+MX
+     WIN_FY[B]=WIN_AY[B]+WIN_FH1[B]'+MY
+     WIN_RFX[B]=WIN_FX[B]'+MX
+     WIN_RFY[B]=WIN_FY[B]'+MY
+     WIN_RX[B]=WIN_AX[B]'+MX
+     WIN_RY[B]=WIN_AY[B]'+MY
+     OTW_CLIPWindow B
+     MOVEF=1
+    ENDIF
+    IF WIN_CHILD[B]THEN
+     IF B==NUWID THEN MOVEF=1
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
+    IF!WIN_NEXT[B]THEN
+     WHILE B
+      B=WIN_PARENT[B]
+      IF B==NUWID THEN MOVEF=0
+      IF WIN_NEXT[B]THEN BREAK
+     WEND
+     IF!B THEN GOTO @END
+    ENDIF
+    B=WIN_NEXT[B]
+   WEND
+   @END
+ RepaintAllWindow WND,0,0,0,0
+ RepaintAllWindow GetParentWindow(WND),OX,OY,OW,OH
+ RETURN 0
 END
 COMMON DEF ResizeWindow(WND,W,H)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -2503,6 +2673,8 @@
 END
 COMMON DEF GBeginDirect(WND)
  GPAGE OTW_SP,OTW_DDRAWPAGE
+ GCLIP 1
+ RETURN 0
 END
 COMMON DEF GEndDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
  GPAGE OTW_SP,OTW_BP
@@ -2511,7 +2683,8 @@
  GPAGE OTW_SP,OTW_BP
  VAR E=GBeginWindow(WND)
  IF E THEN RETURN E
- GCOPY OTW_DDRAWPAGE,X1+WING_SX,Y1+WING_SY,X2+WING_SX,Y2+WING_SY,X3+WING_SX,Y3+WING_SY,MODE
+ GCOPY OTW_DDRAWPAGE,X1,Y1,X2,Y2,X3+WING_SX,Y3+WING_SY,MODE
+ RETURN 0
 END
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -2816,6 +2989,12 @@
 COMMON DEF GetBackColor()
  RETURN WIN_BKGND
 END
+COMMON DEF GetSelectionColor()
+ RETURN WIN_SELCOL
+END
+COMMON DEF GetSelectionTextColor()
+ RETURN WIN_SELTXTCOL
+END
 DEF DesktopPainter WND,CTL,TYPE,A1,A2
 RETURN
  VAR E=GBEGINWindow(WND)
@@ -3077,8 +3256,8 @@
     IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
     BEG=1
     FIND=1
-    GFILLWindow WND,X1,-10,X2-2,-2,RGB(0,0,255)
-    GPRINTWindow WND,X1,-9,MENU_INAME$[I],-1
+    GFILLWindow WND,X1,-10,X2-2,-2,GetSelectionColor()
+    GPRINTWindow WND,X1,-9,MENU_INAME$[I],GetSelectionTextColor()
     MENU_SEL[C]=I
     IN=1
     I=MENU_INEXT[I]
@@ -3119,7 +3298,7 @@
   DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
   VAR X=MX+A1X
   VAR Y=MY+A2Y
-  OTW_INITSP 5
+  IF!OTW_SMOOTH_MOVE_WINDOW THEN OTW_INITSP 5
   VAR E=MoveWindow(WND,X,Y)
   E=FrontWindow(WND)
   SPUNLINK OTW_MOVWINSP
@@ -3540,8 +3719,8 @@
   IF Y>=Y1&&Y<Y2 THEN
    SetWindowVar WND,7,V
    IF!GB&&GBeginWindow(WND)THEN RETURN
-   GFILLWindow WND,1,Y1,W,Y2-1,RGB(0,0,255)
-   GPRINTWindow WND,1,Y1,LISTSTR$[V],-1
+   GFILLWindow WND,1,Y1,W,Y2-1,GetSelectionColor()
+   GPRINTWindow WND,1,Y1,LISTSTR$[V],GetSelectionTextColor()
    F=1
    GB=1
    IF!S THEN BREAK
@@ -3581,6 +3760,19 @@
  LISTSTRNEXT[L]=LISTSTR_FREE
  LISTSTR_FREE=GetWindowVar(WND,1)
 END
+DEF ClearListBox WND
+ VAR L=GetWindowVar(WND,1)
+ IF!L THEN RETURN
+ WHILE LISTSTRNEXT[L]
+  L=LISTSTRNEXT[L]
+ WEND
+ LISTSTRNEXT[L]=LISTSTR_FREE
+ LISTSTR_FREE=GetWindowVar(WND,1)
+ SetWindowVar WND,3,0
+ SetWindowVar WND,2,0
+ SetWindowVar WND,1,0
+ VOID RepaintWindow(WND)
+END
 DEF ListBoxNotif WND,CT,T,A1,POS
  VAR OP=GetWindowVar(WND,5)
  IF OP==POS THEN RETURN
@@ -3621,8 +3813,8 @@
  VAR S=GetWindowVar(WND,7)
  WHILE L
   IF S==L THEN
-   GFILLWindow WND,1,Y,W-1,Y+7,RGB(0,0,255)
-   GPRINTWindow WND,1,Y,LISTSTR$[L],-1
+   GFILLWindow WND,1,Y,W-1,Y+7,GetSelectionColor()
+   GPRINTWindow WND,1,Y,LISTSTR$[L],GetSelectionTextColor()
   ELSE
    GPRINTWindow WND,1,Y,LISTSTR$[L],RGB(0,0,0)
   ENDIF
@@ -3705,7 +3897,7 @@
  VAR LSTBOX=GetWindowVar(WND,0)
  IF!LSTBOX THEN
   VAR E
-  NewWindow CTL_DRPDWNBOXCTL,"",0,0,0,0,GetRootWND(),0 OUT LSTBOX,E
+  NewWindow CTL_DRPDWNBOXCTL,"",0,0,0,0,GetRootWindow(),0 OUT LSTBOX,E
   IF E THEN @ERR
   SetWindowVar WND,0,LSTBOX
   IF JoinWindowGroup(WND,LSTBOX) THEN @ERR
@@ -4087,11 +4279,13 @@
   OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
   WIN_BTNBACK=RGB(192,192,192)
+  WIN_SELCOL=RGB(0,0,255)
+  WIN_SELTXTCOL=RGB(255,255,255)
   VAR FM=FREEMEM
-  PrintConsole "====================="+LF$()
-  PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
-  PrintConsole "====================="+LF$()
-  PrintConsole "Ver 5.0-B"+LF$()
+  PrintConsole "=================="+LF$()
+  PrintConsole "OTYA WINDOW SYSTEM"+LF$()
+  PrintConsole "=================="+LF$()
+  PrintConsole "Ver 5.0-26"+LF$()
 ' BEEP 94,-1000
   VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77'34
   M1$=":1"+G$+"T140<<C8 C8&C2."
@@ -4111,6 +4305,7 @@
   OTW_CTL_INITARRAY
   OTW_INIT_ERR
   OTW_ASSOC_INIT
+  OTW_IM_INITARRAY
   PrintConsoleln "Init setting..."
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -4192,7 +4387,7 @@
   VAR E
   NewControl "DESKTOP" OUT WIN_ROOTCTL,E
 ' E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
-  NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
+  NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400-1,240-1 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
 ' NewTopLevelWindow TSTCTL,"HELLO",164,164 OUT TSTWND,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
@@ -4211,6 +4406,9 @@
   OTW_LMOUSEUP =2
   OTW_RMOUSEDWN=4
   OTW_RMOUSEUP =8
+  DEC FM,FREEMEM
+  OTW_USEMEM=FM
+  PrintConsoleln FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
   
   '290
   SPSET OTW_MOUSESP,0
@@ -4225,12 +4423,11 @@
   OTW_MOVWINCOL=RGB(128,128,128,128)
   OTW_MOVWINCOL=RGB(128,255,255,255)
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
-  DEC FM,FREEMEM
-  OTW_USEMEM=FM
-  PrintConsoleln FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
   CLS
   LOCATE 0,29
   NewProcess"LAUNCHER","" OUT E,E
+  NewProcess"TESTIM","" OUT E,E
+  NewProcess"ODE","" OUT E,E
  ENDIF
 RETURN
 END
@@ -4256,23 +4453,22 @@
 VAR OTW_OLDBTN
 VAR OTW_OLDBTNF
 VAR OLDMOVEMOUSEWINDOW
-VAR OTW_SMOOTH_MOVE_WINDOW
 VAR OTW_ENKEY_STATE
 VAR OTW_ENABLEKEY
 COMMON DEF L_OTW
- VAR X,Y,MMM
- TOUCH OUT MMM,X,Y
- IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
-  OTW_ENKEY_STATE=1
-  OTW_ENABLEKEY=!OTW_ENABLEKEY
-  IF OTW_ENABLEKEY THEN
-   KEY 1,"KEY ON"
-  ELSE
-   KEY 1,"KEY OFF"
-  ENDIF
-  BEEP 9
- ENDIF
- IF!MMM THEN OTW_ENKEY_STATE=0
+' VAR X,Y,MMM
+' TOUCH OUT MMM,X,Y
+' IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
+'  OTW_ENKEY_STATE=1
+'  OTW_ENABLEKEY=!OTW_ENABLEKEY
+'  IF OTW_ENABLEKEY THEN
+'   KEY 1,"KEY ON"
+'  ELSE
+'   KEY 1,"KEY OFF"
+'  ENDIF
+'  BEEP 9
+' ENDIF
+' IF!MMM THEN OTW_ENKEY_STATE=0
  IF OTW_MOUSE==5THEN
   OTW_INITSP 0
  ENDIF
@@ -4431,10 +4627,10 @@
 ' IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
  OTW_OLDMOUSEY=OTW_MOUSEY
- VAR K$=INKEY$()
- IF OTW_ENABLEKEY&&LEN(K$)THEN
-  E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
- ENDIF
+' VAR K$=INKEY$()
+' IF OTW_ENABLEKEY&&LEN(K$)THEN
+'  E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
+' ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
 'E=UpdateWindow(TSTWND2)
 'E=UpdateWindow(TSTWND)
@@ -4567,6 +4763,9 @@
    'TODO:Move->Resizeでおかしくなる
    'TODO:MoveResizeWindow
 '   VOID MoveWindow(NUWIDToWND(NW),X,Y)
+'"D
+   DEC X,WIN_FX[WIN_PARENT[NW]]
+   DEC Y,WIN_FY[WIN_PARENT[NW]]
    VOID MoveResizeWindowF(NUWIDToWND(NW),X,Y,W,H)
   ENDIF
  ENDIF
@@ -4622,7 +4821,7 @@
  VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
 ' E=GBeginWindow(WND)
  IF E THEN RETURN
- VAR S$="otya 3D window"
+ VAR S$="otya window"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,0,S$,RGB(0,0,0)
  S$="system 5.0"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,8,S$,RGB(0,0,0)
@@ -4631,7 +4830,7 @@
  GPRINTWindow WND,(144-LEN(S$)*8)/2,30,S$,RGB(0,0,0)
  S$="mintyan"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,38,S$,RGB(0,0,0)
- S$="© 2011-2015 otya"
+ S$="© 2011-2017 otya"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,46+4,S$,RGB(0,0,0)
  E=GEndWindow(WND)
 END
@@ -4681,12 +4880,12 @@
  ENDIF
  IF LAUNCHERCTL THEN
   VAR WND,E
-  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,64,WINDOWRESIZABLESTYLE() OUT WND,E
+  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,99,WINDOWRESIZABLESTYLE() OUT WND,E
   SetProcessVar WND
-  NewWindow GetListBoxControl(),"",0,0,80,64,WND,0 OUT WND,E
+  NewWindow GetListBoxControl(),"",0,0,80,98,WND,0 OUT WND,E
   AddArrayListBoxItem WND,LAUNCHERITEM$
  ELSE
-  LAUNCHERLEN=12
+  LAUNCHERLEN=13
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -4700,6 +4899,7 @@
   LAUNCHERITEM$[9]="MPLAY"
   LAUNCHERITEM$[10]="CLIPBRD"
   LAUNCHERITEM$[11]="OTYMINE"
+  LAUNCHERITEM$[12]="OTWTERM"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
 '  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
 '  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
@@ -5319,6 +5519,7 @@
    SWAP SELPOS1,SELPOS2
   ENDIF
  ENDIF
+ VAR SLC=GetSelectionColor()
  WHILE 1
   INC LINE
   V$=TXTBOXEX_VAL$[L]
@@ -5336,14 +5537,14 @@
   INC LS$,CHR$(&HE100+_)
   GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
   IF LINE>SELLINE1&&LINE<SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,SLC
   ENDIF
   IF LINE==SELLINE1&&LINE==SELLINE2 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ELSEIF LINE==SELLINE1 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,SLC
   ELSEIF LINE==SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ENDIF
   IF SH THEN
    TXTED_PRGPRINT WND,X,Y,V$
@@ -5932,12 +6133,15 @@
  ON ID GOTO @OPEN,@SAVE
  RETURN
  @OPEN
- TextBoxExSetText GetWindowVar(W,0),LoadFile$(RIGHT$(A2$,LEN(A2$)-1))
+ VAR ERR,T$
+ LoadFile RIGHT$(A2$,LEN(A2$)-1) OUT T$,ERR
+ IF ERR THEN RETURN
+ TextBoxExSetText GetWindowVar(W,0),T$
  RETURN
  @SAVE
- VAR T$
  TextBoxExGetText GetWindowVar(W,0) OUT T$
- SaveFile$ RIGHT$(A2$,LEN(A2$)-1),T$
+ SaveFile RIGHT$(A2$,LEN(A2$)-1),T$ OUT ERR
+ IF ERR THEN RETURN
  RETURN
 END
 COMMON DEF TXTEDRESIZE WND,C,T,A1,WH
@@ -5975,7 +6179,10 @@
  SetWindowVar WND,0,TED
  VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
  IF LEN(CMD$)THEN
-  TextBoxExSetText GetWindowVar(WND,0),LoadFile$(CMD$)
+  VAR T$
+  LoadFile(CMD$)OUT T$,E
+  IF E THEN RETURN
+  TextBoxExSetText GetWindowVar(WND,0),T$
  ENDIF
 'SetTextBoxExPRGMode WND,TRUE
 END
@@ -6013,7 +6220,10 @@
  SetTextBoxExPRGMode TED,TRUE
  VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
   IF LEN(CMD$)THEN
-   TextBoxExSetText GetWindowVar(WND,0),LoadFile$(CMD$)
+   VAR T$
+   LoadFile(CMD$)OUT T$,E
+   IF E THEN RETURN
+   TextBoxExSetText GetWindowVar(WND,0),T$
   ENDIF
 END
 COMMON DEF L_PRGED
@@ -6964,7 +7174,7 @@
 COMMON DEF OTYDOC_ShowMenu CTL,WND,X,Y,X2,Y2
  VAR E,MENUWND
  IF CTL==OTYDOCCOLOR_CTL THEN
-  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+1,4*8+2*4+2+8+1,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
+  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+1,4*8+2*4+2+8+1,GetRootWindow(),WindowFrontFlag()OUT MENUWND,E
   IF E THEN RETURN
  ENDIF
  E=JoinWindowGroup(WND,MENUWND)
@@ -7094,12 +7304,19 @@
 VAR OTYFIL_MPASTE
 VAR OTYFIL_MFIL
 VAR OTYFIL_MUPD
+VAR OTYFIL_MNEWFOL
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
+DIM OTYFILICODIR[0]
 DIM OTYFILICON[0]
+VAR RC_OTYFIL_LOADED
 COMMON DEF RC_OTYFIL
+ IF RC_OTYFIL_LOADED THEN RETURN
+ RC_OTYFIL_LOADED=TRUE
  DIM ICONS[512]
  LOAD"DAT:OTYFILRC",ICONS,0
+ OTYFILICODIR=NewArray(16*16)
+ LOAD"DAT:OTYFILRC3",OTYFILICODIR,0
  OTYFILICOTXT=NewArray(16*16)
  OTYFILICODAT=NewArray(16*16)
  OTYFILICON=NewArray(16*16)
@@ -7111,6 +7328,7 @@
 VAR OTYFILICONCTL
 VAR OTYFILABOUTCTL
 VAR OTYFILRENCTL
+VAR OTYFILNEWFOLCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
  VAR SEL=GetWindowVar(W,3)
@@ -7143,7 +7361,7 @@
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,0,LEN(S$)*8,7,WND,0 OUT W,E
  S$="Ver 5.0"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,8,LEN(S$)*8,7,WND,0 OUT W,E
- S$="© 2011-2015 otya"
+ S$="© 2011-2017 otya"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,16,LEN(S$)*8,7,WND,0 OUT W,E
  S$="OK"
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
@@ -7159,18 +7377,16 @@
 DEF OTYFIL_OPEN WND
  VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
  IF F$==""THEN RETURN
- VAR TYP$
- IF F$[0]==" "THEN
-  TYP$="DAT"
+ IF F$[0]=="/"THEN
+  IF SetCurrentDir(MID$(F$,1,LEN(F$)))THEN RETURN
+  SetScrollBarPosition GetChildWindow(WND),0
+  OTYFIL_UPD WND
+  RETURN
  ENDIF
- IF F$[0]=="*"THEN
-  TYP$="TXT"
- ENDIF
- F$=MID$(F$,1,99999)
- VAR EXT$=GetFileExtension$(F$)
- VAR PRG$=GetAssociatedProgram$(TYP$,EXT$)
- VAR PRC,E
- NewProcess PRG$,F$ OUT PRC,E
+ VAR TYP$
+ TYP$=F$[0]
+ F$=MID$(F$,1,LEN(F$))
+ VAR E=ExecFile(F$)
 END
 DEF OTYFIL_COPY WND
  VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
@@ -7190,11 +7406,14 @@
 DEF OTYFIL_UPD WND
  VAR PTR=GetWindowVar(WND,3)
  StrArrayGetFiles PTR,""
+ VAR CW=GetChildWindow(WND)
+ SetScrollBarSize CW,OTYFILGETSCRBARLEN(WND)
  void(repaintWindow(WND))
+ SetWindowName WND,GetCurrentDir$()
 END
 '
-'From[HOGEHOGE.TXT]
-'To  [FUGAFUGA.TXT]
+'Old [HOGEHOGE.TXT]
+'New [FUGAFUGA.TXT]
 '       [OK]
 COMMON DEF OTYFILRENCREATE WND,CTL,T,A1,A2
  VAR W=GetWindowWidth(WND)
@@ -7221,13 +7440,39 @@
  GetWindowVar WND,1OUT NEWW
  VAR OLD$=GetWindowName$(OLDW)
  VAR NEW$=GetWindowName$(NEWW)
- RenameFile OLD$,NEW$
+ IF MID$(OLD$,0,1)==" "||MID$(OLD$,0,1)=="*"THEN
+  OLD$=MID$(OLD$,1,LEN(OLD$))
+ ENDIF
+ VAR ERR=RenameFile(OLD$,NEW$)
  VOID DeleteWindow(WND)
 END
+COMMON DEF OTYFILNEWFOLCREATE WND,CTL,T,A1,A2
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ VAR W2,NAMEW,E
+ VAR NAME=LEN("NAME")*8+8
+ NewWindow GetLabelControl(),"Name",1,11,NAME-2,7,WND,0 OUT W2,E
+ NewWindow GetTextBoxControl(),"",NAME,11,W-NAME,8,WND,0 OUT NAMEW,E
+ VAR BW=24
+ NewWindow GetButtonControl(),"OK",(W-BW) DIV 2,22,BW,10,WND,0 OUT W2,E
+ SetWindowName WND,"New Folder"
+ SetWindowVar WND,0,NAMEW
+END
+COMMON DEF OTYFILNEWFOLNOTIF WND,CTL,T,A1,A2
+ IF CheckWindow(A1)&&IsControlExtend(GetControl(A1),GetButtonControl())THEN
+  VAR FOLNAME$=GetWindowName$(GetWindowVar(WND,0))
+  VAR ERR=NewDir(FOLNAME$)
+  IF ERR THEN
+   VOID MessageBox(WND,"Files","error:0x"+HEX$(ERR,8),MessageBoxOK())
+   RETURN
+  ENDIF
+  VOID(DeleteWindow(WND))
+ ENDIF
+END
 DEF OTYFIL_DEL WND
  VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
  IF F$==""THEN RETURN
- DeleteFile F$
+ VAR ERR=DeleteFile(MID$(F$,1,LEN(F$)))
 END
 DEF OTYFIL_PASTE WND
  IF!ClipboardContainsFile()THEN
@@ -7317,18 +7562,24 @@
   IF F$[0]==" "THEN
    GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICODAT,1,0
   ELSE
-   GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICOTXT,1,0
+   IF F$[0]=="*"THEN
+    GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICOTXT,1,0
+   ELSE
+    IF F$[0]=="/"THEN
+     GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICODIR,1,0
+    ENDIF
+   ENDIF
   ENDIF
   IF SELECT==K THEN
-   GFILLWindow WND,X,Y-BY2,X+39,Y-BY2+23,RGB(0,0,255)
+   GFILLWindow WND,X,Y-BY2,X+39,Y-BY2+23,GetSelectionColor()
    C=-1
   ENDIF
   VAR L=LEN(F$)-1
-  IF L<=5 THEN 
-  GPRINTWindow WND,X+(5-L)*4,Y-BY2,MID$(F$,1,5),C
+  IF L<=5 THEN
+   GPRINTWindow WND,X+(5-L)*4,Y-BY2,MID$(F$,1,5),C
   ELSEIF L>10THEN
    GPRINTWindow WND,X,Y-BY2+8,MID$(F$,6,5),C
-   GPRINTWindow WND,X+((5-(L-10))*4),Y-BY2+16,MID$(F$,11,4),C
+   GPRINTWindow WND,X+((5-MIN(L-10,5))*4),Y-BY2+16,MID$(F$,11,5),C
    GPRINTWindow WND,X,Y-BY2,MID$(F$,1,5),C
   ELSEIF L>5THEN
    GPRINTWindow WND,X+((5-(L-5))*4),Y-BY2+8,MID$(F$,6,5),C
@@ -7389,6 +7640,9 @@
  ENDIF
  void(repaintWindow(WND))
 END
+DEF OTYFIL_NEWFOL WND
+ VAR E=NewModalDialogBox(OTYFILNEWFOLCTL,"",40+15*8+4,40,WND)
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
  IF!ID THEN
   IF POS==OTYFIL_MOPEN THEN
@@ -7423,6 +7677,10 @@
    OTYFIL_UPD WND
    RETURN
   ENDIF
+  IF POS==OTYFIL_MNEWFOL THEN
+   OTYFIL_NEWFOL WND
+   RETURN
+  ENDIF
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -7431,7 +7689,8 @@
 END
 DEF StrArrayGetFiles PTR,DIR$
  DIM FILES$[0]
- GetFiles FILES$,""
+ VAR ERR
+ GetFiles DIR$ OUT FILES$,ERR
  VAR S$=CHR$(0)*(2*LEN(FILES$))
  VAR I,L=LEN(FILES$)-1
  FOR I=0TO L
@@ -7475,7 +7734,14 @@
   ExtendControl "Files_Rename",GetWindowControl() OUT OTYFILRENCTL,E
   E=SetControlCreateHandler(OTYFILRENCTL,"OTYFILRENCREATE")
   E=SetControlNotifHandler(OTYFILRENCTL,"OTYFILRENNOTIF")
+  ExtendControl "Files_NewFolder",GetWindowControl() OUT OTYFILNEWFOLCTL,E
+  E=SetControlCreateHandler(OTYFILNEWFOLCTL,"OTYFILNEWFOLCREATE")
+  E=SetControlNotifHandler(OTYFILNEWFOLCTL,"OTYFILNEWFOLNOTIF")
  ENDIF
+ VAR CMD$,DIR$,I
+ GetCommandArg GetProcessArgs$(),I OUT CMD$,I
+ GetCommandArg GetProcessArgs$(),I OUT DIR$,I
+ E=SetCurrentDir(DIR$)
  VAR W=42*4+8,H=64,LBL
  NewTopLevelStyleWindow OTYFILCTL,"Files",W,H,WINDOWMENUSTYLE()OR WINDOWRESIZABLESTYLE() OUT WND,E
  VAR MENU
@@ -7489,12 +7755,14 @@
  OTYFIL_MPASTE=7
  OTYFIL_MFIL=8
  OTYFIL_MUPD=9
+ OTYFIL_MNEWFOL=10
  AddMenuItem MENU,"Open",OTYFIL_MOPEN
-'AddMenuItem MENU,"Copy",OTYFIL_MCOPY
-'AddMenuItem MENU,"Cut",OTYFIL_MCUT
-'AddMenuItem MENU,"Paste",OTYFIL_MPASTE
+ AddMenuItem MENU,"Copy",OTYFIL_MCOPY
+ AddMenuItem MENU,"Cut",OTYFIL_MCUT
+ AddMenuItem MENU,"Paste",OTYFIL_MPASTE
  AddMenuItem MENU,"Delete",OTYFIL_MDEL
  AddMenuItem MENU,"Rename",OTYFIL_MREN
+ AddMenuItem MENU,"New Folder",OTYFIL_MNEWFOL
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  OTYFIL_CONTEXTMENU=MENU
  NewMenu OUT MENU,E
@@ -7507,12 +7775,12 @@
  SetProcessVar WND
  SetWindowVar WND,2,AllocString("")
  VAR PTR=AllocString("")
- StrArrayGetFiles PTR,""
  SetWindowVar WND,3,PTR
  NewVScrollBAR WND,OTYFILGETSCRBARLEN(WND) OUT SCR,E
  SetWindowVar WND,4,-1'SELECTED
  OTYFILNOTIF WND,0,0,WND,0
  SetWindowMinSize WND,52,64
+ OTYFIL_UPD WND
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -7522,7 +7790,10 @@
 COMMON DEF MPLAYNOTIF WND,CTL,TYP,CW,ID
  VAR N$=GetWindowName$(CW)
  IF N$==""THEN
-  BGMPLAY LoadFile$(GetWindowName$(GetWindowVar(WND,0)))
+  VAR ERR,T$
+  LoadFile GetWindowName$(GetWindowVar(WND,0)) OUT T$,ERR
+  IF ERR THEN RETURN
+  BGMPLAY T$
   RETURN
  ENDIF
  IF ID==1THEN
@@ -7635,13 +7906,16 @@
 COMMON DEF FileDialogNotif WND,C,T,W,__
  VAR ISSAVE=GetWindowVar(WND,1)
  IF ISSAVE&&__==ListBoxChItem()THEN
-  SetWindowName GetWindowVar(WND,2),GetListBoxSelectedText$(W)
-  VOID RepaintWindow(GetWindowVar(WND,2))
-  RETURN
+  VAR L$=GetListBoxSelectedText$(W)
+  IF !LEN(L$)||L$[0]!="/"THEN
+   SetWindowName GetWindowVar(WND,2),L$
+   VOID RepaintWindow(GetWindowVar(WND,2))
+   RETURN
+  ENDIF
  ENDIF
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$
-  IF ISSAVE THEN
+  IF ISSAVE&&__!=ListBoxChItem() THEN
    SEL$=GetWindowName$(GetWindowVar(WND,2))
    IF!LEN(SEL$)THEN RETURN
    IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
@@ -7651,6 +7925,11 @@
    SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
    IF!LEN(SEL$)THEN RETURN
   ENDIF
+  IF SEL$[0]=="/"THEN
+   VOID SetCurrentDir(MID$(SEL$,1,LEN(SEL$)))
+   INITFILEDIALOGLISTBOX WND
+   RETURN
+  ENDIF
   VAR ID=GetWindowVar(WND,3)
   VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,SEL$)
   VOID DeleteWindow(WND)
@@ -7660,24 +7939,30 @@
   ENDIF
  ENDIF
 END
-COMMON DEF FileDialogCreate WND,C,T,ID,__
- VAR E,L
- NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
+DEF INITFILEDIALOGLISTBOX WND
+ VAR L=GetWindowVar(WND,0)'LISTBOX WND
  DIM F$[0]
- GetFiles F$,""
+ VAR E
+ GetFiles "" OUT F$,E
  VAR I
  VAR T$=GetWindowName$(WND)
  T$=RIGHT$(T$,LEN(T$)-5)
- T=0
+ VAR T=0
  IF T$=="TXT"THEN T=1
  IF T$=="DAT"THEN T=2
+ ClearListBox L
  FOR I=0TO LEN(F$)-1
   IF F$[I][0]==" "&&T==1THEN CONTINUE
   IF F$[I][1]=="*"&&T==2THEN CONTINUE
   AddListBoxItem L,F$[I]
  NEXT
- VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
+END
+COMMON DEF FileDialogCreate WND,C,T,ID,__
+ VAR E,L
+ NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
  SetWindowVar WND,0,L
+ INITFILEDIALOGLISTBOX WND
+ VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
  SetWindowVar WND,1,F
  NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
  NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
@@ -7924,12 +8209,43 @@
 COMMON DEF __PRUN_CONT
  PRUN_CONT=1
  VAR P
+ DIM GPRESULT[6]
+ DIM CON[50,30]
+ VAR CX,CY
+ VAR CCSRX=CSRX,CCSRY=CSRY,CCSRZ=CSRZ
+ FOR CY=0 TO 29
+  FOR CX=0 TO 49
+   CON[CX,CY]=CHKCHR(CX,CY)
+  NEXT
+ NEXT
  FOR P=0TO 5
   SAVE FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+  GPRESULT[P]=RESULT
  NEXT
- DIM SP[512],I
+ DIM SPUSED[512],I
+ DIM SPU[512],SPV[512],SPW[512],SPH[512],SPA[512]
+ DIM SPSX[512],SPSY[512]
+ DIM SPC32[512]
+ DIM SPLINK[512]
+ DIM SPVAR[512,8]
+ DIM SPX[512],SPY[512],SPZ[512]
+ DIM SPHX[512],SPHY[512]
+ DIM SPDR[512]
  FOR I=0TO 511
-  
+  VAR J
+  FOR J=0TO 7
+   SPVAR I,J OUT SPVAR[I,J]
+  NEXT
+  SPUSED I OUT SPUSED[I]
+  IF SPUSED[I] THEN
+   SPCHR I OUT SPU[I],SPV[I],SPW[I],SPH[I],SPA[I]
+   SPSCALE I OUT SPSX[I],SPSY[I]
+   SPCOLOR I OUT SPC32[I]
+   SPLINK I OUT SPLINK[I]
+   SPOFS I OUT SPX[I],SPY[I],SPZ[I]
+   SPHOME I OUT SPHX[I],SPHY[I]
+   SPROT I OUT SPDR[I]
+  ENDIF
  NEXT
  VAR VP,WP
  GPAGE OUT VP,WP
@@ -7943,9 +8259,31 @@
  BGSAVE 3,B3
  PRUN_RESTORE
  OTX_CONT
+ ACLS
+ FOR CY=0 TO 29
+  FOR CX=0 TO 49
+   LOCATE CX,CY
+   ?CHR$(CON[CX,CY]);
+  NEXT
+ NEXT
+ LOCATE CCSRX,CCSRY,CCSRZ
  FOR P=0TO 5
-  LOAD FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+  IF GPRESULT[P]==TRUE THEN LOAD FORMAT$("GRP%D:@GRPPAGE%D",P,P)
  NEXT
+ FOR I=0TO 511
+  FOR J=0TO 7
+   SPVAR I,J,SPVAR[I,J]
+  NEXT
+  IF SPUSED[I] THEN
+   SPSET I,SPU[I],SPV[I],SPW[I],SPH[I],SPA[I]
+   SPSCALE I,SPSX[I],SPSY[I]
+   SPCOLOR I,SPC32[I]
+   IF NOT SPLINK[I]THEN SPLINK I,SPLINK[I]
+   SPOFS I,SPX[I],SPY[I],SPZ[I]
+   SPHOME I,SPHX[I],SPHY[I]
+   SPROT I,SPDR[I]
+  ENDIF
+ NEXT
  VISIBLE 1,1,1,1
  GPAGE VP,WP
  BGPAGE BPP
@@ -7991,7 +8329,7 @@
 END
 DEF PRUN_RESTORE
  ACLS
- VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
+ VAR NW=GetChildWindow(GetRootWindow())AND NUWIDMASK
  GPAGE OTW_SP,OTW_DP
   '290
   SPSET OTW_MOUSESP,0
@@ -8111,6 +8449,19 @@
  IF E THEN ExitProcess 0
 END
 
+VAR TSKBARCTL
+DIM TB_TASKLIST$[0]
+DIM TB_TASKLIST_WND[0]
+DIM TB_TASKLIST_TW[0]
+COMMON DEF TSKBARNotificationHandler WND,C,T,CW,__
+ VAR I
+ FOR I=0TO LEN(TB_TASKLIST_WND)-1
+  IF TB_TASKLIST_WND[I]==CW THEN
+   VOID FrontWindow(TB_TASKLIST_TW[I])
+   RETURN
+  ENDIF
+ NEXT
+END
 COMMON DEF TSKBARP WND,C,T,CW,_
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,GetBackColor()
@@ -8120,9 +8471,6 @@
  GLINEWindow WND,0,1,W,1,RGB(255,255,255)
  IF GEndWindow(WND)THEN RETURN
 END
-VAR TSKBARCTL
-DIM TB_TASKLIST$[0]
-DIM TB_TASKLIST_WND[0]
 COMMON DEF I_TSKBAR
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -8133,17 +8481,21 @@
  IF!TSKBARCTL THEN
   NewControl "TSKBAR" OUT TSKBARCTL,E
   E=SetControlPainter(TSKBARCTL,"TSKBARP")
- ' E=SetControlNotificationHandler(TSKBARCTL,"TSKBARNotificationHandler")
+  E=SetControlNotificationHandler(TSKBARCTL,"TSKBARNotificationHandler")
  ENDIF
+ VAR SW=GetWindowWidth(GetRootWindow())
+ VAR SH=GetWindowHeight(GetRootWindow())
  VAR WND
- VAR H=16,W=399
- NewWindow TSKBARCTL,"TSKBAR",0,239-H,W,H,GetRootWND(),0 OUT WND,E
+ VAR H=16,W=SW
+ NewWindow TSKBARCTL,"TSKBAR",0,SH-H,W,H,GetRootWindow(),WindowFrontFlag() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
  SetProcessVar WND
  VAR TW
- VAR TSKW=84,TC,TSX=24,TCM=5
+ VAR TSX=24
+ VAR TSKW=(SW-9-TSX) DIV 4,TC,TCM=(SW-9-TSX) DIV TSKW
  TB_TASKLIST$=NewArray$(TCM)
  TB_TASKLIST_WND=NewArray(TCM)
+ TB_TASKLIST_TW=NewArray(TCM)
   NewWindow GetToggleButtonControl(),"",1,3,TSX-3,11,WND,0OUT TW,E
  FOR TC=0TO TCM-1
   NewWindow GetToggleButtonControl(),"Task"+STR$(TC),TSKW*TC+TC*2+TSX,3,TSKW,11,WND,WindowHideFlag()OUT TW,E
@@ -8153,19 +8505,64 @@
  SetWindowVar WND,0,TW
 END
 DEF UPDATE_TSKBAR
- VAR TSKW=84,TC,TSX=24,TCM=5
- VAR RW=GetRootWND()
+ VAR TSKW=84,TC,TSX=24,TCM=LEN(TB_TASKLIST_TW)
+ VAR RW=GetRootWindow()
  VAR CW=GetChildWindow(RW)
- IF GetNextWindow(CW)THEN
-  TC=0
-  WHILE GetNextWindow(CW)
-   IF TCM<=TC THEN BREAK
-   SetWindowName TB_TASKLIST_WND[TC],GetWindowName$(CW)
-   IF ShowWindow(TB_TASKLIST_WND[TC])THEN BREAK
-   CW=GetNextWindow(CW)
-   INC TC
-  WEND
+ VAR UPDFLG
+ VAR I
+ VAR CTSKCOUNT
+ VAR DECCOUNT
+ FOR I=0TO TCM-1
+  VAR W=TB_TASKLIST_TW[I]
+  IF!W THEN BREAK
+  UPDFLG=1
+  IF CheckWindow(W)THEN CONTINUE
+  COPY TB_TASKLIST_TW,I,TB_TASKLIST_TW,I+1,LEN(TB_TASKLIST_TW)-I-1
+  INC DECCOUNT
+ NEXT
+ CTSKCOUNT=I-DECCOUNT
+ IF DECCOUNT THEN
+  FOR I=CTSKCOUNT TO TCM-1
+   VOID HideWindow(TB_TASKLIST_WND[I])
+   TB_TASKLIST_TW[I]=0
+  NEXT
  ENDIF
+ 
+ WHILE GetNextWindow(CW)
+  VAR N$=GetWindowName$(CW)
+  IF!IsControlExtend(GetControl(CW),GetWindowControl())THEN
+   CW=GetNextWindow(CW)
+   CONTINUE
+  ENDIF
+  FOR I=0TO TCM-1
+   IF TB_TASKLIST_TW[I]==CW THEN @FOUND
+  NEXT
+  IF CTSKCOUNT<TCM THEN
+   TB_TASKLIST_TW[CTSKCOUNT]=CW
+   TB_TASKLIST$[CTSKCOUNT]=N$
+   SetWindowName TB_TASKLIST_WND[CTSKCOUNT],N$
+   VOID ShowWindow(TB_TASKLIST_WND[CTSKCOUNT])
+   INC CTSKCOUNT
+  ENDIF
+  CW=GetNextWindow(CW)
+  CONTINUE
+  @FOUND
+  IF IsActiveWindow(CW)THEN
+   CheckButton TB_TASKLIST_WND[I]
+  ELSE
+   UnCheckButton TB_TASKLIST_WND[I]
+  ENDIF
+  IF TB_TASKLIST$[I]!=N$THEN
+   TB_TASKLIST$[I]=N$
+   SetWindowName TB_TASKLIST_WND[I],N$
+   VOID RepaintWindow(TB_TASKLIST_WND[I])
+  ENDIF
+  CW=GetNextWindow(CW)
+ WEND
+ FOR I=0TO TCM-1
+  W=TB_TASKLIST_TW[I]
+  IF!W THEN BREAK
+ NEXT
 END
 VAR TSKBAR_TIMER
 VAR TSKBAR_CWND
@@ -8291,7 +8688,7 @@
  SetProcessVar WND
  VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
  NewWindow GetLabelControl(),"Open "+CMD$,1,1,128,7,WND,0 OUT E,E
- NewWindow GetListBoxControl(),"",0,9,127,32,WND,0 OUT WND,E
+ NewWindow GetListBoxControl(),"",0,9,127,31,WND,0 OUT WND,E
  AddListBoxItem WND,"TXTED"
  AddListBoxItem WND,"PRGED"
 END
@@ -8493,8 +8890,8 @@
  VAR CX,CY
  GetWindowVar W2,1 OUT CX
  GetWindowVar W2,2 OUT CY
- VOID ResizeWindow(WND,CX*12,CY*12)
- VOID ResizeWindow(W2,CX*12,CY*12)
+ VOID ResizeWindow(WND,CX*12-1,CY*12-1)
+ VOID ResizeWindow(W2,CX*12-1,CY*12-1)
 END
 VAR OTYMINE_CTBL[0]
 DEF ONOTYMINELMD WND,CTL,TYP,A1,A2
@@ -8747,7 +9144,7 @@
   IF SetControlCreateHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONCREATE")THEN @ERR
   IF SetControlNotifHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONNOTIF")THEN @ERR
  ENDIF
- NewTopLevelMenuWindow OTYMINEWNDCTL,"Minesweeper",96,96 OUT WND,E
+ NewTopLevelMenuWindow OTYMINEWNDCTL,"Minesweeper",95,95 OUT WND,E
  IF E THEN
   E=DeleteWindow(WND)
   GOTO @ERR
@@ -8766,7 +9163,7 @@
  AddMenuItem MENU,"About",OTYMINE_MENU_ABOUT
  AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR MWND
- NewWindow OTYMINECTL,"",0,0,96,96,WND,0 OUT MWND,E
+ NewWindow OTYMINECTL,"",0,0,95,95,WND,0 OUT MWND,E
  IF E THEN
   E=DeleteWindow(GetProcessVar())
   E=DeleteWindow(WND)
@@ -8782,3 +9179,410 @@
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
 
+DEF TESTIM_KEY IM,KEY
+ IF!OTW_ENABLEKEY THEN RETURN
+ VOID SendIMText(IM,CHR$(KEY))
+END
+COMMON DEF I_TESTIM
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR IM,ERR
+ NewIM OUT IM,ERR
+ ERR=SetIMKeyHandler(IM,"TESTIM_KEY")
+ SetProcessVar IM
+END
+COMMON DEF L_TESTIM
+ VAR X,Y,MMM
+ TOUCH OUT MMM,X,Y
+ IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
+  OTW_ENKEY_STATE=1
+  OTW_ENABLEKEY=!OTW_ENABLEKEY
+  IF OTW_ENABLEKEY THEN
+   KEY 1,"KEY ON"
+  ELSE
+   KEY 1,"KEY OFF"
+  ENDIF
+  BEEP 9
+ ENDIF
+ IF!MMM THEN OTW_ENKEY_STATE=0
+ IF ProcessIM(GetProcessVar())THEN
+  VOID DeleteIM(GetProcessVar())
+ ENDIF
+END
+VAR OTWTERMCTL
+DIM OTWTERMCOLORTBL[0]
+COMMON DEF OTWTERMKEY WND,CTL,TYP,A1,A2
+ VAR STR$=GetString$(GetWindowVar(WND,4))
+ IF A1==13THEN A1=10
+ PUSH STR$,CHR$(A1)
+END
+COMMON DEF OTWTERMPAINT WND,CTL,TYP,XY,WH
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH)
+ 'fast
+ IF GBeginDirect(WND)THEN RETURN
+ IF 0THEN DIM CONSOLE[0]
+ CONSOLE=GetSBArray(GetWindowVar(WND,0))
+ VAR CW,CH
+ SplitInt GetWindowVar(WND,2) OUT CW,CH
+ VAR X,Y
+ DEC CW
+ DEC CH
+ 'GCLIP 1,0,0,CW*8+7,CH*8+7
+ GCLS RGB(0,0,0)
+ VAR CX,CY
+ SplitInt GetWindowVar(WND,3) OUT CX,CY
+ FOR Y=0TO CH
+  FOR X=0TO CW
+   VAR C=CONSOLE[Y*CW+Y+X]
+   IF C==0&&(X!=CX||Y!=CY)THEN CONTINUE
+   VAR BACK=OTWTERMCOLORTBL[(C>>(16+4))AND&HF]
+   IF BACK THEN
+    GFILL X*8,Y*8,X*8+7,Y*8+7,BACK
+   ENDIF
+   IF X==CX&&CY==Y THEN
+    GFILL X*8,Y*8,X*8+1,Y*8+7,-1
+   ENDIF
+   IF C==0THEN CONTINUE
+   VAR FORE=OTWTERMCOLORTBL[(C>>16)AND&HF]
+   GPUTCHR X*8,Y*8,C AND &HFFFF,FORE
+  NEXT
+ NEXT
+ IF GCopyDirect(WND,0,0,CW*8+7,CH*8+7,0,0,1)THEN RETURN
+ IF GEndWindow(WND)THEN RETURN
+END
+COMMON DEF OTWTERMRESIZE WND,CTL,TYP,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ VAR CW=W DIV 8,CH=H DIV 8
+ IF 0THEN DIM CONSOLE[0]
+ CONSOLE=GetSBArray(GetWindowVar(WND,0))
+ IF LEN(CONSOLE)<CW*CH THEN
+  VAR I,L=CW*CH-LEN(CONSOLE)
+  FOR I=0TO L
+   PUSH CONSOLE,GetWindowVar(WND,5)<<16
+  NEXT
+ ENDIF
+ SetWindowVar WND,2,JoinInt(CW,CH)
+ VAR X,Y
+ SplitInt GetWindowVar(WND,3) OUT X,Y
+ SetWindowVar WND,3,JoinInt(MAX(0,MIN(X,CW-1)),MAX(0,MIN(Y,CH-1)))
+END
+COMMON DEF OTWTERMDELETE WND,CTL,TYP,A1,WH
+ VAR PRC=GetWindowVar(WND,6)
+ 'FIXME:おやこをまとめてころしたい
+ VOID KillProcess(PRC)
+ VOID DeleteConsole(GetConsole())
+ FreeString GetWindowVar(WND,4)
+ FreeSBArray GetWindowVar(WND,0)
+
+END
+COMMON DEF OTWTERM_GETSIZE CON OUT W,H,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ SplitInt GetWindowVar(WND,2) OUT W,H
+END
+COMMON DEF OTWTERM_RD CON,LEN OUT RES$,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR S=GetWindowVar(WND,4)
+ VAR STR$=GetString$(S)
+ RES$=MID$(STR$,0,LEN)
+ SetString S,MID$(STR$,LEN,LEN(STR$))
+END
+COMMON DEF OTWTERM_PUT CON,BUF$ OUT ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR X,Y,W,H
+ SplitInt GetWindowVar(WND,3) OUT X,Y
+ SplitInt GetWindowVar(WND,2) OUT W,H
+ IF 0THEN DIM CONSOLE[0]
+ CONSOLE=GetSBArray(GetWindowVar(WND,0))
+ VAR L=LEN(BUF$)-1,I
+ VAR STYLE=GetWindowVar(WND,5)
+ FOR I=0TO L
+  VAR D$=BUF$[I],D=ASC(D$)
+  IF D==10THEN
+   OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X,Y
+   CONTINUE
+  ENDIF
+  CONSOLE[Y*W+X]=(STYLE<<16) OR D
+  INC X
+  IF X>=W THEN
+   OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X,Y
+  ENDIF
+ NEXT
+ SetWindowVar WND,3,JoinInt(X,Y)
+ ERR=RepaintWindow(WND)
+END
+DEF OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X_,Y_
+ X=0
+ INC Y
+ IF Y>=H THEN
+  VAR I
+  COPY CONSOLE,0,CONSOLE,W,LEN(CONSOLE)-W
+  DEC Y
+  FILL CONSOLE,STYLE<<16,W*(H-1),W
+ ENDIF
+ X_=X
+ Y_=Y
+END
+COMMON DEF OTWTERM_GETFORE CON OUT C,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=DAT AND &HF
+END
+COMMON DEF OTWTERM_SETFORE CON,C OUT ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ C=C AND &HF
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=(DAT AND (NOT &HF)) OR C
+ SetWindowVar WND,5,C
+END
+COMMON DEF OTWTERM_GETBACK CON OUT C,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=(DAT>>4) AND &HF
+END
+COMMON DEF OTWTERM_SETBACK CON,C OUT ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ C=C AND &HF
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=(DAT AND (NOT &HF0)) OR (C<<4)
+ SetWindowVar WND,5,C
+END
+COMMON DEF OTWTERM_GETCUR CON OUT X,Y,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ SplitInt GetWindowVar(WND,3) OUT X,Y
+ ERR=0
+END
+COMMON DEF OTWTERM_SETCUR(CON,X,Y)
+ VAR WND,ERR
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN ERR
+ VAR DAT=GetWindowVar(WND,5)
+ VAR CW,CH
+ SplitInt GetWindowVar(WND,2) OUT CW,CH
+ IF X<0||Y<0||X>=CW||Y>=CH THEN RETURN 1
+ SetWindowVar WND,3,JoinInt(X,Y)
+ RETURN 0
+END
+COMMON DEF I_OTWTERM
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWTERMCTL THEN
+  ExtendControl "OTWTERM",GetWindowControl() OUT OTWTERMCTL,E
+  E=SetControlPainter(OTWTERMCTL,"OTWTERMPAINT")
+  E=SetControlKeyHandler(OTWTERMCTL,"OTWTERMKEY")
+  E=SetControlResizeHandler(OTWTERMCTL,"OTWTERMRESIZE")
+  E=SetControlDeleteHandler(OTWTERMCTL,"OTWTERMDELETE")
+  OTWTERMCOLORTBL=NewArray(16)
+  COPY OTWTERMCOLORTBL,@OTWTERMCOLORTBL
+  @OTWTERMCOLORTBL
+  DATA &H00000000
+  DATA &HFF000000
+  DATA &HFF800000
+  DATA &HFFF80000
+  DATA &HFF008000
+  DATA &HFF00F800
+  DATA &HFF808000
+  DATA &HFFF8F800
+  DATA &HFF000080
+  DATA &HFF0000F8
+  DATA &HFF800080
+  DATA &HFFF800F8
+  DATA &HFF008080
+  DATA &HFF00F8F8
+  DATA &HFF808080
+  DATA &HFFF8F8F8
+ ENDIF
+ VAR CON
+ NewConsole OUT CON,E
+ SetGetConsoleSizeHandler CON,"OTWTERM_GETSIZE"OUT E
+ SetReadConsoleHandler CON,"OTWTERM_RD"OUT E
+ SetPutConsoleHandler CON,"OTWTERM_PUT"OUT E
+ SetGetConsoleCursorHandler CON,"OTWTERM_GETCUR"OUT E
+ SetGetConsoleForeHandler CON,"OTWTERM_GETFORE"OUT E
+ SetSetConsoleForeHandler CON,"OTWTERM_SETFORE"OUT E
+ SetGetConsoleBackHandler CON,"OTWTERM_GETBACK"OUT E
+ SetSetConsoleBackHandler CON,"OTWTERM_SETBACK"OUT E
+ SetSetConsoleCursorHandler CON,"OTWTERM_SETCUR"OUT E
+ SetGetConsoleCursorHandler CON,"OTWTERM_GETCUR"OUT E
+ VAR CW=40
+ VAR CH=20
+ NewTopLevelStyleWindow OTWTERMCTL,"OTWTERM",CW*8,CH*8,WINDOWRESIZABLESTYLE() OUT WND,E
+ E=SetConsoleVar(CON,WND)
+ VAR DEFSTYLE=14
+ SetWindowVar WND,0,AllocSBArray()
+ SetSBArray GetWindowVar(WND,0),NewArray(CH*CW)
+ FILL GetSBArray(GetWindowVar(WND,0)),DEFSTYLE<<16
+ SetWindowVar WND,1,CON
+ SetWindowVar WND,2,JoinInt(CW,CH)
+ SetWindowVar WND,3,JoinInt(0,0)
+ SetWindowVar WND,4,AllocString("")
+ SetWindowVar WND,5,DEFSTYLE
+ VAR PRC
+ SetConsole CON
+ NewProcess "sh","" OUT PRC,E
+ SetWindowVar WND,6,PRC
+ SetProcessVar WND
+END
+COMMON DEF L_OTWTERM
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+VAR ODE_CTL
+VAR ODE_WV_FILES
+VAR ODE_WV_CURRENT
+VAR ODE_IW
+VAR ODE_IH
+VAR ODE_IX
+VAR ODE_IY
+DEF ODE_GETITEM X,Y OUT I,IX,IY
+ X=X-ODE_IX
+ IX=X DIV ODE_IW
+ IY=Y DIV ODE_IH
+ I=IY
+END
+COMMON DEF ODE_LDC WND,CTL,TYP,X,Y
+ VAR I
+ ODE_GETITEM X,Y OUT I,X,Y
+ IF I<0THEN RETURN
+ SetWindowVar WND,ODE_WV_CURRENT,I
+ IF 0 THEN DIM DIR$[0]
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ DIR$=GetSBArray(ARY)
+ VAR F$=DIR$[I]
+ F$=MID$(F$,1,LEN(F$))
+ F$=CombinePath$(CombinePath$(GetHomeDir$(),"desktop"),F$)
+ VAR E=ExecFile(F$)
+END
+COMMON DEF ODE_LMD WND,CTL,TYP,X,Y
+ IF 0 THEN DIM DIR$[0]
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ DIR$=GetSBArray(ARY)
+ VAR I,L=LEN(DIR$)-1
+ VAR IX=ODE_IX,IY=ODE_IY
+ VAR IW=ODE_IW
+ VAR IH=ODE_IH
+ VAR ICONSX=(IW-16) DIV 2
+ VAR ITW=IW DIV 8
+ ODE_GETITEM X,Y OUT I,X,Y
+ IF I<0THEN RETURN
+ SetWindowVar WND,ODE_WV_CURRENT,I
+ ODE_PAINTER WND,CTL,TYP,0,0
+END
+COMMON DEF ODE_PAINTER WND,CTL,TYP,XY,WH
+ VAR X,Y,W,H
+ VAR SW,SH
+ SW=GetWindowWidth(WND)
+ SH=GetWindowHeight(WND)
+ IF WH THEN
+  SplitInt WH OUT W,H
+  SplitInt XY OUT X,Y
+ ELSE
+  W=SW
+  H=SH
+ ENDIF
+
+ IF GBeginDirect(WND)THEN @END
+ GCLS RGB(0,128,128)
+ IF 0 THEN DIM DIR$[0]
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ DIR$=GetSBArray(ARY)
+ VAR I,L=LEN(DIR$)-1
+ VAR IX=ODE_IX,IY=ODE_IY
+ VAR IW=ODE_IW
+ VAR IH=ODE_IH
+ VAR ICONSX=(IW-16) DIV 2
+ VAR ITW=IW DIV 8
+ VAR CUR=GetWindowVar(WND,ODE_WV_CURRENT)
+ 
+ FOR I=0TO L
+  VAR D$=DIR$[I]
+  IF D$=="/.."THEN CONTINUE
+  VAR NAME$=MID$(D$,1,LEN(D$))
+  VAR TC=&HFF000000
+  IF I==CUR THEN
+   GFILL IX,IY+16,IX+IW-1,IY+IH-1,GetSelectionColor()
+   TC=GetSelectionTextColor()
+  ENDIF
+  IF D$[0]=="*"THEN
+   GLOAD IX+ICONSX,IY,16,16,OTYFILICOTXT,1,0
+  ELSEIF D$[0]=="/"THEN
+   GLOAD IX+ICONSX,IY,16,16,OTYFILICODIR,1,0
+  ELSEIF D$[0]==" "THEN
+   GLOAD IX+ICONSX,IY,16,16,OTYFILICODAT,1,0
+  ENDIF
+  GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$))*8)DIV 2,IY+16,MID$(NAME$,0,ITW),TC
+  IF LEN(NAME$)>ITW THEN
+   GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW)*8)DIV 2,IY+24,MID$(NAME$,ITW,ITW),TC
+   IF LEN(NAME$)>ITW+ITW THEN
+    GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW-ITW)*8)DIV 2,IY+32,MID$(NAME$,ITW+ITW,ITW),TC
+   ENDIF
+  ENDIF
+  IY=IY+IH
+ NEXT
+ 
+ IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,1)THEN @END
+ @END
+ IF GEndWindow(WND)THEN RETURN
+END
+DEF ODE_UPDATEFILES WND
+ VAR ERR
+ IF 0 THEN DIM DIR$[0]
+ GetFiles CombinePath$(GetHomeDir$(),"desktop/") OUT DIR$,ERR
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ SetSBArray ARY,DIR$
+END
+COMMON DEF I_ODE
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!ODE_CTL THEN
+  RC_OTYFIL
+  NewControl "otya desktop environment" OUT ODE_CTL,E
+  E=SetControlPainter(ODE_CTL,"ODE_PAINTER")
+  E=SetControlLMouseDownHandler(ODE_CTL,"ODE_LMD")
+  E=SetControlLDoubleClickHandler(ODE_CTL,"ODE_LDC")
+  ODE_WV_FILES=0
+  ODE_WV_CURRENT=1
+  ODE_IW=48
+  ODE_IH=40
+  ODE_IX=8
+  ODE_IY=0
+ ENDIF
+ VAR RWND=GetRootWindow()
+ NewWindow ODE_CTL,"",0,0,GetWindowWidth(RWND),GetWindowHeight(RWND),RWND,WindowBackFlag() OUT WND,E
+ SetWindowVar WND,ODE_WV_FILES,AllocSBArray()
+ SetWindowVar WND,ODE_WV_CURRENT,-1
+ ODE_UPDATEFILES WND
+ SetProcessVar WND
+ NewProcess "TSKBAR","" OUT E,E
+END
+COMMON DEF L_ODE
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 0
+END
+
diff -u OTW.TXT OTW27
--- OTW.TXT
+++ OTW27
@@ -198,6 +198,8 @@
  OTW_IMAGE_INITARRAY
  WIN_WID[0]=&Hdeadbeef
 END
+VAR WIN_ROOTWND
+VAR WIN_ROOTWND2
 DIM IMAGE_PTR[0]
 DIM IMAGE_HEIGHT[0]
 DIM IMAGE_WIDTH[0]
@@ -250,6 +252,10 @@
 VAR MENUCTL
 VAR MENU_STYLE_SEPARATOR
 VAR MENU_SEPARATOR_HEIGHT
+VAR MENU_STYLE_CHILD
+VAR MENU_CHILD_MARK_W
+VAR MENU_CHILD_MARK_H
+VAR MENU_NOTIFID
 DEF OTW_MENU_INITARRAY
  PrintConsoleln "Init menu..."
  MENU_ITEMMAX=256
@@ -261,6 +267,9 @@
  MENU_ISTYLE=NewArray(MENU_ITEMMAX)
  MENU_STYLE_SEPARATOR=1
  MENU_SEPARATOR_HEIGHT=4
+ MENU_STYLE_CHILD=2
+ MENU_CHILD_MARK_W=4
+ MENU_CHILD_MARK_H=4
  MENU_IVAR=NewArray(MENU_ITEMMAX)
  OTW_INITLIST MENU_INEXT
  MENU_ITEMFREE=1
@@ -278,6 +287,7 @@
  MENU_NEXT=MENU_ITEM
  OTW_INITLIST MENU_NEXT
  MENU_FREE=1
+ MENU_NOTIFID=&HDEADFEED
  VAR E
 END
 'FILE
@@ -289,10 +299,12 @@
  ASSOC_TYP$=NewArray$(0)
  ASSOC_EXT$=NewArray$(0)
  ASSOC_NAME$=NewArray$(0)
+ ASSOC_LEN=0
  VAR E=AssociateFile("*","","EDITORSEL")
  E=AssociateFile("*","TXT","TXTED")
  E=AssociateFile("*","PRG","PRGED")
  E=AssociateFile("*","MML","MPLAY")
+ E=AssociateFile("*","LNK","LINKOPEN")
  E=AssociateFile("/","","OTYFIL")
 END
 DEF GetAssociatedIndex(TYP$,EXT$)
@@ -338,7 +350,7 @@
  VAR EXT$=GetFileExtension$(F$)
  VAR PRG$=GetAssociatedProgram$(TYPE$,EXT$)
  VAR PRC
- NewProcess PRG$,F$ OUT PRC,E
+ NewProcess PRG$,EscapeArg$(F$) OUT PRC,E
  IF E THEN RETURN E
  RETURN 0
 END
@@ -438,7 +450,7 @@
  NewControl "LABEL" OUT CTL_LABELCTL,E
  NewControl "VSCRBAR" OUT CTL_VSCRBARCTL,E
  CTL_PAINTHANDLER=0
- CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
+' CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
  CTL_RBTNUPHANDLER=3
@@ -504,6 +516,8 @@
  E=SetControlMouseMoveHandler(MENUCTL,"MenuMouseMove")
  E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
  E=SetControlChFocusHandler(MENUCTL,"MenuChFocus")
+ E=SetControlNotifHandler(MENUCTL,"MenuNotif")
+ E=SetControlDeleteHandler(MENUCTL,"MenuDelete")
 
 
  OTW_CTL_LIST
@@ -600,12 +614,24 @@
  VAR NIM=IM AND 4095
  IM_ID[NIM]=0
  IM_NEXT[NIM]=IM_FREE
- CALL IM_DEL_HANDLER$[NIM],IM
+ IF CHKCALL(IM_DEL_HANDLER$[NIM])THEN
+  CALL IM_DEL_HANDLER$[NIM],IM
+ ENDIF
  IM_KEY_HANDLER$[NIM]=""
  IM_DEL_HANDLER$[NIM]=""
  ERR=0
  IM_FREE=NIM
 END
+DEF DeleteAllIM OUT ERR
+ VAR L=LEN(IM_ID)-1,I
+ ERR=0
+ FOR I=0TO L
+  VAR ID=IM_ID[I]
+  IF!ID THEN CONTINUE
+  ERR=DeleteIM(ID<<12 OR I)
+  IF ERR THEN RETURN
+ NEXT
+END
 COMMON DEF NewIM OUT IM,ERR
  IM=IM_FREE
  IF!IM THEN
@@ -965,15 +991,33 @@
 COMMON DEF ShowContextMenu MENU,WND
  VAR X=GetMouseX()
  VAR Y=GetMouseY()
- ShowMenuXY MENU AND 4095,WND,X,Y
+ ShowMenuXY MENU,WND,X,Y
 END
 COMMON DEF ShowMenu MENU,WND
  NOIMPL FORMAT$("NOIMPL ShowMenu %D,%D",MENU,WND)
 END
-DEF ShowMenuXY MENU,WND,X,Y
+COMMON DEF ShowMenuXY2 MENU,WND,X,Y
+ IF!CheckMenu(MENU)THEN RETURN
+ Y=Y-MENU_HEIGHT[MENU AND 4095]
+ ShowMenuXY MENU,WND,X,Y
+END
+COMMON DEF ShowMenuXY MENU,WND,X,Y
+ IF!CheckMenu(MENU)THEN RETURN
+ MENU=MENU AND 4095
+ VAR PARENT=WIN_ROOTWND'GetRootWindow()
+ VAR PW=GetWindowWidth(PARENT)
+ VAR PH=GetWindowHeight(PARENT)
+ VAR WIDTH=MENU_WIDTH[MENU]
+ VAR HEIGHT=MENU_HEIGHT[MENU]
+ IF Y+HEIGHT>=PH THEN
+  Y=PH-HEIGHT
+ ENDIF
+ IF X+WIDTH >=PW THEN
+  X=PW-WIDTH
+ ENDIF
  VAR W=WND AND NUWIDMASK
  VAR E
- NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWindow(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],PARENT,WindowFrontFlag()OUT MENU_NUWID[MENU],E
  VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
  SetWindowVar MENU_NUWID[MENU],0,MENU
  MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
@@ -985,6 +1029,34 @@
  VAR W=WND AND NUWIDMASK
  ShowMenuXY MENU,WND,WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W]
 END
+DEF ShowSubMenu PMENU,MENU,Y
+ IF!CheckMenu(MENU)THEN RETURN
+ PMENU=PMENU AND 4095
+ MENU=MENU AND 4095
+ VAR WND=NUWIDToWND(MENU_NUWID[PMENU])
+ VAR X=GetWindowWidth(WND)
+ INC X,WIN_AX[MENU_NUWID[PMENU]]
+ INC Y,WIN_AY[MENU_NUWID[PMENU]]
+ VAR PARENT=WIN_ROOTWND'GetRootWindow()
+ VAR PW=GetWindowWidth(PARENT)
+ VAR PH=GetWindowHeight(PARENT)
+ VAR WIDTH=MENU_WIDTH[MENU]
+ VAR HEIGHT=MENU_HEIGHT[MENU]
+ IF Y+HEIGHT>=PH THEN
+  Y=PH-HEIGHT
+ ENDIF
+ IF X+WIDTH >=PW THEN
+  X=PW-WIDTH
+ ENDIF
+ VAR W=WND AND NUWIDMASK
+ VAR E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],PARENT,WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
+ SetWindowVar MENU_NUWID[MENU],0,MENU
+ MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
+ MENU_SHOW[MENU]=MENU_SHOW[PMENU]'WND
+ WIN_ACTIVENUWID=MENU_NUWID[MENU]
+END
 DEF NewMenuItem(STR$,PREV,STYLE)
  VAR I=MENU_ITEMFREE
  IF!I THEN RETURN 0
@@ -1021,18 +1093,22 @@
   INC MENU_HEIGHT[N],8
  ENDIF
  '3 IS MENU WIDTH
- IF MENU_WIDTH[N]<LEN(STR$)*8+3THEN
-  MENU_WIDTH[N]=LEN(STR$)*8+3
+ VAR W=LEN(STR$)*8+3
+ IF STYLE AND MENU_STYLE_CHILD THEN
+  W=W+MENU_CHILD_MARK_W
  ENDIF
+ IF MENU_WIDTH[N]<W THEN
+  MENU_WIDTH[N]=W
+ ENDIF
 END
 COMMON DEF AddMenuItemSeparator MENU
  AddMenuItemStyle MENU,"",0,MENU_STYLE_SEPARATOR'STYLE
 END
 COMMON DEF AddSubMenuItem MENU,STR$,SUBMENU
- AddMenuItem MENU,STR$,0
+ AddMenuItemStyle MENU,STR$,0,MENU_STYLE_CHILD
  VAR N=MENU AND 4095
  IF!MENU_LAST[N]THEN RETURN
- MENU_ICHILD[MENU_LAST[N]]=SUBMENU AND 4095
+ MENU_ICHILD[MENU_LAST[N]]=SUBMENU' AND 4095
 END
 COMMON DEF CheckMenu(MENU)
  RETURN MENU_ID[MENU AND 4095]==MENU>>12
@@ -1040,26 +1116,49 @@
 DEF MenuLMouseUp WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
  IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
-  VOID SendNotifWindow(GetWindowGroupOwner(WND),0,MENU_IVAR[MENU_SEL[M]])
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_NOTIFID,MENU_IVAR[MENU_SEL[M]])
  ENDIF
  VOID DeleteWindow(WND)
  VOID ActiveWindow(MENU_SHOW[M])
  MENU_SHOW[M]=0
 END
-DEF MenuChFocus WND,C,T,F,_
+DEF MenuChFocus WND,C,T,F,FWND
  IF!F THEN
+  IF IsControlExtend(GetControl(FWND),MENUCTL)THEN RETURN
+  VAR OWNER=GetWindowGroupOwner(WND)
+  WHILE IsControlExtend(GetControl(OWNER),MENUCTL)
+   VAR OW2=GetWindowGroupOwner(OWNER)
+   VOID DeleteWindow(OWNER)
+   OWNER=OW2
+  WEND
   VAR M=GetWindowVar(WND,0)
   VOID DeleteWindow(WND)
  ' VOID ActiveWindow(MENU_SHOW[M])
   MENU_SHOW[M]=0
  ENDIF
 END
+COMMON DEF MenuNotifID()
+ RETURN MENU_NOTIFID
+END
+DEF MenuNotif WND,C,T,NID,I
+ VAR M=GetWindowVar(WND,0)
+ IF NID==MENU_NOTIFID THEN
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_NOTIFID,I)
+  VOID DeleteWindow(WND)
+ ENDIF
+END
+DEF MenuDelete WND,C,T,_,__
+ VAR M=GetWindowVar(WND,0)
+ MENU_SEL[M]=0
+END
 DEF MenuMouseMove WND,C,T,X,Y
  VAR SX=2
  VAR M=GetWindowVar(WND,0)
  VAR I=MENU_ITEM[M],Y1=2,Y2=Y1
  VAR OS=MENU_SEL[M]
  VAR BEG,G,SELF=0'SELECT FLAG
+ VAR W=GetWindowWidth(WND)
+
  WHILE I
   IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
    INC Y2,MENU_SEPARATOR_HEIGHT
@@ -1074,14 +1173,30 @@
    BEG=1
    GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,GetSelectionColor()
    GPRINTWindow WND,SX,Y1,MENU_INAME$[I],GetSelectionTextColor()
+   IF MENU_ICHILD[I]THEN
+    GTRIWindow WND,W-SX-2,Y1+2,W-SX-2,Y1+6,W-SX,Y1+4,GetSelectionTextColor()
+    VAR IC=MENU_ICHILD[I]
+    IF CheckMenu(IC)THEN
+     ShowSubMenu M,IC,Y1
+    ENDIF
+   ENDIF
    G=0
    ENDIF
    IF!OS THEN BREAK
   ELSE
    IF I==OS THEN
+    IF MENU_ICHILD[OS]THEN
+     IC=MENU_ICHILD[OS]
+     IF CheckMenu(IC)THEN
+      VOID DeleteWindow(NUWIDToWND(MENU_NUWID[IC AND 4095]))
+     ENDIF
+    ENDIF
     IF!BEG&&GBeginWindow(WND)THEN :'BREAK
     GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,WIN_BKGND
     GPRINTWindow WND,SX,Y1,MENU_INAME$[I],&HFF000000
+   IF MENU_ICHILD[I]THEN
+    GTRIWindow WND,W-SX-2,Y1+2,W-SX-2,Y1+6,W-SX,Y1+4,#BLACK
+   ENDIF
     OS=0
     IF BEG THEN BREAK
     BEG=1
@@ -1112,13 +1227,24 @@
  GLINEWindow WND,1,1,1,H-2,RGB(255,255,255)
  VAR M=GetWindowVar(WND,0)
  VAR I=MENU_ITEM[M],Y=2
+ VAR SEL=MENU_SEL[M]
  WHILE I
   IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
    GLINEWindow WND,SX+1,Y+1,W-SX-1,Y+1,RGB(128,128,128)
    GLINEWindow WND,SX+1,Y+2,W-SX-1,Y+2,-1
    INC Y,MENU_SEPARATOR_HEIGHT
   ELSE
-   GPRINTWindow WND,SX,Y,MENU_INAME$[I],&HFF000000
+   VAR TC
+   IF SEL==I  THEN
+    GFILLWindow WND,SX,Y,MENU_WIDTH[M]-SX,Y+7,GetSelectionColor()
+    TC=GetSelectionTextColor()
+   ELSE
+    TC=#BLACK
+   ENDIF
+   IF MENU_ICHILD[I]THEN
+    GTRIWindow WND,W-SX-2,Y+2,W-SX-2,Y+6,W-SX,Y+4,TC
+   ENDIF
+   GPRINTWindow WND,SX,Y,MENU_INAME$[I],TC
    INC Y,8
   ENDIF
   I=MENU_INEXT[I]
@@ -1167,8 +1293,6 @@
  IF!CheckWindow(WND)THEN RETURN 0
  RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
 END
-VAR WIN_ROOTWND
-VAR WIN_ROOTWND2
 COMMON DEF GetRootWindow()
  RETURN WIN_ROOTWND2
 END
@@ -1329,7 +1453,7 @@
  IF (FLG AND 512)!=512THEN
   WindowOnCreate WND,CTL,0,0
  ENDIF
- VOID ActiveWindow(WND)
+ VOID FocusWindow(WND)
 END
 DEF InitWindow WND,ARG1,ARG2
  IF!CheckWindow(WND)THEN RETURN
@@ -1372,7 +1496,7 @@
  ENDIF
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
 'SPANIM SP,"S",-60,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
- SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+'''''' SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSHOW SP
  SPVAR SP,0,WND
  OTW_SPSORT
@@ -1803,8 +1927,14 @@
   WIN_GPARENT[NUWID]=0
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
-  IF WIN_GROUP[NUWID]THEN 
-   NOIMPL "DeleteWindow - Group"
+  IF WIN_GROUP[NUWID]THEN
+   VAR G=WIN_GROUP[NUWID]
+   WHILE G
+    VAR ERR=DeleteWindow(NUWIDToWND(G))
+    IF ERR THEN RETURN ERR
+    G=WIN_GNEXT[G]
+   WEND
+    WIN_GROUP[NUWID]=0
   ENDIF
   
  ENDIF
@@ -1882,7 +2012,8 @@
   ENDIF
   RepaintAllWindow WND,0,0,0,0
  ENDIF
- VAR G=WIN_GROUP[NUWID],E=ActiveWindow(WND)
+ VAR G=WIN_GROUP[NUWID],E
+ VAR HASMODAL
  WHILE G
   IF WIN_STYLE[G]AND WIN_STYLE_MODAL THEN
    BEEP 
@@ -1890,9 +2021,11 @@
     SPANIM WIN_SP[NUWID]AND 511,6,-10,RGB(128,128,128),-10,RGB(255,255,255)
    ENDIF
    E=FrontWindow(NUWIDToWND(G))
+   HASMODAL=TRUE
   ENDIF
   G=WIN_GNEXT[G]
  WEND
+ IF!HASMODAL THEN E=ActiveWindow(WND)
  RETURN 0
 END
 
@@ -2146,7 +2279,7 @@
  VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
 ' VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
 
- IF!NXT THEN RETURN 'WIN_
+' IF!NXT THEN RETURN 'WIN_
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
   IF WIN_SP[NUWID]THEN
@@ -3053,8 +3186,14 @@
   C=WIN_MENU[NUWID]AND 4095
   VAR I=MENU_ITEM[C]
   VAR X=0
+  VAR S=MENU_SEL[C]
   WHILE I
-   GPRINTWindow WND,X,-9,MENU_INAME$[I],RGB(0,0,0)
+   IF S==I THEN
+    GFILLWindow WND,X,-10,X+LEN(MENU_INAME$[I])*8+2,-2,GetSelectionColor()
+    GPRINTWindow WND,X,-9,MENU_INAME$[I],GetSelectionTextColor()
+   ELSE
+    GPRINTWindow WND,X,-9,MENU_INAME$[I],RGB(0,0,0)
+   ENDIF
    X=X+LEN(MENU_INAME$[I])*8+4
    I=MENU_INEXT[I]
   WEND
@@ -3142,6 +3281,7 @@
  ENDIF
  IF!IsFocusWindow(WND)THEN RETURN
  IF X&&Y>11&&Y<21&&WIN_MENU[NUWID]THEN
+  WindowFrameMenu WND,X,Y
   IF BTN AND CTL_BTNUPFLG THEN
    VAR C=WIN_MENU[NUWID]AND 4095
    IF MENU_ICHILD[MENU_SEL[C]]THEN
@@ -3238,6 +3378,10 @@
   OTW_INITSP 0
  ENDIF
  IF!IsActiveWindow(WND)THEN RETURN
+ WindowFrameMenu WND,X,Y
+END
+DEF WindowFrameMenu WND,X,Y
+ VAR NUWID=WND AND NUWIDMASK
  IF!WIN_MENU[NUWID]THEN RETURN
  VAR C=WIN_MENU[NUWID]AND 4095
  IF!(X&&Y>11&&Y<21)THEN
@@ -4270,12 +4414,25 @@
 VAR OTW_KY2
 VAR OTW_USEBTN
 VAR OTW_USEMEM
+VAR OTW_EXITFLG
+VAR OTW_EXITTIME
+COMMON DEF ExitWin()
+ VAR ERR=DeleteWindow(WIN_ROOTWND2)
+ IF ERR THEN RETURN ERR
+ ERR=DeleteAllIM()
+ IF ERR THEN RETURN ERR
+ OTW_EXITFLG=TRUE
+ OTW_EXITTIME=MAINCNT+60
+ OTW_INIT=FALSE
+ RETURN ERR
+END
 COMMON DEF S_OTW S
  BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
-  KEY 1,"KEY OFF"
+' KEY 1,"KEY OFF"
+  OTW_EXITFLG=0
   OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
   WIN_BTNBACK=RGB(192,192,192)
@@ -4287,7 +4444,7 @@
   PrintConsole "=================="+LF$()
   PrintConsole "Ver 5.0-26"+LF$()
 ' BEEP 94,-1000
-  VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77'34
+  VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77+"V10"'34
   M1$=":1"+G$+"T140<<C8 C8&C2."
   M2$=":2"+G$+"T140<G8 G8&G2."
   M3$=":3"+G$+"T140<E8 E8&E2."
@@ -4339,6 +4496,9 @@
   GCLS RGB(0,224,224)
   GCLS RGB(0,128,128)
   'GCLS RGB(191,191,191)
+  GPUTCHR 0,0,"otya window system 5.0",2,4
+  GPUTCHR 0,240-8,"One moment please...",1,1
+  GPUTCHR 1,240-8,"One moment please...",1,1
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
  ' GCLS RGB(0,192,128)
@@ -4425,7 +4585,7 @@
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
   CLS
   LOCATE 0,29
-  NewProcess"LAUNCHER","" OUT E,E
+' NewProcess"LAUNCHER","" OUT E,E
   NewProcess"TESTIM","" OUT E,E
   NewProcess"ODE","" OUT E,E
  ENDIF
@@ -4664,9 +4824,17 @@
    OTW_OLDBTN=BTN
   ENDIF
  ENDIF
+ IF OTW_EXITFLG&&OTW_EXITTIME>=MAINCNT THEN
+  OTW_EXIT
+ ENDIF
 ' ExitProcess 1
 RETURN
 END
+DEF OTW_EXIT
+ ACLS
+ ExitProcess 0
+ RETURN
+END
   '2     3     4
   ' 
   ' 
@@ -7053,6 +7221,9 @@
 '==================
 VAR OTYDOCCOLOR_CTL
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
+ IF CW==MenuNotifID()THEN
+  RETURN
+ ENDIF
  VAR N$=GetWindowName$(CW)
  IF N$=="B"THEN
   RTESetBold GetWindowVar(WND,0),F
@@ -7305,6 +7476,7 @@
 VAR OTYFIL_MFIL
 VAR OTYFIL_MUPD
 VAR OTYFIL_MNEWFOL
+VAR OTYFIL_MNEWTXT
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
 DIM OTYFILICODIR[0]
@@ -7455,13 +7627,24 @@
  NewWindow GetTextBoxControl(),"",NAME,11,W-NAME,8,WND,0 OUT NAMEW,E
  VAR BW=24
  NewWindow GetButtonControl(),"OK",(W-BW) DIV 2,22,BW,10,WND,0 OUT W2,E
- SetWindowName WND,"New Folder"
+ IF A1 THEN
+  SetWindowVar WND,1,A1
+  SetWindowName WND,"New File"
+ ELSE
+  SetWindowName WND,"New Folder"
+ ENDIF
  SetWindowVar WND,0,NAMEW
 END
 COMMON DEF OTYFILNEWFOLNOTIF WND,CTL,T,A1,A2
  IF CheckWindow(A1)&&IsControlExtend(GetControl(A1),GetButtonControl())THEN
+  VAR FLG=GetWindowVar(WND,1)
   VAR FOLNAME$=GetWindowName$(GetWindowVar(WND,0))
-  VAR ERR=NewDir(FOLNAME$)
+  VAR ERR
+  IF FLG THEN
+   SaveFile FOLNAME$,"" OUT ERR
+  ELSE
+   ERR=NewDir(FOLNAME$)
+  ENDIF
   IF ERR THEN
    VOID MessageBox(WND,"Files","error:0x"+HEX$(ERR,8),MessageBoxOK())
    RETURN
@@ -7640,11 +7823,11 @@
  ENDIF
  void(repaintWindow(WND))
 END
-DEF OTYFIL_NEWFOL WND
- VAR E=NewModalDialogBox(OTYFILNEWFOLCTL,"",40+15*8+4,40,WND)
+DEF OTYFIL_NEWFOL WND,FLG
+ VAR E=NewDialogBoxWithArg(OTYFILNEWFOLCTL,"",40+15*8+4,40,WND,TRUE,FLG,0)
 END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
- IF!ID THEN
+ IF ID==MenuNotifID() THEN
   IF POS==OTYFIL_MOPEN THEN
    OTYFIL_OPEN WND
    RETURN
@@ -7678,9 +7861,13 @@
    RETURN
   ENDIF
   IF POS==OTYFIL_MNEWFOL THEN
-   OTYFIL_NEWFOL WND
+   OTYFIL_NEWFOL WND,0
    RETURN
   ENDIF
+  IF POS==OTYFIL_MNEWTXT THEN
+   OTYFIL_NEWFOL WND,1
+   RETURN
+  ENDIF
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -7756,13 +7943,18 @@
  OTYFIL_MFIL=8
  OTYFIL_MUPD=9
  OTYFIL_MNEWFOL=10
+ OTYFIL_MNEWTXT=11
+ VAR NEWMENU
+ NewMenu OUT NEWMENU,E
+ AddMenuItem NEWMENU,"Folder",OTYFIL_MNEWFOL
+ AddMenuItem NEWMENU,"Text",OTYFIL_MNEWTXT
  AddMenuItem MENU,"Open",OTYFIL_MOPEN
  AddMenuItem MENU,"Copy",OTYFIL_MCOPY
  AddMenuItem MENU,"Cut",OTYFIL_MCUT
  AddMenuItem MENU,"Paste",OTYFIL_MPASTE
  AddMenuItem MENU,"Delete",OTYFIL_MDEL
  AddMenuItem MENU,"Rename",OTYFIL_MREN
- AddMenuItem MENU,"New Folder",OTYFIL_MNEWFOL
+ AddSubMenuItem MENU,"New",NEWMENU
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  OTYFIL_CONTEXTMENU=MENU
  NewMenu OUT MENU,E
@@ -8453,7 +8645,21 @@
 DIM TB_TASKLIST$[0]
 DIM TB_TASKLIST_WND[0]
 DIM TB_TASKLIST_TW[0]
+VAR TSKBAR_MENU_EXIT
+VAR TSKBAR_WV_MENU
+VAR TSKBAR_WV_PRGITEMS
 COMMON DEF TSKBARNotificationHandler WND,C,T,CW,__
+ IF CW==MenuNotifID()THEN
+  IF __==TSKBAR_MENU_EXIT THEN
+   void ExitWin()
+   RETURN
+  ENDIF
+  IF 0 THEN DIM ARY[0]
+  ARY=GetSBArray(GetWindowVar(WND,TSKBAR_WV_PRGITEMS))
+  IF 0<=__&&__<LEN(ARY)THEN
+   VOID ExecFile(GetString$(ARY[__]))
+  ENDIF
+ ENDIF
  VAR I
  FOR I=0TO LEN(TB_TASKLIST_WND)-1
   IF TB_TASKLIST_WND[I]==CW THEN
@@ -8461,6 +8667,10 @@
    RETURN
   ENDIF
  NEXT
+ IF GetWindowName$(CW)==""THEN
+  ShowMenuXY2 GetWindowVar(WND,TSKBAR_WV_MENU),WND,0,GetWindowY(WND)
+'  ShowContextMenu GetWindowVar(WND,TSKBAR_WV_MENU),WND
+ ENDIF
 END
 COMMON DEF TSKBARP WND,C,T,CW,_
  IF GBeginWindow(WND)THEN RETURN
@@ -8471,6 +8681,44 @@
  GLINEWindow WND,0,1,W,1,RGB(255,255,255)
  IF GEndWindow(WND)THEN RETURN
 END
+DEF TSKBAR_CONTRUCTMENU PRG$,ARY OUT MENU
+ IF 0 THEN DIM DIR$[0]
+ VAR ERR
+ GetFiles PRG$ OUT DIR$,ERR
+ IF ERR THEN MENU=0RETURN
+ NewMenu OUT MENU,ERR
+ IF ERR THEN RETURN
+ VAR I
+ FOR I=0TO LEN(DIR$)-1
+  IF DIR$[I]=="/.."THEN CONTINUE
+  VAR I$=MID$(DIR$[I],1,LEN(DIR$[I]))
+  VAR PATH$=CombinePath$(PRG$,I$)
+  IF DIR$[I][0]=="/"THEN
+   VAR CMENU
+   TSKBAR_CONTRUCTMENU PATH$,ARY OUT CMENU
+   AddSubMenuItem MENU,I$,CMENU
+  ELSE
+   VAR EXT$=GetFileExtension$(I$)
+   ToUpper EXT$
+   IF EXT$=="LNK"THEN
+    VAR RESULT$
+    LoadFile PATH$ OUT RESULT$,ERR
+    IF 0 THEN DIM K$[0],V$[0]
+    LoadConfigFile RESULT$ OUT K$,V$
+    VAR N=FindArray(K$,"name")
+    VAR F=FindArray(K$,"function")
+    IF N!=-1THEN
+     I$=V$[N]
+    ENDIF
+    AddMenuItem MENU,I$,LEN(ARY)
+    PUSH ARY,AllocString(PATH$)
+   ELSE
+    AddMenuItem MENU,I$,LEN(ARY)
+    PUSH ARY,AllocString(PATH$)
+   ENDIF
+  ENDIF
+ NEXT
+END
 COMMON DEF I_TSKBAR
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -8482,6 +8730,9 @@
   NewControl "TSKBAR" OUT TSKBARCTL,E
   E=SetControlPainter(TSKBARCTL,"TSKBARP")
   E=SetControlNotificationHandler(TSKBARCTL,"TSKBARNotificationHandler")
+  TSKBAR_MENU_EXIT=&H1178
+  TSKBAR_WV_MENU=1
+  TSKBAR_WV_PRGITEMS=2
  ENDIF
  VAR SW=GetWindowWidth(GetRootWindow())
  VAR SH=GetWindowHeight(GetRootWindow())
@@ -8496,13 +8747,26 @@
  TB_TASKLIST$=NewArray$(TCM)
  TB_TASKLIST_WND=NewArray(TCM)
  TB_TASKLIST_TW=NewArray(TCM)
-  NewWindow GetToggleButtonControl(),"",1,3,TSX-3,11,WND,0OUT TW,E
+ NewWindow GetButtonControl(),"",1,3,TSX-3,11,WND,0OUT TW,E
  FOR TC=0TO TCM-1
   NewWindow GetToggleButtonControl(),"Task"+STR$(TC),TSKW*TC+TC*2+TSX,3,TSKW,11,WND,WindowHideFlag()OUT TW,E
   SetButtonAlignLeft TW
   TB_TASKLIST_WND[TC]=TW
  NEXT
  SetWindowVar WND,0,TW
+ VAR PRG$=CombinePath$(GetHomeDir$(),"programs")
+ VAR MENU,PMENU
+ NewMenu OUT MENU,E
+ DIM ARY[0]
+ TSKBAR_CONTRUCTMENU PRG$,ARY OUT PMENU
+ AddMenuItem MENU,"",-1
+ AddSubMenuItem MENU,"Program",PMENU
+ AddMenuItemSeparator MENU
+ AddMenuItem MENU,"Exit",TSKBAR_MENU_EXIT
+ SetWindowVar WND,TSKBAR_WV_MENU,MENU
+ VAR ARYI=AllocSBArray()
+ SetSBArray ARYI,ARY
+ SetWindowVar WND,TSKBAR_WV_PRGITEMS,ARYI
 END
 DEF UPDATE_TSKBAR
  VAR TSKW=84,TC,TSX=24,TCM=LEN(TB_TASKLIST_TW)
@@ -8567,10 +8831,10 @@
 VAR TSKBAR_TIMER
 VAR TSKBAR_CWND
 COMMON DEF L_TSKBAR
- IF TSKBAR_TIMER!=MAINCNT THEN
+ IF TSKBAR_TIMER!=MAINCNT DIV 10THEN
   UPDATE_TSKBAR
 '  TSKBAR_CWND=OCW
-  TSKBAR_TIMER=MAINCNT DIV 100
+  TSKBAR_TIMER=MAINCNT DIV 10
  ENDIF
  VAR E=UpdateWindow(GetProcessVar())
  IF E THEN ExitProcess 0
@@ -9191,8 +9455,13 @@
  ENDIF
  VAR IM,ERR
  NewIM OUT IM,ERR
+ IF ERR THEN
+  ExitProcess ERR
+  RETURN
+ ENDIF
  ERR=SetIMKeyHandler(IM,"TESTIM_KEY")
  SetProcessVar IM
+ KEY 1,"KEY OFF"
 END
 COMMON DEF L_TESTIM
  VAR X,Y,MMM
@@ -9210,6 +9479,7 @@
  IF!MMM THEN OTW_ENKEY_STATE=0
  IF ProcessIM(GetProcessVar())THEN
   VOID DeleteIM(GetProcessVar())
+  ExitProcess 0
  ENDIF
 END
 VAR OTWTERMCTL
@@ -9585,4 +9855,85 @@
 COMMON DEF L_ODE
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 0
 END
+COMMON DEF I_LINKOPEN
+ VAR CMD$,FIL$,I
+ GetCommandArg GetProcessArgs$(),I OUT CMD$,I
+ GetCommandArg GetProcessArgs$(),I OUT FIL$,I
+ IF I!=-1THEN
+  VAR C2$=GetProcessArgs$()
+  C2$=MID$(C2$,I,LEN(C2$))
+ ENDIF
+ VAR ERR
+ VAR RESULT$
+ LoadFile FIL$ OUT RESULT$,ERR
+ IF ERR THEN
+  ExitProcess ERR
+  RETURN
+ ENDIF
+ IF 0 THEN DIM K$[0],V$[0]
+ LoadConfigFile RESULT$ OUT K$,V$
+ VAR F=FindArray(K$,"function")
+ IF F!=-1THEN
+  VAR P
+  NewProcess V$[F],C2$ OUT P,ERR
+  ExitProcess ERR
+  RETURN
+ ENDIF
+ ExitProcess 1
+END
+COMMON DEF L_LINKOPEN
+END
 
+VAR OTWBENCHCTL
+VAR OTWBENCH_MENU_NEW
+COMMON DEF OTWBENCHNOTIF WND,C,T,A1,A2
+ IF A1==MenuNotifID()THEN
+  IF A2==OTWBENCH_MENU_NEW THEN
+   SetWindowVar WND,0,0
+   SetWindowVar WND,1,0
+   SetWindowVar WND,2,TRUE
+   VOID RepaintWindow(WND)
+  ENDIF
+ ENDIF
+END
+COMMON DEF OTWBENCHPAINTER WND,C,T,XY,WH
+ VAR E=CallBaseControlHandler(WND,C,T,XY,WH)
+ IF GetWindowVar(WND,2)THEN
+  VAR M=GetWindowVar(WND,0)
+  IF!M THEN
+   M=MILLISEC+2000
+   SetWindowVar WND,0,M
+  ENDIF
+  IF M>=MILLISEC THEN
+   VOID RepaintWindow(WND)
+  ENDIF
+  SetWindowVar WND,1,GetWindowVar(WND,1)+1
+ ENDIF
+ IF GBeginWindow(WND)THEN RETURN
+  GPRINTWindow WND,0,0,STR$(GetWindowVar(WND,1)),#BLACK
+ IF GEndWindow(WND)THEN RETURN
+END
+COMMON DEF I_OTWBENCH
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWBENCHCTL THEN
+  ExtendControl "Benchmark",GetWindowControl() OUT OTWBENCHCTL,E
+  E=SetControlPainter(OTWBENCHCTL,"OTWBENCHPAINTER")
+  E=SetControlNotifHandler(OTWBENCHCTL,"OTWBENCHNOTIF")
+  OTWBENCH_MENU_NEW=1
+ ENDIF
+ VAR MENU
+ NewTopLevelStyleWindow OTWBENCHCTL,"Benchmark",128,64,WINDOWMENUSTYLE() OUT WND,E
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"New",OTWBENCH_MENU_NEW
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ SetProcessVar WND
+END
+COMMON DEF L_OTWBENCH
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
diff -u OTW.TXT OTW28
--- OTW.TXT
+++ OTW28
@@ -663,6 +663,7 @@
  FOR I=0TO LEN(TEXT$)-1
   VOID SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(TEXT$[I]))
  NEXT
+ RETURN 0
 END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
@@ -1256,6 +1257,7 @@
  RETURN WID<<12OR NUWID
 END
 DEF NUWIDToWND(NUWID)
+ IF!NUWID THEN RETURN 0
  RETURN WIN_WID[NUWID]<<12OR NUWID
 END
 'WND2 Join WND Group
@@ -2704,6 +2706,9 @@
  WEND
  RETURN 0
 END
+COMMON DEF GetActiveWindow()
+ RETURN NUWIDToWND(WIN_ACTIVENUWID)
+END
 COMMON DEF GetMouseX()
  RETURN OTW_MOUSEX
 END
@@ -2770,6 +2775,11 @@
 COMMON DEF GetTextWidth(STR$)
  RETURN LEN(STR$)*8
 END
+COMMON DEF GetOwnerWindow(WND)
+ VAR GO=GetWindowGroupOwner(WND)
+ IF GO THEN RETURN GO
+ RETURN GetParentWindow(WND)
+END
 COMMON DEF GetParentWindow(WND)
  IF!CheckWindow(WND)THEN
   RETURN 0
@@ -3887,9 +3897,9 @@
   VOID GEndWindow(WND)
  ENDIF
  IF T==CTL_LDBLCLKHANDLER THEN
-  VOID SendNotifWindow(GetParentWindow(WND),WND,0)
+  VOID SendNotifWindow(GetOwnerWindow(WND),WND,0)
  ELSEIF GetWindowVar(WND,6)THEN
-  VOID SendNotifWindow(GetParentWindow(WND),WND,1)
+  VOID SendNotifWindow(GetOwnerWindow(WND),WND,1)
  ENDIF
 END
 COMMON DEF ListBoxChItem()
@@ -4586,7 +4596,7 @@
   CLS
   LOCATE 0,29
 ' NewProcess"LAUNCHER","" OUT E,E
-  NewProcess"TESTIM","" OUT E,E
+  NewProcess"RIM","" OUT E,E
   NewProcess"ODE","" OUT E,E
  ENDIF
 RETURN
@@ -8701,16 +8711,7 @@
    VAR EXT$=GetFileExtension$(I$)
    ToUpper EXT$
    IF EXT$=="LNK"THEN
-    VAR RESULT$
-    LoadFile PATH$ OUT RESULT$,ERR
-    IF 0 THEN DIM K$[0],V$[0]
-    LoadConfigFile RESULT$ OUT K$,V$
-    VAR N=FindArray(K$,"name")
-    VAR F=FindArray(K$,"function")
-    IF N!=-1THEN
-     I$=V$[N]
-    ENDIF
-    AddMenuItem MENU,I$,LEN(ARY)
+    AddMenuItem MENU,GetFileNameWithoutExt$(I$),LEN(ARY)
     PUSH ARY,AllocString(PATH$)
    ELSE
     AddMenuItem MENU,I$,LEN(ARY)
@@ -9482,6 +9483,516 @@
   ExitProcess 0
  ENDIF
 END
+VAR RIM_MODE,RIM_KEYBUF$
+VAR RIM_CTL
+DEF RIM_ISROMA(C)
+ RETURN (C>=65&&C<=65+26)||(C>=97&&C<=97+26)
+END
+'aeiuo
+DEF RIM_ISVOWEL(C)
+ IF C>=97&&C<=97+26THEN C=C-32
+ RETURN C==65||C==69||C==73||C==79||C==85
+END
+DEF RIM_VOWEL$(C)
+ IF C>=97&&C<=97+26THEN C=C-32
+ IF C==65THEN RETURN"あ"
+ IF C==69THEN RETURN"え"
+ IF C==73THEN RETURN"い"
+ IF C==79THEN RETURN"お"
+ IF C==85THEN RETURN"う"
+ RETURN""
+END
+DEF RIM_ADD_DAKUTEN$(K$)
+ RETURN CHR$(ASC(K$)+1)
+END
+DEF RIM_ADD_HDAKUTEN$(K$)
+ RETURN CHR$(ASC(K$)+2)
+END
+DEF RIM_SMALL$(K$)
+ RETURN CHR$(ASC(K$)-1)
+END
+DEF RIM_HIRA$(C$,V$)
+ IF C$==""THEN@A
+ IF C$=="K"THEN@KA
+ IF C$=="Q"THEN@QA
+ IF C$=="C"THEN@CA
+ IF C$=="G"THEN RETURN RIM_ADD_DAKUTEN$(RIM_HIRA$("K",V$))
+ IF C$=="S"THEN@SA
+ IF C$=="Z"THEN RETURN RIM_ADD_DAKUTEN$(RIM_HIRA$("S",V$))
+ IF C$=="SH"THEN@SHA
+ IF C$=="T"THEN@TA
+ IF C$=="D"THEN RETURN RIM_ADD_DAKUTEN$(RIM_HIRA$("T",V$))
+ IF C$=="CH"THEN@CHA
+ IF C$=="N"THEN@NA
+ IF C$=="H"THEN@HA
+ IF C$=="F"THEN@FA
+ IF C$=="B"THEN RETURN RIM_ADD_DAKUTEN$(RIM_HIRA$("H",V$))
+ IF C$=="P"THEN RETURN RIM_ADD_HDAKUTEN$(RIM_HIRA$("H",V$))
+ IF C$=="M"THEN@MA
+ IF C$=="Y"THEN@YA
+ IF C$=="R"THEN@RA
+ IF C$=="W"THEN@WA
+ IF C$=="J"THEN@JA
+ RETURN C$+V$
+ @A
+ IF V$=="A"THEN RETURN"あ"
+ IF V$=="I"THEN RETURN"い"
+ IF V$=="U"THEN RETURN"う"
+ IF V$=="E"THEN RETURN"え"
+ IF V$=="O"THEN RETURN"お"
+ RETURN C$+V$
+ @KA
+ IF V$=="A"THEN RETURN"か"
+ IF V$=="I"THEN RETURN"き"
+ IF V$=="U"THEN RETURN"く"
+ IF V$=="E"THEN RETURN"け"
+ IF V$=="O"THEN RETURN"こ"
+ RETURN C$+V$
+ @QA
+ IF V$=="A"THEN RETURN"くぁ"
+ IF V$=="I"THEN RETURN"くぃ"
+ IF V$=="U"THEN RETURN"く"
+ IF V$=="E"THEN RETURN"くぇ"
+ IF V$=="O"THEN RETURN"くぉ"
+ RETURN C$+V$
+ @CA
+ IF V$=="I"THEN RETURN"し"
+ IF V$=="E"THEN RETURN"せ"
+ GOTO @KA
+ @SA
+ IF V$=="A"THEN RETURN"さ"
+ IF V$=="I"THEN RETURN"し"
+ IF V$=="U"THEN RETURN"す"
+ IF V$=="E"THEN RETURN"せ"
+ IF V$=="O"THEN RETURN"そ"
+ RETURN C$+V$
+ @SHA
+ IF V$=="A"THEN RETURN"しゃ"
+ IF V$=="I"THEN RETURN"し"
+ IF V$=="U"THEN RETURN"しゅ"
+ IF V$=="E"THEN RETURN"しぇ"
+ IF V$=="O"THEN RETURN"しょ"
+ RETURN C$+V$
+ @TA
+ IF V$=="A"THEN RETURN"た"
+ IF V$=="I"THEN RETURN"ち"
+ IF V$=="U"THEN RETURN"つ"
+ IF V$=="E"THEN RETURN"て"
+ IF V$=="O"THEN RETURN"と"
+ RETURN C$+V$
+ @CHA
+ IF V$=="A"THEN RETURN"ちゃ"
+ IF V$=="I"THEN RETURN"ち"
+ IF V$=="U"THEN RETURN"ちゅ"
+ IF V$=="E"THEN RETURN"ちぇ"
+ IF V$=="O"THEN RETURN"ちょ"
+ RETURN C$+V$
+ @NA
+ IF V$=="A"THEN RETURN"な"
+ IF V$=="I"THEN RETURN"に"
+ IF V$=="U"THEN RETURN"ぬ"
+ IF V$=="E"THEN RETURN"ね"
+ IF V$=="O"THEN RETURN"の"
+ RETURN C$+V$
+ @HA
+ IF V$=="A"THEN RETURN"は"
+ IF V$=="I"THEN RETURN"ひ"
+ IF V$=="U"THEN RETURN"ふ"
+ IF V$=="E"THEN RETURN"へ"
+ IF V$=="O"THEN RETURN"ほ"
+ RETURN C$+V$
+ @FA
+ IF V$=="A"THEN RETURN"ふぁ"
+ IF V$=="I"THEN RETURN"ふぃ"
+ IF V$=="U"THEN RETURN"ふ"
+ IF V$=="E"THEN RETURN"ふぇ"
+ IF V$=="O"THEN RETURN"ふぉ"
+ RETURN C$+V$
+ @MA
+ IF V$=="A"THEN RETURN"ま"
+ IF V$=="I"THEN RETURN"み"
+ IF V$=="U"THEN RETURN"む"
+ IF V$=="E"THEN RETURN"め"
+ IF V$=="O"THEN RETURN"も"
+ RETURN C$+V$
+ @YA
+ IF V$=="A"THEN RETURN"や"
+ IF V$=="I"THEN RETURN"い"
+ IF V$=="U"THEN RETURN"ゆ"
+ IF V$=="E"THEN RETURN"いぇ"
+ IF V$=="O"THEN RETURN"よ"
+ RETURN C$+V$
+ @RA
+ IF V$=="A"THEN RETURN"ら"
+ IF V$=="I"THEN RETURN"り"
+ IF V$=="U"THEN RETURN"る"
+ IF V$=="E"THEN RETURN"れ"
+ IF V$=="O"THEN RETURN"ろ"
+ RETURN C$+V$
+ @WA
+ IF V$=="A"THEN RETURN"わ"
+ IF V$=="I"THEN RETURN"うぃ"
+ IF V$=="U"THEN RETURN"う"
+ IF V$=="E"THEN RETURN"うぇ"
+ IF V$=="O"THEN RETURN"を"
+ @JA
+ IF V$=="A"THEN RETURN"じゃ
+ IF V$=="I"THEN RETURN"じ"
+ IF V$=="U"THEN RETURN"じゅ"
+ IF V$=="E"THEN RETURN"じぇ"
+ IF V$=="O"THEN RETURN"じょ"
+ RETURN C$+V$
+END
+DEF RIM_ROMA$(C$,V$)
+ VAR D$=TOUPPER$(C$)
+ VAR W$=TOUPPER$(V$)
+ VAR S$,P$
+ IF LEN(D$)>1&&RIGHT$(D$,1)=="Y"&&RIGHT$(D$,2)!="YY"THEN
+  IF D$[0]!="X"&&D$[0]!="L"THEN
+   D$=LEFT$(D$,LEN(D$)-1)
+   IF W$=="A"THEN S$="ゃ"
+   IF W$=="I"THEN S$="ぃ"
+   IF W$=="U"THEN S$="ゅ"
+   IF W$=="E"THEN S$="ぇ"
+   IF W$=="O"THEN S$="ょ"
+   W$="I"
+  ENDIF
+ ENDIF
+ IF LEN(D$)>1&&(MID$(D$,LEN(D$)-2,1)==RIGHT$(D$,1))THEN
+  D$=LEFT$(D$,LEN(D$)-1)
+  P$="っ"
+ ENDIF
+ IF LEN(D$)>1&&LEFT$(D$,2)!="NN"&&LEFT$(D$,1)=="N"&&!RIM_ISVOWEL(ASC(MID$(D$,1,1)))THEN
+  D$=MID$(D$,1,LEN(D$))
+  INC P$,"ん"
+ ENDIF
+ IF RIGHT$(D$,3)=="SSH"||RIGHT$(D$,3)=="CCH"THEN
+  RemoveStrB D$,LEN(D$)-2,1
+  P$="っ"
+ ENDIF
+ 
+ VAR R$
+ IF LEN(D$)&&D$[0]=="L"||D$[0]=="X"THEN
+  R$=RIM_HIRA$(MID$(D$,1,LEN(D$)),V$)
+  IF R$=="いぇ"THEN
+   R$="ゅ"
+  ELSE
+   R$=RIM_SMALL$(R$)
+  ENDIF
+ ELSE
+  R$=RIM_HIRA$(D$,W$)
+ ENDIF
+ RETURN P$+R$+S$
+END
+DEF RIM_K$(K$)
+ IF RIM_MODE!=3&&RIM_MODE!=2THEN RETURN K$
+ VAR I
+ FOR I=0TO LEN(K$)-1
+  VAR KI$=K$[I]
+  IF RIM_MODE==3&&KI$>="ぁ"&&KI$<="ん"THEN
+   K$[I]=CHR$(ASC(K$[I])+96)
+   CONTINUE
+  ENDIF
+  IF KI$=="-"THEN K$[I]="ー"CONTINUE
+  IF KI$=="."THEN K$[I]="。"CONTINUE
+  IF KI$==","THEN K$[I]="、"CONTINUE
+ NEXT
+ RETURN K$
+END
+VAR RIM_BUF2$
+VAR RIM_WND
+DEF RIM_SENDKEY(IM,K$)
+ SetWindowName RIM_WND,RIM_BUF2$
+ VOID RepaintWindow(RIM_WND)
+ VOID ShowWindow(RIM_WND)
+ PUSH RIM_BUF2$,K$
+END
+DIM RIM_CURBUNSETSU$[0]
+DIM RIM_CURTXT$[0]
+VAR RIM_CONVF
+VAR RIM_SELBUNSETSU
+VAR RIM_CANDWND
+VAR RIM_TARGETWND
+DEF RIM_SEND(IM)
+ VOID FocusWindow(RIM_TARGETWND)
+ RIM_TARGETWND=0
+ IF!LEN(RIM_BUF2$)THEN
+  VOID HideWindow(RIM_WND)
+  VOID DeleteWindow(RIM_CANDWND)
+  IF LEN(RIM_KEYBUF$)THEN
+   VAR RK$=RIM_KEYBUF$
+   RIM_KEYBUF$=""
+   RETURN SendIMText(IM,RK$)
+  ENDIF
+  RETURN SendIMText(IM,CR$())
+ ENDIF
+ IF RIM_CONVF THEN
+  RIM_CONVF=0
+  VAR ERR=SendIMText(IM,Join$(RIM_CURTXT$,""))
+ ELSE
+  ERR=SendIMText(IM,RIM_BUF2$+RIM_KEYBUF$)
+  RIM_KEYBUF$=""
+ ENDIF
+ VOID HideWindow(RIM_WND)
+ VOID DeleteWindow(RIM_CANDWND)
+ RIM_CANDWND=0
+ RIM_BUF2$=""
+ RETURN ERR
+END
+DEF RIM_CALC_X()
+ VAR X,I
+ FOR I=0TO LEN(RIM_CURTXT$)-1
+  IF I==RIM_SELBUNSETSU THEN
+   RETURN X
+  ENDIF
+  X=X+LEN(RIM_CURTXT$[I])*8
+ NEXT
+ RETURN X
+END
+DEF RIM_MAXLEN(A$)
+ VAR I,M=&H80000000
+ FOR I=0TO LEN(A$)-1
+  IF M<LEN(A$[I])THEN
+   M=LEN(A$[I])
+  ENDIF
+ NEXT
+ RETURN M
+END
+DEF RIM_ENTER(IM)
+ IF!LEN(RIM_BUF2$)THEN
+  VAR RK$=RIM_KEYBUF$
+  RIM_KEYBUF$=""
+  RETURN SendIMText(IM,RK$+" ")
+ ENDIF
+ IF RIM_CONVF THEN
+  DIM CAND$[0]
+  OTYIME_GETCAND RIM_CURBUNSETSU$[RIM_SELBUNSETSU] OUT CAND$
+  VAR RW=GetParentWindow(RIM_WND),E
+  VAR Y=GetWindowHeight(RW)-64-8
+  VAR W=RIM_MAXLEN(CAND$)*8+12
+  VAR X=MIN(RW-W,RIM_CALC_X())
+  VAR H=63
+  IF RIM_CANDWND THEN
+   ClearListBox RIM_CANDWND
+   E=MoveResizeWindow(RIM_CANDWND,X,Y,W,H)
+  ELSE
+   NewWindow GetListBoxControl(),"",X,Y,W,H,RW,WindowFrontFlag() OUT RIM_CANDWND,E
+   JoinWindowGroup RIM_WND,RIM_CANDWND OUT E
+  ENDIF
+  VAR I
+  FOR I=0TO LEN(CAND$)-1
+   AddListBoxItem RIM_CANDWND,CAND$[I]
+  NEXT
+  RETURN 0
+ ENDIF
+ RIM_CONVF=TRUE
+ IF 0 THEN DIM A$[0],B$[0]
+ OTYIME_K2K RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
+ RIM_KEYBUF$=""
+ RIM_CURTXT$=A$
+ RIM_CURBUNSETSU$=B$
+ RIM_SELBUNSETSU=0
+ RIM_BUF2$=Join$(A$,"")
+ SetWindowName RIM_WND,RIM_BUF2$
+ VOID RepaintWindow(RIM_WND)
+ VOID ShowWindow(RIM_WND)
+ RETURN 0'ERR
+END
+DEF RIM_KEY IM,KEY
+ IF!RIM_MODE THEN RETURN
+ IF RIM_MODE==1THEN
+  VOID SendIMText(IM,CHR$(KEY))
+  RETURN
+ ENDIF
+ IF!LEN(RIM_BUF2$)&&KEY==8THEN
+  VOID SendIMText(IM,CHR$(KEY))
+  RETURN
+ ENDIF
+ IF KEY==13THEN
+  VOID RIM_SEND(IM)
+  RETURN
+ ENDIF
+ IF KEY==32THEN
+  VOID RIM_ENTER(IM)
+  RETURN
+ ENDIF
+ IF KEY==8 THEN
+  IF LEN(RIM_KEYBUF$)THEN
+   VOID POP(RIM_KEYBUF$)
+  ELSEIF LEN(RIM_BUF2$)THEN
+   VOID POP(RIM_BUF2$)
+   
+  ENDIF
+  SetWindowName RIM_WND,RIM_BUF2$+RIM_KEYBUF$
+  VOID RepaintWindow(RIM_WND)
+  VOID ShowWindow(RIM_WND)
+  RETURN
+ ENDIF
+ IF!RIM_CONVF THEN
+  VAR W=GetActiveWindow()
+  RIM_TARGETWND=W
+ ENDIF
+ IF!RIM_ISROMA(KEY)THEN
+  IF LEN(RIM_KEYBUF$)THEN
+   IF RIGHT$(RIM_KEYBUF$,1)=="N"THEN
+    RIM_KEYBUF$[LEN(RIM_KEYBUF$)-1]=RIM_K$("ん")
+   ENDIF
+   VOID RIM_SENDKEY(IM,RIM_KEYBUF$)
+   RIM_KEYBUF$=""
+  ENDIF
+  VOID RIM_SENDKEY(IM,RIM_K$(CHR$(KEY)))
+  RETURN
+ ENDIF
+ IF RIM_ISVOWEL(KEY)THEN
+  IF LEN(RIM_KEYBUF$)THEN
+   VOID RIM_SENDKEY(IM,RIM_K$(RIM_ROMA$(RIM_KEYBUF$,CHR$(KEY))))
+   RIM_KEYBUF$=""
+   RETURN
+  ENDIF
+  VOID RIM_SENDKEY(IM,RIM_K$(RIM_VOWEL$(KEY)))
+  RETURN
+ ENDIF
+ PUSH RIM_KEYBUF$,CHR$(KEY)
+ SetWindowName RIM_WND,RIM_BUF2$+RIM_KEYBUF$
+ VOID RepaintWindow(RIM_WND)
+ VOID ShowWindow(RIM_WND)
+ IF ToUpper$(RIM_KEYBUF$)=="NN"THEN
+  VOID RIM_SENDKEY(IM,RIM_K$("ん"))
+  RIM_KEYBUF$=""
+  RETURN
+ ENDIF
+END
+VAR RIM_WV_BTNRPT
+COMMON DEF RIMNOTIF WND,CTL,TYP,A1,A2
+ IF A1==RIM_CANDWND THEN
+  VAR T$=GetListBoxSelectedText$(A1)
+  IF!LEN(T$)THEN RETURN
+  RIM_CURTXT$[RIM_SELBUNSETSU]=T$
+  VOID DeleteWindow(A1)
+  RIM_CANDWND=0
+  VOID RepaintWindow(WND)
+ ENDIF
+END
+COMMON DEF RIMBTN WND,CTL,TYP,BTN,__
+ VAR MC=GetWindowVar(WND,RIM_WV_BTNRPT)
+ IF ABS(MC-MAINCNT)<10 THEN
+  RETURN
+ ENDIF
+ VOID DeleteWindow(RIM_CANDWND)
+ RIM_CANDWND=0
+ SetWindowVar WND,RIM_WV_BTNRPT,MAINCNT
+ IF BTN==#LEFT&&RIM_SELBUNSETSU>0 THEN
+  DEC RIM_SELBUNSETSU
+  VOID RepaintWindow(WND)
+ ENDIF
+ IF BTN==#RIGHT&&LEN(RIM_CURTXT$)>RIM_SELBUNSETSU+1 THEN
+  INC RIM_SELBUNSETSU
+  VOID RepaintWindow(WND)
+ ENDIF
+ IF BTN==#UP&&LEN(RIM_CURTXT$)>RIM_SELBUNSETSU+1 THEN
+  PUSH RIM_CURBUNSETSU$[RIM_SELBUNSETSU],RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1][0]
+  IF LEN(RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1])==1THEN
+   COPY RIM_CURTXT$,RIM_SELBUNSETSU+1,RIM_CURTXT$,RIM_SELBUNSETSU+2,LEN(RIM_CURBUNSETSU$)-RIM_SELBUNSETSU-2
+   COPY RIM_CURBUNSETSU$,RIM_SELBUNSETSU+1,RIM_CURBUNSETSU$,RIM_SELBUNSETSU+2,LEN(RIM_CURBUNSETSU$)-RIM_SELBUNSETSU-2
+   VOID POP(RIM_CURBUNSETSU$)
+   VOID POP(RIM_CURTXT$)
+   RIM_CURTXT$[RIM_SELBUNSETSU]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU]
+  ELSE
+   VOID SHIFT(RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1])
+   RIM_CURTXT$[RIM_SELBUNSETSU]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU]
+   RIM_CURTXT$[RIM_SELBUNSETSU+1]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1]
+  ENDIF
+  VOID RepaintWindow(WND)
+ ENDIF
+ IF BTN==#DOWN THEN
+  IF LEN(RIM_CURBUNSETSU$[RIM_SELBUNSETSU])==1THEN RETURN
+  IF LEN(RIM_CURTXT$)==RIM_SELBUNSETSU+1THEN
+   PUSH RIM_CURTXT$,""
+   PUSH RIM_CURBUNSETSU$,""
+  ENDIF
+  UNSHIFT RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1],POP(RIM_CURBUNSETSU$[RIM_SELBUNSETSU])
+  RIM_CURTXT$[RIM_SELBUNSETSU]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU]
+  RIM_CURTXT$[RIM_SELBUNSETSU+1]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1]
+  VOID RepaintWindow(WND)
+ ENDIF
+END
+COMMON DEF RIMPAINT WND,CTL,TYP,XY,WH
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,-1
+ IF RIM_CONVF THEN
+  VAR I,L=LEN(RIM_CURTXT$)-1,X
+  FOR I=0TO L
+   VAR C$=RIM_CURTXT$[I]
+   IF RIM_SELBUNSETSU==I THEN
+    GFILLWindow WND,X,0,X+LEN(C$)*8-1,7,GetSelectionColor()
+    GPRINTWindow WND,X,0,C$,GetSelectionTextColor()
+   ELSE
+    GPRINTWindow WND,X,0,C$,#BLACK
+   ENDIF
+   X=X+LEN(C$)*8
+  NEXT
+ ELSE
+  GPRINTWindow WND,0,0,GetWindowName$(WND),#BLACK
+ ENDIF
+ IF GEndWindow(WND)THEN RETURN
+END
+COMMON DEF I_RIM
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ NewControl "RIM" OUT RIM_CTL,E
+ E=SetControlPainter(RIM_CTL,"RIMPAINT")
+ E=SetControlButtonHandler(RIM_CTL,"RIMBTN")
+ E=SetControlNotifHandler(RIM_CTL,"RIMNOTIF")
+ VAR RWND=GetRootWindow()
+ VAR WND
+ NewWindow RIM_CTL,"",0,GetWindowHeight(RWND)-7,GetWindowWidth(RWND),7,RWND,WindowFrontFlag() OUT WND,E
+ VOID HideWindow(WND)
+ RIM_WND=WND
+ VAR IM,ERR
+ NewIM OUT IM,ERR
+ IF ERR THEN
+  ExitProcess ERR
+  RETURN
+ ENDIF
+ ERR=SetIMKeyHandler(IM,"RIM_KEY")
+ 
+ SetProcessVar IM
+ KEY 1,"KEY OFF"
+ EXEC 2
+ OTYIME_INIT
+ CLS
+END
+COMMON DEF L_RIM
+ VAR X,Y,MMM
+ TOUCH OUT MMM,X,Y
+ IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
+  OTW_ENKEY_STATE=1
+  RIM_MODE=(RIM_MODE+1)MOD 4
+  IF RIM_MODE==1 THEN
+   KEY 1,"KEY ON"
+  ELSEIF RIM_MODE==2THEN
+   KEY 1,"かな ON"
+  ELSEIF RIM_MODE==3THEN
+   KEY 1,"カナ ON"
+  ELSE
+   KEY 1,"KEY OFF"
+  ENDIF
+  BEEP 9
+ ENDIF
+ IF!MMM THEN OTW_ENKEY_STATE=0
+ IF ProcessIM(GetProcessVar())THEN
+  VOID DeleteIM(GetProcessVar())
+  ExitProcess 0
+ ENDIF
+ IF RIM_CONVF THEN VOID ActiveWindow(RIM_WND)
+ IF UpdateWindow(RIM_WND)THEN
+  RETURN
+ ENDIF
+END
 VAR OTWTERMCTL
 DIM OTWTERMCOLORTBL[0]
 COMMON DEF OTWTERMKEY WND,CTL,TYP,A1,A2
@@ -9901,11 +10412,13 @@
  IF GetWindowVar(WND,2)THEN
   VAR M=GetWindowVar(WND,0)
   IF!M THEN
-   M=MILLISEC+2000
+   M=MILLISEC+5000
    SetWindowVar WND,0,M
   ENDIF
   IF M>=MILLISEC THEN
    VOID RepaintWindow(WND)
+  ELSE
+   SetWindowVar WND,2,FALSE
   ENDIF
   SetWindowVar WND,1,GetWindowVar(WND,1)+1
  ENDIF
@@ -9927,7 +10440,7 @@
   OTWBENCH_MENU_NEW=1
  ENDIF
  VAR MENU
- NewTopLevelStyleWindow OTWBENCHCTL,"Benchmark",128,64,WINDOWMENUSTYLE() OUT WND,E
+ NewTopLevelStyleWindow OTWBENCHCTL,"Benchmark",128,32,WINDOWMENUSTYLE() OUT WND,E
  NewMenu OUT MENU,E
  AddMenuItem MENU,"New",OTWBENCH_MENU_NEW
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
diff -u OTW.TXT OTW29
--- OTW.TXT
+++ OTW29
@@ -73,6 +73,10 @@
 DIM WIN_HIDE   [0]
 DIM WIN_MINW   [0]
 DIM WIN_MINH   [0]
+'for IM
+DIM WIN_CURX   [0]
+DIM WIN_CURY   [0]
+DIM WIN_IM     [0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
 VAR WIN_MSGARGSIZE
@@ -110,6 +114,7 @@
 VAR WIN_STYLE_TRANS
 VAR WIN_STYLE_HIDE
 VAR WIN_STYLE_OWNERDRAW
+VAR WIN_STYLE_MINMAX
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -134,6 +139,7 @@
  WIN_STYLE_TRANS=4
  WIN_STYLE_HIDE=8
  WIN_STYLE_OWNERDRAW=16
+ WIN_STYLE_MINMAX=32
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -188,6 +194,9 @@
  WIN_STYLE     =NewArray(WIN_MAX)
  WIN_IMAGE     =NewArray(WIN_MAX)
  WIN_BACKGND   =NewArray(WIN_MAX)
+ WIN_CURX      =NewArray(WIN_MAX)
+ WIN_CURY      =NewArray(WIN_MAX)
+ WIN_IM        =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -305,6 +314,7 @@
  E=AssociateFile("*","PRG","PRGED")
  E=AssociateFile("*","MML","MPLAY")
  E=AssociateFile("*","LNK","LINKOPEN")
+ E=AssociateFile("*","DOC","OTYDOC")
  E=AssociateFile("/","","OTYFIL")
 END
 DEF GetAssociatedIndex(TYP$,EXT$)
@@ -403,6 +413,7 @@
 VAR CTL_MSLEAVEHANDLER
 VAR CTL_RESIZEHANDLER
 VAR CTL_FRMPAINTHANDLER
+VAR CTL_CHLDWNDHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -429,7 +440,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=19
+ CTL_HANDLER_MAX=20
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -470,6 +481,7 @@
  CTL_MSLEAVEHANDLER=16
  CTL_RESIZEHANDLER=17
  CTL_FRMPAINTHANDLER=18
+ CTL_CHLDWNDHANDLER=19
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -485,6 +497,7 @@
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
  E=SetControlChFocusHandler(CTL_WINDOWCTL,"WindowChFocus")
+ E=SetControlChildWindowHandler(CTL_WINDOWCTL,"WindowChildWindow")
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_BUTTONCTL,"ToggleButtonLMouseDown")
@@ -525,6 +538,7 @@
  E=SetControlPainter(CTL_DRPDWNCTL,"DropDownListPainter")
  E=SetControlLMouseDownHandler(CTL_DRPDWNCTL,"DropDownListLMD")
  E=SetControlLMouseUpHandler(CTL_DRPDWNCTL,"DropDownListLMU")
+ E=SetControlNotifHandler(CTL_DRPDWNCTL,"DropDownListNotif")
 
  ExtendControl "DROPDOWNLISTBOX",GetListBoxControl() OUT CTL_DRPDWNBOXCTL,E
  E=SetControlChFocusHandler(CTL_DRPDWNBOXCTL,"DropDownListBoxChFocus")
@@ -560,6 +574,7 @@
  E=SetControlLDoubleClickHandler(CTL_LSTBOXCTL,"ListBoxLMD")
  E=SetControlDeleteHandler(CTL_LSTBOXCTL,"ListBoxDelete")
  E=SetControlResizeHandler(CTL_LSTBOXCTL,"ListBoxResize")
+ E=SetControlButtonHandler(CTL_LSTBOXCTL,"ListBoxButton")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -730,6 +745,7 @@
  CTL_CID[CTL AND 4095]=CTL_CIDCNT
  CTL_NEXT[CTL AND 4095]=0
  CTL_NAME$[CTL AND 4095]=NAME$
+ CTL_HANDLER$[CTL AND 4095,CTL_CHLDWNDHANDLER]="ControlDefChildWinHandler"
 END
 COMMON DEF ExtendControl NAME$,PARENT OUT CTL,ERR
  IF!CheckControl(PARENT)THEN
@@ -879,6 +895,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_RESIZEHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlChildWindowHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_CHLDWNDHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -1414,36 +1435,21 @@
    ELSE
     WIN_CHILD[PNUWID]=NUWID
    ENDIF
-   OTW_DrawMap NUWID
+   OTW_UpdateMap NUWID
   ELSE
    N=WIN_CHILD[PNUWID]
    WIN_CHILD[PNUWID]=NUWID
-   OTW_DrawMap NUWID
+   OTW_UpdateMap NUWID
    IF N THEN
     WIN_NEXT[NUWID]=N
     WIN_PREV[N]=NUWID
-    VAR B=NUWID
-    WHILE B
-     OTW_DrawMap B
-     IF WIN_CHILD[B]THEN
-      B=WIN_CHILD[B]
-      CONTINUE
-     ENDIF
-     IF!WIN_NEXT[B]THEN
-      WHILE B
-       B=WIN_PARENT[B]
-       IF B==PNUWID THEN BREAK
-       IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
-      WEND
-      IF B==PNUWID THEN BREAK
-     ENDIF
-     B=WIN_NEXT[B]
-     IF B==PNUWID THEN BREAK
-    WEND
    ENDIF
   ENDIF
  ENDIF
  WIN_MSGS[NUWID]=0
+ WIN_CURX[NUWID]=0
+ WIN_CURY[NUWID]=0
+ WIN_IM[NUWID]=FALSE
  VOID RepaintWindow(WND)
  IF PARENT==WIN_ROOTWND THEN
   SPAllocWindow WND
@@ -1518,6 +1524,9 @@
 COMMON DEF WindowHideStyle()
  RETURN 8
 END
+COMMON DEF WindowMinMaxStyle()
+ RETURN WIN_STYLE_MINMAX
+END
 VAR WIN_TopLevelX2
 DEF IncTopLevelPos NUCID
  INC WIN_TopLevelX,CTL_FH1[NUCID]-1
@@ -1905,7 +1914,7 @@
  WIN_NAME$[NUWID]=""
  IF WIN_SP[NUWID]THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
-  IF OTW_ENABLE_SHADOW THEN
+  IF OTW_ENABLE_SHADOW&&SPVAR(WIN_SP[NUWID]AND 511,1)!=-1THEN
    SPVAR SPVAR(WIN_SP[NUWID]AND 511,1),0,0
    SPCLR SPVAR(WIN_SP[NUWID]AND 511,1)
   ENDIF
@@ -2023,11 +2032,12 @@
     SPANIM WIN_SP[NUWID]AND 511,6,-10,RGB(128,128,128),-10,RGB(255,255,255)
    ENDIF
    E=FrontWindow(NUWIDToWND(G))
+   E=ActiveWindow(NUWIDToWND(G))
    HASMODAL=TRUE
   ENDIF
   G=WIN_GNEXT[G]
  WEND
- IF!HASMODAL THEN E=ActiveWindow(WND)
+' IF!HASMODAL THEN E=ActiveWindow(WND)
  RETURN 0
 END
 
@@ -2165,6 +2175,26 @@
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
+DEF OTW_UpdateMap NUWID
+ WHILE NUWID
+  OTW_DrawMap NUWID
+  IF WIN_CHILD[NUWID]THEN
+   NUWID=WIN_CHILD[NUWID]
+   CONTINUE
+  ENDIF
+  IF!WIN_NEXT[NUWID]THEN
+   WHILE NUWID
+    NUWID=WIN_PARENT[NUWID]
+    IF WIN_NEXT[NUWID]THEN
+     NUWID=WIN_NEXT[NUWID]
+     BREAK
+    ENDIF
+   WEND
+   CONTINUE
+  ENDIF
+  NUWID=WIN_NEXT[NUWID]
+ WEND
+END
 COMMON DEF ShowWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -2175,21 +2205,51 @@
    OTW_SPSHOW NUWID
    OTW_SPCHR NUWID
   ENDIF
+  ShowChildWindow NUWID
  ELSE
   RETURN 0
  ENDIF
- OTW_DrawMap NUWID
+ OTW_UpdateMap NUWID
  RETURN RepaintWindow(WND)
 END
+DEF HideChildWindow NUWID
+ VAR C=WIN_CHILD[NUWID]
+ WHILE C
+  IF WIN_STYLE[C] AND WIN_STYLE_HIDE THEN
+   C=WIN_NEXT[C]
+   CONTINUE
+  ENDIF
+  WIN_HIDE[C]=TRUE
+  HideChildWindow C
+  C=WIN_NEXT[C]
+ WEND
+END
+DEF ShowChildWindow NUWID
+ VAR C=WIN_CHILD[NUWID]
+ WHILE C
+  IF WIN_STYLE[C] AND WIN_STYLE_HIDE THEN
+   C=WIN_NEXT[C]
+   CONTINUE
+  ENDIF
+  WIN_HIDE[C]=FALSE
+  VOID RepaintWindow(NUWIDToWND(C))
+  HideChildWindow C
+  C=WIN_NEXT[C]
+ WEND
+END
 COMMON DEF HideWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN RETURN 0
+ IF IsActiveWindow(WND)THEN
+  WIN_ACTIVENUWID=0
+ ENDIF
  WIN_HIDE[NUWID]=TRUE
  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_HIDE
  IF WIN_SP[NUWID]THEN
   OTW_SPHIDE NUWID 
  ENDIF
+ HideChildWindow NUWID
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -2540,6 +2600,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_RESIZEHANDLER,0,JoinInt(W,H))
 END
+DEF SendChildWindowEvent(WND,TYPE,CWND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_CHLDWNDHANDLER,TYPE,CWND)
+END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
@@ -2677,6 +2741,17 @@
 'RETURN WIN_FY[WND AND NUWIDMASK]
  RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WIN_ROOTWND2 AND NUWIDMASK]-WIN_FH1[WIN_ROOTWND2 AND NUWIDMASK]
 END
+'WNDからのWND2のざひょう
+COMMON DEF CalcWindowX(WND2,WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ IF!CheckWindow(WND2)THEN RETURN -1
+ RETURN WIN_AX[WND AND NUWIDMASK]+WIN_FW1[WND AND NUWIDMASK]-WIN_AX[WND2 AND NUWIDMASK]-WIN_FW1[WND2 AND NUWIDMASK]
+END
+COMMON DEF CalcWindowY(WND2,WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ IF!CheckWindow(WND2)THEN RETURN -1
+ RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WND2 AND NUWIDMASK]-WIN_FH1[WND2 AND NUWIDMASK]
+END
 COMMON DEF GetWindowVar(WND,I)
  RETURN WIN_VAR[WND AND NUWIDMASK,I]
 END
@@ -2691,6 +2766,8 @@
 END
 COMMON DEF FocusWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+
+ VOID SendChildWindowEvent(GetParentWindow(WND),WindowActiveEvent(),WND)
  VAR OLD=WIN_ACTIVENUWID
  WIN_ACTIVENUWID=WND AND NUWIDMASK
  IF OLD==WIN_ACTIVENUWID THEN RETURN 0
@@ -2709,6 +2786,30 @@
 COMMON DEF GetActiveWindow()
  RETURN NUWIDToWND(WIN_ACTIVENUWID)
 END
+COMMON DEF SetWindowCursor(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_IM[NUWID]=TRUE
+ WIN_CURX[NUWID]=X
+ WIN_CURY[NUWID]=Y
+ RETURN FALSE
+END
+COMMON DEF GetWindowCursor WND OUT X,Y,E
+ IF!CheckWindow(WND)THEN
+  E=WIN_INVALIDID
+  X=0
+  Y=0
+  RETURN
+ ENDIF
+ VAR NUWID=WND AND NUWIDMASK
+ X=WIN_CURX[NUWID]
+ Y=WIN_CURY[NUWID]
+ E=0
+ IF !WIN_IM[NUWID]THEN
+  E=TRUE
+ ENDIF
+END
+
 COMMON DEF GetMouseX()
  RETURN OTW_MOUSEX
 END
@@ -2938,7 +3039,9 @@
  VAR SP=WIN_SP[NUWID]AND 511
  IF OTW_ENABLE_SHADOW THEN
   VAR SP2=SPVAR(SP,1)
-  SPSCALE SP2,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+  IF SP2!=-1THEN
+   SPSCALE SP2,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+  ENDIF
  ENDIF
  SPSCALE SP,1,1
  SPCHR SP,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
@@ -2948,7 +3051,9 @@
  VAR SP=WIN_SP[NUWID]AND 511
  IF OTW_ENABLE_SHADOW THEN
   VAR SP2=SPVAR(SP,1)
-  SPSHOW SP2
+  IF SP2!=-1THEN
+   SPSHOW SP2
+  ENDIF
  ENDIF
  SPSHOW SP
 END
@@ -2956,10 +3061,35 @@
  VAR SP=WIN_SP[NUWID]AND 511
  IF OTW_ENABLE_SHADOW THEN
   VAR SP2=SPVAR(SP,1)
-  SPHIDE SP2
+  IF SP2!=-1THEN SPHIDE SP2
  ENDIF
  SPHIDE SP
 END
+COMMON DEF SetWindowProperty WND,P$,V OUT E
+ IF!CheckWindow(WND)THEN
+  E=WIN_INVALIDID
+  RETURN
+ ENDIF
+ E=0
+ VAR NUWID=WND AND NUWIDMASK
+ IF P$=="SHADOW"THEN
+  IF!OTW_ENABLE_SHADOW THEN RETURN
+  VAR SP=WIN_SP[NUWID]AND 511
+  IF!SP THEN RETURN
+  VAR SP2=SPVAR(SP,1)
+  IF V&&SP2 THEN RETURN
+  IF V THEN
+   SPSET 2,511,0 OUT SP2
+   SPVAR SP,1,SP2
+   OTW_SPCHR NUWID
+   RETURN
+  ENDIF
+  IF!SP2 THEN RETURN
+  SPCLR SP2
+  SPVAR SP,1,-1
+  RETURN
+ ENDIF
+END
 COMMON DEF __GPSETWindow__ WND,X,Y,COL
  GPAGE OTW_SP,OTW_DP
  VAR AX=WIN_FX[WND AND NUWIDMASK]+X
@@ -3170,7 +3300,8 @@
  DEC H,SH
  DEC W,SW
  'GCLSWindow WND,WIN_BACKGND[NUWID]
- GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
+ VAR FRAMEBKGND=RGB(0,0,255)
+ GFILLWindow WND,0,-H+1,W-2,-1,FRAMEBKGND
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
  GLINEWindow WND,-1,-1,W-2,-1,RGB(0,0,0)
@@ -3179,7 +3310,15 @@
  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
+ 
  IF FW>1 THEN
+  IF WIN_STYLE_MINMAX==(WIN_STYLE[NUWID]AND WIN_STYLE_MINMAX)THEN
+   'min max button elements
+   GFILLWindow WND,W-30,-H+1,W-11,-H+10,FRAMEBKGND
+   GBOXWindow WND,W-19,-H+2,W-12,-H+9,C
+   GLINEWindow WND,W-29,-H+9,W-21,-H+9,C
+  ENDIF
+
   INC H,SH
   GLINEWindow WND,-1,-H+1,W-2,-H+1,-1
   GLINEWindow WND,-2,-H,W-1,-H,RGB(224,224,224)
@@ -3315,6 +3454,20 @@
   ENDIF
   RETURN
  ENDIF
+ IF WindowMinMaxStyle()==(GetWindowStyle(WND)AND WindowMinMaxStyle())THEN
+  IF X>=W-20THEN
+   IF BTN AND CTL_BTNUPFLG THEN
+    VOID MaximizeWindow(WND)
+   ENDIF
+   RETURN
+  ENDIF
+  IF X>=W-30THEN
+   IF BTN AND CTL_BTNUPFLG THEN
+    VOID MinimizeWindow(WND)
+   ENDIF
+   RETURN
+  ENDIF
+ ENDIF
  IF BTN AND CTL_LBTNFLG THEN
   IF BTN AND CTL_BTNDWNFLG THEN
  '  IF!IsFocusWindow(WND)THEN RETURN
@@ -3327,7 +3480,7 @@
    SPSHOW OTW_MOVWINSP
    SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
    SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
-   SPOFS OTW_MOVWINSP,AX-X,AY-Y,-256
+   SPOFS OTW_MOVWINSP,AX-X,AY-Y',-256
    SPLINK OTW_MOVWINSP,OTW_MOUSESP
    SPVAR OTW_MOVWINSP,1,NUWID
    SPVAR OTW_MOVWINSP,2,AX-X
@@ -3455,6 +3608,7 @@
   IF!OTW_SMOOTH_MOVE_WINDOW THEN OTW_INITSP 5
   VAR E=MoveWindow(WND,X,Y)
   E=FrontWindow(WND)
+  E=ActiveWindow(WND)
   SPUNLINK OTW_MOVWINSP
  ELSE
   MoveWindowSP TRUE
@@ -3463,6 +3617,68 @@
  MouseClipDef
  'OTW_MOVWINFLG=0
 END
+COMMON DEF MaximizeWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VOID SendChildWindowEvent(GetParentWindow(WND),WindowMaxmizeEvent(),WND)
+ RETURN 0
+END
+COMMON DEF MinimizeWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VOID SendChildWindowEvent(GetParentWindow(WND),WindowMinimizeEvent(),WND)
+ RETURN 0
+END
+COMMON DEF WindowMaxmizeEvent()
+ RETURN 1
+END
+COMMON DEF WindowMinimizeEvent()
+ RETURN 2
+END
+COMMON DEF WindowActiveEvent()
+ RETURN 3
+END
+COMMON DEF GetWindowFrameSize WND OUT W1,H1,W2,H2,ERR
+ IF!CheckWindow(WND)THEN
+  ERR=WIN_INVALIDID
+  W1=0
+  H1=0
+  W2=0
+  H2=0
+ ENDIF
+ VAR N=WND AND NUWIDMASK
+ W1=WIN_FW1[N]
+ H1=WIN_FH1[N]
+ W2=WIN_FW2[N]
+ H2=WIN_FH2[N]
+ DEC W2,W1
+ DEC H2,H1
+ ERR=0
+END
+DEF ControlDefChildWinHandler WND,CTL,TYPE,A1,CWND
+ VAR W1,W2,H1,H2,ERR
+ IF A1==WindowMaxmizeEvent()THEN
+  GetWindowFrameSize CWND OUT W1,H1,W2,H2,ERR
+  VOID MoveResizeWindow(CWND,0,0,GetWindowWidth(GetParentWindow(CWND))-W1-W2,GetWindowHeight(GetParentWindow(CWND))-H2-H1)
+  RETURN
+ ELSEIF A1==WindowMinimizeEvent()THEN
+  VOID MoveResizeWindow(CWND,0,GetWindowHeight(GetParentWindow(CWND))-16,32,16)
+  RETURN
+ ENDIF
+ VOID SendChildWindowEvent(GetParentWindow(WND),A1,CWND)
+END
+DEF WindowChildWindow WND,CTL,TYPE,A1,CWND
+ IF A1==WindowActiveEvent()THEN
+  VOID FrontWindow(WND)
+ ELSEIF A1==WindowMaxmizeEvent()THEN
+  RETURN
+ ELSEIF A1==WindowMinimizeEvent()THEN
+  RETURN
+ ENDIF
+ VOID SendChildWindowEvent(GetParentWindow(WND),A1,CWND)
+END
+COMMON DEF GetWindowStyle(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ RETURN WIN_STYLE[WND AND NUWIDMASK]
+END
 COMMON DEF IsOwnerDrawWindow(WND)
  RETURN !!(WIN_STYLE[WND AND NUWIDMASK]AND WIN_STYLE_OWNERDRAW)
 END
@@ -3595,11 +3811,18 @@
  GPRINTWindow W,1,1,NA$,RGB(0,0,0)
  IF IsFocusWindow(W)THEN
   GFILLWindow W,CX*8,6,CX*8+8,7,RGB(0,0,0)
+  E=SetWindowCursor(W,CX*8+1,1)
  ENDIF
  GBOXWindow W,0,0,WI,HE,RGB(0,0,0)
  E=GEndWindow(W)
 END
 DEF TextBoxLMouseDown W,C,T,X,Y
+ VAR L=LEN(GetWindowName$(W))
+ VAR CX=MAX(0,MIN(X DIV 8,L))
+ IF CX!=GetWindowVar(W,1) THEN
+  SetWindowVar W,1,CX
+  VOID RepaintWindow(W)
+ ENDIF
 END
 DEF TextBoxChFocus W,C,T,X,Y
  TextBoxPainter W,C,T,0,0
@@ -3620,21 +3843,16 @@
  TextBoxPainter W,C,T,0,0
 END
 DEF TextBoxButton W,C,T,B,A2
- VAR F=GetWindowVar(W,2)
- VAR M=MAINCNT
- IF M-F>10THEN
-  SetWindowVar W,2,M
-  VAR CX=GetWindowVar(W,1)
-  IF B AND 4&&CX THEN
-   SetWindowVar W,1,CX-1
+ VAR CX=GetWindowVar(W,1)
+ IF B AND 4&&CX THEN
+  SetWindowVar W,1,CX-1
+  TextBoxPainter W,C,T,0,0
+ ENDIF
+ IF B AND 8THEN
+  IF LEN(GetWindowName$(W))>CX THEN
+   SetWindowVar W,1,CX+1
    TextBoxPainter W,C,T,0,0
   ENDIF
-  IF B AND 8THEN
-   IF LEN(GetWindowName$(W))>CX THEN
-    SetWindowVar W,1,CX+1
-    TextBoxPainter W,C,T,0,0
-   ENDIF
-  ENDIF
  ENDIF
  
 ' BEEP
@@ -3851,16 +4069,16 @@
  LISTSTRNEXT[L]=0
  VAR LEN=GetWindowVar(WND,6)+1
  SetWindowVar WND,6,LEN
- VAR S=(GetWindowHeight(WND)-2)DIV 8
- IF LEN>S THEN DEC LEN,S ELSE LEN=0
- SetScrollBarSize GetWindowVar(WND,4),LEN
+' VAR S=(GetWindowHeight(WND)-2)DIV 8
+' IF LEN>S THEN DEC LEN,S ELSE LEN=0
+ SetScrollBarSize GetWindowVar(WND,4),LEN-1
 END
 DEF LISTBOX_ADJUSTSCRBAR WND
  VAR LEN=GetWindowVar(WND,6)
- VAR S=(GetWindowHeight(WND)-2)DIV 8
- IF LEN>S THEN DEC LEN,S ELSE LEN=0
+' VAR S=(GetWindowHeight(WND)-2)DIV 8
+' IF LEN>S THEN DEC LEN,S ELSE LEN=0
  VAR SCR=GetWindowVar(WND,4)
- SetScrollBarSize SCR,LEN
+ SetScrollBarSize SCR,LEN-1
 END
 DEF ListBoxLMD WND,CT,T,X,Y
  VAR W=GetWindowWidth(WND)-1
@@ -3925,6 +4143,7 @@
  SetWindowVar WND,3,0
  SetWindowVar WND,2,0
  SetWindowVar WND,1,0
+ SetWindowVar WND,6,0
  VOID RepaintWindow(WND)
 END
 DEF ListBoxNotif WND,CT,T,A1,POS
@@ -3979,6 +4198,65 @@
  GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  E=GEndWindow(WND)
 END
+DEF LISTBOX_SEL WND
+ VAR V=GetWindowVar(WND,3)
+ VAR S=GetWindowVar(WND,7)
+ IF!S THEN
+  RETURN
+ ENDIF
+ VAR H=GetWindowHeight(WND)
+ VAR L=GetWindowVar(WND,3),Y=1
+ IF!L THEN
+  L=GetWindowVar(WND,1)
+  SetWindowVar WND,3,L
+ ENDIF
+ IF LISTSTRPREV[L]==S THEN
+  SetWindowVar WND,3,LISTSTRPREV[L]
+  VAR SCR=GetWindowVar(WND,4)
+  SetScrollBarPosition SCR,GetScrollBarPosition(SCR)-1
+  RETURN
+ ENDIF
+ WHILE L
+  IF S==L THEN
+   RETURN
+  ENDIF
+  INC Y,8
+  IF Y>=H THEN BREAK
+  L=LISTSTRNEXT[L]
+ WEND
+ IF LISTSTRNEXT[L]==S THEN
+  SetWindowVar WND,3,LISTSTRNEXT[GetWindowVar(WND,3)]
+      SCR=GetWindowVar(WND,4)
+  SetScrollBarPosition SCR,GetScrollBarPosition(SCR)+1
+  RETURN
+ ENDIF
+END
+COMMON DEF ListBoxButton WND,CTL,T,BTN,__
+ VAR V=GetWindowVar(WND,3)
+ VAR S=GetWindowVar(WND,7)
+ IF!S THEN
+  SetWindowVar WND,7,V
+  ListBoxPainter WND,CTL,T,0,0
+  RETURN
+ ENDIF
+ IF BTN==#UP THEN
+  IF LISTSTRPREV[S]THEN
+   S=LISTSTRPREV[S]
+   SetWindowVar WND,7,S
+   LISTBOX_SEL WND
+   ListBoxPainter WND,CTL,T,0,0
+  ENDIF
+ ENDIF
+ IF BTN==#DOWN THEN
+  IF LISTSTRNEXT[S]THEN
+   S=LISTSTRNEXT[S]
+   SetWindowVar WND,7,S
+   LISTBOX_SEL WND
+   ListBoxPainter WND,CTL,T,0,0
+  ENDIF
+ ENDIF
+END
+
 COMMON DEF ListBoxResize WND,CTL,T,A1,WH
  VAR W,H
  SplitInt WH OUT W,H
@@ -4072,10 +4350,16 @@
  @ERR
  RETURN
 END
+COMMON DEF DropDownListNotif WND,CT,T,A1,A2
+ VAR L=GetWindowVar(WND,0)
+ IF L&&L==A1 THEN
+  VOID HideWindow(L)
+ ENDIF
+END
 COMMON DEF DropDownListBoxChFocus WND,CT,T,F,A2
- IF!F THEN
+ IF!F&&!IsActiveWindow(WND) THEN
   IF HideWindow(WND)THEN RETURN
-  VOID RepaintWindow(GetParentWindow(WND))
+  VOID RepaintWindow(GetWindowGroupOwner(WND))
  ENDIF
 END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
@@ -4500,13 +4784,21 @@
  ' NEXT
 ' NEXT
   GCLS RGB(0,192,0)
+  GCLS RGB(0,224,224)
+  GCLS RGB(0,128,128)
+
+
+
+  GCLS #BLUE
   FOR I=-400TO 400 STEP 2
    GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
   NEXT
-  GCLS RGB(0,224,224)
-  GCLS RGB(0,128,128)
   'GCLS RGB(191,191,191)
-  GPUTCHR 0,0,"otya window system 5.0",2,4
+  GPUTCHR 0,2,"otya window system 5.0",2,4
+  FOR I=-400TO 400 STEP 2
+   GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
+  NEXT
+  GPUTCHR 2,0,"otya window system 5.0",2,4
   GPUTCHR 0,240-8,"One moment please...",1,1
   GPUTCHR 1,240-8,"One moment please...",1,1
   GPAGE OTW_SP,OTW_DP
@@ -4598,6 +4890,10 @@
 ' NewProcess"LAUNCHER","" OUT E,E
   NewProcess"RIM","" OUT E,E
   NewProcess"ODE","" OUT E,E
+  BREPEAT 0,15,4
+  BREPEAT 1,15,4
+  BREPEAT 2,15,4
+  BREPEAT 3,15,4
  ENDIF
 RETURN
 END
@@ -4660,12 +4956,7 @@
   'LEFT MOUSE DOWN
   IF BTN AND OTW_LMOUSEDWN THEN
    CAPTURE_WND=0
-   VAR OA=WIN_ACTIVENUWID
-   WIN_ACTIVENUWID=NUWID
-   IF WIN_ACTIVENUWID!=OA THEN
-    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
-    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
-   ENDIF
+   E=FocusWindow(NUWIDToWND(NUWID AND 32767))
    VAR F=MAINCNT
    IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
     OTW_LCLKWND=0
@@ -4724,12 +5015,7 @@
   '=====R=====
   IF BTN AND OTW_RMOUSEDWN THEN
    CAPTURE_WND=0
-   OA=WIN_ACTIVENUWID
-   WIN_ACTIVENUWID=NUWID
-   IF WIN_ACTIVENUWID!=OA THEN
-    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
-    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
-   ENDIF
+   E=FocusWindow(NUWIDToWND(NUWID AND 32767))
    F=MAINCNT
    IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
     OTW_LCLKWND=0
@@ -4828,7 +5114,7 @@
  ENDIF
  BTN=BUTTON()AND OTW_USEBTN
  IF BTN||OTW_OLDBTN THEN
-  IF MAINCNT-OTW_OLDBTNF||OTW_OLDBTN THEN
+  IF MAINCNT-OTW_OLDBTNF>=8||!OTW_OLDBTN THEN
    E=SendButtonWindow(NUWIDToWND(WIN_ACTIVENUWID),BTN)
    OTW_OLDBTNF=MAINCNT
    OTW_OLDBTN=BTN
@@ -5058,7 +5344,7 @@
  ENDIF
  IF LAUNCHERCTL THEN
   VAR WND,E
-  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,99,WINDOWRESIZABLESTYLE() OUT WND,E
+  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,99,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
   SetProcessVar WND
   NewWindow GetListBoxControl(),"",0,0,80,98,WND,0 OUT WND,E
   AddArrayListBoxItem WND,LAUNCHERITEM$
@@ -5213,6 +5499,7 @@
 END
 VAR OTW_MOUSEOLDX,OTW_MOUSEOLDY
 VAR OTW_MOUSEOLDST
+VAR OTW_OLDSTICKMCNT
 COMMON DEF UpdateMouse
  VAR S,X,Y
  TOUCH OUT S,X,Y
@@ -5235,16 +5522,36 @@
    
    OTW_SP=OTW_DP
    GPAGE OTW_DP,OTW_DP
+   PRUN_RESTORE
    KEY 1,"
   ENDIF
  ENDIF
  OTW_MOUSEOLDX=X
  OTW_MOUSEOLDY=Y
  OTW_MOUSEOLDST=S
- IF!S THEN
+ VAR MCNT=MAINCNT
+ IF OTW_OLDSTICKMCNT-MCNT THEN
   VAR X#,Y#
   STICK OUT X#,Y#
+  VAR D=(MAINCNT-OTW_OLDSTICKMCNT)*2.5
   IF X#!=0 OR Y#!=0 THEN
+   OTW_MOUSEX#=OTW_MOUSEX#+X#*D
+   OTW_MOUSEY#=OTW_MOUSEY#-Y#*D
+   IF OTW_MOUSEX#<OTW_MOUSECLIPX THEN OTW_MOUSEX#=OTW_MOUSECLIPX
+   IF OTW_MOUSEY#<OTW_MOUSECLIPY THEN OTW_MOUSEY#=OTW_MOUSECLIPY
+   IF OTW_MOUSEX#>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX#=OTW_MOUSECLIPX2-1
+   IF OTW_MOUSEY#>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY#=OTW_MOUSECLIPY2
+   'SPANIM OTW_MOUSESP,"XY",OTW_OLDSTICKMCNT-MCNT,OTW_MOUSEX#,OTW_MOUSEY#
+   SPOFS OTW_MOUSESP,OTW_MOUSEX#,OTW_MOUSEY#
+   OTW_MOUSEX=OTW_MOUSEX#
+   OTW_MOUSEY=OTW_MOUSEY#
+  ENDIF
+  OTW_OLDSTICKMCNT=MCNT
+ ENDIF
+ IF 0&&!S THEN
+'  VAR X#,Y#
+  STICK OUT X#,Y#
+  IF X#!=0 OR Y#!=0 THEN
    OTW_MOUSEX#=OTW_MOUSEX#+X#*(4/OTW_FPF#)'0.2'/2
    OTW_MOUSEY#=OTW_MOUSEY#-Y#*(4/OTW_FPF#)'0.2'/2
    IF OTW_MOUSEX#<OTW_MOUSECLIPX THEN OTW_MOUSEX#=OTW_MOUSECLIPX
@@ -5385,6 +5692,7 @@
 DIM TXTBOXEX_CSELPOS2[0]
 DIM TXTBOXEX_CISSEL[0]
 DIM TXTBOXEX_CISSELING[0]
+DIM TXTBOXEX_CLINECNT[0]
 COMMON DEF GetTextBoxExControl()
  RETURN TXTBOXEXCTL
 END
@@ -5426,6 +5734,7 @@
   TXTBOXEX_CSELPOS2=NewArray(TXTBOXEX_MAXCTL)
   TXTBOXEX_CISSEL=NewArray(TXTBOXEX_MAXCTL)
   TXTBOXEX_CISSELING=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CLINECNT=NewArray(TXTBOXEX_MAXCTL)
   VAR I
   FOR I=1TO TXTBOXEX_LINESIZ-2
    TXTBOXEX_NEXT[I]=I+1
@@ -5439,14 +5748,14 @@
   AddMenuItem TextBoxEx_MENU,"Cut",2
   AddMenuItem TextBoxEx_MENU,"Paste",3
   AddMenuItemSeparator TextBoxEx_MENU
-  AddMenuItem TextBoxEx_MENU,"Select all",3
+  AddMenuItem TextBoxEx_MENU,"Select all",4
  ENDIF
 END
 DEF TXTED_NewCTL(WND)
  VAR R=TXTBOXEX_CFREE
  IF!R THEN RETURN 0
  TXTBOXEX_CFREE=TXTBOXEX_CNEXT[TXTBOXEX_CFREE]
- TXTBOXEX_CLINE[R]=1
+ TXTBOXEX_CLINE[TXTBOXEX_CFREE]=0
  RETURN TXTBOXEX_CFREE
 END
 DEF TXTED_NewLINE(V$,P)
@@ -5535,17 +5844,21 @@
  LINE=TXTBOXEX_CLINE[GETWINDOWVar(WND,7)]
  VAR OV
 ' IF X<33THEN RETURN
+ VAR TW,TH
+ VAR LW=TXTED_GETLINEW(W)
  WHILE V
   OV=V
   LINE=LINE+1
-  Y2=Y1+8
+'  TW=LEN(TXTBOXEX_VAL$[V]) MOD LW
+  TH=(LEN(TXTBOXEX_VAL$[V]) DIV LW)*8+8
+  Y2=Y1+TH
   IF Y>=Y1&&Y<Y2 THEN
    BREAK
   ENDIF
-  INC Y1,8
+  Y1=Y2
   V=TXTBOXEX_NEXT[V]
  WEND
- POS=MAX(0,(X-1-32) DIV 8)
+ POS=MAX(0,((X-1-32) DIV 8)+(ABS(Y1-Y)DIV 8)*LW)
  IF!V THEN V=OV
 END
 COMMON DEF TextBoxExLMD WND,CTL,T,X,Y
@@ -5574,21 +5887,28 @@
  ShowContextMenu TextBoxEx_MENU,WND
 END
 DEF TEXTBOXEX_MENU WND,ID
- ON ID GOTO @UNK,@COPY,@CUT,@PASTE
+ ON ID GOTO @UNK,@COPY,@CUT,@PASTE,@ALL
  @UNK
  ?"UNK
  RETURN
- @COPY
  @CUT
+ TextBoxExCopy WND
+ VAR _
+ TEXTBOXEX_REMOVESELECTEDTEXT WND OUT _,_
+ RETURN
+ @COPY
 '?TEXTBOXEXGETSELECTEDTEXT(WND)
  TextBoxExCopy WND
  RETURN
  @PASTE
  TextBoxExPaste WND
+ RETURN
+ @ALL
+ TextBoxExSelectAll WND
 END
 COMMON DEF TextBoxExNotif WND,CTL,T,_,POS
  'MENU
- IF _==0 THEN
+ IF _==MenuNotifID() THEN
   TEXTBOXEX_MENU WND,POS
   RETURN
  ENDIF
@@ -5661,17 +5981,43 @@
 COMMON DEF TextBoxExChFocus WND,CTL,T,_,__
  TextBoxExRepaint WND
 END
+DEF TXTED_GETLINEW(W)
+ RETURN MAX(1,(W-32-8)DIV 8)
+END
+DEF TextBoxExDrawSelBox SELPOS1,SELPOS2,LINEC,LEN,X,Y,W
+ SELPOS1=MIN(LEN,SELPOS1)
+ SELPOS2=MIN(LEN,SELPOS2)
+ VAR SY1=SELPOS1 DIV LINEC
+ VAR SY2=SELPOS2 DIV LINEC
+ IF SY1>SY2 THEN
+  SWAP SY1,SY2
+  SWAP SELPOS1,SELPOS2
+ ENDIF
+ VAR SLC=GetSelectionColor()
+
+ IF SY1==SY2 THEN
+  GFILL X+SELPOS1 MOD LINEC*8,Y+SY1*8,X+SELPOS2 MOD LINEC*8-1,Y+SY2*8+7,SLC
+ ELSE
+  VAR K
+  IF SY2-SY1>1THEN
+   GFILL X,Y+SY1*8+8,W,Y+SY2*8-1,SLC
+  ENDIF
+  GFILL X+SELPOS1 MOD LINEC*8,Y+SY1*8,W,Y+SY1*8+7,SLC
+  GFILL X,Y+SY2*8,X+SELPOS2 MOD LINEC*8-1,Y+SY2*8+7,SLC
+ ENDIF
+END
 COMMON DEF TextBoxExRepaint WND
- VAR E=GBeginWindow(WND)
+ VAR E=GBeginDirect(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ GCLIP 1,0,0,W,H
  VAR BOX=GetWindowVar(WND,7)
  VAR SH=GetTextBoxExMode(BOX)
  IF SH THEN
-  GCLSWindow WND,RGB(0,0,0)
+  GCLS RGB(0,0,0)
  ELSE
-  GCLSWindow WND,RGB(255,255,255)
+  GCLS RGB(255,255,255)
  ENDIF
- VAR W=GetWindowWidth(WND)
- VAR H=GetWindowHeight(WND)
  VAR L=GetWindowVar(WND,1)
  VAR C=GetWindowVar(WND,2)
  VAR V$=TXTBOXEX_VAL$[C]
@@ -5687,6 +6033,7 @@
  VAR Y=1,X=32,PL,LC
  VAR LINE=GetTextBoxExLine(BOX),_
  VAR M0=MAINCNT
+ VAR LINEC=TXTED_GETLINEW(W)'((W-X)DIV 8)-1
  IF TXTBOXEX_CISSEL[BOX]THEN
   VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
   VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
@@ -5713,37 +6060,52 @@
   IF LINE>=100&&_<=&H9THEN INC _,&H64
   IF !_ THEN _=&H6E
   INC LS$,CHR$(&HE100+_)
-  GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
+  GPUTCHR 1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
   IF LINE>SELLINE1&&LINE<SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,SLC
+   VAR LH=LEN(V$) DIV LINEC
+   IF LH THEN
+    GFILL X,Y,W,Y+LH*8-1,SLC
+   ENDIF
+   GFILL X,Y+LH*8,X+LEN(V$) MOD LINEC*8-1,Y+LH*8+7,SLC
+   'GFILL X,Y,X+LEN(V$)*8,Y+7,SLC
   ENDIF
   IF LINE==SELLINE1&&LINE==SELLINE2 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
+   TextBoxExDrawSelBox SELPOS1,SELPOS2,LINEC,LEN(V$),X,Y,W
+   'GFILL X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ELSEIF LINE==SELLINE1 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,SLC
+   TextBoxExDrawSelBox SELPOS1,LEN(V$),LINEC,LEN(V$),X,Y,W
+'   GFILL X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,SLC
   ELSEIF LINE==SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
+   TextBoxExDrawSelBox 0,SELPOS2,LINEC,LEN(V$),X,Y,W
+'   GFILL X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ENDIF
+  VAR OY=Y
   IF SH THEN
-   TXTED_PRGPRINT WND,X,Y,V$
+   TXTED_PRGPRINT X,Y,V$,LINEC
   ELSE
-   GPRINTWindow WND,X,Y,V$,TC
+   TXTED_PRINT X,Y,V$,TC,LINEC
+'   GPUTCHR X,Y,V$,TC
   ENDIF
+  Y=Y+LEN(V$) DIV LINEC*8
   PL=L
   IF L==C&&IsActiveWindow(WND)THEN
-   GFILLWindow WND,X+CX*8,Y+7,X+7+CX*8,Y+6,TC
+   'GFILL X+CX*8,Y+7,X+7+CX*8,Y+6,TC
+   VAR _CX=X+(CX MOD LINEC)*8,_CY=OY+CX DIV LINEC*8
+   GFILL _CX,_CY+6,_CX+7,_CY+7,TC
+   VOID SetWindowCursor(WND,_CX,_CY)
   ENDIF
   L=TXTBOXEX_NEXT[L]
   INC Y,8
-  IF Y>=H THEN BREAK
+  IF Y+8>=H THEN BREAK
   IF!L THEN
    IF!LEN(V$)||V$[LEN(V$)-1]!=L$THEN
-'    GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
+'    GPUTCHR LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsActiveWindow(WND)THEN
-     GFILLWindow WND,X+CX*8,Y-1,X+7+CX*8,Y-2,TC
+     GFILL X+CX*8,Y-1,X+7+CX*8,Y-2,TC
+     VOID SetWindowCursor(WND,X+CX*8,Y)
     ENDIF
    ELSE
-'    GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
+'    GPUTCHR X,Y,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsFocusWindow(WND)THEN
   '   GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
     ENDIF
@@ -5753,10 +6115,20 @@
   ENDIF
   IF MAINCNT-M0>1THEN UpdateMouse
  WEND
- GBOXWindow WND,0,0,W,H,RGB(0,0,0)
- E=GEndWindow(WND)
+ GBOX 0,0,W,H,RGB(0,0,0)
+ E=GCopyDirect(WND,0,0,W,H,0,0,0)
  SetWindowVar WND,6,PL
 END
+DEF TXTED_PRINT X,Y,V$,TC,W
+ IF LEN(V$)<=W THEN
+  GPUTCHR X,Y,V$,TC
+  RETURN
+ ENDIF
+ VAR I,L=(LEN(V$) DIV W)
+ FOR I=0TO L
+  GPUTCHR X,Y+I*8,MID$(V$,I*W,W),TC
+ NEXT
+END
 DEF TXTED_UpCursor(WND)
   VAR C=GetWindowVar(WND,2)
   IF TXTBOXEX_PREV[C]THEN
@@ -5775,10 +6147,28 @@
   ENDIF
   RETURN 0
 END
+DEF TXTED_GETLASTVLINE(WND)
+ VAR LINEC=TXTED_GETLINEW(GetWindowWidth(WND))
+ VAR H=GetWindowHeight(WND)
+ VAR Y=1
+ VAR C=GetWindowVar(WND,1)
+ VAR PL=C
+ WHILE C
+  PL=C
+  INC Y,(LEN(TXTBOXEX_VAL$[C])DIV LINEC)*8+8
+  IF Y+8>=H THEN
+   BREAK
+  ENDIF
+  C=TXTBOXEX_NEXT[C]
+ WEND
+ RETURN PL
+END
 DEF TXTED_DownCursor(WND)
   VAR C=GetWindowVar(WND,2)
+  VAR ISSCROLL=0
   IF TXTBOXEX_NEXT[C]THEN
    IF GetWindowVar(WND,6)==C THEN
+ @TAIL
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
      SetWindowVar WND,1,L
@@ -5786,10 +6176,16 @@
      VAR LINE=GetTextBoxExLine(BOX)+1
      SetTextBoxExLine BOX,LINE
      SetScrollBarPosition GetChildWindow(WND),LINE
+     ISSCROLL=TRUE
     ENDIF
    ENDIF
    C=TXTBOXEX_NEXT[C]
    SetWindowVar WND,2,C
+   IF ISSCROLL THEN
+    VAR P=TXTED_GETLASTVLINE(WND)
+    ISSCROLL=0
+    IF P!=C THEN @TAIL
+   ENDIF
    RETURN 1
   ENDIF
   RETURN 0
@@ -5800,7 +6196,7 @@
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
  TXTBOXEX_CISSEL[BOX]=0
  IF!BTN THEN SetWindowVar WND,5,0RETURN
- IF MAINCNT-F<R THEN RETURN
+' IF MAINCNT-F<R THEN RETURN
 
  IF BTN AND 1 THEN
   IF TXTED_UpCursor(WND)THEN
@@ -5851,11 +6247,16 @@
   SetWindowVar WND,4,MAINCNT
  ENDIF
 END
+DEF TextBoxEx_UpdateScrollBar WND
+ VAR SCRBAR=GetChildWindow(WND)
+ VAR BOX=GetWindowVar(WND,7)
+ SetScrollBarSize SCRBAR,TXTBOXEX_CLINECNT[BOX]-1
+END
+
 COMMON DEF TextBoxExKey WND,CTL,T,KEY,_
  VAR C=GetWindowVar(WND,2)
  VAR BOX=GetWindowVar(WND,7)
  IF TXTBOXEX_CISSELING[BOX]THEN RETURN
- TXTBOXEX_CISSEL[BOX]=0
  IF!C THEN
   C=TXTED_NewLINE("",0)
   SetWindowVar WND,1,C
@@ -5865,6 +6266,11 @@
  ENDIF
  VAR X=GetWindowVar(WND,3)
  VAR K$=CHR$(KEY)
+ IF TXTBOXEX_CISSEL[BOX]THEN
+  TEXTBOXEX_REMOVESELECTEDTEXT WND OUT C,X
+  IF K$==BS$()THEN @END
+ ENDIF
+ TXTBOXEX_CISSEL[BOX]=0
  IF K$==CR$()THEN K$=LF$()
  IF K$==BS$()THEN
   IF X>0THEN
@@ -5875,6 +6281,7 @@
    IF P THEN
     VAR L=GetWindowVar(WND,1)
     VAR V$=TXTBOXEX_VAL$[C]
+    DEC TXTBOXEX_CLINECNT[BOX]
     L=TXTED_DeleteLine(C)
     IF C==TXTBOXEX_CFIRST[BOX]THEN
      TXTBOXEX_CFIRST[BOX]=L
@@ -5884,7 +6291,14 @@
     SetWindowVar WND,3,LEN(TXTBOXEX_VAL$[L])
     INC TXTBOXEX_VAL$[L],MID$(V$,X,LEN(V$)-X)
     L=GetWindowVar(WND,1)
+    TextBoxEx_UpdateScrollBar WND
+     VAR SCRBAR=GetChildWindow(WND)
+    TextBoxEx_UpdateScrollBar WND
+
     IF L==C THEN
+     VAR LINE=GetTextBoxExLine(BOX)-1
+     SetTextBoxExLine BOX,LINE
+     SetScrollBarPosition SCRBAR,LINE
      SetWindowVar WND,1,GetWindowVar(WND,2)
     ENDIF
    ENDIF
@@ -5892,21 +6306,23 @@
  ELSE
   IF K$==LF$()THEN
    VAR C2=TXTED_NewLine(MID$(TXTBOXEX_VAL$[C],X,LEN(TXTBOXEX_VAL$[C])-X),C)
+   INC TXTBOXEX_CLINECNT[BOX]
    IF!C2 THEN RETURN
    SetWindowVar WND,2,C2
    SetWindowVar WND,3,0
    TXTBOXEX_VAL$[C]=MID$(TXTBOXEX_VAL$[C],0,X)+K$
-   IF GetWindowVar(WND,6)==C THEN
+   IF 1||GetWindowVar(WND,6)==C THEN
     L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
-     VAR LINE=GetTextBoxExLine(BOX)+1
-     SetTextBoxExLine BOX,LINE
-     VAR SCRBAR=GetChildWindow(WND)
-     IF GetScrollBarSize(SCRBAR)<LINE THEN
-      SetScrollBarSize SCRBAR,LINE
+         LINE=GetTextBoxExLine(BOX)
+     IF GetWindowVar(WND,6)==C THEN
+      SetWindowVar WND,1,L
+      INC LINE
      ENDIF
+     SetTextBoxExLine BOX,LINE
+         SCRBAR=GetChildWindow(WND)
+     TextBoxEx_UpdateScrollBar WND
      SetScrollBarPosition SCRBAR,LINE
-     SetWindowVar WND,1,L
     ENDIF
    ENDIF
   ELSE
@@ -5916,11 +6332,13 @@
    SetWindowVar WND,3,X+1
   ENDIF
  ENDIF
+ @END
  TextBoxExRepaint WND
 END
 COMMON DEF TextBoxExSetText WND,TXT$
  VAR BOX=GetWindowVar(WND,7)
  VAR C=GetWindowVar(WND,1),I,J
+ TXTBOXEX_CISSEL[BOX]=FALSE
  IF C THEN
   I=C
   WHILE 1
@@ -5948,7 +6366,7 @@
    OC=1
   ENDIF
   IF!C THEN BREAK
-  IF I==LEN(TXT$)-1THEN BREAK
+  IF I==LEN(TXT$)-1THEN INC L:BREAK
   I=J+1
  WEND
  IF!LEN(TXT$)THEN
@@ -5957,9 +6375,11 @@
   SetWindowVar WND,2,C
   TXTBOXEX_CFIRST[BOX]=C
  ENDIF
+ TXTBOXEX_CLINECNT[BOX]=L+15
  VAR S=L+CEIL((GetWindowHeight(WND)-2)/8)
  IF S<0THEN S=0
- SetScrollBarSize GetChildWindow(WND),S
+ TextBoxEx_UpdateScrollBar WND
+' SetScrollBarSize GetChildWindow(WND),S
  SetScrollBarPosition GetChildWindow(WND),0
  SetTextBoxExLine BOX,0
  VOID RepaintWindow(WND)
@@ -5984,6 +6404,22 @@
  VAR TXT$=ClipboardGetText$()
  TextBoxExSetSelectedText WND,TXT$
 END
+COMMON DEF TextBoxExSelectAll WND
+ VAR BOX=GetWindowVar(WND,7)
+ VAR C=TXTBOXEX_CFIRST[BOX]
+ TXTBOXEX_CSELLINE1[BOX]=1
+ TXTBOXEX_CSELPOS1[BOX]=0
+ VAR LINE
+ WHILE C
+  VAR OC=C
+  INC LINE
+  C=TXTBOXEX_NEXT[C]
+ WEND
+ TXTBOXEX_CSELLINE2[BOX]=LINE
+ TXTBOXEX_CSELPOS2[BOX]=LEN(TXTBOXEX_VAL$[OC])
+ TXTBOXEX_CISSEL[BOX]=TRUE
+ VOID RepaintWindow(WND)
+END
 'TXT$->LINEOBJ
 DEF TEXTBOXEX_PARSETXT TXT$ OUT LINEFIRST,LINELAST,LINECOUNT
  VAR I,J
@@ -6015,8 +6451,8 @@
 'RET:LINE
 DEF TEXTBOXEX_REMOVESELECTEDTEXT WND OUT L,CX
  VAR BOX=GetWindowVar(WND,7)
+ L=GetWindowVar(WND,2)
  IF!TXTBOXEX_CISSEL[BOX]THEN
-  L=GetWindowVar(WND,2)
   CX=GetWindowVar(WND,3)
   RETURN
  ENDIF
@@ -6030,7 +6466,20 @@
   SWAP SELLINE1,SELLINE2
   SWAP SELPOS1,SELPOS2
  ENDIF
+ VAR SEL1LINEDAT
  VAR LINE
+ VAR DELLINE=SELLINE2-SELLINE1
+ VAR SCRBAR=GetChildWindow(WND)
+ VAR CS=TXTBOXEX_CLINECNT[BOX]
+ DEC TXTBOXEX_CLINECNT[BOX],DELLINE
+ TextBoxEx_UpdateScrollBar WND
+ 'SetScrollBarSize SCRBAR,MAX(0,CS-DELLINE-16)
+ IF GetTextBoxExLine(BOX)>CS-DELLINE THEN
+  SetTextBoxExLine BOX,CS-DELLINE
+  TXTBOXEX_CLINECNT[BOX]=CS-DELLINE
+  SetScrollBarPosition SCRBAR,MAX(0,CS-DELLINE-16)
+
+ ENDIF
  CX=SELPOS1
  WHILE C
   INC LINE
@@ -6049,17 +6498,30 @@
   ELSEIF SELLINE1==LINE THEN
    SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
    IF SELPOS1 THEN
-    TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],SELPOS1-1)
+    TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],SELPOS1)
    ELSE
     TXTBOXEX_VAL$[C]=""
    ENDIF
-   CX=MIN(CX,MAX(LEN(TXTBOXEX_VAL$[C])-1,0))
+'   CX=MIN(CX,MAX(LEN(TXTBOXEX_VAL$[C])-1,0))
+   SEL1LINEDAT=C
   ELSEIF SELLINE2==LINE THEN
    SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+'AAA<
+'BBB
+'C>CC
+   CX=LEN(TXTBOXEX_VAL$[SEL1LINEDAT])
+   INC TXTBOXEX_VAL$[SEL1LINEDAT],RIGHT$(TXTBOXEX_VAL$[C],LEN(TXTBOXEX_VAL$[C])-SELPOS2)
    TXTBOXEX_VAL$[C]=RIGHT$(TXTBOXEX_VAL$[C],LEN(TXTBOXEX_VAL$[C])-SELPOS2-1)
+   VAR OC=C
+   C=TXTBOXEX_NEXT[C]
+   VAR _=TXTED_DeleteLine(OC)
+   
+   C=SEL1LINEDAT
    BREAK
   ELSEIF SELLINE1<LINE THEN
-   C=TXTED_DeleteLine(C)
+   OC=C
+   C=TXTBOXEX_NEXT[C]
+   _=TXTED_DeleteLine(OC)
    CONTINUE
   ENDIF
   C=TXTBOXEX_NEXT[C]
@@ -6082,6 +6544,8 @@
  VAR C
  VAR CX
  TEXTBOXEX_REMOVESELECTEDTEXT WND OUT C,CX
+ VAR BOX=GetWindowVar(WND,7)
+
  IF LASTLF THEN
   VAR MATSUO$=MID$(TXTBOXEX_VAL$[C],CX,LEN(TXTBOXEX_VAL$[C])-CX)
   TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],CX)+T1$
@@ -6090,9 +6554,13 @@
   ELSE
    VOID TXTED_NewLine(MATSUO$,C)
   ENDIF
+  DEC _3
  ELSE
   TXTBOXEX_VAL$[C]=InsertStr$(TXTBOXEX_VAL$[C],CX,T1$)
+  DEC _3
  ENDIF
+ INC TXTBOXEX_CLINECNT[BOX],_3
+ TextBoxEx_UpdateScrollBar WND
  IF _1==_2 THEN
   VOID TXTED_DeleteLine(_1)
   RETURN
@@ -6182,7 +6650,9 @@
 VAR RTXTEDMOD
 VAR RTXTEDDIV
 VAR RTXTEDCALL
-COMMON DEF TXTED_PRGPRINT WND,X,Y,P$
+COMMON DEF TXTED_PRGPRINT X,Y,P$,W
+ W=W*8+X
+ VAR OFSX=X
  VAR L=LEN(P$)-1,I,A
  VAR _0=ASC("0"),_9=ASC("9"),_Q=34
  VAR _S=ASC("'"),_A=ASC("A"),_Z=ASC("Z")
@@ -6202,23 +6672,42 @@
     BREAK
    NEXT
    VAR I$=MID$(P$,S,I-S)
+   VAR C=RGB(0,198,247)
    IF CHKVAR("RTXTED"+I$)THEN
-    GPRINTWindow WND,X,Y,I$,RGB(0,198,247)
+    C=RGB(0,198,247)
    ELSE
-    GPRINTWindow WND,X,Y,I$,-1'RGB(0,0,0)
+    C=-1
    ENDIF
-   INC X,LEN(I$)*8
+   VAR S2=0
+   VAR CL=(W-X)DIV 8
+   WHILE 1
+    IF CL>=LEN(I$)-S2 THEN
+     I$=MID$(I$,S2,CL)
+     GPUTCHR X,Y,I$,C
+     INC X,LEN(I$)*8
+     IF X>=W THEN X=OFSX:Y=Y+8
+     BREAK
+    ELSE
+     GPUTCHR X,Y,MID$(I$,S2,CL),C
+     X=OFSX
+     INC Y,8
+     INC S2,CL
+     CL=(W-OFSX) DIV 8
+    ENDIF
+   WEND
    DEC I
    CONTINUE
   ENDIF
   IF A==_Q THEN
-   GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
+   GPUTCHR X,Y,A,RGB(99,132,247)
    INC X,8
+   IF X>=W THEN X=OFSX:Y=Y+8
    FOR I=I+1 TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
-    GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
+    IF A==_LF THEN GPUTCHR X,Y,A,-1BREAK
+    GPUTCHR X,Y,A,RGB(99,132,247)
     INC X,8
+    IF X>=W THEN X=OFSX:Y=Y+8
     IF A==_Q THEN BREAK
    NEXT
    IF A!=_Q THEN BREAK
@@ -6228,9 +6717,10 @@
   IF A==_S THEN
    FOR I=I TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
-    GPUTCHRWindow WND,X,Y,A,RGB(33,247,16)
+    IF A==_LF THEN GPUTCHR X,Y,A,-1BREAK
+    GPUTCHR X,Y,A,RGB(33,247,16)
     INC X,8
+    IF X>=W THEN X=OFSX:Y=Y+8
    NEXT
    BREAK
   ENDIF
@@ -6238,8 +6728,9 @@
    FOR I=I TO L
     A=ASC(P$[I])
     IF!(A>=_A&&A<=_Z||A>=_LA&&A<=_LZ||A==__||A>=_0&&A<=_9||A==_AT)THEN DEC I:BREAK
-    GPUTCHRWindow WND,X,Y,A,RGB(247,167,0)
+    GPUTCHR X,Y,A,RGB(247,167,0)
     INC X,8
+    IF X>=W THEN X=OFSX:Y=Y+8
    NEXT
    CONTINUE
   ENDIF
@@ -6249,50 +6740,59 @@
     A=ASC(P$[I])
     INC X,8
     IF A==_B THEN
-     GPUTCHRWindow WND,X-8,Y,S,RGB(247,69,149)
-     GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+     GPUTCHR X-8,Y,S,RGB(247,69,149)
+     IF X>=W THEN X=OFSX:Y=Y+8
+     GPUTCHR X,Y,A,RGB(247,69,149)
      INC X,8
+     IF X>=W THEN X=OFSX:Y=Y+8
      S=0
      FOR I=I+1 TO L
       A=ASC(P$[I])
       IF A>_1&&A<=_9 THEN
-       GPUTCHRWindow WND,X,Y,A,-1'RGB(0,0,0)
+       GPUTCHR X,Y,A,-1'RGB(0,0,0)
        INC X,8
+       IF X>=W THEN X=OFSX:Y=Y+8
        S=1
        CONTINUE
       ENDIF
       IF A!=_0&&A!=_1||S THEN DEC I:BREAK
-      GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+      GPUTCHR X,Y,A,RGB(247,69,149)
       INC X,8
+      IF X>=W THEN X=OFSX:Y=Y+8
      NEXT
      DEC I
      BREAK
     ENDIF
     IF A==_H THEN
-     GPUTCHRWindow WND,X-8,Y,S,RGB(247,69,149)
-     GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+     GPUTCHR X-8,Y,S,RGB(247,69,149)
+     IF X>=W THEN X=OFSX:Y=Y+8
+     GPUTCHR X,Y,A,RGB(247,69,149)
      INC X,8
+     IF X>=W THEN X=OFSX:Y=Y+8
      FOR I=I+1 TO L
       A=ASC(P$[I])
       IF!(A>=_0&&A<=_9||A>=_A&&A<=_F)THEN DEC I:BREAK
-      GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+      GPUTCHR X,Y,A,RGB(247,69,149)
       INC X,8
+      IF X>=W THEN X=OFSX:Y=Y+8
      NEXT
      BREAK
     ENDIF
-    GPUTCHRWindow WND,X-8,Y,S,RGB(255,255,255)
+    GPUTCHR X-8,Y,S,RGB(255,255,255)
+    IF X>=W THEN X=OFSX:Y=Y+8
     DEC I
     BREAK
    NEXT
    CONTINUE
   ENDIF
   IF A>=_0&&A<=_9 THEN
-   GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+   GPUTCHR X,Y,A,RGB(247,69,149)
   ELSE
-   IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)',RGB(0,184,255)BREAK
-   GPUTCHRWindow WND,X,Y,A,-1'RGV(0,0,0)
+   IF A==_LF THEN GPUTCHR X,Y,A,RGB(0,0,0)',RGB(0,184,255)BREAK
+   GPUTCHR X,Y,A,-1'RGV(0,0,0)
   ENDIF
   INC X,8
+  IF X>=W THEN X=OFSX:Y=Y+8
  NEXT
 END
 '===End text editor===
@@ -6312,13 +6812,13 @@
  RETURN
  @OPEN
  VAR ERR,T$
- LoadFile RIGHT$(A2$,LEN(A2$)-1) OUT T$,ERR
+ LoadFile A2$ OUT T$,ERR
  IF ERR THEN RETURN
  TextBoxExSetText GetWindowVar(W,0),T$
  RETURN
  @SAVE
  TextBoxExGetText GetWindowVar(W,0) OUT T$
- SaveFile RIGHT$(A2$,LEN(A2$)-1),T$ OUT ERR
+ SaveFile A2$,T$ OUT ERR
  IF ERR THEN RETURN
  RETURN
 END
@@ -6342,7 +6842,7 @@
   E=SetControlStrNotifHandler(TXTEDCTL,"TXTEDSTRNOTIF")
   E=SetControlResizeHandler(TXTEDCTL,"TXTEDRESIZE")
  ENDIF
- NewTopLevelStyleWindow TXTEDCTL,"TXTED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow TXTEDCTL,"TXTED",128,64,WindowMenuStyle()OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  AddMenuItem MENU,"New",1
@@ -6381,7 +6881,7 @@
   E=SetControlStrNotifHandler(PRGEDCTL,"TXTEDSTRNOTIF")
   E=SetControlResizeHandler(PRGEDCTL,"TXTEDRESIZE")
  ENDIF
- NewTopLevelStyleWindow PRGEDCTL,"PRGED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow PRGEDCTL,"PRGED",128,64,WindowMenuStyle()OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
 'NewTopLevelMenuWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
@@ -6420,7 +6920,7 @@
 COMMON DEF RichTextUnderline()
  RETURN 8
 END
-COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
+COMMON DEF RICHTEXT X,Y,C,STYLE,SIZE,COL
  VAR S2=SIZE DIV 8
  VAR I,X2,BF=0
 ' INC Y,SIZE MOD 8
@@ -6428,21 +6928,13 @@
   X2=X
   @LOOP1
   IF STYLE AND 2THEN
-   IF!BF THEN
-    GPAGE OTW_SP,OTW_DP
-    GCLIP 1
-    GFILL 511-8,511-8,511,511,0
-    GPUTCHR 511-8,511-8,C,1,1,COL
-    GPAGE OTW_SP,OTW_BP
-   ENDIF
-'  FOR I=0TO 7
-'   GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
-'  NEXT
-   'こうそくか
-   GCOPY OTW_DP,511-8,511-8,511,511-5,X+WING_SX+1,Y+WING_SY,0
-   GCOPY OTW_DP,511-8,511-4,511,511,X+WING_SX,Y+WING_SY+4,0
+   VAR IX=512-SIZE,IY=512-SIZE
+   GFILL IX,IY,511,511,0
+   GPUTCHR IX,IY,C,S2,S2,COL
+   GCOPY IX,IY,511,512-S2*4,X+1,Y,0
+   GCOPY IX,IY+S2*4,511,511,X,Y+S2*4,0
   ELSE
-   GPUTCHRSize1Window WND,X,Y,C,S2,COL
+   GPUTCHR X,Y,C,S2,S2,COL
   ENDIF
   IF STYLE AND 1 THEN
    INC X
@@ -6453,16 +6945,16 @@
   ENDIF
   X=X2
  ELSE
-  GPUTCHRSize1Window WND,X,Y,C,S2,COL
+  GPUTCHR X,Y,C,S2,S2,COL
   IF STYLE AND 1 THEN
-   GPUTCHRSize1Window WND,X+1,Y,C,S2,COL
+   GPUTCHR X+1,Y,C,S2,S2,COL
   ENDIF
  ENDIF
  IF STYLE AND 4THEN
-  GLINEWindow WND,X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
+  GLINE X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
  ENDIF
  IF STYLE AND 8THEN
-  GLINEWindow WND,X,Y+SIZE-1,X+SIZE-1,Y+SIZE-1,COL
+  GLINE X,Y+SIZE-1,X+SIZE-1,Y+SIZE-1,COL
  ENDIF
 END
 VAR OTYDOCCTL
@@ -6486,6 +6978,7 @@
 DIM OTYDOC_WPREV[0]
 DIM OTYDOC_ShowLine[0]
 DIM OTYDOC_CurLine[0]
+DIM OTYDOC_LastShowLine[0]
 DIM OTYDOC_WSIZE[0]
 DIM OTYDOC_STYLE[0]
 DIM OTYDOC_WSIZE2[0]
@@ -6493,7 +6986,18 @@
 DIM OTYDOC_COL[0]
 DIM OTYDOC_COL2[0]
 DIM OTYDOC_CX[0]
-
+DIM OTYDOC_SCRBAR[0]
+DIM OTYDOC_SCRBARPOS[0]
+DIM OTYDOC_HASSTARTSEL[0]
+DIM OTYDOC_HASENDSEL[0]
+DIM OTYDOC_SEL1[0]
+DIM OTYDOC_SEL1X[0]
+DIM OTYDOC_SEL2[0]
+DIM OTYDOC_SEL2X[0]
+DIM OTYDOC_SELS[0]
+DIM OTYDOC_SELSX[0]
+DIM OTYDOC_ISSEL[0]
+DIM OTYDOC_SELREVERSE[0]
 VAR OTYDOC_BEG$
 VAR OTYDOC_END$
 COMMON DEF INIT_OTYDOC
@@ -6509,6 +7013,8 @@
   E=SetControlCreateHandler(OTYDOCCTL,"OTYDocCreate")
   E=SetControlResizeHandler(OTYDOCCTL,"OTYDocResize")
   E=SetControlLMouseDownHandler(OTYDOCCTL,"OTYDocLMouseUp")
+  E=SetControlMouseMoveHandler(OTYDOCCTL,"OTYDocMouseMove")
+  E=SetControlNotifHandler(OTYDOCCTL,"OTYDocNotif")
   OTYDOC_LINESIZ=1024
   OTYDOC_VAL$=NewArray$(OTYDOC_LINESIZ)
   OTYDOC_LINE=NewArray(OTYDOC_LINESIZ)
@@ -6529,6 +7035,7 @@
   OTYDOC_WPREV=NewArray(OTYDOC_WSIZ)
   OTYDOC_ShowLine=NewArray(OTYDOC_WSIZ)
   OTYDOC_CurLine=NewArray(OTYDOC_WSIZ)
+  OTYDOC_LastShowLine=NewArray(OTYDOC_WSIZ)
   OTYDOC_WSIZE=NewArray(OTYDOC_WSIZ)
   OTYDOC_STYLE=NewArray(OTYDOC_WSIZ)
   OTYDOC_WSIZE2=NewArray(OTYDOC_WSIZ)
@@ -6536,6 +7043,18 @@
   OTYDOC_COL=NewArray(OTYDOC_WSIZ)
   OTYDOC_COL2=NewArray(OTYDOC_WSIZ)
   OTYDOC_CX=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SCRBAR=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SCRBARPOS=NewArray(OTYDOC_WSIZ)
+  OTYDOC_HASSTARTSEL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_HASENDSEL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL1=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL1X=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL2=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL2X=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELS=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELSX=NewArray(OTYDOC_WSIZ)
+  OTYDOC_ISSEL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELREVERSE=NewArray(OTYDOC_WSIZ)
   OTYDOC_WFREE=1
   FOR I=1TO OTYDOC_WSIZ-2
    OTYDOC_WNEXT[I]=I+1
@@ -6664,6 +7183,17 @@
  VAR SCR,E
  VAR W=GetWindowWidth(WND),
  NewVScrollBar WND,0 OUT SCR,E
+ OTYDOC_NewCTL WND
+ VAR D=OTYDOC_GetData(WND)
+ IF!D THEN RETURN
+ OTYDOC_SCRBAR[D]=SCR
+ VAR S=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D),0)
+ OTYDOC_ShowLine[D]=S
+ OTYDOC_CurLine[D]=S
+ OTYDOC_COL2[D]=RGBToShort(RGB(0,0,0))
+ OTYDOC_COL[D]=RGBToShort(RGB(0,0,0))
+ OTYDOC_WSIZE[D]=8
+ OTYDOC_WSIZE2[D]=8
 END
 COMMON DEF OTYDocResize WND,C,T,A1,WH
  VAR W,H
@@ -6678,13 +7208,17 @@
 DEF OTYDOCRepaint WND
  OTYDOCRepaintSEL WND,FALSE,0,0
 END
+'CONTAINS STARTSELECTION
+'CONTAINS ENDSELECTION
 DEF OTYDOCRepaintSEL WND,SEL_FLG,SX,SY
- IF GBeginWindow(WND)THEN RETURN
- GCLSWindow WND,RGB(255,255,255)
- VAR W=GetWindowWidth(WND)
+ IF GBeginDirect(WND)THEN RETURN
+ GCLS RGB(255,255,255)
+ VAR W=GetWindowWidth(WND)-8
  VAR H=GetWindowHeight(WND)
- IF!OTYDOC_GetData(WND)THEN OTYDOC_NewCTL WND
  VAR D=OTYDOC_GetData(WND)
+ IF!D THEN
+  RETURN
+ ENDIF
  VAR I=OTYDOC_ShowLine[D]
  VAR CL=OTYDOC_CurLine[D]
  VAR CX=OTYDOC_CX[D]
@@ -6694,6 +7228,27 @@
  VAR COL=RGB(0,0,0)
  VAR OJ
  VAR ACX=-100,ACY=-100
+ VAR CURSORX,CURSORY
+ VAR ISSEL=OTYDOC_ISSEL[D]
+ IF ISSEL THEN
+  VAR HASSEL1=OTYDOC_HASSTARTSEL[D]
+  VAR HASSEL2=OTYDOC_HASENDSEL[D]
+  IF!HASSEL2&&!HASSEL1 THEN
+   ISSEL=FALSE
+  ELSE
+   IF HASSEL1 THEN
+    VAR SEL1=OTYDOC_SEL1[D]
+    VAR SEL1X=OTYDOC_SEL1X[D]
+   ELSE
+    SEL1=I
+    SEL1X=0
+   ENDIF
+   VAR SEL2=OTYDOC_SEL2[D]
+   VAR SEL2X=OTYDOC_SEL2X[D]
+  ENDIF
+ ENDIF
+ VAR SELBKGND=GetSelectionColor()
+ VAR SELFRGND=GetSelectionTextColor()
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
 '?"YSZ",YSZ
@@ -6704,13 +7259,27 @@
   VAR L=LEN(V$)-1,J,C
   SZ=8
   X=1
+  
+  IF ISSEL THEN
+   IF I==SEL1 THEN
+    VAR SELSX=SEL1X
+    IF SEL1==SEL2 THEN
+     VAR SELEX=SEL2X
+    ELSE
+     SELEX=&H7FFDDDDF
+    ENDIF
+   ELSEIF I==SEL2 THEN
+    SELSX=0
+    SELEX=SEL2X
+   ENDIF
+  ENDIF
   FOR J=0TO L
    C=ASC(V$[J])
    IF C==&Hb10cTHEN CONTINUE
    IF C==&Hb10bTHEN
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      OTYDOC_STYLE[D]=ST
      OTYDOC_COL[D]=RGBToShort(COL)
      OTYDOC_WSIZE[D]=SZ
@@ -6737,73 +7306,405 @@
     ST=A
     CONTINUE
    ENDIF
-   IF  C<128THEN
-    RICHTEXTWindow WND,X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,COL
+   IF C<128THEN
+    VAR TW=SZ*6/8+(ST AND 1)
    ELSE
-    RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
+    TW=SZ+(ST AND 1)
    ENDIF
+   IF X+SZ>=W THEN
+    X=1
+    INC Y,YSZ
+    IF Y+YSZ>=H THEN BREAK
+   ENDIF
+   IF ISSEL&&SELSX<=J&&SELEX>J THEN
+     GFILL X,Y,X+TW-1,Y+YSZ-1,SELBKGND
+     IF C<128THEN
+      RICHTEXT X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,SELFRGND
+     ELSE
+      RICHTEXT X,Y+YSZ-SZ,C,ST,SZ,SELFRGND
+     ENDIF
+   ELSEIF  C<128THEN
+    RICHTEXT X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,COL
+   ELSE
+    RICHTEXT X,Y+YSZ-SZ,C,ST,SZ,COL
+   ENDIF
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+     CURSORX=X
+     CURSORY=Y+YSZ-SZ
      OTYDOC_STYLE[D]=ST
      OTYDOC_COL[D]=RGBToShort(COL)
      OTYDOC_WSIZE[D]=SZ
     ENDIF
    ENDIF
 '   ?HEX$(COL)
-   IF  C<128THEN INC X,SZ*6/8 ELSE INC X,SZ
+   INC X,TW
    IF SEL_FLG THEN
     
    ENDIF
-   IF X+SZ>=W THEN
-    X=1
-    INC Y,YSZ
-    IF Y+YSZ>=H THEN BREAK
-   ENDIF
   NEXT
+  IF ISSEL THEN
+   IF I==SEL1 THEN
+    SELSX=0
+    IF SEL1==SEL2 THEN
+     ISSEL=FALSE
+    ELSE
+     SELEX=&H7FFDDDDF
+    ENDIF
+   ELSEIF I==SEL2 THEN
+    ISSEL=FALSE
+   ENDIF
+  ENDIF
   IF I==CL&&CX>L THEN
-   GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+   GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+   CURSORX=X
+   CURSORY=Y+YSZ-SZ
    OTYDOC_STYLE[D]=ST
    OTYDOC_COL[D]=RGBToShort(COL)
    OTYDOC_WSIZE[D]=SZ
+'   VOID SetWindowCursor(WND,
   ENDIF
   IF LINESTYLE==OTYDOC_CENTER THEN
    'CENTER
    VAR CENT=(W-2-X)DIV 2
-   GCOPYWindow WND,1,Y,X+1,Y+YSZ,CENT,Y,0
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+CENT-1
+   ENDIF
+   GCOPY 1,Y,X+1,Y+YSZ,CENT,Y,0
    IF CENT>1 THEN
-    GFILLWindow WND,1,Y,CENT-1,Y+YSZ,-1
+    GFILL 1,Y,CENT-1,Y+YSZ,-1
    ENDIF
   ENDIF
   IF LINESTYLE==OTYDOC_RIGHT THEN
    'RIGHT
    VAR MOVE=(W-2-X)
-   GCOPYWindow WND,1,Y,X+1,Y+YSZ,MOVE,Y,0
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+MOVE-1
+   ENDIF
+   GCOPY 1,Y,X+1,Y+YSZ,MOVE,Y,0
    IF MOVE>1 THEN
-    GFILLWindow WND,1,Y,MOVE-1,Y+YSZ,-1
+    GFILL 1,Y,MOVE-1,Y+YSZ,-1
    ENDIF
   ENDIF
   INC Y,YSZ
   IF Y+YSZ>=H THEN BREAK
   I=OTYDOC_NEXT[I]
  WEND
- GBOXWindow WND,0,0,W,H,RGB(0,0,0)
- VAR E=GEndWindow(WND)
+ VOID SetWindowCursor(WND,CURSORX,CURSORY)
+ OTYDOC_LastShowLine[D]=I
+ GBOX 0,0,W,H,RGB(0,0,0)
+ VAR E=GCopyDirect(WND,0,0,W,H,0,0,1)
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
 END
-DEF OTYDOC_CLK X,Y
-
+DEF OTYDOC_CLK WND,MX,MY OUT LINE,POS
+ VAR W=GetWindowWidth(WND)-8
+ VAR H=GetWindowHeight(WND)
+ VAR D=OTYDOC_GetData(WND)
+ IF!D THEN
+  RETURN
+ ENDIF
+ VAR I=OTYDOC_ShowLine[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR CX=OTYDOC_CX[D]
+ VAR Y=2,X=2
+ MX=MIN(MAX(X,MX),W)
+ MY=MIN(MAX(Y,MY),H)
+ VAR ST=0
+ VAR SZ=8
+ VAR COL=RGB(0,0,0)
+ VAR OJ
+ VAR ACX=-100,ACY=-100
+ VAR CURSORX,CURSORY
+ VAR MOVECHRPOS
+ WHILE I
+  LINE=-1
+  POS=-1
+  VAR YSZ=OTYDOC_SIZE[I]
+  VAR V$=OTYDOC_VAL$[I]
+  VAR LINESTYLE=OTYDOC_LINESTYLE[I]
+  VAR A
+  VAR L=LEN(V$)-1,J,C
+  VAR ISNCR=LINESTYLE!=OTYDOC_CENTER&&LINESTYLE!=OTYDOC_RIGHT
+  SZ=8
+  X=1
+  MOVECHRPOS=0
+  VAR SY=Y
+  J=0
+  @RETRY
+  VAR SX=X
+  FOR J=J TO L
+   C=ASC(V$[J])
+   IF C==&Hb10cTHEN CONTINUE
+   IF C==&Hb10bTHEN
+   IF I==CL THEN
+    IF CX==J THEN
+     OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
+    ENDIF
+   ENDIF
+    INC J
+    C=ASC(V$[J])
+    ON C GOTO@FNT,@COL,@STY
+    CONTINUE
+    @FNT'0
+    INC J
+    A=ASC(V$[J])
+    SZ=A
+    CONTINUE
+    @COL'1
+    INC J
+    A=ASC(V$[J])
+    COL=ShortToRGB(A)
+    CONTINUE
+    @STY'2
+    INC J
+    A=ASC(V$[J])
+    ST=A
+    CONTINUE
+   ENDIF
+   IF C<128THEN
+    VAR TW=SZ*6/8+(ST AND 1)
+   ELSE
+    TW=SZ+(ST AND 1)
+   ENDIF
+   IF X+SZ>=W THEN
+    X=1
+    INC Y,YSZ
+    IF ISNCR&&LINE!=-1THEN RETURN
+    IF Y+YSZ>=H THEN BREAK
+    MOVECHRPOS=J
+   ENDIF
+   IF MY>=Y&&MY<=Y+YSZ THEN
+    IF MX>=X&&MX<=X+TW-1THEN
+     LINE=I
+     POS=J
+     IF ISNCR THEN RETURN
+    ENDIF
+   ENDIF
+   IF I==CL THEN
+    IF CX==J THEN
+     CURSORX=X
+     CURSORY=Y+YSZ-SZ
+     OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
+    ENDIF
+   ENDIF
+   INC X,TW
+  NEXT
+  IF POS!=-1&&MOVECHRPOS>POS THEN
+   RETURN
+  ENDIF
+  IF I==CL&&CX>L THEN
+   CURSORX=X
+   CURSORY=Y+YSZ-SZ
+   OTYDOC_STYLE[D]=ST
+   OTYDOC_COL[D]=RGBToShort(COL)
+   OTYDOC_WSIZE[D]=SZ
+'   VOID SetWindowCursor(WND,
+  ENDIF
+  IF !ISNCR&&LINESTYLE==OTYDOC_CENTER THEN
+   'CENTER
+   VAR CENT=(W-2-X)DIV 2
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+CENT-1
+   ENDIF
+   IF MY>=Y&&MY<=Y+YSZ THEN
+    X=CENT
+    ISNCR=TRUE
+    J=MOVECHRPOS
+    GOTO @RETRY
+   ENDIF
+   'GCOPY 1,Y,X+1,Y+YSZ,CENT,Y,0
+  ENDIF
+  IF !ISNCR&&LINESTYLE==OTYDOC_RIGHT THEN
+   'RIGHT
+   VAR MOVE=(W-2-X)
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+MOVE-1
+   ENDIF
+   IF MY>=Y&&MY<=Y+YSZ THEN
+    X=MOVE
+    ISNCR=TRUE
+    J=MOVECHRPOS
+    GOTO @RETRY
+   ENDIF
+   'GCOPY 1,Y,X+1,Y+YSZ,MOVE,Y,0
+  ENDIF
+  IF ISNCR&&LINE!=-1THEN RETURN
+  INC Y,YSZ
+  IF MY>=SY&&MY<=Y THEN
+   LINE=I
+   IF SX<=MX THEN
+    POS=LEN(V$)
+   ELSE
+    POS=MOVECHRPOS
+   ENDIF
+   RETURN
+  ENDIF
+  IF!OTYDOC_NEXT[I]THEN
+   MY=Y
+   X=SX
+   IF SX>MX THEN
+    POS=0
+    LINE=I
+    RETURN
+   ENDIF
+   J=MOVECHRPOS
+   GOTO @RETRY
+  ENDIF
+  IF Y+YSZ>=H THEN BREAK
+  I=OTYDOC_NEXT[I]
+ WEND
 END
 COMMON DEF OTYDocLMouseUp WND,CTL,TYPE,X,Y
- ?X,Y
+ VAR LINE,POS
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_ISSEL[D]=FALSE
+ OTYDOC_CLK WND,X,Y OUT LINE,POS
+ IF LINE==-1THEN RETURN
+ OTYDOC_CurLine[D]=LINE
+ OTYDOC_CX[D]=POS
+ VOID RepaintWindow(WND)
+ VOID SetCapture(WND)
 END
+DEF OTYDOC_IsForward(S,LINE)
+ VAR S2=S
+ WHILE S&&S2
+  S=OTYDOC_NEXT[S]
+  S2=OTYDOC_PREV[S2]
+  IF S==LINE THEN RETURN TRUE
+  IF S2==LINE THEN RETURN FALSE
+ WEND
+ RETURN S!=0
+END
+COMMON DEF OTYDocMouseMove WND,CTL,TYPE,X,Y
+ IF GetCapture()!=WND THEN
+  RETURN
+ ENDIF
+ VAR D=OTYDOC_GetData(WND)
+ VAR LINE,POS
+ IF Y>GetWindowHeight(WND)THEN
+  OTYDOC_Scroll D,1
+  OTYDOC_ScrollContent D,1
+ ELSEIF Y<0THEN
+  OTYDOC_Scroll D,-1
+  OTYDOC_ScrollContent D,-1
+ ENDIF
+ OTYDOC_CLK WND,X,Y OUT LINE,POS
+ IF LINE==-1THEN RETURN
+ 'FWD,BKWD
+ IF OTYDOC_ISSEL[D]THEN
+  VAR ISF
+  IF OTYDOC_SELREVERSE[D]THEN
+   IF OTYDOC_SEL2[D]==LINE THEN
+    ISF=OTYDOC_SEL2X[D]<POS
+   ELSE
+    ISF=OTYDOC_IsForward(OTYDOC_SEL2[D],LINE)
+   ENDIF
+  ELSE
+   IF OTYDOC_SEL1[D]==LINE THEN
+    ISF=OTYDOC_SEL1X[D]<POS
+   ELSE
+    ISF=OTYDOC_IsForward(OTYDOC_SEL1[D],LINE)
+   ENDIF
+  ENDIF
+  IF ISF==OTYDOC_SELREVERSE[D]THEN
+   VAR RF=TRUE
+   OTYDOC_SEL2X[D]=OTYDOC_SELSX[D]
+   OTYDOC_SEL2[D]=OTYDOC_SELS[D]
+   OTYDOC_SEL1X[D]=OTYDOC_SELSX[D]
+   OTYDOC_SEL1[D]=OTYDOC_SELS[D]
+   OTYDOC_SELREVERSE[D]=!ISF
+  ENDIF
+ ENDIF
+ IF OTYDOC_SELREVERSE[D]THEN
+  IF OTYDOC_ISSEL[D]&&!RF&&OTYDOC_SEL1X[D]==POS&&OTYDOC_SEL1[D]==LINE THEN RETURN
+  OTYDOC_SEL1X[D]=POS
+  OTYDOC_SEL1[D]=LINE
+ ELSE
+  IF OTYDOC_ISSEL[D]&&!RF&&OTYDOC_SEL2X[D]==POS&&OTYDOC_SEL2[D]==LINE THEN RETURN
+  OTYDOC_SEL2X[D]=POS
+  OTYDOC_SEL2[D]=LINE
+ ENDIF
+ OTYDOC_CurLine[D]=LINE
+ OTYDOC_CX[D]=POS
+ IF!OTYDOC_ISSEL[D]THEN
+  OTYDOC_SELREVERSE[D]=FALSE
+  OTYDOC_ISSEL[D]=TRUE
+  OTYDOC_SEL1[D]=LINE
+  OTYDOC_SEL2[D]=LINE
+  OTYDOC_SELS[D]=LINE
+  OTYDOC_SEL1X[D]=POS
+  OTYDOC_SEL2X[D]=POS
+  OTYDOC_SELSX[D]=POS
+  OTYDOC_HASSTARTSEL[D]=TRUE
+  OTYDOC_HASENDSEL[D]=TRUE
+ ENDIF
+ VOID RepaintWindow(WND)
+END
+DEF OTYDOC_ScrollContent D,DIFF
+ VAR I
+ 'DOWN
+ IF DIFF>0THEN
+  FOR I=1TO DIFF
+   VAR S=OTYDOC_ShowLine[D]
+   IF!OTYDOC_NEXT[S]THEN BREAK
+   IF OTYDOC_ISSEL[D]THEN
+    IF OTYDOC_SEL1[D]==S THEN
+     OTYDOC_HASSTARTSEL[D]=FALSE
+    ENDIF
+    IF OTYDOC_SEL2[D]==S THEN
+     OTYDOC_HASENDSEL[D]=FALSE
+    ENDIF
+   ENDIF
+   OTYDOC_ShowLine[D]=OTYDOC_NEXT[S]
+  NEXT
+ 'UP
+ ELSEIF DIFF<0THEN
+  FOR I=DIFF TO -1
+   S=OTYDOC_ShowLine[D]
+   VAR P=OTYDOC_PREV[S]
+   IF!P THEN BREAK
+   IF OTYDOC_ISSEL[D]THEN
+    IF OTYDOC_SEL1[D]==P THEN
+     OTYDOC_HASSTARTSEL[D]=TRUE
+    ENDIF
+    IF OTYDOC_SEL2[D]==P THEN
+     OTYDOC_HASENDSEL[D]=TRUE
+    ENDIF
+   ENDIF
+   OTYDOC_ShowLine[D]=P
+  NEXT
+ ENDIF
+END
+COMMON DEF OTYDocNotif WND,CTL,TYPE,A1,A2
+ VAR D=OTYDOC_GetData(WND)
+ IF!D THEN RETURN
+ IF A1==OTYDOC_SCRBAR[D]THEN
+  VAR OLD=OTYDOC_SCRBARPOS[D]
+  VAR DIFF=A2-OLD
+  OTYDOC_SCRBARPOS[D]=A2
+  OTYDOC_ScrollContent D,DIFF
+  VOID RepaintWindow(WND)
+ ENDIF
+END
 DEF OTYDOC_UpCursor(WND)
   VAR D=GetWindowVar(WND,0)
   VAR C=OTYDOC_CurLine[D]
-  IF OTYDOC_PREV[C]THEN
-   OTYDOC_CurLine[D]=OTYDOC_PREV[C]
-   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+  VAR P=OTYDOC_PREV[C]
+  IF P THEN
+   OTYDOC_ISSEL[D]=0
+   IF C==OTYDOC_ShowLine[D]THEN
+    OTYDOC_ShowLine[D]=OTYDOC_PREV[C]
+    OTYDOC_Scroll D,-1
+   ENDIF
+   VAR CV$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
+   OTYDOC_CurLine[D]=P
+   OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[OTYDOC_CurLine[D]],OTYDOC_GETPOS(CV$,OTYDOC_CX[D]))
    RETURN 1
 'SCROLL
    VAR L=OTYDOC_PREV[GetWindowVar(WND,1)]
@@ -6816,13 +7717,76 @@
   ENDIF
   RETURN 0
 END
+DEF OTYDOC_SetLine D,S
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ SetScrollBarSize SCRBAR,S
+ SetScrollBarPosition SCRBAR,0
+ OTYDOC_SCRBARPOS[D]=0
+END
+DEF OTYDOC_AddLine D,MY
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ SetScrollBarSize SCRBAR,GetScrollBarSize(SCRBAR)+MY
+END
+DEF OTYDOC_Scroll D,MY
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ OTYDOC_SCRBARPOS[D]=GetScrollBarPosition(SCRBAR)+MY
+ IF OTYDOC_SCRBARPOS[D]<0||GetScrollBarSize(SCRBAR)<OTYDOC_SCRBARPOS[D] THEN
+  OTYDOC_SCRBARPOS[D]=GetScrollBarPosition(SCRBAR)
+  RETURN
+ ENDIF
+ SetScrollBarPosition SCRBAR,OTYDOC_SCRBARPOS[D]
+END
+DEF OTYDOC_GETPOS(V$,CX)
+ VAR I,L=LEN(V$)-1
+ VAR CC
+ IF CX>L THEN
+  CC=CC+1
+  CX=L
+ ENDIF
+ FOR I=0 TO CX
+  VAR A=ASC(V$[I])
+  IF A==&HB10B THEN
+   FOR I=I TO L
+    IF ASC(V$[I])==&HB10CTHEN
+     BREAK
+    ENDIF
+   NEXT
+   CONTINUE
+  ENDIF
+  CC=CC+1
+ NEXT
+ RETURN MAX(0,CC-1)
+END
+DEF OTYDOC_TOPOS(V$,CC)
+ VAR I,L=LEN(V$)-1
+ FOR I=0 TO L
+  VAR A=ASC(V$[I])
+  IF A==&HB10B THEN
+   FOR I=I TO L
+    IF ASC(V$[I])==&HB10CTHEN
+     BREAK
+    ENDIF
+   NEXT
+   CONTINUE
+  ENDIF
+  IF CC<=0 THEN RETURN I
+  CC=CC-1
+ NEXT
+ RETURN L+1
+END
 DEF OTYDOC_DownCursor(WND)
   VAR D=GetWindowVar(WND,0)
   VAR C=OTYDOC_CurLine[D]
 'SCROLL
   IF OTYDOC_NEXT[C]THEN
+   OTYDOC_ISSEL[D]=0
+   IF OTYDOC_CurLine[D]==OTYDOC_LastShowLine[D]THEN
+    OTYDOC_ShowLine[D]=OTYDOC_NEXT[OTYDOC_ShowLine[D]]
+    OTYDOC_Scroll D,1
+   ENDIF
+   VAR CV$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
    OTYDOC_CurLine[D]=OTYDOC_NEXT[C]
-   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+   OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[OTYDOC_CurLine[D]],OTYDOC_GETPOS(CV$,OTYDOC_CX[D]))
    RETURN 1
    IF GetWindowVar(WND,6)==C THEN
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
@@ -6893,9 +7857,8 @@
  CX2=CX
 END
 COMMON DEF OTYDOCButton WND,CTL,T,BTN,_
+ IF GetCapture()==WND THEN RETURN
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
- IF!BTN THEN SetWindowVar WND,5,0RETURN
- IF MAINCNT-F<R THEN RETURN
  IF BTN AND 1 THEN
   IF OTYDOC_UpCursor(WND)THEN
    OTYDOCRepaint WND
@@ -6912,6 +7875,7 @@
  IF BTN AND 4THEN
   VAR CX=OTYDOC_CX[D]
   VAR C=OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=FALSE
   VAR S$=OTYDOC_VAL$[C]
   IF CX<LEN(S$)&&ASC(S$[CX])==&HB10CTHEN
    @LOOP11
@@ -6953,6 +7917,7 @@
  IF BTN AND 8THEN
   CX=OTYDOC_CX[D]
   C=OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=FALSE
   VAR V$=OTYDOC_VAL$[C]
   VAR S0,S1,S2,OC=CX
   IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN
@@ -7050,30 +8015,171 @@
  NEXT
  RETURN FALSE
 END
+DEF OTYDOC_RemoveSelected D OUT X,C
+ IF!OTYDOC_ISSEL[D] THEN
+  RETURN
+ ENDIF
+ C=OTYDOC_CurLine[D]
+ X=OTYDOC_CX[D]
+ VAR SL=OTYDOC_ShowLine[D]
+ VAR S=OTYDOC_SEL1[D]
+ VAR E=OTYDOC_SEL2[D]
+ VAR SX=OTYDOC_SEL1X[D]
+ VAR EX=OTYDOC_SEL2X[D]
+ IF S==E THEN
+  RemoveStrB OTYDOC_VAL$[S],SX,EX-SX
+  IF C==S&&X>SX THEN
+   X=SX
+  ENDIF
+  RETURN
+ ENDIF
+ OTYDOC_VAL$[S]=MID$(OTYDOC_VAL$[S],0,SX)
+ S=OTYDOC_NEXT[S]
+ VAR DL
+ WHILE 1
+  IF S==C THEN
+   C=OTYDOC_PREV[S]
+   X=LEN(OTYDOC_VAL$[C])
+  ENDIF
+  VAR NXT=OTYDOC_NEXT[S]
+  IF S==E THEN
+   VAR S2=OTYDOC_SEL1[D]
+   OTYDOC_VAL$[S2]=OTYDOC_VAL$[S2]+MID$(OTYDOC_VAL$[S],EX,LEN(OTYDOC_VAL$[S]))
+  ENDIF
+  VAR _=OTYDOC_DeleteLine(S)
+  INC DL
+  IF S==E THEN
+   BREAK
+  ENDIF
+  S=NXT
+ WEND
+ OTYDOC_AddLine D,-DL
+END
+
+DEF OTYDOC_GetStyle V$,I,E,TYPE OUT S$
+ VAR L=LEN(V$)-1
+ S$=""
+ WHILE 1
+  I=INSTR(I,V$,CHR$(&HB10B))
+  ?I,E
+  IF I==-1THEN RETURN
+  IF I>=E THEN RETURN
+  IF ASC(V$[I+1])==TYPE THEN
+   VAR O=I
+   I=INSTR(I,V$,CHR$(&HB10C))
+   S$=MID$(V$,O,I-O+1)
+  ELSE
+   I=INSTR(I,V$,CHR$(&HB10C))
+  ENDIF
+ WEND
+END
+DEF OTYDOC_RemoveStyle V$,I,E,TYPE
+ VAR S$
+ OTYDOC_GetStyle V$,0,E,TYPE OUT S$
+ VAR L=LEN(V$)-1
+ IF LEN(S$)THEN V$[E-1]=V$[E-1]+S$
+ WHILE 1
+  I=INSTR(I,V$,CHR$(&HB10B))
+  IF I==-1THEN BREAK
+  IF I>=E THEN BREAK
+  IF ASC(V$[I+1])==TYPE THEN
+   REPEAT
+    VAR VI=ASC(V$[I])
+    V$[I]=""
+    DEC E
+   UNTIL VI==&HB10C
+  ELSE
+   I=INSTR(I,V$,CHR$(&HB10C))
+  ENDIF
+ WEND
+END
+'D:DATA
+'S:LINE
+'S$:STYLE(B10B...B10C)
+DEF OTYDOC_SetLineStyle D,S,SX,EX,S$ OUT SX2,EX2
+ VAR CX=OTYDOC_CX[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR TYPE=ASC(S$[1])
+ VAR UF
+ IF TYPE==0THEN 'FONT SIZE
+  IF OTYDOC_SIZE[S]<ASC(S$[2]) THEN
+   OTYDOC_SIZE[S]=ASC(S$[2])
+   UF=TRUE
+  ENDIF
+ ENDIF
+ IF CL==S THEN
+  VAR X2=OTYDOC_GETPOS(OTYDOC_VAL$[S],CX)
+ ENDIF
+ SX2=OTYDOC_GETPOS(OTYDOC_VAL$[S],SX)
+ EX2=OTYDOC_GETPOS(OTYDOC_VAL$[S],EX)
+ OTYDOC_RemoveStyle OTYDOC_VAL$[S],SX,EX,TYPE
+ IF!LEN(OTYDOC_VAL$[S])||LEN(OTYDOC_VAL$[S])<=SX THEN
+  PUSH OTYDOC_VAL$[S],S$
+ ELSE
+  OTYDOC_VAL$[S][SX]=S$+OTYDOC_VAL$[S][SX]
+ ENDIF
+ SX2=OTYDOC_TOPOS(OTYDOC_VAL$[S],SX2)
+ EX2=OTYDOC_TOPOS(OTYDOC_VAL$[S],EX2)
+ IF CL==S THEN
+  OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[S],X2)
+ ENDIF
+ IF TYPE==0&&!UF THEN
+  OTYDOC_AdjustLine S
+ ENDIF
+END
+'&HB10B TYPE ARGS &HB10C
+'=>TYPE ARGSをしてい
+DEF OTYDOC_SetSelectedStyle WND,STYLE$
+ VAR D=OTYDOC_GetData(WND)
+ IF!OTYDOC_ISSEL[D] THEN
+  RETURN
+ ENDIF
+ VAR TYPE=ASC(STYLE$[0])
+ VAR CX=OTYDOC_CX[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR SL=OTYDOC_ShowLine[D]
+ VAR S=OTYDOC_SEL1[D]
+ VAR E=OTYDOC_SEL2[D]
+ VAR SX=OTYDOC_SEL1X[D]
+ VAR EX=OTYDOC_SEL2X[D]
+ IF SX==EX&&S==E THEN RETURN
+ VAR S$=CHR$(&HB10B)+STYLE$+CHR$(&HB10C)
+ IF S==E THEN
+  OTYDOC_SetLineStyle D,S,SX,EX,S$ OUT OTYDOC_SEL1X[D],OTYDOC_SEL2X[D]
+  VOID RepaintWindow(WND)
+  RETURN
+ ENDIF
+ VAR _
+ OTYDOC_SetLineStyle D,S,SX,LEN(OTYDOC_VAL$[S]),S$ OUT OTYDOC_SEL1X[D],_
+ S=OTYDOC_NEXT[S]
+ WHILE 1
+  VAR NXT=OTYDOC_NEXT[S]
+  IF S==E THEN
+   VAR S2=OTYDOC_SEL1[D]
+   OTYDOC_SetLineStyle D,S,0,EX,S$ OUT _,OTYDOC_SEL2X[D]
+   BREAK
+  ENDIF
+  OTYDOC_SetLineStyle D,S,0,LEN(OTYDOC_VAL$[S]),S$ OUT _,_
+  S=NXT
+ WEND
+ VOID RepaintWindow(WND)
+END
 COMMON DEF OTYDocKey WND,CTL,TYPE,KEY,A2
+ IF GetCapture()==WND THEN RETURN
  VAR D=OTYDOC_GetData(WND)
  VAR S=OTYDOC_ShowLine[D]
+ IF OTYDOC_ISSEL[D]THEN
+  'REMOVE
+  OTYDOC_RemoveSelected D OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=0
+  IF KEY==8THEN @END
+ ENDIF
  VAR C=OTYDOC_CurLine[D]
  VAR X=OTYDOC_CX[D]
- IF!OTYDOC_COL2[D]THEN
-  OTYDOC_COL2[D]=RGBToShort(RGB(0,0,0))
- ENDIF
- IF!OTYDOC_COL[D]THEN
-  OTYDOC_COL[D]=RGBToShort(RGB(0,0,0))
- ENDIF
- IF!OTYDOC_WSIZE[D]THEN
-  OTYDOC_WSIZE[D]=8
- ENDIF
- IF!OTYDOC_WSIZE2[D]THEN
-  OTYDOC_WSIZE2[D]=8
- ENDIF
  IF!S THEN
-  S=OTYDOC_NewLine("",0)
-  OTYDOC_ShowLine[D]=S
-  OTYDOC_CurLine[D]=S
-  C=S
+  RETURN
  ENDIF
-  VAR I$=CHR$(KEY)
+ VAR I$=CHR$(KEY)
  IF I$==BS$()THEN
   IF X THEN
    DEC OTYDOC_CX[D]
@@ -7101,6 +8207,7 @@
    OTYDOC_AdjustLine C
   ELSE
    IF OTYDOC_PREV[C]THEN
+    OTYDOC_AddLine D,-1
     S$=OTYDOC_VAL$[C]
     C=OTYDOC_DeleteLine(C)
     OTYDOC_CurLine[D]=C
@@ -7111,16 +8218,22 @@
   ENDIF
  ELSE
   IF I$==CR$()THEN
-   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
+   VAR HEAD$=OTYDOC_NewLineInitStyle$(D)
+   VAR C2=OTYDOC_NewLine(HEAD$+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
    IF!C2 THEN RETURN
+   IF OTYDOC_LastShowLine[D]==OTYDOC_CurLine[D]THEN
+    OTYDOC_ShowLine[D]=OTYDOC_NEXT[OTYDOC_ShowLine[D]]
+    OTYDOC_Scroll D,1
+   ENDIF
+   OTYDOC_AddLine D,1
    OTYDOC_VAL$[C]=MID$(OTYDOC_VAL$[C],0,X)
 '  OTYDOC_DeleteDup2 C
 '  OTYDOC_DeleteDup2 C2
    OTYDOC_AdjustLine C
-   OTYDOC_SIZE[C2]=OTYDOC_WSIZE[C]
+   OTYDOC_SIZE[C2]=OTYDOC_WSIZE[D]
    OTYDOC_AdjustLine C2
    OTYDOC_CurLine[D]=C2
-   OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C2])
+   OTYDOC_CX[D]=LEN(HEAD$)
    IF FALSE THEN 
    SetWindowVar WND,2,C2
    SetWindowVar WND,3,0
@@ -7166,10 +8279,14 @@
    OTYDOC_AdjustLine C
   ENDIF
  ENDIF
+ @END
  OTYDOCRepaint WND
  ?OTYDOC_VAL$[C]
  ?" "*MAX(OTYDOC_CX[D],0);""
 END
+DEF OTYDOC_NewLineInitStyle$(D)
+ RETURN CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)
+END
 '====EVENT HANDLER====
 
 'RichTextEditor API
@@ -7180,6 +8297,9 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT 1
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetItalic WND,F
  VAR D=OTYDOC_GetData(WND)
@@ -7188,6 +8308,9 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextItalic()
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetStrike WND,F
  VAR D=OTYDOC_GetData(WND)
@@ -7196,6 +8319,9 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextStrike()
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetUnderline WND,F
  VAR D=OTYDOC_GetData(WND)
@@ -7204,10 +8330,17 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextUnderline()
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetTextColor WND,COL
  VAR D=OTYDOC_GetData(WND)
  OTYDOC_COL2[D]=RGBToShort(COL)
+ IF OTYDOC_ISSEL[D]THEN
+ ?"S
+  OTYDOC_SetSelectedStyle WND,CHR$(1)+CHR$(OTYDOC_COL2[D])
+ ENDIF
 END
 COMMON DEF RTESetAlignLeft WND
  VAR D=OTYDOC_GetData(WND)
@@ -7227,11 +8360,111 @@
 COMMON DEF RTESetFontSize WND,SIZE
  VAR D=OTYDOC_GetData(WND)
  OTYDOC_WSIZE2[D]=SIZE
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(0)+CHR$(OTYDOC_WSIZE2[D])
+ ENDIF
 END
+DEF OTYDOC_GetFirstLine(F)
+ VAR L
+ WHILE F
+  L=F
+  F=OTYDOC_PREV[F]
+ WEND
+ RETURN L
+END
+'OTYDOC FILE FORMAT
+'LINE1:OTYDOC
+'LINE:LINESTYLE(LEFT,RIGHT,CENTER)...
+COMMON DEF RTESave WND,FILE$ OUT ERR
+ VAR D=OTYDOC_GetData(WND)
+ VAR FILE
+ FileOpen FILE$ OUT FILE,ERR
+ IF ERR THEN RETURN
+ FileWrite FILE,"OTYDOC"+LF$() OUT ERR
+ VAR F=OTYDOC_GetFirstLine(OTYDOC_ShowLine[D])
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2
+ WHILE F
+  VAR LS$=CHR$(OTYDOC_FILE_LINESTYLE)+CHR$(1)+CHR$(OTYDOC_LINESTYLE[F])
+  VAR LC$=CHR$(OTYDOC_FILE_CONTENT)+CHR$(LEN(OTYDOC_VAL$[F]))+OTYDOC_VAL$[F]
+
+  FileWrite FILE,LC$ OUT ERR
+  FileWrite FILE,LS$ OUT ERR
+  F=OTYDOC_NEXT[F]
+ WEND
+ FileClose FILE OUT ERR
+END
+COMMON DEF RTENew WND
+ VAR D=OTYDOC_GetData(WND)
+ VAR F=OTYDOC_ShowLine[D]
+ WHILE F
+  VAR N=OTYDOC_NEXT[F]
+  VAR P=OTYDOC_DeleteLine(F)
+  IF P THEN F=P ELSE F=N
+ WEND
+ VAR L=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D),0)
+ OTYDOC_ShowLine[D]=L
+ OTYDOC_CurLine[D]=L
+ VOID RepaintWindow(WND)
+ OTYDOC_SetLine D,0
+END
+COMMON DEF RTEOpen WND,FILE$ OUT ERR
+ VAR D=OTYDOC_GetData(WND)
+ VAR F$
+ LoadFile FILE$ OUT F$,ERR
+ IF MID$(F$,0,LEN("OTYDOC")+1)!="OTYDOC"+LF$()THEN
+  ERR=TRUE
+  RETURN
+ ENDIF
+ VAR I=LEN("OTYDOC")+1
+ RTENew WND
+ VAR LINE=OTYDOC_ShowLine[D]
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2
+ VAR L=LEN(F$)-1
+ VAR LC
+ FOR I=I TO L
+  VAR C=ASC(F$[I])
+  IF I+1>L THEN BREAK
+  VAR CL=ASC(F$[I+1])
+  IF I+1+CL>L THEN BREAK
+  IF C==OTYDOC_FILE_LINESTYLE THEN
+   VAR V=ASC(F$[I+2])
+   OTYDOC_LINESTYLE[LINE]=V
+  ELSEIF C==OTYDOC_FILE_CONTENT THEN
+   LINE=OTYDOC_NewLine(MID$(F$,I+2,CL),LINE)
+   INC LC
+   OTYDOC_AdjustLine LINE
+  ENDIF
+  I=I+CL+1
+ NEXT
+ IF LINE!=OTYDOC_ShowLine[D]THEN
+  OTYDOC_ShowLine[D]=OTYDOC_DeleteLine(OTYDOC_ShowLine[D])
+  OTYDOC_CurLine[D]=OTYDOC_ShowLine[D]
+  OTYDOC_SetLine D,LC-1
+ ENDIF
+END
 '==================
 VAR OTYDOCCOLOR_CTL
+VAR OTYDOC_MENU_NEW=1
+VAR OTYDOC_MENU_OPEN=2
+VAR OTYDOC_MENU_SAVE=3
+VAR OTYDOC_MENU_SAVEAS=4
+COMMON DEF OTYDOC_WNDSTRNOTIF WND,CTL,TYPE,A1,A2$
+ IF A1==OTYDOC_MENU_SAVEAS THEN
+  VOID RTESave(GetWindowVar(WND,0),A2$)
+ ENDIF
+ IF A1==OTYDOC_MENU_OPEN THEN
+  VOID RTEOpen(GetWindowVar(WND,0),A2$)
+ ENDIF
+END
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
  IF CW==MenuNotifID()THEN
+  IF F==OTYDOC_MENU_NEW THEN
+   RTENew GetWindowVar(WND,0)
+  ELSEIF F==OTYDOC_MENU_SAVEAS THEN
+   VOID SaveFileDialog(WND,"TXT:.DOC",F)
+  ELSEIF F==OTYDOC_MENU_OPEN THEN
+   VOID OpenFileDialog(WND,"TXT:.DOC",F)
+  ENDIF
   RETURN
  ENDIF
  VAR N$=GetWindowName$(CW)
@@ -7285,7 +8518,7 @@
 '  UnCheckButtonsGroup CW
  ENDIF
  IF GetControl(CW)==GetNumUpDownControl()THEN
-  RTESetFontSize GetWindowVar(WND,0),GetNumUpDownValue(CW)
+  RTESetFontSize GetWindowVar(WND,0),GetNumUpDownValue(CW)*8
  ENDIF
 END
 COMMON DEF OTYDOC_WNDRESIZE WND,CTL,TYPE,A1,A2
@@ -7405,6 +8638,7 @@
 '  ExtendControl "OTYDOCCOLOR",GetWindowControl() OUT OTYDOCCOLOR_CTL,E
   NewControl "OTYDOCCOLOR" OUT OTYDOCCOLOR_CTL,E
   E=SetControlNotifHandler(OTYDOC_WNDCTL,"OTYDOC_WNDNOTIF")
+  E=SetControlStrNotifHandler(OTYDOC_WNDCTL,"OTYDOC_WNDSTRNOTIF")
   E=SetControlPainter(OTYDOCCOLOR_CTL,"OTYDOC_COLORPAINT")
   E=SetControlCreateHandler(OTYDOCCOLOR_CTL,"OTYDOC_COLORCREATE")
   E=SetControlChFocusHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorChFocus")
@@ -7415,9 +8649,13 @@
   E=SetControlPainter(OTYDOCLCRBTN_CTL,"OTYDOC_LCRPAINT")
   E=SetControlLMouseDownHandler(OTYDOCLCRBTN_CTL,"OTYDOC_LCRMouseDown")
  ENDIF
- NewTopLevelStyleWindow OTYDOC_WNDCTL,"OTYDOC",256,128,WindowMenuStyle() OR WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow OTYDOC_WNDCTL,"Document",256,128,WindowMenuStyle() OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
+ OTYDOC_MENU_NEW=1
+ OTYDOC_MENU_OPEN=2
+ OTYDOC_MENU_SAVE=3
+ OTYDOC_MENU_SAVEAS=4
  AddMenuItem MENU,"New",1
  AddMenuItem MENU,"Open",2
  AddMenuItem MENU,"Save",3
@@ -7437,7 +8675,7 @@
  NewWindow GetLabelControl(),"size",X,2,31,7,WND,0 OUT E,E
  INC X,32
  NewWindow GetNumUpDownControl(),"0",X,0,11+8*3,11,WND,0 OUT NUM,E
- SetNumUpDownRange NUM,8,96
+ SetNumUpDownRange NUM,1,96/8
  INC X,11+8*3+1
  VAR BTNL,BTNC,BTNR
  NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNL,E
@@ -7471,6 +8709,10 @@
 'E=JoinWindowGroup(BTNR,BTNL)
 'E=JoinWindowGroup(BTNR,BTNC)
  VOID ActiveWindow(WND)
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+ IF LEN(CMD$)THEN
+  RTEOpen DOC,CMD$ OUT E
+ ENDIF
 END
 COMMON DEF L_OTYDOC
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -7940,7 +9182,7 @@
  GetCommandArg GetProcessArgs$(),I OUT DIR$,I
  E=SetCurrentDir(DIR$)
  VAR W=42*4+8,H=64,LBL
- NewTopLevelStyleWindow OTYFILCTL,"Files",W,H,WINDOWMENUSTYLE()OR WINDOWRESIZABLESTYLE() OUT WND,E
+ NewTopLevelStyleWindow OTYFILCTL,"Files",W,H,WINDOWMENUSTYLE()OR WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  OTYFIL_MOPEN=1
@@ -8011,7 +9253,7 @@
  ENDIF
 END
 COMMON DEF MPLAYSNOTIF W,C,T,A1,A2$
- SetWindowName GetWindowVar(W,0),RIGHT$(A2$,LEN(A2$)-1)
+ SetWindowName GetWindowVar(W,0),A2$
  VOID RepaintWindow(GetWindowVar(W,0))
 END
 COMMON DEF I_MPLAY
@@ -8115,9 +9357,10 @@
    RETURN
   ENDIF
  ENDIF
+ IF GetWindowVar(WND,0)==W&&__==ListBoxChItem()THEN RETURN
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$
-  IF ISSAVE&&__!=ListBoxChItem() THEN
+  IF ISSAVE&&GetWindowName$(W)=="OK"&&__!=ListBoxChItem() THEN
    SEL$=GetWindowName$(GetWindowVar(WND,2))
    IF!LEN(SEL$)THEN RETURN
    IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
@@ -8133,7 +9376,7 @@
    RETURN
   ENDIF
   VAR ID=GetWindowVar(WND,3)
-  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,SEL$)
+  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,MID$(SEL$,1,LEN(SEL$)))
   VOID DeleteWindow(WND)
  ELSE
   IF GetWindowName$(W)=="Cancel"THEN
@@ -8375,7 +9618,7 @@
  IF!ODSKCTL THEN
   ExtendControl "ODSK",GetWindowControl() OUT ODSKCTL,E
  ENDIF
- NewTopLevelStyleWindow ODSKCTL,"Desktop",256,128,WINDOWRESIZABLESTYLE() OUT WIN_ROOTWND2,E
+ NewTopLevelStyleWindow ODSKCTL,"Desktop",256,128,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WIN_ROOTWND2,E
  SetProcessVar WIN_ROOTWND2
 END
 COMMON DEF L_ODSK
@@ -8608,7 +9851,7 @@
   ExtendControl "PRUN",GetWindowControl() OUT PRUNCTL,E
  ENDIF
  VAR WND
- NewTopLevelStyleWindow PRUNCTL,"PRUN",128,32,WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow PRUNCTL,"PRUN",128,32,WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
  E=SetControlNotificationHandler(PRUNCTL,"PRUNNotificationHandler")
  SetProcessVar WND
@@ -8637,7 +9880,7 @@
   ExtendControl "LOADER",GetWindowControl() OUT LOADERCTL,E
  ENDIF
  VAR WND
- NewTopLevelStyleWindow LOADERCTL,"LOADER",128,32,WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow LOADERCTL,"LOADER",128,32,WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
  E=SetControlNotificationHandler(LOADERCTL,"LOADERNotificationHandler")
  SetProcessVar WND
@@ -8674,6 +9917,7 @@
  FOR I=0TO LEN(TB_TASKLIST_WND)-1
   IF TB_TASKLIST_WND[I]==CW THEN
    VOID FrontWindow(TB_TASKLIST_TW[I])
+   VOID ActiveWindow(WND)
    RETURN
   ENDIF
  NEXT
@@ -8720,6 +9964,18 @@
   ENDIF
  NEXT
 END
+COMMON DEF TskbarChildWinHandler WND,CTL,TYPE,A1,CWND
+ VAR W1,W2,H1,H2,ERR
+ IF A1==WindowMaxmizeEvent()THEN
+  GetWindowFrameSize CWND OUT W1,H1,W2,H2,ERR
+  VOID MoveResizeWindow(CWND,0,0,GetWindowWidth(GetParentWindow(CWND))-W1-W2,GetWindowHeight(GetParentWindow(CWND))-H2-H1-17)
+  RETURN
+ ELSEIF A1==WindowMinimizeEvent()THEN
+  VOID MoveResizeWindow(CWND,0,GetWindowHeight(GetParentWindow(CWND))-16,32,16)
+  RETURN
+ ENDIF
+ VOID SendChildWindowEvent(GetParentWindow(WND),A1,CWND)
+END
 COMMON DEF I_TSKBAR
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -8741,6 +9997,7 @@
  VAR H=16,W=SW
  NewWindow TSKBARCTL,"TSKBAR",0,SH-H,W,H,GetRootWindow(),WindowFrontFlag() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
+ E=SetControlChildWindowHandler(GetControl(GetRootWindow()),"TskbarChildWinHandler")
  SetProcessVar WND
  VAR TW
  VAR TSX=24
@@ -8832,7 +10089,7 @@
 VAR TSKBAR_TIMER
 VAR TSKBAR_CWND
 COMMON DEF L_TSKBAR
- IF TSKBAR_TIMER!=MAINCNT DIV 10THEN
+ IF 1||TSKBAR_TIMER!=MAINCNT DIV 10THEN
   UPDATE_TSKBAR
 '  TSKBAR_CWND=OCW
   TSKBAR_TIMER=MAINCNT DIV 10
@@ -8915,7 +10172,7 @@
   E=SetControlNotifHandler(CLIPBRDCTL,"CLIPBRDNOTIF")
  ENDIF
  VAR MENU
- NewTopLevelStyleWindow CLIPBRDCTL,"ClipBook Viewer",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE() OUT WND,E
+ NewTopLevelStyleWindow CLIPBRDCTL,"ClipBook Viewer",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
  NewMenu OUT MENU,E
  CLIPBRD_MENU_UPDATE=1
  AddMenuItem MENU,"Update",CLIPBRD_MENU_UPDATE
@@ -9062,7 +10319,7 @@
 DATA 03,11,01,09
 DATA 15,07,13,05
  ENDIF
- NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
+ NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
  SetWindowBackColor WND,0
  SetProcessVar WND
 END
@@ -9522,6 +10779,8 @@
  IF C$=="SH"THEN@SHA
  IF C$=="T"THEN@TA
  IF C$=="D"THEN RETURN RIM_ADD_DAKUTEN$(RIM_HIRA$("T",V$))
+ IF C$=="TH"THEN@THU
+ IF C$=="TS"THEN@TSA
  IF C$=="CH"THEN@CHA
  IF C$=="N"THEN@NA
  IF C$=="H"THEN@HA
@@ -9580,6 +10839,20 @@
  IF V$=="E"THEN RETURN"て"
  IF V$=="O"THEN RETURN"と"
  RETURN C$+V$
+ @THU
+ IF V$=="A"THEN RETURN"てゃ"
+ IF V$=="I"THEN RETURN"てぃ"
+ IF V$=="U"THEN RETURN"てゅ"
+ IF V$=="E"THEN RETURN"てぇ"
+ IF V$=="O"THEN RETURN"てょ"
+ RETURN C$+V$
+ @TSA
+ IF V$=="A"THEN RETURN"つぁ"
+ IF V$=="I"THEN RETURN"つぃ"
+ IF V$=="U"THEN RETURN"つ"
+ IF V$=="E"THEN RETURN"つぇ"
+ IF V$=="O"THEN RETURN"つぉ"
+ RETURN C$+V$
  @CHA
  IF V$=="A"THEN RETURN"ちゃ"
  IF V$=="I"THEN RETURN"ち"
@@ -9701,11 +10974,14 @@
 END
 VAR RIM_BUF2$
 VAR RIM_WND
-DEF RIM_SENDKEY(IM,K$)
- SetWindowName RIM_WND,RIM_BUF2$
- VOID RepaintWindow(RIM_WND)
+DEF RIM_UPDATEWINDOW K$
+ SetWindowName RIM_WND,K$
+ VOID ResizeWindow(RIM_WND,LEN(K$)*8-1,7)
  VOID ShowWindow(RIM_WND)
+END
+DEF RIM_SENDKEY(IM,K$)
  PUSH RIM_BUF2$,K$
+ RIM_UPDATEWINDOW RIM_BUF2$
 END
 DIM RIM_CURBUNSETSU$[0]
 DIM RIM_CURTXT$[0]
@@ -9727,6 +11003,9 @@
   RETURN SendIMText(IM,CR$())
  ENDIF
  IF RIM_CONVF THEN
+  IF RIM_CANDWND THEN
+   RIMNOTIF 0,0,0,RIM_CANDWND,0
+  ENDIF
   RIM_CONVF=0
   VAR ERR=SendIMText(IM,Join$(RIM_CURTXT$,""))
  ELSE
@@ -9758,6 +11037,7 @@
  NEXT
  RETURN M
 END
+VAR OTYIME_LOADED
 DEF RIM_ENTER(IM)
  IF!LEN(RIM_BUF2$)THEN
   VAR RK$=RIM_KEYBUF$
@@ -9768,9 +11048,12 @@
   DIM CAND$[0]
   OTYIME_GETCAND RIM_CURBUNSETSU$[RIM_SELBUNSETSU] OUT CAND$
   VAR RW=GetParentWindow(RIM_WND),E
-  VAR Y=GetWindowHeight(RW)-64-8
+  VAR Y=GetWindowY(RIM_WND)-64
+  IF Y<0 THEN
+   Y=GetWindowY(RIM_WND)+8
+  ENDIF
   VAR W=RIM_MAXLEN(CAND$)*8+12
-  VAR X=MIN(RW-W,RIM_CALC_X())
+  VAR X=MAX(GetWindowX(RIM_WND)+MIN(RW-W,RIM_CALC_X()),0)
   VAR H=63
   IF RIM_CANDWND THEN
    ClearListBox RIM_CANDWND
@@ -9787,15 +11070,21 @@
  ENDIF
  RIM_CONVF=TRUE
  IF 0 THEN DIM A$[0],B$[0]
- OTYIME_K2K RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
+ IF!OTYIME_LOADED THEN
+  OTYIME_INIT
+  CLS
+  OTYIME_LOADED=TRUE
+ ENDIF
+ 'OTYIME_K2K RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
+  KKC2 RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
+' B$=NewArray$(LEN(A$))
+' COPY B$,A$
  RIM_KEYBUF$=""
  RIM_CURTXT$=A$
  RIM_CURBUNSETSU$=B$
  RIM_SELBUNSETSU=0
  RIM_BUF2$=Join$(A$,"")
- SetWindowName RIM_WND,RIM_BUF2$
- VOID RepaintWindow(RIM_WND)
- VOID ShowWindow(RIM_WND)
+ RIM_UPDATEWINDOW RIM_BUF2$
  RETURN 0'ERR
 END
 DEF RIM_KEY IM,KEY
@@ -9821,16 +11110,29 @@
    VOID POP(RIM_KEYBUF$)
   ELSEIF LEN(RIM_BUF2$)THEN
    VOID POP(RIM_BUF2$)
-   
   ENDIF
-  SetWindowName RIM_WND,RIM_BUF2$+RIM_KEYBUF$
-  VOID RepaintWindow(RIM_WND)
-  VOID ShowWindow(RIM_WND)
+  IF!LEN(RIM_BUF2$)&&!LEN(RIM_KEYBUF$)THEN
+   VOID HideWindow(RIM_WND)
+   VOID DeleteWindow(RIM_CANDWND)
+   RETURN
+  ENDIF
+  RIM_UPDATEWINDOW RIM_BUF2$+RIM_KEYBUF$
   RETURN
  ENDIF
- IF!RIM_CONVF THEN
+ IF!RIM_CONVF&&!RIM_TARGETWND THEN
   VAR W=GetActiveWindow()
   RIM_TARGETWND=W
+  VAR X,Y,E
+  GetWindowCursor W OUT X,Y,E
+  IF !E THEN
+   X=CalcWindowX(GetParentWindow(RIM_WND),W)+X
+   Y=CalcWindowY(GetParentWindow(RIM_WND),W)+Y
+   VOID MoveWindow(RIM_WND,X,Y)
+   VOID FrontWindow(RIM_WND)
+  ELSE
+   VOID MoveWindow(RIM_WND,0,GetWindowHeight(GetParentWindow(RIM_WND))-7)
+   VOID FrontWindow(RIM_WND)
+  ENDIF
  ENDIF
  IF!RIM_ISROMA(KEY)THEN
   IF LEN(RIM_KEYBUF$)THEN
@@ -9853,9 +11155,7 @@
   RETURN
  ENDIF
  PUSH RIM_KEYBUF$,CHR$(KEY)
- SetWindowName RIM_WND,RIM_BUF2$+RIM_KEYBUF$
- VOID RepaintWindow(RIM_WND)
- VOID ShowWindow(RIM_WND)
+ RIM_UPDATEWINDOW RIM_BUF2$+RIM_KEYBUF$
  IF ToUpper$(RIM_KEYBUF$)=="NN"THEN
   VOID RIM_SENDKEY(IM,RIM_K$("ん"))
   RIM_KEYBUF$=""
@@ -9870,24 +11170,35 @@
   RIM_CURTXT$[RIM_SELBUNSETSU]=T$
   VOID DeleteWindow(A1)
   RIM_CANDWND=0
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
 END
+DEF RIM_UPDATEWINDOW2
+ VAR I,L=LEN(RIM_CURTXT$)-1
+ VAR W
+ FOR I=0TO L
+  W=W+LEN(RIM_CURTXT$[I])*8
+ NEXT
+ VOID ResizeWindow(RIM_WND,W-1,7)
+END
 COMMON DEF RIMBTN WND,CTL,TYP,BTN,__
- VAR MC=GetWindowVar(WND,RIM_WV_BTNRPT)
- IF ABS(MC-MAINCNT)<10 THEN
+ IF!BTN THEN RETURN
+ IF (BTN AND (#UP OR #DOWN))&&RIM_CANDWND THEN
+  VOID SendButtonWindow(RIM_CANDWND,BTN)
   RETURN
  ENDIF
- VOID DeleteWindow(RIM_CANDWND)
- RIM_CANDWND=0
- SetWindowVar WND,RIM_WV_BTNRPT,MAINCNT
+ IF RIM_CANDWND THEN
+  RIMNOTIF WND,CTL,TYP,RIM_CANDWND,0
+  VOID DeleteWindow(RIM_CANDWND)
+  RIM_CANDWND=0
+ ENDIF
  IF BTN==#LEFT&&RIM_SELBUNSETSU>0 THEN
   DEC RIM_SELBUNSETSU
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
  IF BTN==#RIGHT&&LEN(RIM_CURTXT$)>RIM_SELBUNSETSU+1 THEN
   INC RIM_SELBUNSETSU
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
  IF BTN==#UP&&LEN(RIM_CURTXT$)>RIM_SELBUNSETSU+1 THEN
   PUSH RIM_CURBUNSETSU$[RIM_SELBUNSETSU],RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1][0]
@@ -9902,7 +11213,7 @@
    RIM_CURTXT$[RIM_SELBUNSETSU]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU]
    RIM_CURTXT$[RIM_SELBUNSETSU+1]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1]
   ENDIF
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
  IF BTN==#DOWN THEN
   IF LEN(RIM_CURBUNSETSU$[RIM_SELBUNSETSU])==1THEN RETURN
@@ -9913,7 +11224,7 @@
   UNSHIFT RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1],POP(RIM_CURBUNSETSU$[RIM_SELBUNSETSU])
   RIM_CURTXT$[RIM_SELBUNSETSU]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU]
   RIM_CURTXT$[RIM_SELBUNSETSU+1]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1]
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
 END
 COMMON DEF RIMPAINT WND,CTL,TYP,XY,WH
@@ -9950,6 +11261,7 @@
  VAR RWND=GetRootWindow()
  VAR WND
  NewWindow RIM_CTL,"",0,GetWindowHeight(RWND)-7,GetWindowWidth(RWND),7,RWND,WindowFrontFlag() OUT WND,E
+ SetWindowProperty WND,"SHADOW",FALSE OUT E
  VOID HideWindow(WND)
  RIM_WND=WND
  VAR IM,ERR
@@ -9963,8 +11275,6 @@
  SetProcessVar IM
  KEY 1,"KEY OFF"
  EXEC 2
- OTYIME_INIT
- CLS
 END
 COMMON DEF L_RIM
  VAR X,Y,MMM
@@ -10211,7 +11521,7 @@
  SetGetConsoleCursorHandler CON,"OTWTERM_GETCUR"OUT E
  VAR CW=40
  VAR CH=20
- NewTopLevelStyleWindow OTWTERMCTL,"OTWTERM",CW*8,CH*8,WINDOWRESIZABLESTYLE() OUT WND,E
+ NewTopLevelStyleWindow OTWTERMCTL,"OTWTERM",CW*8,CH*8,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
  E=SetConsoleVar(CON,WND)
  VAR DEFSTYLE=14
  SetWindowVar WND,0,AllocSBArray()
@@ -10238,15 +11548,16 @@
 VAR ODE_IH
 VAR ODE_IX
 VAR ODE_IY
-DEF ODE_GETITEM X,Y OUT I,IX,IY
+DEF ODE_GETITEM WND,X,Y OUT I,IX,IY
  X=X-ODE_IX
+ Y=Y-ODE_IY
  IX=X DIV ODE_IW
  IY=Y DIV ODE_IH
- I=IY
+ I=IY+(IX*(GetWindowHeight(WND)DIV ODE_IH))
 END
 COMMON DEF ODE_LDC WND,CTL,TYP,X,Y
  VAR I
- ODE_GETITEM X,Y OUT I,X,Y
+ ODE_GETITEM WND,X,Y OUT I,X,Y
  IF I<0THEN RETURN
  SetWindowVar WND,ODE_WV_CURRENT,I
  IF 0 THEN DIM DIR$[0]
@@ -10267,7 +11578,7 @@
  VAR IH=ODE_IH
  VAR ICONSX=(IW-16) DIV 2
  VAR ITW=IW DIV 8
- ODE_GETITEM X,Y OUT I,X,Y
+ ODE_GETITEM WND,X,Y OUT I,X,Y
  IF I<0THEN RETURN
  SetWindowVar WND,ODE_WV_CURRENT,I
  ODE_PAINTER WND,CTL,TYP,0,0
@@ -10322,6 +11633,7 @@
    ENDIF
   ENDIF
   IY=IY+IH
+  IF IY+IH>=SH THEN IY=ODE_IY:IX=IX+ODE_IW
  NEXT
  
  IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,1)THEN @END
@@ -10351,9 +11663,9 @@
   ODE_WV_FILES=0
   ODE_WV_CURRENT=1
   ODE_IW=48
-  ODE_IH=40
+  ODE_IH=44
   ODE_IX=8
-  ODE_IY=0
+  ODE_IY=8
  ENDIF
  VAR RWND=GetRootWindow()
  NewWindow ODE_CTL,"",0,0,GetWindowWidth(RWND),GetWindowHeight(RWND),RWND,WindowBackFlag() OUT WND,E
@@ -10449,4 +11761,52 @@
 COMMON DEF L_OTWBENCH
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR OTWCLOCKCTL
+COMMON DEF OTWCLOCKPAINT WND,CTL,TYP,XY,WH_
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH_)
+ OTWCLOCKDRAW WND
+END
+COMMON DEF OTWCLOCKDRAW WND
+ VAR H,M,S
+ TMREAD OUT H,M,S
+ SetWindowVar WND,0,S
+ VAR WW=GetWindowWidth(WND)
+ VAR WH=GetWindowHeight(WND)
+ WW=MIN(WW,WH)
+ WH=WW
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,GetWindowBackColor(WND)
+ SetWindowDrawPos WND,(GetWindowWidth(WND)-WW)DIV 2,(GetWindowHeight(WND)-WW)DIV 2
+ GCIRCLEWindow WND,WW DIV 2,WH DIV 2,WW DIV 2,#BLACK
+ VAR H#=RAD(H*(360/24))
+ VAR M#=RAD(M*(360/60))
+ VAR S#=RAD(S*(360/60))
+ H=S
+ GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(S#)*(WW/2),WW/2+SIN(S#)*(WW/2),#BLACK
+ GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(H#)*(WW/2)*0.5,WW/2+SIN(H#)*(WW/2)*0.5,#BLACK
+ GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(M#)*(WW/2),WW/2+SIN(M#)*(WW/2)*0.9,#BLACK
+ IF GEndWindow(WND)THEN RETURN
+END
+COMMON DEF I_OTWCLOCK
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWCLOCKCTL THEN
+  ExtendControl "CLOCK",GetWindowControl() OUT OTWCLOCKCTL,E
+  E=SetControlPainter(OTWCLOCKCTL,"OTWCLOCKPAINT")
+ ENDIF
+  NewTopLevelStyleWindow OTWCLOCKCTL,"CLOCK",64,64,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
+ SetProcessVar WND
+END
+COMMON DEF L_OTWCLOCK
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+ VAR S
+ TMREAD OUT ,,S
+ IF GetWindowVar(GetProcessVar(),0)!=S THEN
+  OTWCLOCKDRAW GetProcessVar()
+ ENDIF
+END
 
diff -u OTW.TXT OTW2A
--- OTW.TXT
+++ OTW2A
@@ -924,9 +924,19 @@
 VAR CLPBRD$
 VAR CLPBRD#
 VAR CLPBRDPTR
+DIM CLPBRDTYPE$[0]
+DIM CLPBRDDATA$[0]
+DEF CLIPBOARD_INIT
+ CLPBRDTYPE$=NewArray$(0)
+ CLPBRDDATA$=NewArray$(0)
+END
 COMMON DEF ClearClipboard
  CLPBRDCTXT=FALSE
  CLPBRDCFIL=FALSE
+ IF LEN(CLPBRDTYPE$)THEN
+  CLPBRDTYPE$=NewArray$(0)
+  CLPBRDDATA$=NewArray$(0)
+ ENDIF
 END
 COMMON DEF ClipboardContainsText()
  RETURN CLPBRDCTXT
@@ -939,6 +949,30 @@
  CLPBRDCTXT=1
  CLPBRD$=V$
 END
+'TYPE$:RichText
+COMMON DEF ClipboardSetData$ TYPE$,V$
+ VAR I'LINEAR
+ FOR I=0TO LEN(CLPBRDTYPE$)-1
+  IF CLPBRDTYPE$[I]==TYPE$THEN
+   CLPBRDDATA$[I]=V$
+   RETURN
+  ENDIF
+ NEXT
+ PUSH CLPBRDDATA$,V$
+ PUSH CLPBRDTYPE$,TYPE$
+END
+COMMON DEF ClipboardGetData$ TYPE$ OUT DATA$,CONTAINS
+ VAR I'LINEAR
+ FOR I=0TO LEN(CLPBRDTYPE$)-1
+  IF CLPBRDTYPE$[I]==TYPE$THEN
+   DATA$=CLPBRDDATA$[I]
+   CONTAINS=TRUE
+   RETURN
+  ENDIF
+ NEXT
+ CONTAINS=FALSE
+ DATA$=""
+END
 COMMON DEF ClipboardContainsFile()
  RETURN CLPBRDCFIL
 END
@@ -961,10 +995,17 @@
  VAR I=IMG AND 4095
  LoadData FIL$,GetSBArray(IMAGE_PTR[I])
 END
-COMMON DEF NewArrayImage ARRAY OUT IMG,E
- 
+COMMON DEF LoadImage FIL$,W,H OUT IMG,E
+ VAR FILE$
+ NewImage NewArray2(W,H),W,H OUT IMG,E
+ IF E THEN
+  IMG=0
+  RETURN
+ ENDIF
+ VAR I=IMG AND 4095
+ LoadData FIL$,GetSBArray(IMAGE_PTR[I]) OUT E
 END
-COMMON DEF NewImage WIDTH,HEIGHT OUT IMG,E
+COMMON DEF NewImage ARRAY,WIDTH,HEIGHT OUT IMG,E
  IF !IMAGE_FREE THEN IMG=0:E=IMAGE_NOALLOC:RETURN
  VAR PTR=AllocSBArray()
  IF PTR==-1 THEN IMG=0:E=IMAGE_NOALLOC:RETURN
@@ -975,7 +1016,7 @@
  IMAGE_PTR[IMAGE_FREE]=PTR
  IMG=IMAGE_FREE OR IMAGE_IDCNT<<12
  IMAGE_FREE=IMAGE_NEXT[IMAGE_FREE]
- SetSBArray PTR,NewArray(WIDTH,HEIGHT)
+ SetSBArray PTR,ARRAY
  E=0
  RETURN
 END
@@ -985,11 +1026,16 @@
 COMMON DEF DeleteImage(IMG)
  IF!CheckImage(IMG)THEN RETURN IMAGE_NOALLOC
  VAR I=IMG AND 4095
- free IMAGE_PTR[I]
+ FreeSBArray IMAGE_PTR[I]
  IMAGE_NEXT[I]=IMAGE_FREE
  IMAGE_FREE=I
  RETURN 0
 END
+COMMON DEF GLOADImage X,Y,IMG,TF
+ IF!CheckImage(IMG)THEN RETURN
+ VAR I=IMG AND 4095
+ GLOAD X,Y,IMAGE_WIDTH[I],IMAGE_HEIGHT[I],GetSBArray(IMAGE_PTR[I]),1,TF
+END
 VAR MENU_NOALLOC
 COMMON DEF NewMenu OUT MENU,E
  IF !MENU_FREE THEN MENU=0:E=MENU_NOALLOC:RETURN
@@ -3145,6 +3191,10 @@
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GLOAD X+AX,Y+AY,W,H,IMG,FLG,MODE
 END
+COMMON DEF GLOADImageWindow WND,X,Y,IMG,F
+ GLOADImage X+WING_SX,Y+WING_SY,IMG,F
+END
+
 COMMON DEF GSAVEImage IMG,WND,X,Y,W,H,IX,IY
  IF (WND AND NUWIDMASK)==GB_WND THEN RETURN
  IF!CheckImage(IMG)THEN RETURN
@@ -4354,6 +4404,7 @@
  VAR L=GetWindowVar(WND,0)
  IF L&&L==A1 THEN
   VOID HideWindow(L)
+  VOID SendNotifWindow(GetOwnerWindow(WND),A1,A2)
  ENDIF
 END
 COMMON DEF DropDownListBoxChFocus WND,CT,T,F,A2
@@ -4757,6 +4808,7 @@
   OTW_INIT_ERR
   OTW_ASSOC_INIT
   OTW_IM_INITARRAY
+  CLIPBOARD_INIT
   PrintConsoleln "Init setting..."
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -5892,9 +5944,7 @@
  ?"UNK
  RETURN
  @CUT
- TextBoxExCopy WND
- VAR _
- TEXTBOXEX_REMOVESELECTEDTEXT WND OUT _,_
+ TextBoxExCut WND
  RETURN
  @COPY
 '?TEXTBOXEXGETSELECTEDTEXT(WND)
@@ -6404,6 +6454,11 @@
  VAR TXT$=ClipboardGetText$()
  TextBoxExSetSelectedText WND,TXT$
 END
+COMMON DEF TextBoxExCut WND
+ TextBoxExCopy WND
+ VAR _
+ TEXTBOXEX_REMOVESELECTEDTEXT WND OUT _,_
+END
 COMMON DEF TextBoxExSelectAll WND
  VAR BOX=GetWindowVar(WND,7)
  VAR C=TXTBOXEX_CFIRST[BOX]
@@ -6922,34 +6977,27 @@
 END
 COMMON DEF RICHTEXT X,Y,C,STYLE,SIZE,COL
  VAR S2=SIZE DIV 8
- VAR I,X2,BF=0
+ VAR I,X2
 ' INC Y,SIZE MOD 8
- IF SIZE==8THEN'&&(STYLE AND 3)!=3THEN
-  X2=X
   @LOOP1
   IF STYLE AND 2THEN
    VAR IX=512-SIZE,IY=512-SIZE
    GFILL IX,IY,511,511,0
    GPUTCHR IX,IY,C,S2,S2,COL
-   GCOPY IX,IY,511,512-S2*4,X+1,Y,0
-   GCOPY IX,IY+S2*4,511,511,X,Y+S2*4,0
+   IF STYLE AND 1 THEN
+    GPUTCHR X+S2,Y,C,S2,S2,COL
+    GCOPY IX,IY,511,512-S2*4-1,X+1,Y,0
+    GCOPY IX,IY+S2*4,511,511,X,Y+S2*4,0
+   ELSE
+    GCOPY IX,IY,511,512-S2*4-1,X+1,Y,0
+    GCOPY IX,IY+S2*4,511,511,X,Y+S2*4,0
+   ENDIF
   ELSE
    GPUTCHR X,Y,C,S2,S2,COL
+   IF STYLE AND 1 THEN
+    GPUTCHR X+S2,Y,C,S2,S2,COL
+   ENDIF
   ENDIF
-  IF STYLE AND 1 THEN
-   INC X
-   STYLE=STYLE AND NOT 1
-   BF=TRUE
-   GOTO @LOOP1
-   'GPUTCHRWindow WND,X+1,Y,C,COL
-  ENDIF
-  X=X2
- ELSE
-  GPUTCHR X,Y,C,S2,S2,COL
-  IF STYLE AND 1 THEN
-   GPUTCHR X+1,Y,C,S2,S2,COL
-  ENDIF
- ENDIF
  IF STYLE AND 4THEN
   GLINE X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
  ENDIF
@@ -6967,9 +7015,13 @@
 VAR OTYDOC_LEFT
 VAR OTYDOC_CENTER
 VAR OTYDOC_RIGHT
+'left/right/center
 DIM OTYDOC_LINESTYLE[0]
+'heading/list
+DIM OTYDOC_LINEDATA[0]
 'LINE SIZE
 DIM OTYDOC_SIZE[0]
+DIM OTYDOC_INDENT[0]
 VAR OTYDOC_LINESIZ
 
 VAR OTYDOC_WFREE
@@ -6998,8 +7050,17 @@
 DIM OTYDOC_SELSX[0]
 DIM OTYDOC_ISSEL[0]
 DIM OTYDOC_SELREVERSE[0]
+VAR OTYDOC_HEAD1
+VAR OTYDOC_HEAD2
+VAR OTYDOC_HEAD3
+VAR OTYDOC_HEAD4
+VAR OTYDOC_HEAD5
+VAR OTYDOC_HEAD6
+VAR OTYDOC_ORDLIST
+VAR OTYDOC_UORDLIST
 VAR OTYDOC_BEG$
 VAR OTYDOC_END$
+VAR OTYDOC_MENU
 COMMON DEF INIT_OTYDOC
  VAR E
  IF!OTYDOCCTL THEN
@@ -7015,6 +7076,7 @@
   E=SetControlLMouseDownHandler(OTYDOCCTL,"OTYDocLMouseUp")
   E=SetControlMouseMoveHandler(OTYDOCCTL,"OTYDocMouseMove")
   E=SetControlNotifHandler(OTYDOCCTL,"OTYDocNotif")
+  E=SetControlRMouseDownHandler(OTYDOCCTL,"OTYDocRMouseDW")
   OTYDOC_LINESIZ=1024
   OTYDOC_VAL$=NewArray$(OTYDOC_LINESIZ)
   OTYDOC_LINE=NewArray(OTYDOC_LINESIZ)
@@ -7022,9 +7084,19 @@
   OTYDOC_PREV=NewArray(OTYDOC_LINESIZ)
   OTYDOC_SIZE=NewArray(OTYDOC_LINESIZ)
   OTYDOC_LINESTYLE=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_LINEDATA=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_INDENT=NewArray(OTYDOC_LINESIZ)
   OTYDOC_LEFT=0
   OTYDOC_CENTER=1
   OTYDOC_RIGHT=2
+  OTYDOC_HEAD1=1
+  OTYDOC_HEAD2=2
+  OTYDOC_HEAD3=3
+  OTYDOC_HEAD4=4
+  OTYDOC_HEAD5=5
+  OTYDOC_HEAD6=6
+  OTYDOC_ORDLIST=7
+  OTYDOC_UORDLIST=8
   OTYDOC_FREE=1
   VAR I
   FOR I=1TO OTYDOC_LINESIZ-2
@@ -7059,6 +7131,12 @@
   FOR I=1TO OTYDOC_WSIZ-2
    OTYDOC_WNEXT[I]=I+1
   NEXT
+  NewMenu OUT OTYDOC_MENU,E
+  AddMenuItem OTYDOC_MENU,"Copy",1
+  AddMenuItem OTYDOC_MENU,"Cut",2
+  AddMenuItem OTYDOC_MENU,"Paste",3
+  AddMenuItemSeparator OTYDOC_MENU
+  AddMenuItem OTYDOC_MENU,"Select all",4
  ENDIF
 END
 DEF OTYDOC_NewLINE(V$,P)
@@ -7068,7 +7146,9 @@
   OTYDOC_LINE[R]=OTYDOC_LINE[P]+1
  ELSE
   OTYDOC_LINE[R]=1
+  OTYDOC_INDENT[R]=0
  ENDIF
+ OTYDOC_LINEDATA[R]=0
  VAR N
  IF P THEN
   N=OTYDOC_NEXT[P]
@@ -7077,6 +7157,13 @@
  OTYDOC_VAL$[R]=V$
  OTYDOC_NEXT[R]=N
  OTYDOC_PREV[R]=P
+ IF P THEN
+  VAR LD=OTYDOC_LINEDATA[P]
+  IF LD==OTYDOC_UORDLIST||LD==OTYDOC_ORDLIST THEN
+   OTYDOC_LINEDATA[R]=LD
+  ENDIF
+  OTYDOC_INDENT[R]=OTYDOC_INDENT[P]
+ ENDIF
  IF N THEN
   OTYDOC_PREV[N]=R
  ENDIF
@@ -7219,6 +7306,7 @@
  IF!D THEN
   RETURN
  ENDIF
+ VAR SL=OTYDOC_ShowLine[D]
  VAR I=OTYDOC_ShowLine[D]
  VAR CL=OTYDOC_CurLine[D]
  VAR CX=OTYDOC_CX[D]
@@ -7249,6 +7337,7 @@
  ENDIF
  VAR SELBKGND=GetSelectionColor()
  VAR SELFRGND=GetSelectionTextColor()
+ VAR OL=0
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
 '?"YSZ",YSZ
@@ -7258,8 +7347,46 @@
   VAR A
   VAR L=LEN(V$)-1,J,C
   SZ=8
-  X=1
+  X=1+OTYDOC_INDENT[I]
   
+  VAR LINED=OTYDOC_LINEDATA[I]
+  IF LINED==OTYDOC_UORDLIST THEN
+   VAR Y8=(YSZ DIV 8)
+   GFILL X+Y8,Y+2*Y8,X+3*Y8,Y+4*Y8,#BLACK
+   X=X+5*Y8
+   OL=0
+  ELSEIF LINED==OTYDOC_ORDLIST THEN
+   Y8=(YSZ DIV 8)
+   IF OL THEN
+    OL=OL+1
+   ELSEIF I==SL THEN
+    VAR OLS=OTYDOC_PREV[I]
+    OL=1
+    WHILE OLS
+     IF OTYDOC_LINEDATA[OLS]==OTYDOC_ORDLIST THEN
+      OL=OL+1
+      OLS=OTYDOC_PREV[OLS]
+     ELSE
+      BREAK
+     ENDIF
+    WEND
+   ELSE
+    OL=1
+   ENDIF
+   VAR OOL=OL
+   VAR DG=LOG(OL,10)
+   X=X+DG*5*Y8
+   VAR K
+   FOR K=0 TO DG
+    GPUTCHR X,Y,OOL MOD 10+48,Y8,Y8
+    OOL=OOL DIV 10
+    X=X-5*Y8
+   NEXT
+   X=X+DG*5*Y8+14*Y8
+   GFILL X-2*Y8,Y+YSZ-2*Y8,X-Y8-1,Y+YSZ-Y8-1,#BLACK
+  ELSE
+   OL=0
+  ENDIF
   IF ISSEL THEN
    IF I==SEL1 THEN
     VAR SELSX=SEL1X
@@ -7406,6 +7533,7 @@
   RETURN
  ENDIF
  VAR I=OTYDOC_ShowLine[D]
+ VAR SL=OTYDOC_ShowLine[D]
  VAR CL=OTYDOC_CurLine[D]
  VAR CX=OTYDOC_CX[D]
  VAR Y=2,X=2
@@ -7418,6 +7546,7 @@
  VAR ACX=-100,ACY=-100
  VAR CURSORX,CURSORY
  VAR MOVECHRPOS
+ VAR OL=0
  WHILE I
   LINE=-1
   POS=-1
@@ -7428,10 +7557,36 @@
   VAR L=LEN(V$)-1,J,C
   VAR ISNCR=LINESTYLE!=OTYDOC_CENTER&&LINESTYLE!=OTYDOC_RIGHT
   SZ=8
-  X=1
+  X=1+OTYDOC_INDENT[I]
   MOVECHRPOS=0
   VAR SY=Y
   J=0
+  VAR LINED=OTYDOC_LINEDATA[I]
+  IF LINED==OTYDOC_UORDLIST THEN
+   VAR Y8=(YSZ DIV 8)
+   X=X+5*Y8
+  ELSEIF LINED==OTYDOC_ORDLIST THEN
+   Y8=(YSZ DIV 8)
+   IF OL THEN
+    OL=OL+1
+   ELSEIF I==SL THEN
+    VAR OLS=OTYDOC_PREV[I]
+    OL=1
+    WHILE OLS
+     IF OTYDOC_LINEDATA[OLS]==OTYDOC_ORDLIST THEN
+      OL=OL+1
+      OLS=OTYDOC_PREV[OLS]
+     ELSE
+      BREAK
+     ENDIF
+    WEND
+   ELSE
+    OL=1
+   ENDIF
+   X=X+(LOG(OL,10)+1)*5*Y8+2*Y8
+  ELSE
+   OL=0
+  ENDIF
   @RETRY
   VAR SX=X
   FOR J=J TO L
@@ -7571,6 +7726,9 @@
  VOID RepaintWindow(WND)
  VOID SetCapture(WND)
 END
+COMMON DEF OTYDocRMouseDW WND,CTL,TYPE,X,Y
+ ShowContextMenu OTYDOC_MENU,WND
+END
 DEF OTYDOC_IsForward(S,LINE)
  VAR S2=S
  WHILE S&&S2
@@ -7587,12 +7745,17 @@
  ENDIF
  VAR D=OTYDOC_GetData(WND)
  VAR LINE,POS
+ VAR PAINTF
  IF Y>GetWindowHeight(WND)THEN
   OTYDOC_Scroll D,1
   OTYDOC_ScrollContent D,1
+  PAINTF=TRUE
+  VOID RepaintWindow(WND)
  ELSEIF Y<0THEN
   OTYDOC_Scroll D,-1
   OTYDOC_ScrollContent D,-1
+  PAINTF=TRUE
+  VOID RepaintWindow(WND)
  ENDIF
  OTYDOC_CLK WND,X,Y OUT LINE,POS
  IF LINE==-1THEN RETURN
@@ -7644,7 +7807,7 @@
   OTYDOC_HASSTARTSEL[D]=TRUE
   OTYDOC_HASENDSEL[D]=TRUE
  ENDIF
- VOID RepaintWindow(WND)
+ IF!PAINTF THEN VOID RepaintWindow(WND)
 END
 DEF OTYDOC_ScrollContent D,DIFF
  VAR I
@@ -7684,6 +7847,23 @@
 COMMON DEF OTYDocNotif WND,CTL,TYPE,A1,A2
  VAR D=OTYDOC_GetData(WND)
  IF!D THEN RETURN
+ IF A1==MenuNotifID()THEN
+  ON A2 GOTO @I,@COP,@CUT,@PAS,@SEL
+  @I
+  RETURN
+  @COP
+  RTECopy WND
+  RETURN
+  @CUT
+  RTECut WND
+  RETURN
+  @PAS
+  RTEPaste WND
+  RETURN
+  @SEL
+  RTESelectAll WND
+  RETURN
+ ENDIF
  IF A1==OTYDOC_SCRBAR[D]THEN
   VAR OLD=OTYDOC_SCRBARPOS[D]
   VAR DIFF=A2-OLD
@@ -8061,7 +8241,6 @@
  S$=""
  WHILE 1
   I=INSTR(I,V$,CHR$(&HB10B))
-  ?I,E
   IF I==-1THEN RETURN
   IF I>=E THEN RETURN
   IF ASC(V$[I+1])==TYPE THEN
@@ -8093,6 +8272,20 @@
   ENDIF
  WEND
 END
+DEF OTYDOC_RemoveAllStyle V$,I,E
+ VAR S$
+ VAR L=LEN(V$)-1
+ WHILE 1
+  I=INSTR(I,V$,CHR$(&HB10B))
+  IF I==-1THEN BREAK
+  IF I>=E THEN BREAK
+  REPEAT
+   VAR VI=ASC(V$[I])
+   V$[I]=""
+   DEC E
+  UNTIL VI==&HB10C
+ WEND
+END
 'D:DATA
 'S:LINE
 'S$:STYLE(B10B...B10C)
@@ -8357,6 +8550,62 @@
  OTYDOC_LINESTYLE[OTYDOC_CURLINE[D]]=OTYDOC_RIGHT
  VOID RepaintWindow(WND)
 END
+COMMON DEF RTESetHeading WND,LEVEL
+ IF LEVEL<1||LEVEL>6THEN RETURN
+ VAR D=OTYDOC_GetData(WND)
+ VAR CD=OTYDOC_CURLINE[D]
+ OTYDOC_LINEDATA[CD]=OTYDOC_HEAD1+LEVEL-1
+ VAR CX=OTYDOC_GETPOS(OTYDOC_VAL$[CD],OTYDOC_CX[D])
+ OTYDOC_RemoveStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),2'STYLE
+ OTYDOC_RemoveStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),1'COLOR
+ OTYDOC_RemoveStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),0'SIZE
+ VAR FS=8
+ OTYDOC_LINESTYLE[CD]=0
+ IF LEVEL==1THEN
+  OTYDOC_LINESTYLE[CD]=OTYDOC_CENTER
+ ENDIF
+ IF LEVEL<=2THEN FS=16
+ 
+ OTYDOC_WSIZE[D]=FS
+ OTYDOC_WSIZE2[D]=FS
+ VAR FSIZ$=CHR$(&HB10B)+CHR$(0)+CHR$(FS)+CHR$(&HB10C)
+ OTYDOC_COL[D]=RGBToShort(#BLACK)
+ OTYDOC_COL2[D]=RGBToShort(#BLACK)
+ VAR COL$=CHR$(&HB10B)+CHR$(1)+CHR$(RGBToShort(#BLACK))+CHR$(&HB10C)
+ OTYDOC_STYLE[D]=1
+ OTYDOC_STYLE2[D]=1
+ VAR STY$=CHR$(&HB10B)+CHR$(2)+CHR$(1)+CHR$(&HB10C)'BOLD
+ OTYDOC_VAL$[CD]=COL$+FSIZ$+STY$+OTYDOC_VAL$[CD]
+ OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[CD],CX)
+ OTYDOC_AdjustLine CD
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetUnorderedList WND
+ VAR D=OTYDOC_GetData(WND)
+ VAR CD=OTYDOC_CURLINE[D]
+ OTYDOC_LINEDATA[CD]=OTYDOC_UORDLIST
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESetOrderedList WND
+ VAR D=OTYDOC_GetData(WND)
+ VAR CD=OTYDOC_CURLINE[D]
+ OTYDOC_LINEDATA[CD]=OTYDOC_ORDLIST
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTEIndent WND,SZ
+ VAR D=OTYDOC_GetData(WND)
+ VAR CD=OTYDOC_CURLINE[D]
+ INC OTYDOC_INDENT[CD],SZ
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTEClear WND
+ VAR D=OTYDOC_GetData(WND)
+ VAR CD=OTYDOC_CURLINE[D]
+ OTYDOC_INDENT[CD]=0
+ OTYDOC_LINEDATA[CD]=0
+ OTYDOC_LINESTYLE[CD]=0
+ VOID RepaintWindow(WND)
+END
 COMMON DEF RTESetFontSize WND,SIZE
  VAR D=OTYDOC_GetData(WND)
  OTYDOC_WSIZE2[D]=SIZE
@@ -8378,17 +8627,21 @@
 COMMON DEF RTESave WND,FILE$ OUT ERR
  VAR D=OTYDOC_GetData(WND)
  VAR FILE
- FileOpen FILE$ OUT FILE,ERR
+ FileOpen FILE$,FileWriteFlag() OUT FILE,ERR
  IF ERR THEN RETURN
  FileWrite FILE,"OTYDOC"+LF$() OUT ERR
  VAR F=OTYDOC_GetFirstLine(OTYDOC_ShowLine[D])
- VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
  WHILE F
   VAR LS$=CHR$(OTYDOC_FILE_LINESTYLE)+CHR$(1)+CHR$(OTYDOC_LINESTYLE[F])
+  VAR LD$=CHR$(OTYDOC_FILE_LINEDATA)+CHR$(1)+CHR$(OTYDOC_LINEDATA[F])
+  VAR LI$=CHR$(OTYDOC_FILE_INDENT)+CHR$(1)+CHR$(OTYDOC_INDENT[F])
   VAR LC$=CHR$(OTYDOC_FILE_CONTENT)+CHR$(LEN(OTYDOC_VAL$[F]))+OTYDOC_VAL$[F]
 
   FileWrite FILE,LC$ OUT ERR
   FileWrite FILE,LS$ OUT ERR
+  FileWrite FILE,LD$ OUT ERR
+  FileWrite FILE,LI$ OUT ERR
   F=OTYDOC_NEXT[F]
  WEND
  FileClose FILE OUT ERR
@@ -8418,7 +8671,7 @@
  VAR I=LEN("OTYDOC")+1
  RTENew WND
  VAR LINE=OTYDOC_ShowLine[D]
- VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
  VAR L=LEN(F$)-1
  VAR LC
  FOR I=I TO L
@@ -8429,6 +8682,12 @@
   IF C==OTYDOC_FILE_LINESTYLE THEN
    VAR V=ASC(F$[I+2])
    OTYDOC_LINESTYLE[LINE]=V
+  ELSEIF C==OTYDOC_FILE_LINEDATA THEN
+   V=ASC(F$[I+2])
+   OTYDOC_LINEDATA[LINE]=V
+  ELSEIF C==OTYDOC_FILE_INDENT THEN
+   V=ASC(F$[I+2])
+   OTYDOC_INDENT[LINE]=V
   ELSEIF C==OTYDOC_FILE_CONTENT THEN
    LINE=OTYDOC_NewLine(MID$(F$,I+2,CL),LINE)
    INC LC
@@ -8442,6 +8701,193 @@
   OTYDOC_SetLine D,LC-1
  ENDIF
 END
+DEF OTYDOC_PlainText F,S,E,O$
+ VAR L$=MID$(OTYDOC_VAL$[F],S,E-S)
+ VAR TYPE:FOR TYPE=0TO 2
+  OTYDOC_RemoveAllStyle L$,0,LEN(L$)
+ NEXT
+ PUSH O$,L$+LF$()
+END
+DEF OTYDOC_Serialize F,S,E,O$
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
+ VAR L$=""
+ 
+ VAR S$,TYPE
+ FOR TYPE=0TO 2
+  OTYDOC_GetStyle OTYDOC_VAL$[F],0,S,TYPE OUT S$
+  PUSH L$,S$
+ NEXT
+ PUSH L$,MID$(OTYDOC_VAL$[F],S,E-S)
+ VAR LS$=CHR$(OTYDOC_FILE_LINESTYLE)+CHR$(1)+CHR$(OTYDOC_LINESTYLE[F])
+ VAR LD$=CHR$(OTYDOC_FILE_LINEDATA)+CHR$(1)+CHR$(OTYDOC_LINEDATA[F])
+ VAR LI$=CHR$(OTYDOC_FILE_INDENT)+CHR$(1)+CHR$(OTYDOC_INDENT[F])
+ VAR LC$=CHR$(OTYDOC_FILE_CONTENT)+CHR$(LEN(L$))+L$
+ PUSH O$,LC$
+ PUSH O$,LS$
+ PUSH O$,LD$
+ PUSH O$,LI$
+END
+DEF OTYDOC_PastePlainText WND,TXT$
+ VAR D=OTYDOC_GetData(WND)
+ VAR C=OTYDOC_CurLine[D]
+ VAR I,J,LF$=LF$()
+ VAR LST$=MID$(OTYDOC_VAL$[C],OTYDOC_CX[D],LEN(OTYDOC_VAL$[C]))
+ VAR F$=LEFT$(OTYDOC_VAL$[C],OTYDOC_CX[D])
+ VAR S$,TYPE,ST$
+ FOR TYPE=0TO 2
+  OTYDOC_GetStyle F$,0,LEN(F$),TYPE OUT S$
+  PUSH ST$,S$
+ NEXT
+ PUSH LST$,ST$
+ TXT$=TXT$+LST$
+ OTYDOC_VAL$[C]=F$
+ WHILE 1
+  I=INSTR(I,TXT$,LF$)
+  IF I==-1THEN
+   VAR T$=MID$(TXT$,J,LEN(TXT$))
+  ELSE
+   T$=MID$(TXT$,J,I-J)
+  ENDIF
+  IF J==0THEN
+   PUSH OTYDOC_VAL$[C],T$
+  ELSE
+   C=OTYDOC_NewLine(ST$+T$,C)
+  ENDIF
+  IF I==-1THEN BREAK
+  I=I+1
+  J=I
+ WEND
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTEPaste WND
+ VAR D=OTYDOC_GetData(WND)
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_RemoveSelected D OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=0
+ ENDIF
+ VAR D$,CNTNS
+ ClipboardGetData$ "RichText" OUT D$,CNTNS
+ IF!CNTNS THEN
+  IF!ClipboardContainsText()THEN RETURN
+  OTYDOC_PastePlainText WND,ClipboardGetText$()
+  RETURN
+ ENDIF
+ VAR C=OTYDOC_CurLine[D]
+ VAR I,J
+ VAR LST$=MID$(OTYDOC_VAL$[C],OTYDOC_CX[D],LEN(OTYDOC_VAL$[C]))
+ VAR F$=LEFT$(OTYDOC_VAL$[C],OTYDOC_CX[D])
+ VAR S$,TYPE,ST$
+ FOR TYPE=0TO 2
+  OTYDOC_GetStyle F$,0,LEN(F$),TYPE OUT S$
+  PUSH ST$,S$
+ NEXT
+ LST$=ST$+LST$
+ OTYDOC_VAL$[C]=F$
+
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
+ VAR L=LEN(D$)-1
+ VAR LC
+ VAR LINE=C
+ VAR FL=C
+ VAR FIRSTLINE=TRUE
+ FOR I=I TO L
+      C=ASC(D$[I])
+  IF I+1>L THEN BREAK
+  VAR CL=ASC(D$[I+1])
+  IF I+1+CL>L THEN BREAK
+  IF LINE!=FL THEN
+   IF C==OTYDOC_FILE_LINESTYLE THEN
+    VAR V=ASC(D$[I+2])
+    OTYDOC_LINESTYLE[LINE]=V
+   ELSEIF C==OTYDOC_FILE_LINEDATA THEN
+    V=ASC(D$[I+2])
+    OTYDOC_LINEDATA[LINE]=V
+   ELSEIF C==OTYDOC_FILE_INDENT THEN
+    V=ASC(D$[I+2])
+    OTYDOC_INDENT[LINE]=V
+   ENDIF
+  ENDIF
+  IF!FIRSTLINE&&C==OTYDOC_FILE_CONTENT THEN
+    LINE=OTYDOC_NewLine(MID$(D$,I+2,CL),LINE)
+    INC LC
+    OTYDOC_AdjustLine LINE
+  ELSEIF C==OTYDOC_FILE_CONTENT THEN
+   PUSH OTYDOC_VAL$[LINE],MID$(D$,I+2,CL)
+   OTYDOC_AdjustLine LINE
+   FIRSTLINE=FALSE
+  ENDIF
+  I=I+CL+1
+ NEXT
+ PUSH OTYDOC_VAL$[LINE],LST$
+ OTYDOC_AddLine D,LC
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTESelectAll WND
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_ISSEL[D]=TRUE
+ OTYDOC_SEL1X[D]=0
+ OTYDOC_SEL1[D]=OTYDOC_GetFirstLine(OTYDOC_ShowLine[D])
+ VAR L=OTYDOC_ShowLine[D]
+ WHILE L
+  VAR OL=L
+  L=OTYDOC_NEXT[L]
+ WEND
+ OTYDOC_SEL2X[D]=LEN(OTYDOC_VAL$[OL])
+ OTYDOC_SEL2[D]=OL
+ OTYDOC_HASSTARTSEL[D]=FALSE
+ OTYDOC_HASENDSEL[D]=TRUE
+ VOID RepaintWindow(WND)
+END
+COMMON DEF RTECut WND
+ VAR D=OTYDOC_GetData(WND)
+ IF OTYDOC_ISSEL[D]THEN
+  RTECopy WND
+  OTYDOC_RemoveSelected D OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=0
+ ENDIF
+END
+COMMON DEF RTECopy WND
+ VAR D=OTYDOC_GetData(WND)
+ IF!OTYDOC_ISSEL[D] THEN
+  RETURN
+ ENDIF
+ VAR CX=OTYDOC_CX[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR SL=OTYDOC_ShowLine[D]
+ VAR S=OTYDOC_SEL1[D]
+ VAR E=OTYDOC_SEL2[D]
+ VAR SX=OTYDOC_SEL1X[D]
+ VAR EX=OTYDOC_SEL2X[D]
+ VAR O$=""
+ VAR P$=""
+ ClearClipboard
+ IF S==E THEN
+  OTYDOC_PlainText S,SX,EX,P$
+  OTYDOC_SERIALIZE S,SX,EX,O$
+  ClipboardSetData$ "RichText",O$
+  ClipboardSetText P$
+  RETURN
+ ENDIF
+ VAR _
+ OTYDOC_SERIALIZE S,SX,LEN(OTYDOC_VAL$[S]),O$
+ OTYDOC_PlainText S,SX,LEN(OTYDOC_VAL$[S]),P$
+ S=OTYDOC_NEXT[S]
+ WHILE 1
+  VAR NXT=OTYDOC_NEXT[S]
+  IF S==E THEN
+   VAR S2=OTYDOC_SEL1[D]
+   OTYDOC_SERIALIZE S,0,EX,O$
+   OTYDOC_PlainText S,0,EX,P$
+   BREAK
+  ENDIF
+  OTYDOC_SERIALIZE S,0,LEN(OTYDOC_VAL$[S]),O$
+  OTYDOC_PlainText S,0,LEN(OTYDOC_VAL$[S]),P$
+  S=NXT
+ WEND
+ ClipboardSetData$ "RichText",O$
+ ClipboardSetText P$
+END
+
 '==================
 VAR OTYDOCCOLOR_CTL
 VAR OTYDOC_MENU_NEW=1
@@ -8488,6 +8934,14 @@
   VAR X=GetWindowX(WND)+GetWindowX(CW),Y=GetWindowY(WND)+GetWindowY(CW)
   OTYDOC_ShowMenu OTYDOCCOLOR_CTL,WND,X,Y,X+GetWindowWidth(CW),Y+GetWindowHeight(CW)
  ENDIF
+ IF N$==""THEN
+  RTEIndent GetWindowVar(WND,0),8
+  RETURN
+ ENDIF
+ IF N$==""THEN
+  RTEIndent GetWindowVar(WND,0),-8
+  RETURN
+ ENDIF
  IF N$=="OTYDOCCOLOR"THEN
   RTESetTextColor GetWindowVar(WND,0),F
   VOID DeleteWindow(CW)
@@ -8517,14 +8971,30 @@
   ENDIF
 '  UnCheckButtonsGroup CW
  ENDIF
- IF GetControl(CW)==GetNumUpDownControl()THEN
+ IF IsControlExtend(GetControl(CW),GetNumUpDownControl())THEN
   RTESetFontSize GetWindowVar(WND,0),GetNumUpDownValue(CW)*8
  ENDIF
+ IF IsControlExtend(GetControl(CW),GetListBoxControl())THEN
+  VAR C$=GetListBoxSelectedText$(CW)
+  IF LEN(C$)>1&&C$[0]=="H"THEN
+   VAR LEVEL=ASC(C$[1])-ASC("0")
+   RTESetHeading GetWindowVar(WND,0),LEVEL
+  ENDIF
+  IF C$=="  xxx"THEN
+   RTESetUnorderedList GetWindowVar(WND,0)
+  ENDIF
+  IF C$=="1. xxx"THEN
+   RTESetOrderedList GetWindowVar(WND,0)
+  ENDIF
+  IF C$=="clear"THEN
+   RTEClear GetWindowVar(WND,0)
+  ENDIF
+ ENDIF
 END
 COMMON DEF OTYDOC_WNDRESIZE WND,CTL,TYPE,A1,A2
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- VOID ResizeWindow(GetWindowVar(WND,0),W,H-12)
+ VOID ResizeWindow(GetWindowVar(WND,0),W,H-12-12)
 END
 '2PX
 '
@@ -8649,7 +9119,7 @@
   E=SetControlPainter(OTYDOCLCRBTN_CTL,"OTYDOC_LCRPAINT")
   E=SetControlLMouseDownHandler(OTYDOCLCRBTN_CTL,"OTYDOC_LCRMouseDown")
  ENDIF
- NewTopLevelStyleWindow OTYDOC_WNDCTL,"Document",256,128,WindowMenuStyle() OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
+ NewTopLevelStyleWindow OTYDOC_WNDCTL,"Document",256+8,128,WindowMenuStyle() OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  OTYDOC_MENU_NEW=1
@@ -8662,7 +9132,7 @@
  AddMenuItem MENU,"Save as",4
  AddSubMenuItem GetWindowMenu(WND),"File",MENU SetProcessVar WND
  VAR DOC,COL
- NewWindow OTYDOCCTL,"OTYDOC",0,12,256,116,WND,0 OUT DOC,E
+ NewWindow OTYDOCCTL,"OTYDOC",0,12+12,256+8,116-12,WND,0 OUT DOC,E
  SetWindowVar WND,0,DOC
  NewWindow GetToggleButtonControl(),"B",0,0,11,11,WND,0 OUT E,E
  NewWindow GetToggleButtonControl(),"I",12*1,0,11,11,WND,0 OUT E,E
@@ -8690,10 +9160,12 @@
  AddListBoxItem LST,"H1"
  AddListBoxItem LST,"H2"
  AddListBoxItem LST,"H3"
- AddListBoxItem LST,"H4"
- AddListBoxItem LST," xxx"
+ AddListBoxItem LST,"  xxx"
  AddListBoxItem LST,"1. xxx"
- AddListBoxItem LST,"'quote'"
+ AddListBoxItem LST,"clear"
+ AddListBoxItem LST,"H4"
+ AddListBoxItem LST,"H5"
+ AddListBoxItem LST,"H6"
  INC X,56
  SetWindowVar WND,1,BTNL
  SetWindowVar WND,2,BTNC
@@ -8701,6 +9173,8 @@
  SetWindowVar BTNL,7,0
  SetWindowVar BTNC,7,1
  SetWindowVar BTNR,7,2
+ NewWindow GetButtonControl(),"",0,12,11,11,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"",12,12,11,11,WND,0 OUT E,E
  'TODO:GROUPのかくちょう
 'E=JoinWindowGroup(BTNL,BTNC)
 'E=JoinWindowGroup(BTNL,BTNR)
@@ -11544,6 +12018,7 @@
 VAR ODE_CTL
 VAR ODE_WV_FILES
 VAR ODE_WV_CURRENT
+VAR ODE_WV_ICONS
 VAR ODE_IW
 VAR ODE_IH
 VAR ODE_IX
@@ -11563,6 +12038,7 @@
  IF 0 THEN DIM DIR$[0]
  VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
  DIR$=GetSBArray(ARY)
+ IF I>=LEN(DIR$)THEN RETURN
  VAR F$=DIR$[I]
  F$=MID$(F$,1,LEN(F$))
  F$=CombinePath$(CombinePath$(GetHomeDir$(),"desktop"),F$)
@@ -11599,8 +12075,10 @@
  IF GBeginDirect(WND)THEN @END
  GCLS RGB(0,128,128)
  IF 0 THEN DIM DIR$[0]
+ IF 0 THEN DIM ICON[0]
  VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
  DIR$=GetSBArray(ARY)
+ ICON=GetSBArray(GetWindowVar(WND,ODE_WV_ICONS))
  VAR I,L=LEN(DIR$)-1
  VAR IX=ODE_IX,IY=ODE_IY
  VAR IW=ODE_IW
@@ -11618,13 +12096,7 @@
    GFILL IX,IY+16,IX+IW-1,IY+IH-1,GetSelectionColor()
    TC=GetSelectionTextColor()
   ENDIF
-  IF D$[0]=="*"THEN
-   GLOAD IX+ICONSX,IY,16,16,OTYFILICOTXT,1,0
-  ELSEIF D$[0]=="/"THEN
-   GLOAD IX+ICONSX,IY,16,16,OTYFILICODIR,1,0
-  ELSEIF D$[0]==" "THEN
-   GLOAD IX+ICONSX,IY,16,16,OTYFILICODAT,1,0
-  ENDIF
+  GLOADImage IX+ICONSX,IY,ICON[I],FALSE
   GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$))*8)DIV 2,IY+16,MID$(NAME$,0,ITW),TC
   IF LEN(NAME$)>ITW THEN
    GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW)*8)DIV 2,IY+24,MID$(NAME$,ITW,ITW),TC
@@ -11640,12 +12112,47 @@
  @END
  IF GEndWindow(WND)THEN RETURN
 END
+COMMON DEF ODE_DEL WND,CTL,TYP,A1,A2
+ FreeSBArray GetWindowVar(WND,ODE_WV_FILES)
+ FreeSBArray GetWindowVar(WND,ODE_WV_ICONS)
+END
+VAR ODE_IMAGE_TXT
+VAR ODE_IMAGE_DAT
+VAR ODE_IMAGE_DIR
 DEF ODE_UPDATEFILES WND
  VAR ERR
  IF 0 THEN DIM DIR$[0]
- GetFiles CombinePath$(GetHomeDir$(),"desktop/") OUT DIR$,ERR
+ VAR D$=CombinePath$(GetHomeDir$(),"desktop/")
+ GetFiles D$ OUT DIR$,ERR
  VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
  SetSBArray ARY,DIR$
+ DIM ICONS[LEN(DIR$)]
+ VAR I
+ FOR I=0TO LEN(DIR$)-1
+  ICONS[I]=ODE_IMAGE_TXT
+  
+  IF ToUpper$(GetFileExtension$(DIR$[I]))=="LNK"THEN
+   VAR F$
+   LoadFile CombinePath$(D$,MID$(DIR$[I],1,LEN(DIR$[I]))) OUT F$,ERR
+   IF ERR THEN CONTINUE
+   IF 0THEN DIM K$[0],V$[0]
+   LoadConfigFile F$ OUT K$,V$
+   VAR I16=FindArray(K$,"icon16")
+   IF I16==-1THEN CONTINUE
+   VAR IMG
+   LoadImage V$[I16],16,16 OUT IMG,ERR
+   IF ERR THEN CONTINUE
+   ICONS[I]=IMG
+  ELSEIF DIR$[I][0]=="*"THEN
+   ICONS[I]=ODE_IMAGE_TXT
+  ELSEIF DIR$[I][0]=="/"THEN
+   ICONS[I]=ODE_IMAGE_DIR
+  ELSEIF DIR$[I][0]==" "THEN
+   ICONS[I]=ODE_IMAGE_DAT
+  ENDIF
+ NEXT
+ ARY=GetWindowVar(WND,ODE_WV_ICONS)
+ SetSBArray ARY,ICONS
 END
 COMMON DEF I_ODE
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
@@ -11656,12 +12163,17 @@
  VAR WND,E
  IF!ODE_CTL THEN
   RC_OTYFIL
+  NewImage OTYFILICOTXT,16,16 OUT ODE_IMAGE_TXT,E
+  NewImage OTYFILICODAT,16,16 OUT ODE_IMAGE_DAT,E
+  NewImage OTYFILICODIR,16,16 OUT ODE_IMAGE_DIR,E
   NewControl "otya desktop environment" OUT ODE_CTL,E
   E=SetControlPainter(ODE_CTL,"ODE_PAINTER")
   E=SetControlLMouseDownHandler(ODE_CTL,"ODE_LMD")
   E=SetControlLDoubleClickHandler(ODE_CTL,"ODE_LDC")
+  E=SetControlDeleteHandler(ODE_CTL,"ODE_DEL")
   ODE_WV_FILES=0
   ODE_WV_CURRENT=1
+  ODE_WV_ICONS=2
   ODE_IW=48
   ODE_IH=44
   ODE_IX=8
@@ -11671,6 +12183,7 @@
  NewWindow ODE_CTL,"",0,0,GetWindowWidth(RWND),GetWindowHeight(RWND),RWND,WindowBackFlag() OUT WND,E
  SetWindowVar WND,ODE_WV_FILES,AllocSBArray()
  SetWindowVar WND,ODE_WV_CURRENT,-1
+ SetWindowVar WND,ODE_WV_ICONS,AllocSBArray()
  ODE_UPDATEFILES WND
  SetProcessVar WND
  NewProcess "TSKBAR","" OUT E,E
diff -u OTW.TXT OTW2B
--- OTW.TXT
+++ OTW2B
@@ -2962,12 +2962,18 @@
  WING_SY=Y+WIN_FY[NUWID]
 END
 COMMON DEF GBeginDirect(WND)
+ IF!CheckWindow(WND)THEN RETURN
  GPAGE OTW_SP,OTW_DDRAWPAGE
  GCLIP 1
  RETURN 0
 END
-COMMON DEF GEndDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
- GPAGE OTW_SP,OTW_BP
+COMMON DEF GEndDirect(WND)
+ IF!CheckWindow(WND)THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_BEGIN[NUWID]=TRUE
+ GB_WND=NUWID
+ VAR E=GEndWindow(WND)
+ RETURN 0
 END
 COMMON DEF GCopyDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
  GPAGE OTW_SP,OTW_BP
@@ -3074,8 +3080,10 @@
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
+ 'VAR OBP
+ 'GPAGE OUT ,OBP
  GPAGE OTW_SP,OTW_DP
- GCLIP 1,0,0,400,239
+ GCLIP 1,0,0,399,239
  GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
  IF WIN_SP[NUWID]AND 512THEN OTW_SPCHR NUWID
  IF MAINCNT-OTW_LASTUPD>5THEN UpdateMouse
@@ -7008,13 +7016,16 @@
 VAR OTYDOCCTL
 VAR OTYDOC_WNDCTL
 VAR OTYDOC_FREE
+'===LINE===
 DIM OTYDOC_LINE[0]
 DIM OTYDOC_NEXT[0]
 DIM OTYDOC_PREV[0]
 DIM OTYDOC_VAL$[0]
+'===LINE===
 VAR OTYDOC_LEFT
 VAR OTYDOC_CENTER
 VAR OTYDOC_RIGHT
+'===LINE===
 'left/right/center
 DIM OTYDOC_LINESTYLE[0]
 'heading/list
@@ -7022,6 +7033,7 @@
 'LINE SIZE
 DIM OTYDOC_SIZE[0]
 DIM OTYDOC_INDENT[0]
+'===LINE===
 VAR OTYDOC_LINESIZ
 
 VAR OTYDOC_WFREE
@@ -7037,6 +7049,9 @@
 DIM OTYDOC_STYLE2[0]
 DIM OTYDOC_COL[0]
 DIM OTYDOC_COL2[0]
+DIM OTYDOC_DEFSIZE[0]
+DIM OTYDOC_DEFSTYLE[0]
+DIM OTYDOC_DEFCOL[0]
 DIM OTYDOC_CX[0]
 DIM OTYDOC_SCRBAR[0]
 DIM OTYDOC_SCRBARPOS[0]
@@ -7050,14 +7065,35 @@
 DIM OTYDOC_SELSX[0]
 DIM OTYDOC_ISSEL[0]
 DIM OTYDOC_SELREVERSE[0]
+DIM OTYDOC_SEL1TABLE[0]
+DIM OTYDOC_SEL1ROW[0]
+DIM OTYDOC_SEL1COL[0]
+DIM OTYDOC_SEL2TABLE[0]
+DIM OTYDOC_SEL2ROW[0]
+DIM OTYDOC_SEL2COL[0]
+DIM OTYDOC_SELSTABLE[0]
+DIM OTYDOC_SELSROW[0]
+DIM OTYDOC_SELSCOL[0]
 VAR OTYDOC_HEAD1
 VAR OTYDOC_HEAD2
 VAR OTYDOC_HEAD3
 VAR OTYDOC_HEAD4
 VAR OTYDOC_HEAD5
 VAR OTYDOC_HEAD6
+VAR OTYDOC_HEADLAST
 VAR OTYDOC_ORDLIST
 VAR OTYDOC_UORDLIST
+VAR OTYDOC_TABLE
+'===LINE===
+'TABLE IS SBARRAY DATA
+DIM OTYDOC_TABLEDATA[0]
+DIM OTYDOC_TABLEPARENT[0]
+'===LINE===
+VAR OTYDOC_TABLEARY_COL
+VAR OTYDOC_TABLEARY_ROW
+VAR OTYDOC_TABLEARY_LINE
+VAR OTYDOC_TABLEARY_HEAD
+VAR OTYDOC_TBLELM
 VAR OTYDOC_BEG$
 VAR OTYDOC_END$
 VAR OTYDOC_MENU
@@ -7086,6 +7122,13 @@
   OTYDOC_LINESTYLE=NewArray(OTYDOC_LINESIZ)
   OTYDOC_LINEDATA=NewArray(OTYDOC_LINESIZ)
   OTYDOC_INDENT=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_TABLEDATA=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_TABLEPARENT=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_TABLEARY_COL=0
+  OTYDOC_TABLEARY_ROW=1
+  OTYDOC_TABLEARY_LINE=2
+  OTYDOC_TABLEARY_HEAD=3
+  OTYDOC_TBLELM=1
   OTYDOC_LEFT=0
   OTYDOC_CENTER=1
   OTYDOC_RIGHT=2
@@ -7095,8 +7138,10 @@
   OTYDOC_HEAD4=4
   OTYDOC_HEAD5=5
   OTYDOC_HEAD6=6
+  OTYDOC_HEADLAST=6
   OTYDOC_ORDLIST=7
   OTYDOC_UORDLIST=8
+  OTYDOC_TABLE=9
   OTYDOC_FREE=1
   VAR I
   FOR I=1TO OTYDOC_LINESIZ-2
@@ -7114,6 +7159,9 @@
   OTYDOC_STYLE2=NewArray(OTYDOC_WSIZ)
   OTYDOC_COL=NewArray(OTYDOC_WSIZ)
   OTYDOC_COL2=NewArray(OTYDOC_WSIZ)
+  OTYDOC_DEFSIZE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_DEFSTYLE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_DEFCOL=NewArray(OTYDOC_WSIZ)
   OTYDOC_CX=NewArray(OTYDOC_WSIZ)
   OTYDOC_SCRBAR=NewArray(OTYDOC_WSIZ)
   OTYDOC_SCRBARPOS=NewArray(OTYDOC_WSIZ)
@@ -7125,6 +7173,15 @@
   OTYDOC_SEL2X=NewArray(OTYDOC_WSIZ)
   OTYDOC_SELS=NewArray(OTYDOC_WSIZ)
   OTYDOC_SELSX=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELSTABLE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELSROW=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELSCOL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL1TABLE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL1ROW=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL1COL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL2TABLE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL2ROW=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL2COL=NewArray(OTYDOC_WSIZ)
   OTYDOC_ISSEL=NewArray(OTYDOC_WSIZ)
   OTYDOC_SELREVERSE=NewArray(OTYDOC_WSIZ)
   OTYDOC_WFREE=1
@@ -7144,9 +7201,11 @@
  OTYDOC_FREE=OTYDOC_NEXT[OTYDOC_FREE]
  IF P THEN
   OTYDOC_LINE[R]=OTYDOC_LINE[P]+1
+  OTYDOC_TABLEPARENT[R]=OTYDOC_TABLEPARENT[P]
  ELSE
   OTYDOC_LINE[R]=1
   OTYDOC_INDENT[R]=0
+  OTYDOC_TABLEPARENT[R]=0
  ENDIF
  OTYDOC_LINEDATA[R]=0
  VAR N
@@ -7274,13 +7333,18 @@
  VAR D=OTYDOC_GetData(WND)
  IF!D THEN RETURN
  OTYDOC_SCRBAR[D]=SCR
- VAR S=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D),0)
- OTYDOC_ShowLine[D]=S
- OTYDOC_CurLine[D]=S
  OTYDOC_COL2[D]=RGBToShort(RGB(0,0,0))
  OTYDOC_COL[D]=RGBToShort(RGB(0,0,0))
+ OTYDOC_DEFCOL[D]=RGBToShort(RGB(0,0,0))
  OTYDOC_WSIZE[D]=8
  OTYDOC_WSIZE2[D]=8
+ OTYDOC_DEFSIZE[D]=8
+ OTYDOC_STYLE[D]=0
+ OTYDOC_STYLE2[D]=0
+ OTYDOC_DEFSTYLE[D]=0
+ VAR S=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D),0)
+ OTYDOC_ShowLine[D]=S
+ OTYDOC_CurLine[D]=S
 END
 COMMON DEF OTYDocResize WND,C,T,A1,WH
  VAR W,H
@@ -7288,29 +7352,387 @@
  IF W<0||H<0THEN RETURN
  VAR CW=GetChildWindow(WND)
  VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+'RESIZE TABLE
+ VAR D=OTYDOC_GetData(WND)
+ VAR LINE=OTYDOC_ShowLine[D]
+ W=OTYDOC_GetWidth(WND)
+ IF 0THEN DIM A[0]
+ WHILE LINE
+  IF OTYDOC_TABLEDATA[LINE]THEN
+   A=GetSBArray(OTYDOC_TABLEDATA[LINE])
+   OTYDOC_UpdateTable2 A,W
+   OTYDOC_UpdateChildrenTable A
+  ENDIF
+  LINE=OTYDOC_NEXT[LINE]
+ WEND
+ LINE=OTYDOC_PREV[LINE]
+ WHILE LINE
+  IF OTYDOC_TABLEDATA[LINE]THEN
+   A=GetSBArray(OTYDOC_TABLEDATA[LINE])
+   OTYDOC_UpdateTable2 A,W
+   OTYDOC_UpdateChildrenTable A
+  ENDIF
+  LINE=OTYDOC_PREV[LINE]
+ WEND
 END
 COMMON DEF OTYDocPainter WND,CTL,TYPE,A1,A2
  OTYDOCRepaint WND
 END
 DEF OTYDOCRepaint WND
- OTYDOCRepaintSEL WND,FALSE,0,0
+ OTYDOCRepaintSEL WND',FALSE,0,0
 END
+DEF OTYDOC_CalcSize I,MAX OUT MINW,MAXW,H
+ MINW=0
+ MAXW=0
+ H=0
+ VAR ST=0
+ VAR SZ=8
+ VAR COL=RGB(0,0,0)
+ VAR A
+ VAR OL
+ VAR SL=I
+ WHILE I
+  VAR J
+  VAR V$=OTYDOC_VAL$[I]
+  VAR YSZ=OTYDOC_SIZE[I],L=LEN(V$)-1
+  VAR SX=OTYDOC_INDENT[I]
+  VAR X=SX
+  VAR LINED=OTYDOC_LINEDATA[I]
+  IF LINED==OTYDOC_UORDLIST THEN
+   VAR Y8=(YSZ DIV 8)
+   X=X+5*Y8
+  ELSEIF LINED==OTYDOC_ORDLIST THEN
+   Y8=(YSZ DIV 8)
+   IF OL THEN
+    OL=OL+1
+   ELSEIF I==SL THEN
+    VAR OLS=OTYDOC_PREV[I]
+    OL=1
+    WHILE OLS
+     IF OTYDOC_LINEDATA[OLS]==OTYDOC_ORDLIST THEN
+      OL=OL+1
+      OLS=OTYDOC_PREV[OLS]
+     ELSE
+      BREAK
+     ENDIF
+    WEND
+   ELSE
+    OL=1
+   ENDIF
+   X=X+(LOG(OL,10)+1)*5*Y8+2*Y8
+  ELSE
+   OL=0
+  ENDIF
+  IF LINED==OTYDOC_TABLE THEN
+   IF 0THEN DIM TBLARY[0]
+   VAR TD=OTYDOC_TABLEDATA[I]
+   TBLARY=GetSBArray(TD)
+   VAR TH
+   VAR MTBLW
+   OTYDOC_CalcTableMinMax TBLARY,MAX OUT MTBLW,X,TH
+   MINW=MAX(MINW,MTBLW)
+   MAXW=MAX(MAXW,X)
+   H=H+TH
+   GOTO @C
+  ENDIF
+  FOR J=0TO L
+   VAR C=ASC(V$[J])
+   IF C==&Hb10cTHEN CONTINUE
+   IF C==&Hb10bTHEN
+    INC J
+    C=ASC(V$[J])
+    ON C GOTO@FNT,@COL,@STY
+    CONTINUE
+    @FNT'0
+    INC J
+    A=ASC(V$[J])
+    SZ=A
+    CONTINUE
+    @COL'1
+    INC J
+    A=ASC(V$[J])
+    COL=ShortToRGB(A)
+    CONTINUE
+    @STY'2
+    INC J
+    A=ASC(V$[J])
+    ST=A
+    CONTINUE
+   ENDIF
+   IF C<128THEN
+    VAR TW=SZ*6/8+(ST AND 1)
+   ELSE
+    TW=SZ+(ST AND 1)
+   ENDIF
+   MINW=MAX(MINW,SX+TW)
+   X=X+TW
+   IF X+TW>=MAX THEN
+    MAXW=MAX(MAXW,X)
+    X=0
+    H=H+YSZ
+   ENDIF
+  NEXT
+  H=H+YSZ
+  @C
+  MAXW=MAX(MAXW,X)
+  I=OTYDOC_NEXT[I]
+ WEND
+END
+DEF OTYDOC_UpdateTable A
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR R,C
+ VAR MINW,MW
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ 
+ FILL A,0,OTYDOC_TABLEARY_HEAD,ROW
+ FOR C=0TO COL-1
+  VAR MAXW=0
+  FOR R=0TO ROW-1
+   VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   VAR H2
+   OTYDOC_CalcSize LINE,&H7FFFFFFF OUT MINW,MW,H2
+   MAXW=MAX(MAXW,MW+4)
+   A[OTYDOC_TABLEARY_HEAD+R]=MAX(A[OTYDOC_TABLEARY_HEAD+R],H2+2)
+  NEXT
+  A[OTYDOC_TABLEARY_HEAD+ROW+C]=MAXW
+ NEXT
+END
+DEF OTYDOC_CalcTableMinMax A,MAX OUT WIDTH,MAXWIDTH,HEIGHT
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR R,C
+ VAR MINW,MW
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ DIM H3[ROW]
+ WIDTH=2
+ MAXWIDTH=2
+ FOR C=0TO COL-1
+  VAR MAXW=0,MAXW2=0
+  FOR R=0TO ROW-1
+   VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   VAR H2
+   OTYDOC_CalcSize LINE,MAX OUT MINW,MW,H2
+   MAXW=MAX(MAXW,MINW+4)
+   MAXW2=MAX(MAXW2,MW+4)
+   H3[R]=MAX(H3[R],H2+4)
+  NEXT
+  WIDTH=WIDTH+MAXW
+  MAXWIDTH=MAXWIDTH+MAXW2
+ NEXT
+ HEIGHT=4
+ FOR R=0TO ROW-1
+  HEIGHT=HEIGHT+H3[R]
+ NEXT
+END
+DEF OTYDOC_UpdateTable2 A,SCRW
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR R,C
+ VAR MINW,MW
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ 
+ DIM MINWS[COL]
+ DIM MAXWS[COL]
+ FILL A,0,OTYDOC_TABLEARY_HEAD,ROW
+ FOR C=0TO COL-1
+  VAR MAXW=0
+  FOR R=0TO ROW-1
+   VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   VAR H2
+   OTYDOC_CalcSize LINE,&H7FFFFFFF OUT MINW,MW,H2
+   MAXWS[C]=MAX(MAXWS[C],MW+6)
+   MINWS[C]=MAX(MINWS[C],MINW+6)
+   A[OTYDOC_TABLEARY_HEAD+R]=MAX(A[OTYDOC_TABLEARY_HEAD+R],H2+4)
+  NEXT
+ NEXT
+ MAXW=2
+ FOR C=0TO COL-1
+  MAXW=MAXW+MAXWS[C]
+ NEXT
+ IF MAXW<=SCRW THEN
+  FOR C=0TO COL-1
+   A[OTYDOC_TABLEARY_HEAD+ROW+C]=MAXWS[C]
+  NEXT
+  RETURN
+ ENDIF
+ MINW=2
+ FOR C=0TO COL-1
+  MINW=MINW+MINWS[C]
+ NEXT
+ VAR W=SCRW-MINW
+ IF W>=0THEN
+  VAR D=MAXW-MINW
+  FOR C=0TO COL-1
+   VAR D2=MAXWS[C]-MINWS[C]
+   INC MINWS[C],(D2*W)DIV D
+  NEXT
+ ENDIF
+ FOR C=0TO COL-1
+  A[OTYDOC_TABLEARY_HEAD+ROW+C]=MINWS[C]
+  FOR R=0TO ROW-1
+   LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   OTYDOC_CalcSize LINE,MINWS[C]-2 OUT MINW,MW,H2
+   A[OTYDOC_TABLEARY_HEAD+R]=MAX(A[OTYDOC_TABLEARY_HEAD+R],H2+4)
+  NEXT
+ NEXT
+END
+DEF OTYDOC_UpdateParentTable LINE,WIDTH
+ IF 0THEN DIM A[0]
+ WHILE 1
+  VAR TD=OTYDOC_TABLEPARENT[LINE]
+  IF!TD THEN
+   BREAK
+  ENDIF
+  A=GetSBArray(TD)
+  LINE=A[OTYDOC_TABLEARY_LINE]
+ WEND
+ A=GetSBArray(OTYDOC_TABLEDATA[LINE])
+ OTYDOC_UpdateTable2 A,WIDTH
+ OTYDOC_UpdateChildrenTable A
+END
+DEF OTYDOC_GetParentTable LINE OUT TBL,HIE
+ IF 0THEN DIM A[0]
+ HIE=0
+ WHILE 1
+  VAR TD=OTYDOC_TABLEPARENT[LINE]
+  IF!TD THEN
+   BREAK
+  ENDIF
+  A=GetSBArray(TD)
+  LINE=A[OTYDOC_TABLEARY_LINE]
+  INC HIE
+ WEND
+ TBL=OTYDOC_TABLEDATA[LINE]
+END
+DEF OTYDOC_UpdateChildrenTable A
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ VAR R,C
+ IF 0THEN DIM B[0]
+ FOR C=0TO COL-1
+  FOR R=0TO ROW-1
+   VAR CELLW=A[OTYDOC_TABLEARY_HEAD+ROW+C]
+   VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   WHILE LINE
+    VAR TD=OTYDOC_TABLEDATA[LINE]
+    IF TD THEN
+     B=GetSBArray(TD)
+     OTYDOC_UpdateTable2 B,CELLW-2
+     OTYDOC_UpdateChildrenTable B
+    ENDIF
+    LINE=OTYDOC_NEXT[LINE]
+   WEND
+  NEXT
+ NEXT
+END
+DEF OTYDOC_GetTableLocation T1,T2 OUT R,C
+ IF 0THEN DIM A[0]
+ A=GetSBArray(T1)
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ FOR C=0TO COL-1
+  FOR R=0TO ROW-1
+   VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   WHILE LINE
+    IF OTYDOC_TABLEDATA[LINE]THEN
+     IF OTYDOC_TABLEDATA[LINE]==T2 THEN
+      RETURN
+     ENDIF
+     VAR _
+     OTYDOC_GetTableLocation OTYDOC_TABLEDATA[LINE],T2 OUT _,_
+     IF _!=-1THEN RETURN
+    ENDIF
+    LINE=OTYDOC_NEXT[LINE]
+   WEND
+  NEXT
+ NEXT
+ R=-1
+ C=-1
+END
+DEF OTYDOC_RenderTable D,I,X,Y,WIDTH,HEIGHT OUT Y2
+ VAR TD=OTYDOC_TABLEDATA[I]
+ Y2=Y
+ IF!TD THEN RETURN
+ IF 0THEN DIM A[0]
+ A=GetSBArray(TD)
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR R,C,_
+ VAR SY=Y2
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ IF COL&&ROW&&!A[OTYDOC_TABLEARY_HEAD]THEN OTYDOC_UpdateTable2 A,WIDTH-X
+' FILL A,0,OTYDOC_TABLEARY_HEAD+ROW,COL
+ VAR SELR=&H7FFFFFFF,SELR2=&H7FFFFFFF
+ VAR SELC=&H7FFFFFFF,SELC2=&H7FFFFFFF
+ IF OTYDOC_ISSEL[D]THEN
+  IF OTYDOC_SEL1TABLE[D]==TD THEN
+   SELR=OTYDOC_SEL1ROW[D]
+   SELC=OTYDOC_SEL1COL[D]
+  ENDIF
+  IF OTYDOC_SEL2TABLE[D]==TD THEN
+   SELR2=OTYDOC_SEL2ROW[D]
+   SELC2=OTYDOC_SEL2COL[D]
+  ENDIF
+  IF SELC2<SELC||SELR2<SELR THEN
+   SWAP SELR2,SELR
+   SWAP SELC2,SELC
+  ENDIF
+  VAR SC=GetSelectionColor()
+ ENDIF
+ FOR C=0TO COL-1
+  Y2=SY
+  VAR CELLW=A[OTYDOC_TABLEARY_HEAD+ROW+C]
+  FOR R=0TO ROW-1
+   VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   VAR W2,H2
+   IF SELR<=R&&SELC<=C&&SELR2>=R&&SELC2>=C THEN
+    GFILL X,Y2,CELLW+X,Y2+A[OTYDOC_TABLEARY_HEAD+R],SC
+   ENDIF
+   OTYDOCRender X+2,Y2+2,D,LINE,CELLW+X,HEIGHT OUT _,W2,H2
+   H2=A[OTYDOC_TABLEARY_HEAD+R]
+'   H2=MAX(A[OTYDOC_TABLEARY_HEAD+ROW+C],H2)
+'   A[OTYDOC_TABLEARY_HEAD+ROW+C]=H2
+   GBOX X,Y2,X+CELLW,Y2+H2,#BLACK
+
+   Y2=Y2+H2
+  NEXT
+  X=X+CELLW
+ NEXT
+ Y2=Y2+2
+END
+DEF OTYDOC_GetWidth(WND)
+ VAR D=OTYDOC_GetData(WND)
+ RETURN GetWindowWidth(WND)-GetWindowWidth(OTYDOC_SCRBAR[D])-1
+END
 'CONTAINS STARTSELECTION
 'CONTAINS ENDSELECTION
-DEF OTYDOCRepaintSEL WND,SEL_FLG,SX,SY
+DEF OTYDOCRepaintSEL WND',SEL_FLG',SX,SY
  IF GBeginDirect(WND)THEN RETURN
- GCLS RGB(255,255,255)
- VAR W=GetWindowWidth(WND)-8
- VAR H=GetWindowHeight(WND)
  VAR D=OTYDOC_GetData(WND)
+ VAR W=GetWindowWidth(WND)-GetWindowWidth(OTYDOC_SCRBAR[D])-1
+ VAR H=GetWindowHeight(WND)
  IF!D THEN
   RETURN
  ENDIF
  VAR SL=OTYDOC_ShowLine[D]
- VAR I=OTYDOC_ShowLine[D]
+ GCLS RGB(255,255,255)
+ VAR _
+ OTYDOCRender 2,2,D,SL,W,H OUT OTYDOC_LastShowLine[D],_,_
+ GBOX 0,0,W,H,RGB(0,0,0)
+ VAR E=GCopyDirect(WND,0,0,W,H,0,0,1)
+ E=GEndWindow(WND)
+END
+DEF OTYDOCRender X,Y,D,SL,W,H OUT LAST,W2,H2
+ W2=0
+ 'DBG
+ 'GFILL X,Y,W,H,RGB(RND(256),RND(256),RND(256))
+ VAR SY=Y
+ VAR I=SL
  VAR CL=OTYDOC_CurLine[D]
  VAR CX=OTYDOC_CX[D]
- VAR Y=2,X=2
  VAR ST=0
  VAR SZ=8
  VAR COL=RGB(0,0,0)
@@ -7338,6 +7760,7 @@
  VAR SELBKGND=GetSelectionColor()
  VAR SELFRGND=GetSelectionTextColor()
  VAR OL=0
+ VAR SX=X
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
 '?"YSZ",YSZ
@@ -7347,7 +7770,7 @@
   VAR A
   VAR L=LEN(V$)-1,J,C
   SZ=8
-  X=1+OTYDOC_INDENT[I]
+  X=SX+OTYDOC_INDENT[I]
   
   VAR LINED=OTYDOC_LINEDATA[I]
   IF LINED==OTYDOC_UORDLIST THEN
@@ -7384,6 +7807,10 @@
    NEXT
    X=X+DG*5*Y8+14*Y8
    GFILL X-2*Y8,Y+YSZ-2*Y8,X-Y8-1,Y+YSZ-Y8-1,#BLACK
+  ELSEIF LINED==OTYDOC_TABLE THEN
+   OL=0
+   OTYDOC_RenderTable D,I,X,Y,W,H OUT Y
+   GOTO @C
   ELSE
    OL=0
   ENDIF
@@ -7438,8 +7865,9 @@
    ELSE
     TW=SZ+(ST AND 1)
    ENDIF
-   IF X+SZ>=W THEN
-    X=1
+   IF X+TW>=W THEN
+    W2=MAX(W2,X-SX)
+    X=SX
     INC Y,YSZ
     IF Y+YSZ>=H THEN BREAK
    ENDIF
@@ -7467,10 +7895,8 @@
    ENDIF
 '   ?HEX$(COL)
    INC X,TW
-   IF SEL_FLG THEN
-    
-   ENDIF
   NEXT
+  W2=MAX(W2,X-SX)
   IF ISSEL THEN
    IF I==SEL1 THEN
     SELSX=0
@@ -7515,13 +7941,13 @@
    ENDIF
   ENDIF
   INC Y,YSZ
+  @C
   IF Y+YSZ>=H THEN BREAK
   I=OTYDOC_NEXT[I]
  WEND
- VOID SetWindowCursor(WND,CURSORX,CURSORY)
- OTYDOC_LastShowLine[D]=I
- GBOX 0,0,W,H,RGB(0,0,0)
- VAR E=GCopyDirect(WND,0,0,W,H,0,0,1)
+ H2=Y-SY
+ LAST=I
+' VOID SetWindowCursor(WND,CURSORX,CURSORY)
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
 END
@@ -7533,10 +7959,59 @@
   RETURN
  ENDIF
  VAR I=OTYDOC_ShowLine[D]
- VAR SL=OTYDOC_ShowLine[D]
- VAR CL=OTYDOC_CurLine[D]
- VAR CX=OTYDOC_CX[D]
- VAR Y=2,X=2
+ OTYDOC_CLKWH I,W-2,H-2,MX-2,MY-2 OUT LINE,POS
+END
+DEF OTYDOC_GetTableSize A[] OUT WI,HE
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ VAR I
+ WI=0
+ HE=0
+ FOR I=0TO ROW-1
+  INC HE,A[OTYDOC_TABLEARY_HEAD+I]+2
+ NEXT
+ FOR I=0TO COL-1
+  INC WI,A[OTYDOC_TABLEARY_HEAD+I+ROW]+2
+ NEXT
+END
+DEF OTYDOC_CLKTBL L,MX,MY OUT LINE,POS,HEIGHT
+ LINE=-1
+ POS=-1
+ VAR TD=OTYDOC_TABLEDATA[L]
+ IF!TD THEN HEIGHT=0:RETURN
+ IF 0THEN DIM A[0]
+ A=GetSBArray(TD)
+ VAR WI,HE
+ OTYDOC_GetTableSize A OUT WI,HE
+ HEIGHT=HE+1
+ IF MX>WI&&MY>HE THEN RETURN
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ VAR I,J,Y,X,R,C
+ FOR C=0TO COL-1
+  Y=0
+  VAR CELLW=A[OTYDOC_TABLEARY_HEAD+ROW+C]
+  FOR R=0TO ROW-1
+   L=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   VAR H2=A[OTYDOC_TABLEARY_HEAD+R]
+   IF MY>=Y&&MY<Y+H2+2&&MX>=X-1&&MX<=X+CELLW THEN
+    OTYDOC_CLKWH L,CELLW,H2,MX-X,MY-Y OUT LINE,POS
+    IF LINE==-1THEN
+     LINE=L
+     POS=0
+    ENDIF
+    RETURN
+   ENDIF
+   Y=Y+H2+2
+  NEXT
+  X=X+CELLW+2
+ NEXT
+END
+DEF OTYDOC_CLKWH I,W,H,MX,MY OUT LINE,POS
+ VAR SL=I
+ VAR Y=0,X=0
  MX=MIN(MAX(X,MX),W)
  MY=MIN(MAX(Y,MY),H)
  VAR ST=0
@@ -7584,6 +8059,13 @@
     OL=1
    ENDIF
    X=X+(LOG(OL,10)+1)*5*Y8+2*Y8
+  ELSEIF LINED==OTYDOC_TABLE THEN
+   VAR TH
+   OTYDOC_CLKTBL I,MX-X,MY-Y OUT LINE,POS,TH'I,W,H,MX,MY OUT LINE,POS
+   Y=Y+TH
+   IF POS!=-1&&LINE!=-1THEN RETURN
+   OL=0
+   GOTO @C
   ELSE
    OL=0
   ENDIF
@@ -7593,13 +8075,6 @@
    C=ASC(V$[J])
    IF C==&Hb10cTHEN CONTINUE
    IF C==&Hb10bTHEN
-   IF I==CL THEN
-    IF CX==J THEN
-     OTYDOC_STYLE[D]=ST
-     OTYDOC_COL[D]=RGBToShort(COL)
-     OTYDOC_WSIZE[D]=SZ
-    ENDIF
-   ENDIF
     INC J
     C=ASC(V$[J])
     ON C GOTO@FNT,@COL,@STY
@@ -7639,28 +8114,11 @@
      IF ISNCR THEN RETURN
     ENDIF
    ENDIF
-   IF I==CL THEN
-    IF CX==J THEN
-     CURSORX=X
-     CURSORY=Y+YSZ-SZ
-     OTYDOC_STYLE[D]=ST
-     OTYDOC_COL[D]=RGBToShort(COL)
-     OTYDOC_WSIZE[D]=SZ
-    ENDIF
-   ENDIF
    INC X,TW
   NEXT
   IF POS!=-1&&MOVECHRPOS>POS THEN
    RETURN
   ENDIF
-  IF I==CL&&CX>L THEN
-   CURSORX=X
-   CURSORY=Y+YSZ-SZ
-   OTYDOC_STYLE[D]=ST
-   OTYDOC_COL[D]=RGBToShort(COL)
-   OTYDOC_WSIZE[D]=SZ
-'   VOID SetWindowCursor(WND,
-  ENDIF
   IF !ISNCR&&LINESTYLE==OTYDOC_CENTER THEN
    'CENTER
    VAR CENT=(W-2-X)DIV 2
@@ -7711,6 +8169,7 @@
    J=MOVECHRPOS
    GOTO @RETRY
   ENDIF
+  @C
   IF Y+YSZ>=H THEN BREAK
   I=OTYDOC_NEXT[I]
  WEND
@@ -7801,12 +8260,41 @@
   OTYDOC_SEL1[D]=LINE
   OTYDOC_SEL2[D]=LINE
   OTYDOC_SELS[D]=LINE
+  OTYDOC_SELSTABLE[D]=OTYDOC_TABLEPARENT[LINE]
+  IF OTYDOC_SELSTABLE[D]THEN 
+   OTYDOC_TableGetPos GetSBArray(OTYDOC_SELSTABLE[D]),LINE OUT OTYDOC_SELSROW[D],OTYDOC_SELSCOL[D]
+  ENDIF
+  
   OTYDOC_SEL1X[D]=POS
   OTYDOC_SEL2X[D]=POS
   OTYDOC_SELSX[D]=POS
   OTYDOC_HASSTARTSEL[D]=TRUE
   OTYDOC_HASENDSEL[D]=TRUE
  ENDIF
+ OTYDOC_SEL1TABLE[D]=OTYDOC_TABLEPARENT[OTYDOC_SEL1[D]]
+ OTYDOC_SEL2TABLE[D]=OTYDOC_TABLEPARENT[OTYDOC_SEL2[D]]
+ IF OTYDOC_SEL1TABLE[D]THEN 
+  OTYDOC_TableGetPos GetSBArray(OTYDOC_SEL1TABLE[D]),OTYDOC_SEL1[D] OUT OTYDOC_SEL1ROW[D],OTYDOC_SEL1COL[D]
+ ENDIF
+ IF OTYDOC_SEL2TABLE[D]THEN 
+  OTYDOC_TableGetPos GetSBArray(OTYDOC_SEL2TABLE[D]),OTYDOC_SEL2[D] OUT OTYDOC_SEL2ROW[D],OTYDOC_SEL2COL[D]
+ ENDIF
+ IF OTYDOC_SEL1TABLE[D]&&OTYDOC_SEL2TABLE[D]THEN
+  IF OTYDOC_SEL1TABLE[D]!=OTYDOC_SEL2TABLE[D]THEN
+   VAR T1,T2,HIE1,HIE2
+   OTYDOC_GetParentTable OTYDOC_SEL1[D] OUT T1,HIE1
+   OTYDOC_GetParentTable OTYDOC_SEL2[D] OUT T2,HIE2
+   IF T1==T2 THEN
+    IF HIE1>HIE2 THEN
+     OTYDOC_GetTableLocation OTYDOC_SEL2TABLE[D],OTYDOC_SEL1TABLE[D] OUT OTYDOC_SEL1ROW[D],OTYDOC_SEL1COL[D]
+     OTYDOC_SEL1TABLE[D]=OTYDOC_SEL2TABLE[D]
+    ELSEIF HIE1<HIE2 THEN
+     OTYDOC_GetTableLocation OTYDOC_SEL1TABLE[D],OTYDOC_SEL2TABLE[D] OUT OTYDOC_SEL2ROW[D],OTYDOC_SEL2COL[D]
+     OTYDOC_SEL2TABLE[D]=OTYDOC_SEL1TABLE[D]
+    ENDIF
+   ENDIF
+  ENDIF
+ ENDIF
  IF!PAINTF THEN VOID RepaintWindow(WND)
 END
 DEF OTYDOC_ScrollContent D,DIFF
@@ -8195,7 +8683,7 @@
  NEXT
  RETURN FALSE
 END
-DEF OTYDOC_RemoveSelected D OUT X,C
+DEF OTYDOC_RemoveSelected D,WND OUT X,C
  IF!OTYDOC_ISSEL[D] THEN
   RETURN
  ENDIF
@@ -8211,12 +8699,15 @@
   IF C==S&&X>SX THEN
    X=SX
   ENDIF
+  IF OTYDOC_TABLEPARENT[S]THEN
+   OTYDOC_UpdateParentTable S,OTYDOC_GetWidth(WND)
+  ENDIF
   RETURN
  ENDIF
  OTYDOC_VAL$[S]=MID$(OTYDOC_VAL$[S],0,SX)
  S=OTYDOC_NEXT[S]
  VAR DL
- WHILE 1
+ WHILE S
   IF S==C THEN
    C=OTYDOC_PREV[S]
    X=LEN(OTYDOC_VAL$[C])
@@ -8233,6 +8724,9 @@
   ENDIF
   S=NXT
  WEND
+ IF OTYDOC_TABLEPARENT[C]THEN
+  OTYDOC_UpdateParentTable C,OTYDOC_GetWidth(WND)
+ ENDIF
  OTYDOC_AddLine D,-DL
 END
 
@@ -8363,7 +8857,7 @@
  VAR S=OTYDOC_ShowLine[D]
  IF OTYDOC_ISSEL[D]THEN
   'REMOVE
-  OTYDOC_RemoveSelected D OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
+  OTYDOC_RemoveSelected D,WND OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
   OTYDOC_ISSEL[D]=0
   IF KEY==8THEN @END
  ENDIF
@@ -8407,10 +8901,19 @@
     'SCROLL
     OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
     OTYDOC_VAL$[C]=OTYDOC_VAL$[C]+S$
+    OTYDOC_AdjustLine C
    ENDIF
   ENDIF
  ELSE
   IF I$==CR$()THEN
+   IF OTYDOC_LINEDATA[C]>=OTYDOC_HEAD1&&OTYDOC_LINEDATA[C]<=OTYDOC_HEADLAST THEN
+    OTYDOC_STYLE2[D]=OTYDOC_DEFSTYLE[D]
+    OTYDOC_WSIZE2[D]=OTYDOC_DEFSIZE[D]
+    OTYDOC_COL2[D]=OTYDOC_DEFCOL[D]
+    OTYDOC_STYLE[D]=OTYDOC_DEFSTYLE[D]
+    OTYDOC_WSIZE[D]=OTYDOC_DEFSIZE[D]
+    OTYDOC_COL[D]=OTYDOC_DEFCOL[D]
+   ENDIF
    VAR HEAD$=OTYDOC_NewLineInitStyle$(D)
    VAR C2=OTYDOC_NewLine(HEAD$+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
    IF!C2 THEN RETURN
@@ -8473,6 +8976,9 @@
   ENDIF
  ENDIF
  @END
+ IF OTYDOC_TABLEPARENT[C]THEN
+  OTYDOC_UpdateParentTable C,OTYDOC_GetWidth(WND)
+ ENDIF
  OTYDOCRepaint WND
  ?OTYDOC_VAL$[C]
  ?" "*MAX(OTYDOC_CX[D],0);""
@@ -8556,9 +9062,15 @@
  VAR CD=OTYDOC_CURLINE[D]
  OTYDOC_LINEDATA[CD]=OTYDOC_HEAD1+LEVEL-1
  VAR CX=OTYDOC_GETPOS(OTYDOC_VAL$[CD],OTYDOC_CX[D])
- OTYDOC_RemoveStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),2'STYLE
- OTYDOC_RemoveStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),1'COLOR
- OTYDOC_RemoveStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),0'SIZE
+ VAR TYPE
+ VAR ST$=""
+ FOR TYPE=0TO 2
+  VAR S$
+  OTYDOC_GetStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),TYPE OUT S$
+  PUSH ST$,S$
+  OTYDOC_RemoveStyle OTYDOC_VAL$[CD],0,LEN(OTYDOC_VAL$[CD]),TYPE
+ NEXT
+ PUSH OTYDOC_VAL$[CD],ST$
  VAR FS=8
  OTYDOC_LINESTYLE[CD]=0
  IF LEVEL==1THEN
@@ -8662,6 +9174,7 @@
 END
 COMMON DEF RTEOpen WND,FILE$ OUT ERR
  VAR D=OTYDOC_GetData(WND)
+ OTYDOC_ISSEL[D]=FALSE
  VAR F$
  LoadFile FILE$ OUT F$,ERR
  IF MID$(F$,0,LEN("OTYDOC")+1)!="OTYDOC"+LF$()THEN
@@ -8757,12 +9270,15 @@
   I=I+1
   J=I
  WEND
+ IF OTYDOC_TABLEPARENT[C]THEN
+  OTYDOC_UpdateParentTable C,OTYDOC_GetWidth(WND)
+ ENDIF
  VOID RepaintWindow(WND)
 END
 COMMON DEF RTEPaste WND
  VAR D=OTYDOC_GetData(WND)
  IF OTYDOC_ISSEL[D]THEN
-  OTYDOC_RemoveSelected D OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
+  OTYDOC_RemoveSelected D,WND OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
   OTYDOC_ISSEL[D]=0
  ENDIF
  VAR D$,CNTNS
@@ -8820,6 +9336,9 @@
  NEXT
  PUSH OTYDOC_VAL$[LINE],LST$
  OTYDOC_AddLine D,LC
+ IF OTYDOC_TABLEPARENT[C]THEN
+  OTYDOC_UpdateParentTable C,OTYDOC_GetWidth(WND)
+ ENDIF
  VOID RepaintWindow(WND)
 END
 COMMON DEF RTESelectAll WND
@@ -8842,7 +9361,7 @@
  VAR D=OTYDOC_GetData(WND)
  IF OTYDOC_ISSEL[D]THEN
   RTECopy WND
-  OTYDOC_RemoveSelected D OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
+  OTYDOC_RemoveSelected D,WND OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
   OTYDOC_ISSEL[D]=0
  ENDIF
 END
@@ -8887,13 +9406,158 @@
  ClipboardSetData$ "RichText",O$
  ClipboardSetText P$
 END
+DEF OTYDOC_NewTableData(D,R,C,L)
+ VAR SB=AllocSBArray()
+ VAR H=OTYDOC_TABLEARY_HEAD+R+C
+ DIM A[R*C*OTYDOC_TBLELM+H]
+ A[OTYDOC_TABLEARY_ROW]=R
+ A[OTYDOC_TABLEARY_COL]=C
+ VAR I,J
+ FOR I=0TO R-1
+  FOR J=0TO C-1
+   VAR TL=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D)+"",0)
+   OTYDOC_TABLEPARENT[TL]=SB
+   A[H+J*R*OTYDOC_TBLELM+I*OTYDOC_TBLELM]=TL
+  NEXT
+ NEXT
+ IF LEN(A)>H THEN
+  OTYDOC_CurLine[D]=A[H]
+  OTYDOC_CX[D]=LEN(OTYDOC_VAL$[A[H]])
+ ENDIF
+ A[OTYDOC_TABLEARY_LINE]=L
+ SetSBArray SB,A
+ RETURN SB
+END
+DEF OTYDOC_SearchLine(LINE,T)
+ WHILE LINE
+  IF LINE==T THEN BREAK
+  LINE=OTYDOC_NEXT[LINE]
+ WEND
+ RETURN LINE
+END
+DEF OTYDOC_TableGetPos TBL,LINE OUT R,C
+ VAR ROW=TBL[OTYDOC_TABLEARY_ROW]
+ VAR COL=TBL[OTYDOC_TABLEARY_COL]
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ VAR I,J
+ FOR I=0TO ROW-1
+  FOR J=0TO COL-1
+   VAR L=TBL[H+I*COL*OTYDOC_TBLELM+J*OTYDOC_TBLELM]
+   IF OTYDOC_SearchLine(L,LINE)THEN
+    R=I
+    C=J
+    RETURN
+   ENDIF
+  NEXT
+ NEXT
+ R=-1
+ C=-1
+END
+COMMON DEF RTEAddTableRow WND,F
+ VAR D=OTYDOC_GetData(WND)
+ VAR CL=OTYDOC_CurLine[D]
+ VAR T=OTYDOC_TABLEPARENT[CL]
+ IF!T THEN RETURN
+ IF 0THEN DIM OLD[0]
+ OLD=GetSBArray(T)
+ VAR R,C
+ OTYDOC_TableGetPos OLD,CL OUT R,C
+ IF R==-1||C==-1THEN RETURN
+ VAR OLDROW=OLD[OTYDOC_TABLEARY_ROW]
+ VAR COL=OLD[OTYDOC_TABLEARY_COL]
+ VAR ROW=OLDROW+1
+ VAR INSROW=R
+ VAR I,J
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ VAR OH=OTYDOC_TABLEARY_HEAD+OLDROW+COL
+ VAR K=0
+ DIM A[ROW*COL*OTYDOC_TBLELM+H]
+ A[OTYDOC_TABLEARY_ROW]=ROW
+ A[OTYDOC_TABLEARY_COL]=COL
+ A[OTYDOC_TABLEARY_LINE]=OLD[OTYDOC_TABLEARY_LINE]
+ SetSBArray T,A
+ FOR I=0TO ROW-1
+  IF (!F&&I==R)||(F&&I==R+1) THEN
+   FOR J=0TO COL-1
+    VAR TL=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D)+"",0)
+    OTYDOC_TABLEPARENT[TL]=T
+    A[H+I*COL*OTYDOC_TBLELM+J*OTYDOC_TBLELM]=TL
+   NEXT
+   K=-1
+  ELSEIF 0&&F THEN
+   FOR J=0TO COL-1
+    A[H+I*COL*OTYDOC_TBLELM+J*OTYDOC_TBLELM]=OLD[OH+(I-K)*COL*OTYDOC_TBLELM+J*OTYDOC_TBLELM]
+   NEXT
+  ELSE
+   FOR J=0TO COL-1
+    A[H+I*COL*OTYDOC_TBLELM+J*OTYDOC_TBLELM]=OLD[OH+(I+K)*COL*OTYDOC_TBLELM+J*OTYDOC_TBLELM]
+   NEXT
+  ENDIF
+ NEXT
+ OTYDOC_UpdateParentTable TL,OTYDOC_GetWidth(WND)
+END
+COMMON DEF RTEAddTableColumn WND,F
+ VAR D=OTYDOC_GetData(WND)
+ VAR CL=OTYDOC_CurLine[D]
+ VAR T=OTYDOC_TABLEPARENT[CL]
+ IF!T THEN RETURN
+ IF 0THEN DIM OLD[0]
+ OLD=GetSBArray(T)
+ VAR R,C
+ OTYDOC_TableGetPos OLD,CL OUT R,C
+ IF R==-1||C==-1THEN RETURN
+ VAR ROW=OLD[OTYDOC_TABLEARY_ROW]
+ VAR OLDCOL=OLD[OTYDOC_TABLEARY_COL]
+ VAR COL=OLDCOL+1
+ VAR INSCOL=C
+ VAR I,J
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ VAR OH=OTYDOC_TABLEARY_HEAD+ROW+OLDCOL
+ VAR K=0
+ DIM A[ROW*COL*OTYDOC_TBLELM+H]
+ A[OTYDOC_TABLEARY_ROW]=ROW
+ A[OTYDOC_TABLEARY_COL]=COL
+ A[OTYDOC_TABLEARY_LINE]=OLD[OTYDOC_TABLEARY_LINE]
 
+ SetSBArray T,A
+ FOR I=0TO COL-1
+  IF (!F&&I==C)||(F&&I==C+1) THEN
+   FOR J=0TO ROW-1
+    VAR TL=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D)+"",0)
+    OTYDOC_TABLEPARENT[TL]=T
+    A[H+J*COL*OTYDOC_TBLELM+I*OTYDOC_TBLELM]=TL
+   NEXT
+   K=-1
+  ELSE
+   FOR J=0TO ROW-1
+    A[H+J*COL*OTYDOC_TBLELM+I*OTYDOC_TBLELM]=OLD[OH+J*OLDCOL*OTYDOC_TBLELM+(I+K)*OTYDOC_TBLELM]
+   NEXT
+  ENDIF
+ NEXT
+ OTYDOC_UpdateParentTable TL,OTYDOC_GetWidth(WND)
+
+END
+COMMON DEF RTEAddTable WND,R,C
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_ISSEL[D]=FALSE
+ VAR L=OTYDOC_NewLine("",OTYDOC_CurLine[D])
+ OTYDOC_CurLine[D]=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D),L)
+ OTYDOC_LINEDATA[L]=OTYDOC_TABLE
+ OTYDOC_TABLEDATA[L]=OTYDOC_NewTableData(D,R,C,L)
+ OTYDOC_UpdateParentTable L,OTYDOC_GetWidth(WND)
+ VOID RepaintWindow(WND)
+END
 '==================
 VAR OTYDOCCOLOR_CTL
 VAR OTYDOC_MENU_NEW=1
 VAR OTYDOC_MENU_OPEN=2
 VAR OTYDOC_MENU_SAVE=3
 VAR OTYDOC_MENU_SAVEAS=4
+VAR OTYDOC_MENU_ADDTABLE
+VAR OTYDOC_MENU_ADDTABLECOL
+VAR OTYDOC_MENU_ADDTABLECOL2
+VAR OTYDOC_MENU_ADDTABLEROW
+VAR OTYDOC_MENU_ADDTABLEROW2
 COMMON DEF OTYDOC_WNDSTRNOTIF WND,CTL,TYPE,A1,A2$
  IF A1==OTYDOC_MENU_SAVEAS THEN
   VOID RTESave(GetWindowVar(WND,0),A2$)
@@ -8910,6 +9574,16 @@
    VOID SaveFileDialog(WND,"TXT:.DOC",F)
   ELSEIF F==OTYDOC_MENU_OPEN THEN
    VOID OpenFileDialog(WND,"TXT:.DOC",F)
+  ELSEIF F==OTYDOC_MENU_ADDTABLE THEN
+   RTEAddTable GetWindowVar(WND,0),2,2
+  ELSEIF F==OTYDOC_MENU_ADDTABLEROW THEN
+   RTEAddTableRow GetWindowVar(WND,0),FALSE
+  ELSEIF F==OTYDOC_MENU_ADDTABLEROW2 THEN
+   RTEAddTableRow GetWindowVar(WND,0),TRUE
+  ELSEIF F==OTYDOC_MENU_ADDTABLECOL THEN
+   RTEAddTableColumn GetWindowVar(WND,0),FALSE
+  ELSEIF F==OTYDOC_MENU_ADDTABLECOL2 THEN
+   RTEAddTableColumn GetWindowVar(WND,0),TRUE
   ENDIF
   RETURN
  ENDIF
@@ -9126,11 +9800,24 @@
  OTYDOC_MENU_OPEN=2
  OTYDOC_MENU_SAVE=3
  OTYDOC_MENU_SAVEAS=4
+ OTYDOC_MENU_AddTable=5
+ OTYDOC_MENU_AddTableRow=6
+ OTYDOC_MENU_AddTableRow2=7
+ OTYDOC_MENU_AddTableCol=8
+ OTYDOC_MENU_AddTableCol2=9
  AddMenuItem MENU,"New",1
  AddMenuItem MENU,"Open",2
  AddMenuItem MENU,"Save",3
  AddMenuItem MENU,"Save as",4
- AddSubMenuItem GetWindowMenu(WND),"File",MENU SetProcessVar WND
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Insert",OTYDOC_MENU_AddTable
+ AddMenuItem MENU,"Insert Left",OTYDOC_MENU_AddTableCol
+ AddMenuItem MENU,"Insert Right",OTYDOC_MENU_AddTableCol2
+ AddMenuItem MENU,"Insert Above",OTYDOC_MENU_AddTableRow
+ AddMenuItem MENU,"Insert Below",OTYDOC_MENU_AddTableRow2
+ AddSubMenuItem GetWindowMenu(WND),"Table",MENU
+ SetProcessVar WND
  VAR DOC,COL
  NewWindow OTYDOCCTL,"OTYDOC",0,12+12,256+8,116-12,WND,0 OUT DOC,E
  SetWindowVar WND,0,DOC
@@ -11863,6 +12550,7 @@
  VAR WND
  GetConsoleVar CON OUT WND,ERR
  IF ERR THEN RETURN
+ IF!LEN(BUF$)THEN RETURN
  VAR X,Y,W,H
  SplitInt GetWindowVar(WND,3) OUT X,Y
  SplitInt GetWindowVar(WND,2) OUT W,H
@@ -12086,6 +12774,7 @@
  VAR ICONSX=(IW-16) DIV 2
  VAR ITW=IW DIV 8
  VAR CUR=GetWindowVar(WND,ODE_WV_CURRENT)
+ VAR SC=GetSelectionColor()
  
  FOR I=0TO L
   VAR D$=DIR$[I]
@@ -12093,7 +12782,7 @@
   VAR NAME$=MID$(D$,1,LEN(D$))
   VAR TC=&HFF000000
   IF I==CUR THEN
-   GFILL IX,IY+16,IX+IW-1,IY+IH-1,GetSelectionColor()
+   GFILL IX,IY+16,IX+IW-1,IY+IH-1,SC
    TC=GetSelectionTextColor()
   ENDIF
   GLOADImage IX+ICONSX,IY,ICON[I],FALSE
@@ -12104,6 +12793,10 @@
     GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW-ITW)*8)DIV 2,IY+32,MID$(NAME$,ITW+ITW,ITW),TC
    ENDIF
   ENDIF
+  IF I==CUR THEN
+   GPUTCHR IX+ICONSX,IY,"",SC
+   GPUTCHR IX+ICONSX,IY+8,"",SC
+  ENDIF
   IY=IY+IH
   IF IY+IH>=SH THEN IY=ODE_IY:IX=IX+ODE_IW
  NEXT
@@ -12233,7 +12926,8 @@
  ENDIF
 END
 COMMON DEF OTWBENCHPAINTER WND,C,T,XY,WH
- VAR E=CallBaseControlHandler(WND,C,T,XY,WH)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
  IF GetWindowVar(WND,2)THEN
   VAR M=GetWindowVar(WND,0)
   IF!M THEN
@@ -12246,7 +12940,12 @@
    SetWindowVar WND,2,FALSE
   ENDIF
   SetWindowVar WND,1,GetWindowVar(WND,1)+1
+  IF GBeginWindow(WND)THEN RETURN
+   GFILLWindow WND,RND(W+1),RND(H+1),RND(W+1),RND(H+1),RGB(RND(32)*8,RND(32)*8,RND(32)*8)
+  IF GEndWindow(WND)THEN RETURN
+  RETURN
  ENDIF
+ VAR E=CallBaseControlHandler(WND,C,T,XY,WH)
  IF GBeginWindow(WND)THEN RETURN
   GPRINTWindow WND,0,0,STR$(GetWindowVar(WND,1)),#BLACK
  IF GEndWindow(WND)THEN RETURN
@@ -12279,7 +12978,7 @@
  VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH_)
  OTWCLOCKDRAW WND
 END
-COMMON DEF OTWCLOCKDRAW WND
+DEF OTWCLOCKDRAW WND
  VAR H,M,S
  TMREAD OUT H,M,S
  SetWindowVar WND,0,S
diff -u OTW.TXT OTW2C
--- OTW.TXT
+++ OTW2C
@@ -8,6 +8,7 @@
 VAR OTW_ENABLE_SHADOW
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOVWINNUWID
+VAR OTW_CLIPMODE
 '1:MOV
 '2:RESIZE
 VAR OTW_MOVWINFLG
@@ -129,6 +130,9 @@
 VAR OTW_DBLCLKY
 
 VAR OTW_SMOOTH_MOVE_WINDOW
+VAR WIN_SHELL$
+VAR WIN_IM$
+
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
@@ -267,7 +271,7 @@
 VAR MENU_NOTIFID
 DEF OTW_MENU_INITARRAY
  PrintConsoleln "Init menu..."
- MENU_ITEMMAX=256
+ MENU_ITEMMAX=1024
  MENU_INAME$=NewArray$(MENU_ITEMMAX)
  MENU_INEXT=NewArray(MENU_ITEMMAX)
  MENU_IPREV=NewArray(MENU_ITEMMAX)
@@ -282,7 +286,7 @@
  MENU_IVAR=NewArray(MENU_ITEMMAX)
  OTW_INITLIST MENU_INEXT
  MENU_ITEMFREE=1
- MENU_MAX=64
+ MENU_MAX=256
  MENU_WIDTH=NewArray(MENU_MAX)
  MENU_HEIGHT=NewArray(MENU_MAX)
  MENU_NUWID=NewArray(MENU_MAX)
@@ -354,9 +358,6 @@
  F$=GetAbsolutePath$(F$)
  GetFileType F$ OUT TYPE$,E
  IF E THEN RETURN E
- IF TYPE$=="/"THEN
-  
- ENDIF
  VAR EXT$=GetFileExtension$(F$)
  VAR PRG$=GetAssociatedProgram$(TYPE$,EXT$)
  VAR PRC
@@ -599,6 +600,7 @@
  IM_IDCNT=1
  OTW_INITLIST IM_NEXT
  IM_FREE=1
+ SetKeyboardMode TRUE
 END
 VAR IM_NOALLOC
 VAR IM_INVALIDID
@@ -680,6 +682,10 @@
  NEXT
  RETURN 0
 END
+VAR IM_KBDMODE
+COMMON DEF SetKeyboardMode FLG
+ IM_KBDMODE=FLG
+END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
 VAR WIN_EVENTERR
@@ -1535,7 +1541,7 @@
    SPSCALE SP2,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
    SPCOLOR SP2,RGB(128,063,063,063)
    SPOFS SP2,3,3,1
-   SPSHOW SP2
+   SPHIDE SP2
    SPVAR SP2,0,WND
   ENDIF
   WIN_SP[NUWID]=SP OR 512
@@ -3029,12 +3035,43 @@
  GFILL AX,AY,AX+W,AY+H,0
  RETURN 0
 END
+DEF GEndWindowSU(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_BEGIN[NUWID]=FALSE
+ VAR MAP_SY=240
+ VAR MAP_SX
+ VAR AX=WIN_RX[NUWID]
+ VAR AY=WIN_RY[NUWID]
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
+ IF WIN_BEGIN[NUWID]!=2THEN
+  AX=WIN_RFX[NUWID]
+  AY=WIN_RFY[NUWID]
+  W=WIN_AFW[NUWID]
+  H=WIN_AFH[NUWID]
+ ENDIF
+ DIM BUFGRP[(W+1)*(H+1)]
+ DIM BUFMAP[(W+1)*(H+1)]
+ GSAVE AX,AY,W+1,H+1,BUFGRP,1
+ GPAGE OTW_SP,OTW_DP
+ GSAVE MAP_SX+AX,MAP_SY+AY,W+1,H+1,BUFMAP,1
+ ARYOP #AOPSUB,BUFMAP,BUFMAP,NUWID-1
+ ARYOP #AOPCLP,BUFMAP,BUFMAP,0,2'2=>ぐうすう=>とうめい
+ ARYOP #AOPMUL,BUFGRP,BUFGRP,BUFMAP
+ GLOAD AX,AY,W+1,H+1,BUFGRP,1,0
+ IF WIN_SP[NUWID]AND 512THEN OTW_SPCHR NUWID
+ IF MAINCNT-OTW_LASTUPD>5THEN UpdateMouse
+ RETURN 0
+END
 COMMON DEF GEndWindow(WND)
  GB_WND=0
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_HIDE[NUWID]THEN RETURN WIN_NODRAW
  IF!WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
+ IF OTW_CLIPMODE THEN
+  RETURN GEndWindowSU(WND)
+ ENDIF
  'ごうせい
  WIN_PARENT[0]=0
  WIN_NEXT[0]=0
@@ -3095,6 +3132,9 @@
   VAR SP2=SPVAR(SP,1)
   IF SP2!=-1THEN
    SPSCALE SP2,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+   IF!WIN_HIDE[NUWID]THEN
+    SPSHOW SP2
+   ENDIF
   ENDIF
  ENDIF
  SPSCALE SP,1,1
@@ -4785,12 +4825,14 @@
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
 ' KEY 1,"KEY OFF"
-  OTW_EXITFLG=0
-  OTW_ENABLE_SHADOW=1
+  OTW_EXITFLG=FALSE
+  OTW_ENABLE_SHADOW=TRUE
   WIN_BKGND=RGB(208,208,208)
   WIN_BTNBACK=RGB(192,192,192)
   WIN_SELCOL=RGB(0,0,255)
   WIN_SELTXTCOL=RGB(255,255,255)
+  'sound unit
+  OTW_CLIPMODE=0
   VAR FM=FREEMEM
   PrintConsole "=================="+LF$()
   PrintConsole "OTYA WINDOW SYSTEM"+LF$()
@@ -4947,9 +4989,15 @@
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
   CLS
   LOCATE 0,29
-' NewProcess"LAUNCHER","" OUT E,E
-  NewProcess"RIM","" OUT E,E
-  NewProcess"ODE","" OUT E,E
+  WIN_IM$="RIM"
+  WIN_SHELL$="ODE"
+  IF!LEN(WIN_IM$)THEN
+   WIN_IM$="DEFIM"
+  ENDIF
+  NewProcess WIN_IM$,"" OUT E,E
+  IF LEN(WIN_SHELL$)THEN
+   NewProcess WIN_SHELL$,"" OUT E,E
+  ENDIF
   BREPEAT 0,15,4
   BREPEAT 1,15,4
   BREPEAT 2,15,4
@@ -5540,6 +5588,9 @@
 END
 DEF UpdateButton()
  VAR B=BUTTON()
+ IF!IM_KBDMODE THEN
+  B=B AND NOT(#L OR #R)
+ ENDIF
  VAR RET=0
  IF B AND OTW_MOUSELBTN THEN
   IF!OTW_OLDLMOUSE THEN RET=OTW_LMOUSEDWN
@@ -7097,6 +7148,22 @@
 VAR OTYDOC_BEG$
 VAR OTYDOC_END$
 VAR OTYDOC_MENU
+VAR OTYDOC_FILE_LINESTYLE
+VAR OTYDOC_FILE_CONTENT
+VAR OTYDOC_FILE_LINEDATA
+VAR OTYDOC_FILE_INDENT
+VAR OTYDOC_FILE_TABLE
+VAR OTYDOC_FILE_NEWROW
+VAR OTYDOC_FILE_NEWCOL
+VAR OTYDOC_FILE_TABLEEND
+'line size
+DIM OTYDOC_WIDTH[0]
+DIM OTYDOC_HEIGHT[0]
+'scroll
+DIM OTYDOC_YOFFSET[0]
+
+DIM OTYDOC_WND[0]
+
 COMMON DEF INIT_OTYDOC
  VAR E
  IF!OTYDOCCTL THEN
@@ -7124,6 +7191,8 @@
   OTYDOC_INDENT=NewArray(OTYDOC_LINESIZ)
   OTYDOC_TABLEDATA=NewArray(OTYDOC_LINESIZ)
   OTYDOC_TABLEPARENT=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_WIDTH=NewArray(OTYDOC_LINESIZ)
+  OTYDOC_HEIGHT=NewArray(OTYDOC_LINESIZ)
   OTYDOC_TABLEARY_COL=0
   OTYDOC_TABLEARY_ROW=1
   OTYDOC_TABLEARY_LINE=2
@@ -7184,10 +7253,20 @@
   OTYDOC_SEL2COL=NewArray(OTYDOC_WSIZ)
   OTYDOC_ISSEL=NewArray(OTYDOC_WSIZ)
   OTYDOC_SELREVERSE=NewArray(OTYDOC_WSIZ)
+  OTYDOC_YOFFSET=NewArray(OTYDOC_WSIZ)
+  OTYDOC_WND=NewArray(OTYDOC_WSIZ)
   OTYDOC_WFREE=1
   FOR I=1TO OTYDOC_WSIZ-2
    OTYDOC_WNEXT[I]=I+1
   NEXT
+  OTYDOC_FILE_LINESTYLE=1
+  OTYDOC_FILE_CONTENT=2
+  OTYDOC_FILE_LINEDATA=3
+  OTYDOC_FILE_INDENT=4
+  OTYDOC_FILE_TABLE=5
+  OTYDOC_FILE_NEWROW=6
+  OTYDOC_FILE_NEWCOL=7
+  OTYDOC_FILE_TABLEEND=8
   NewMenu OUT OTYDOC_MENU,E
   AddMenuItem OTYDOC_MENU,"Copy",1
   AddMenuItem OTYDOC_MENU,"Cut",2
@@ -7229,8 +7308,28 @@
  OTYDOC_SIZE[R]=8
  RETURN R
 END
+DEF OTYDOC_DeleteTable(L)
+ IF!OTYDOC_TABLEDATA[L]THEN RETURN
+ IF 0THEN DIM A[0]
+ A=GetSBArray(OTYDOC_TABLEDATA[L])
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ VAR R,C,_
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ FOR C=0TO COL-1
+  FOR R=0TO ROW-1
+   VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   VAR ERR=OTYDOC_DeleteLine(LINE)
+  NEXT
+ NEXT
+ FreeSBArray OTYDOC_TABLEDATA[L]
+ OTYDOC_TABLEDATA[L]=0
+END
 DEF OTYDOC_DeleteLine(L)
  IF!L THEN RETURN 0
+ IF OTYDOC_TABLEDATA[L]THEN
+  'TODO:delete table
+ ENDIF
  VAR N=OTYDOC_NEXT[L]
  VAR P=OTYDOC_PREV[L]
  IF N THEN
@@ -7249,6 +7348,7 @@
  VAR R=OTYDOC_WFREE
  OTYDOC_WFREE=OTYDOC_WNEXT[OTYDOC_WFREE]
  OTYDOC_SetData WND,R
+ OTYDOC_WND[R]=WND
 END
 DEF OTYDOC_DeleteCTL WND
  VAR L=OTYDOC_GetData(WND)
@@ -7346,6 +7446,23 @@
  OTYDOC_ShowLine[D]=S
  OTYDOC_CurLine[D]=S
 END
+DEF OTYDOC_CalcDocumentSize WND
+ VAR D=OTYDOC_GetData(WND)
+ VAR LINE=OTYDOC_ShowLine[D]
+ VAR W=OTYDOC_GetWidth(WND)
+
+ VAR HEIGHT
+ WHILE LINE
+  VAR N=OTYDOC_NEXT[LINE]
+  VAR MINW,MAXW,LINEH
+  OTYDOC_CalcSize LINE,W,N OUT MINW,MAXW,LINEH
+  OTYDOC_HEIGHT[LINE]=LINEH
+  HEIGHT=HEIGHT+LINEH
+  LINE=N
+ WEND
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ SetScrollBarSize SCRBAR,HEIGHT
+END
 COMMON DEF OTYDocResize WND,C,T,A1,WH
  VAR W,H
  SplitInt WH OUT W,H
@@ -7356,6 +7473,7 @@
  VAR D=OTYDOC_GetData(WND)
  VAR LINE=OTYDOC_ShowLine[D]
  W=OTYDOC_GetWidth(WND)
+ VAR HEIGHT
  IF 0THEN DIM A[0]
  WHILE LINE
   IF OTYDOC_TABLEDATA[LINE]THEN
@@ -7363,8 +7481,16 @@
    OTYDOC_UpdateTable2 A,W
    OTYDOC_UpdateChildrenTable A
   ENDIF
-  LINE=OTYDOC_NEXT[LINE]
+  VAR MINW,MAXW,LINEH
+  VAR N=OTYDOC_NEXT[LINE]
+  OTYDOC_CalcSize LINE,W,N OUT MINW,MAXW,LINEH
+  OTYDOC_HEIGHT[LINE]=LINEH
+  HEIGHT=HEIGHT+LINEH
+  LINE=N
  WEND
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ SetScrollBarSize SCRBAR,HEIGHT
+ RETURN
  LINE=OTYDOC_PREV[LINE]
  WHILE LINE
   IF OTYDOC_TABLEDATA[LINE]THEN
@@ -7381,7 +7507,7 @@
 DEF OTYDOCRepaint WND
  OTYDOCRepaintSEL WND',FALSE,0,0
 END
-DEF OTYDOC_CalcSize I,MAX OUT MINW,MAXW,H
+DEF OTYDOC_CalcSize I,MAX,EI OUT MINW,MAXW,H
  MINW=0
  MAXW=0
  H=0
@@ -7391,7 +7517,7 @@
  VAR A
  VAR OL
  VAR SL=I
- WHILE I
+ WHILE I!=EI
   VAR J
   VAR V$=OTYDOC_VAL$[I]
   VAR YSZ=OTYDOC_SIZE[I],L=LEN(V$)-1
@@ -7491,7 +7617,7 @@
   FOR R=0TO ROW-1
    VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
    VAR H2
-   OTYDOC_CalcSize LINE,&H7FFFFFFF OUT MINW,MW,H2
+   OTYDOC_CalcSize LINE,&H7FFFFFFF,0 OUT MINW,MW,H2
    MAXW=MAX(MAXW,MW+4)
    A[OTYDOC_TABLEARY_HEAD+R]=MAX(A[OTYDOC_TABLEARY_HEAD+R],H2+2)
   NEXT
@@ -7512,7 +7638,7 @@
   FOR R=0TO ROW-1
    VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
    VAR H2
-   OTYDOC_CalcSize LINE,MAX OUT MINW,MW,H2
+   OTYDOC_CalcSize LINE,MAX,0 OUT MINW,MW,H2
    MAXW=MAX(MAXW,MINW+4)
    MAXW2=MAX(MAXW2,MW+4)
    H3[R]=MAX(H3[R],H2+4)
@@ -7540,7 +7666,7 @@
   FOR R=0TO ROW-1
    VAR LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
    VAR H2
-   OTYDOC_CalcSize LINE,&H7FFFFFFF OUT MINW,MW,H2
+   OTYDOC_CalcSize LINE,&H7FFFFFFF,0 OUT MINW,MW,H2
    MAXWS[C]=MAX(MAXWS[C],MW+6)
    MINWS[C]=MAX(MINWS[C],MINW+6)
    A[OTYDOC_TABLEARY_HEAD+R]=MAX(A[OTYDOC_TABLEARY_HEAD+R],H2+4)
@@ -7572,7 +7698,7 @@
   A[OTYDOC_TABLEARY_HEAD+ROW+C]=MINWS[C]
   FOR R=0TO ROW-1
    LINE=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
-   OTYDOC_CalcSize LINE,MINWS[C]-2 OUT MINW,MW,H2
+   OTYDOC_CalcSize LINE,MINWS[C]-2,0 OUT MINW,MW,H2
    A[OTYDOC_TABLEARY_HEAD+R]=MAX(A[OTYDOC_TABLEARY_HEAD+R],H2+4)
   NEXT
  NEXT
@@ -7652,7 +7778,7 @@
  R=-1
  C=-1
 END
-DEF OTYDOC_RenderTable D,I,X,Y,WIDTH,HEIGHT OUT Y2
+DEF OTYDOCRenderTable D,I,X,Y,WIDTH,HEIGHT,SELFLG OUT Y2
  VAR TD=OTYDOC_TABLEDATA[I]
  Y2=Y
  IF!TD THEN RETURN
@@ -7671,15 +7797,30 @@
   IF OTYDOC_SEL1TABLE[D]==TD THEN
    SELR=OTYDOC_SEL1ROW[D]
    SELC=OTYDOC_SEL1COL[D]
+  ELSEIF SELFLG THEN
+   SELR=0
+   SELC=0
   ENDIF
   IF OTYDOC_SEL2TABLE[D]==TD THEN
    SELR2=OTYDOC_SEL2ROW[D]
    SELC2=OTYDOC_SEL2COL[D]
   ENDIF
-  IF SELC2<SELC||SELR2<SELR THEN
-   SWAP SELR2,SELR
+'  IF SELC2<SELC||SELR2<SELR THEN
+'   SWAP SELR2,SELR
+'   SWAP SELC2,SELC
+'  ENDIF
+  IF SELC2<SELC THEN
    SWAP SELC2,SELC
   ENDIF
+  IF SELR2<SELR THEN
+   SWAP SELR2,SELR
+  ENDIF
+  IF SELR2==SELR&&SELC2==SELC THEN
+   SELR=&H7FFFFFFF
+   SELR2=&H7FFFFFFF
+   SELC=&H7FFFFFFF
+   SELC2=&H7FFFFFFF
+  ENDIF
   VAR SC=GetSelectionColor()
  ENDIF
  FOR C=0TO COL-1
@@ -7707,7 +7848,10 @@
  VAR D=OTYDOC_GetData(WND)
  RETURN GetWindowWidth(WND)-GetWindowWidth(OTYDOC_SCRBAR[D])-1
 END
-'CONTAINS STARTSELECTION
+DEF OTYDOC_GetHeight(WND)
+ VAR D=OTYDOC_GetData(WND)
+ RETURN GetWindowHeight(WND)-2'border
+END'CONTAINS STARTSELECTION
 'CONTAINS ENDSELECTION
 DEF OTYDOCRepaintSEL WND',SEL_FLG',SX,SY
  IF GBeginDirect(WND)THEN RETURN
@@ -7720,7 +7864,8 @@
  VAR SL=OTYDOC_ShowLine[D]
  GCLS RGB(255,255,255)
  VAR _
- OTYDOCRender 2,2,D,SL,W,H OUT OTYDOC_LastShowLine[D],_,_
+ 
+ OTYDOCRender 2,2-OTYDOC_YOFFSET[D],D,SL,W,4+H+OTYDOC_YOFFSET[D] OUT OTYDOC_LastShowLine[D],_,_
  GBOX 0,0,W,H,RGB(0,0,0)
  VAR E=GCopyDirect(WND,0,0,W,H,0,0,1)
  E=GEndWindow(WND)
@@ -7738,8 +7883,10 @@
  VAR COL=RGB(0,0,0)
  VAR OJ
  VAR ACX=-100,ACY=-100
- VAR CURSORX,CURSORY
- VAR ISSEL=OTYDOC_ISSEL[D]
+ VAR CURSORX=&H7FFFFFFF,CURSORY
+ VAR ISTBL=!OTYDOC_SEL1TABLE[D]||(OTYDOC_SEL1COL[D]==OTYDOC_SEL2COL[D]&&OTYDOC_SEL1ROW[D]==OTYDOC_SEL2ROW[D])
+ VAR CURSHOW=!OTYDOC_ISSEL[D]||ISTBL
+ VAR ISSEL=OTYDOC_ISSEL[D]&&ISTBL
  IF ISSEL THEN
   VAR HASSEL1=OTYDOC_HASSTARTSEL[D]
   VAR HASSEL2=OTYDOC_HASENDSEL[D]
@@ -7761,6 +7908,8 @@
  VAR SELFRGND=GetSelectionTextColor()
  VAR OL=0
  VAR SX=X
+ VAR OH=GetScrollBarSize(OTYDOC_SCRBAR[D])
+ VAR ISROOT=!OTYDOC_TABLEPARENT[SL]
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
 '?"YSZ",YSZ
@@ -7772,7 +7921,21 @@
   SZ=8
   X=SX+OTYDOC_INDENT[I]
   
+  VAR HEIGHT_OY=Y
   VAR LINED=OTYDOC_LINEDATA[I]
+  IF ISSEL THEN
+   IF I==SEL1 THEN
+    VAR SELSX=SEL1X
+    IF SEL1==SEL2 THEN
+     VAR SELEX=SEL2X
+    ELSE
+     SELEX=&H7FFDDDDF
+    ENDIF
+   ELSEIF I==SEL2 THEN
+    SELSX=0
+    SELEX=SEL2X
+   ENDIF
+  ENDIF
   IF LINED==OTYDOC_UORDLIST THEN
    VAR Y8=(YSZ DIV 8)
    GFILL X+Y8,Y+2*Y8,X+3*Y8,Y+4*Y8,#BLACK
@@ -7809,30 +7972,19 @@
    GFILL X-2*Y8,Y+YSZ-2*Y8,X-Y8-1,Y+YSZ-Y8-1,#BLACK
   ELSEIF LINED==OTYDOC_TABLE THEN
    OL=0
-   OTYDOC_RenderTable D,I,X,Y,W,H OUT Y
+   OTYDOCRenderTable D,I,X,Y,W,H,ISSEL&&SELSX<=0&&SELEX>0 OUT Y
+   IF!ISSEL&&OTYDOC_SEL1TABLE[D]==OTYDOC_TABLEDATA[I]THEN ISSEL=TRUE
+   IF ISSEL&&OTYDOC_SEL2TABLE[D]==OTYDOC_TABLEDATA[I]THEN ISSEL=FALSE
    GOTO @C
   ELSE
    OL=0
   ENDIF
-  IF ISSEL THEN
-   IF I==SEL1 THEN
-    VAR SELSX=SEL1X
-    IF SEL1==SEL2 THEN
-     VAR SELEX=SEL2X
-    ELSE
-     SELEX=&H7FFDDDDF
-    ENDIF
-   ELSEIF I==SEL2 THEN
-    SELSX=0
-    SELEX=SEL2X
-   ENDIF
-  ENDIF
   FOR J=0TO L
    C=ASC(V$[J])
    IF C==&Hb10cTHEN CONTINUE
    IF C==&Hb10bTHEN
    IF I==CL THEN
-    IF CX==J THEN
+    IF CURSHOW&&CX==J THEN
      GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      OTYDOC_STYLE[D]=ST
      OTYDOC_COL[D]=RGBToShort(COL)
@@ -7884,7 +8036,7 @@
     RICHTEXT X,Y+YSZ-SZ,C,ST,SZ,COL
    ENDIF
    IF I==CL THEN
-    IF CX==J THEN
+    IF CURSHOW&&CX==J THEN
      GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      CURSORX=X
      CURSORY=Y+YSZ-SZ
@@ -7896,20 +8048,11 @@
 '   ?HEX$(COL)
    INC X,TW
   NEXT
-  W2=MAX(W2,X-SX)
-  IF ISSEL THEN
-   IF I==SEL1 THEN
-    SELSX=0
-    IF SEL1==SEL2 THEN
-     ISSEL=FALSE
-    ELSE
-     SELEX=&H7FFDDDDF
-    ENDIF
-   ELSEIF I==SEL2 THEN
-    ISSEL=FALSE
-   ENDIF
+  IF ISSEL&&SX==X&&SELEX>0 THEN
+   GFILL X,Y,X,Y+YSZ-1,SELBKGND
   ENDIF
-  IF I==CL&&CX>L THEN
+  W2=MAX(W2,X-SX)
+  IF I==CL&&CX>L&&CURSHOW THEN
    GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
    CURSORX=X
    CURSORY=Y+YSZ-SZ
@@ -7920,44 +8063,65 @@
   ENDIF
   IF LINESTYLE==OTYDOC_CENTER THEN
    'CENTER
-   VAR CENT=(W-2-X)DIV 2
+   VAR CENT=SX+(W-2-X-SX)DIV 2
    IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
     CURSORX=CURSORX+CENT-1
    ENDIF
-   GCOPY 1,Y,X+1,Y+YSZ,CENT,Y,0
+   GCOPY SX,Y,X+1,Y+YSZ,CENT,Y,0
    IF CENT>1 THEN
-    GFILL 1,Y,CENT-1,Y+YSZ,-1
+    GFILL SX,Y,CENT-1,Y+YSZ,-1
    ENDIF
   ENDIF
   IF LINESTYLE==OTYDOC_RIGHT THEN
    'RIGHT
-   VAR MOVE=(W-2-X)
+   VAR MOVE=SX+(W-2-X-SX)
    IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
     CURSORX=CURSORX+MOVE-1
    ENDIF
-   GCOPY 1,Y,X+1,Y+YSZ,MOVE,Y,0
+   GCOPY SX,Y,X+1,Y+YSZ,MOVE,Y,0
    IF MOVE>1 THEN
-    GFILL 1,Y,MOVE-1,Y+YSZ,-1
+    GFILL SX,Y,MOVE-1,Y+YSZ,-1
    ENDIF
   ENDIF
   INC Y,YSZ
   @C
+  OH=OH-OTYDOC_HEIGHT[I]
+  OTYDOC_HEIGHT[I]=Y-HEIGHT_OY+1
+  OH=OH+OTYDOC_HEIGHT[I]
+  IF ISSEL THEN
+   IF I==SEL1 THEN
+    SELSX=0
+    IF SEL1==SEL2 THEN
+     ISSEL=FALSE
+    ELSE
+     SELEX=&H7FFDDDDF
+    ENDIF
+   ELSEIF I==SEL2 THEN
+    ISSEL=FALSE
+   ENDIF
+  ENDIF
   IF Y+YSZ>=H THEN BREAK
   I=OTYDOC_NEXT[I]
  WEND
+ IF GetScrollBarSize(OTYDOC_SCRBAR[D])!=OH THEN
+  SetScrollBarSize OTYDOC_SCRBAR[D],OH
+ ENDIF
  H2=Y-SY
  LAST=I
-' VOID SetWindowCursor(WND,CURSORX,CURSORY)
+ IF CURSORX!=&H7FFFFFFF THEN
+  VOID SetWindowCursor(OTYDOC_WND[D],CURSORX,CURSORY)
+ ENDIF
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
 END
 DEF OTYDOC_CLK WND,MX,MY OUT LINE,POS
  VAR W=GetWindowWidth(WND)-8
- VAR H=GetWindowHeight(WND)
  VAR D=OTYDOC_GetData(WND)
  IF!D THEN
   RETURN
  ENDIF
+ VAR H=GetWindowHeight(WND)+OTYDOC_YOFFSET[D]
+ MY=MY+OTYDOC_YOFFSET[D]
  VAR I=OTYDOC_ShowLine[D]
  OTYDOC_CLKWH I,W-2,H-2,MX-2,MY-2 OUT LINE,POS
 END
@@ -8004,9 +8168,9 @@
     ENDIF
     RETURN
    ENDIF
-   Y=Y+H2+2
+   Y=Y+H2
   NEXT
-  X=X+CELLW+2
+  X=X+CELLW
  NEXT
 END
 DEF OTYDOC_CLKWH I,W,H,MX,MY OUT LINE,POS
@@ -8206,13 +8370,19 @@
  VAR LINE,POS
  VAR PAINTF
  IF Y>GetWindowHeight(WND)THEN
-  OTYDOC_Scroll D,1
-  OTYDOC_ScrollContent D,1
+  OTYDOC_UpdateScrollBarAndScrollContentDot D,OTYDOC_HEIGHT[OTYDOC_NEXT[OTYDOC_CurLine[D]]]
+' OTYDOC_Scroll D,1
+' OTYDOC_ScrollContent D,1
   PAINTF=TRUE
   VOID RepaintWindow(WND)
  ELSEIF Y<0THEN
-  OTYDOC_Scroll D,-1
-  OTYDOC_ScrollContent D,-1
+    IF OTYDOC_YOFFSET[D]THEN
+     OTYDOC_UpdateScrollBarAndScrollContentDot D,-OTYDOC_YOFFSET[D]
+    ELSE
+     OTYDOC_UpdateScrollBarAndScrollContentDot D,-OTYDOC_HEIGHT[OTYDOC_PREV[OTYDOC_CurLine[D]]]
+    ENDIF
+'  OTYDOC_Scroll D,-1
+'  OTYDOC_ScrollContent D,-1
   PAINTF=TRUE
   VOID RepaintWindow(WND)
  ENDIF
@@ -8297,6 +8467,69 @@
  ENDIF
  IF!PAINTF THEN VOID RepaintWindow(WND)
 END
+'なんかアレ
+DEF OTYDOC_UpdateScrollBarAndScrollContentDo2 D,DIFF
+END
+DEF OTYDOC_UpdateScrollBarAndScrollContentDot D,DIFF
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ OTYDOC_SCRBARPOS[D]=GetScrollBarPosition(SCRBAR)+DIFF
+ IF OTYDOC_SCRBARPOS[D]<0||GetScrollBarSize(SCRBAR)<OTYDOC_SCRBARPOS[D] THEN
+  OTYDOC_SCRBARPOS[D]=GetScrollBarPosition(SCRBAR)
+  RETURN
+ ENDIF
+ SetScrollBarPosition SCRBAR,OTYDOC_SCRBARPOS[D]
+ OTYDOC_ScrollContentDot D,DIFF
+END
+DEF OTYDOC_ScrollContentDot D,DIFF
+ VAR S=OTYDOC_ShowLine[D]
+ VAR H=OTYDOC_HEIGHT[S]
+ VAR OFF=OTYDOC_YOFFSET[D]
+ VAR OFF2=OFF+DIFF
+ IF OFF2<0THEN
+  DIFF=DIFF+OTYDOC_YOFFSET[D]
+  H=0
+  WHILE 1
+   DIFF=H+DIFF
+   OTYDOC_YOFFSET[D]=DIFF
+   IF DIFF>=0 THEN BREAK
+   S=OTYDOC_ShowLine[D]
+   VAR P=OTYDOC_PREV[S]
+   IF!P THEN BREAK
+   IF OTYDOC_ISSEL[D]THEN
+    IF OTYDOC_SEL1[D]==P THEN
+     OTYDOC_HASSTARTSEL[D]=TRUE
+    ENDIF
+    IF OTYDOC_SEL2[D]==P THEN
+     OTYDOC_HASENDSEL[D]=TRUE
+    ENDIF
+   ENDIF
+   H=OTYDOC_HEIGHT[P]
+   OTYDOC_ShowLine[D]=P
+  WEND
+ ELSEIF OFF2<H THEN
+  OTYDOC_YOFFSET[D]=OFF2
+ ELSEIF OFF2>=H THEN
+  DIFF=DIFF+OTYDOC_YOFFSET[D]
+  H=0
+  WHILE 1
+   S=OTYDOC_ShowLine[D]
+   DIFF=DIFF-H
+   OTYDOC_YOFFSET[D]=DIFF
+   IF OTYDOC_YOFFSET[D]<OTYDOC_HEIGHT[S]THEN BREAK
+   IF!OTYDOC_NEXT[S]THEN BREAK
+   IF OTYDOC_ISSEL[D]THEN
+    IF OTYDOC_SEL1[D]==S THEN
+     OTYDOC_HASSTARTSEL[D]=FALSE
+    ENDIF
+    IF OTYDOC_SEL2[D]==S THEN
+     OTYDOC_HASENDSEL[D]=FALSE
+    ENDIF
+   ENDIF
+   H=OTYDOC_HEIGHT[S]
+   OTYDOC_ShowLine[D]=OTYDOC_NEXT[S]
+  WEND
+ ENDIF
+END
 DEF OTYDOC_ScrollContent D,DIFF
  VAR I
  'DOWN
@@ -8356,7 +8589,7 @@
   VAR OLD=OTYDOC_SCRBARPOS[D]
   VAR DIFF=A2-OLD
   OTYDOC_SCRBARPOS[D]=A2
-  OTYDOC_ScrollContent D,DIFF
+  OTYDOC_ScrollContentDot D,DIFF
   VOID RepaintWindow(WND)
  ENDIF
 END
@@ -8367,9 +8600,19 @@
   IF P THEN
    OTYDOC_ISSEL[D]=0
    IF C==OTYDOC_ShowLine[D]THEN
-    OTYDOC_ShowLine[D]=OTYDOC_PREV[C]
-    OTYDOC_Scroll D,-1
+    IF OTYDOC_YOFFSET[D]THEN
+     OTYDOC_UpdateScrollBarAndScrollContentDot D,-OTYDOC_YOFFSET[D]
+    ELSE
+     OTYDOC_UpdateScrollBarAndScrollContentDot D,-OTYDOC_HEIGHT[OTYDOC_PREV[OTYDOC_CurLine[D]]]
+    ENDIF
+'    OTYDOC_ShowLine[D]=OTYDOC_PREV[C]
+'    OTYDOC_Scroll D,-1
    ENDIF
+   IF OTYDOC_PREV[C]==OTYDOC_ShowLine[D]THEN
+    IF OTYDOC_YOFFSET[D]THEN
+     OTYDOC_UpdateScrollBarAndScrollContentDot D,-OTYDOC_YOFFSET[D]
+    ENDIF
+   ENDIF
    VAR CV$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
    OTYDOC_CurLine[D]=P
    OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[OTYDOC_CurLine[D]],OTYDOC_GETPOS(CV$,OTYDOC_CX[D]))
@@ -8449,8 +8692,9 @@
   IF OTYDOC_NEXT[C]THEN
    OTYDOC_ISSEL[D]=0
    IF OTYDOC_CurLine[D]==OTYDOC_LastShowLine[D]THEN
-    OTYDOC_ShowLine[D]=OTYDOC_NEXT[OTYDOC_ShowLine[D]]
-    OTYDOC_Scroll D,1
+    OTYDOC_UpdateScrollBarAndScrollContentDot D,OTYDOC_HEIGHT[OTYDOC_NEXT[OTYDOC_CurLine[D]]]
+    'OTYDOC_ShowLine[D]=OTYDOC_NEXT[OTYDOC_ShowLine[D]]
+    'OTYDOC_Scroll D,1
    ENDIF
    VAR CV$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
    OTYDOC_CurLine[D]=OTYDOC_NEXT[C]
@@ -8633,6 +8877,7 @@
   U=1
  ENDIF
  CX=LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]])-1
+ IF 0THEN 
  VAR I,LLL
  FOR I=0TO CX
   IF I==OTYDOC_CX[D]THEN LLL=CSRX
@@ -8658,6 +8903,7 @@
  ?
  COLOR 15
  ?" "*(LLL);""
+ ENDIF
  IF U THEN
   IF R==0 THEN
    SetWindowVar WND,5,20
@@ -8980,8 +9226,8 @@
   OTYDOC_UpdateParentTable C,OTYDOC_GetWidth(WND)
  ENDIF
  OTYDOCRepaint WND
- ?OTYDOC_VAL$[C]
- ?" "*MAX(OTYDOC_CX[D],0);""
+ '?OTYDOC_VAL$[C]
+ '?" "*MAX(OTYDOC_CX[D],0);""
 END
 DEF OTYDOC_NewLineInitStyle$(D)
  RETURN CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)
@@ -9139,23 +9385,13 @@
 COMMON DEF RTESave WND,FILE$ OUT ERR
  VAR D=OTYDOC_GetData(WND)
  VAR FILE
- FileOpen FILE$,FileWriteFlag() OUT FILE,ERR
+ FileOpen FILE$,FileWriteFlag()OR FileCreateFlag() OUT FILE,ERR
  IF ERR THEN RETURN
  FileWrite FILE,"OTYDOC"+LF$() OUT ERR
  VAR F=OTYDOC_GetFirstLine(OTYDOC_ShowLine[D])
- VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
- WHILE F
-  VAR LS$=CHR$(OTYDOC_FILE_LINESTYLE)+CHR$(1)+CHR$(OTYDOC_LINESTYLE[F])
-  VAR LD$=CHR$(OTYDOC_FILE_LINEDATA)+CHR$(1)+CHR$(OTYDOC_LINEDATA[F])
-  VAR LI$=CHR$(OTYDOC_FILE_INDENT)+CHR$(1)+CHR$(OTYDOC_INDENT[F])
-  VAR LC$=CHR$(OTYDOC_FILE_CONTENT)+CHR$(LEN(OTYDOC_VAL$[F]))+OTYDOC_VAL$[F]
-
-  FileWrite FILE,LC$ OUT ERR
-  FileWrite FILE,LS$ OUT ERR
-  FileWrite FILE,LD$ OUT ERR
-  FileWrite FILE,LI$ OUT ERR
-  F=OTYDOC_NEXT[F]
- WEND
+ VAR BUF$=""
+ OTYDOC_SerializeBlock F,BUF$
+ FileWrite FILE,BUF$ OUT ERR
  FileClose FILE OUT ERR
 END
 COMMON DEF RTENew WND
@@ -9172,47 +9408,69 @@
  VOID RepaintWindow(WND)
  OTYDOC_SetLine D,0
 END
-COMMON DEF RTEOpen WND,FILE$ OUT ERR
- VAR D=OTYDOC_GetData(WND)
- OTYDOC_ISSEL[D]=FALSE
- VAR F$
- LoadFile FILE$ OUT F$,ERR
- IF MID$(F$,0,LEN("OTYDOC")+1)!="OTYDOC"+LF$()THEN
-  ERR=TRUE
-  RETURN
- ENDIF
- VAR I=LEN("OTYDOC")+1
- RTENew WND
- VAR LINE=OTYDOC_ShowLine[D]
- VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
- VAR L=LEN(F$)-1
- VAR LC
- FOR I=I TO L
-  VAR C=ASC(F$[I])
+DEF OTYDOC_DeserializeBlock D$,IN_I OUT I,LC,OUTLINE
+ VAR L=LEN(D$)-1
+ VAR LINE=0
+ OUTLINE=0
+ LC=0
+ FOR I=IN_I TO L
+  VAR C=ASC(D$[I])
   IF I+1>L THEN BREAK
-  VAR CL=ASC(F$[I+1])
+  VAR CL=ASC(D$[I+1])
   IF I+1+CL>L THEN BREAK
+  IF C==OTYDOC_FILE_NEWCOL THEN
+   BREAK
+  ENDIF
+  IF C==OTYDOC_FILE_TABLE THEN
+   LINE=OTYDOC_NewLine("",LINE)
+   OTYDOC_DeserializeTable D$,I,LINE OUT I,OTYDOC_TABLEDATA[LINE]
+   IF!OUTLINE THEN OUTLINE=LINE
+   INC LC
+   I=I-1
+   CONTINUE
+  ENDIF
   IF C==OTYDOC_FILE_LINESTYLE THEN
-   VAR V=ASC(F$[I+2])
+   VAR V=ASC(D$[I+2])
    OTYDOC_LINESTYLE[LINE]=V
   ELSEIF C==OTYDOC_FILE_LINEDATA THEN
-   V=ASC(F$[I+2])
+   V=ASC(D$[I+2])
    OTYDOC_LINEDATA[LINE]=V
   ELSEIF C==OTYDOC_FILE_INDENT THEN
-   V=ASC(F$[I+2])
+   V=ASC(D$[I+2])
    OTYDOC_INDENT[LINE]=V
   ELSEIF C==OTYDOC_FILE_CONTENT THEN
-   LINE=OTYDOC_NewLine(MID$(F$,I+2,CL),LINE)
+   LINE=OTYDOC_NewLine(MID$(D$,I+2,CL),LINE)
+   IF!OUTLINE THEN OUTLINE=LINE
    INC LC
    OTYDOC_AdjustLine LINE
   ENDIF
   I=I+CL+1
  NEXT
- IF LINE!=OTYDOC_ShowLine[D]THEN
-  OTYDOC_ShowLine[D]=OTYDOC_DeleteLine(OTYDOC_ShowLine[D])
+ 
+END
+COMMON DEF RTEOpen WND,FILE$ OUT ERR
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_ISSEL[D]=FALSE
+ VAR F$
+ LoadFile FILE$ OUT F$,ERR
+ IF MID$(F$,0,LEN("OTYDOC")+1)!="OTYDOC"+LF$()THEN
+  ERR=TRUE
+  RETURN
+ ENDIF
+ VAR I=LEN("OTYDOC")+1
+ RTENew WND
+ VAR LINE=OTYDOC_ShowLine[D]
+ VAR L=LEN(F$)-1
+ VAR LC
+ VAR OUTLINE
+ OTYDOC_DeserializeBlock F$,I OUT I,LC,LINE
+ IF LINE THEN
+  VOID OTYDOC_DeleteLine(OTYDOC_ShowLine[D])
+  OTYDOC_ShowLine[D]=LINE
   OTYDOC_CurLine[D]=OTYDOC_ShowLine[D]
   OTYDOC_SetLine D,LC-1
  ENDIF
+ OTYDOC_CalcDocumentSize WND
 END
 DEF OTYDOC_PlainText F,S,E,O$
  VAR L$=MID$(OTYDOC_VAL$[F],S,E-S)
@@ -9221,10 +9479,59 @@
  NEXT
  PUSH O$,L$+LF$()
 END
+'if ER=-1, ER=Row size
+'if EC=-1, EC=Col size
+DEF OTYDOC_SerializeTable TBL,O$,SR,SC,ER,EC
+ IF 0THEN DIM A[0]
+ A=GetSBArray(TBL)
+ VAR ROW=A[OTYDOC_TABLEARY_ROW]
+ VAR COL=A[OTYDOC_TABLEARY_COL]
+ IF ER==-1THEN ER=ROW-1
+ IF EC==-1THEN EC=COL-1
+ IF SR>ER THEN SWAP SR,ER
+ IF SC>EC THEN SWAP SC,EC
+ PUSH O$,CHR$(OTYDOC_FILE_TABLE)+CHR$(2)
+ PUSH O$,CHR$(ER-SR+1)
+ PUSH O$,CHR$(EC-SC+1)
+ VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+ 
+ VAR I,J,Y,X,R,C
+ FOR R=SR TO ER
+  FOR C=SC TO EC
+   VAR L=A[H+R*COL*OTYDOC_TBLELM+C*OTYDOC_TBLELM]
+   OTYDOC_SerializeBlock L,O$
+   PUSH O$,CHR$(OTYDOC_FILE_NEWCOL)+CHR$(0)
+  NEXT
+  PUSH O$,CHR$(OTYDOC_FILE_NEWROW)+CHR$(0)
+ NEXT
+  PUSH O$,CHR$(OTYDOC_FILE_TABLEEND)+CHR$(0)
+ 
+END
+DEF OTYDOC_SerializeBlock F,O$
+ WHILE F
+  IF OTYDOC_TABLEDATA[F]THEN
+   OTYDOC_SerializeTable OTYDOC_TABLEDATA[F],O$,0,0,-1,-1
+  ELSE
+   VAR LS$=CHR$(OTYDOC_FILE_LINESTYLE)+CHR$(1)+CHR$(OTYDOC_LINESTYLE[F])
+   VAR LD$=CHR$(OTYDOC_FILE_LINEDATA)+CHR$(1)+CHR$(OTYDOC_LINEDATA[F])
+   VAR LI$=CHR$(OTYDOC_FILE_INDENT)+CHR$(1)+CHR$(OTYDOC_INDENT[F])
+   VAR LC$=CHR$(OTYDOC_FILE_CONTENT)+CHR$(LEN(OTYDOC_VAL$[F]))+OTYDOC_VAL$[F]
+
+   PUSH O$,LC$
+   PUSH O$,LS$
+   PUSH O$,LD$
+   PUSH O$,LI$
+  ENDIF
+  F=OTYDOC_NEXT[F]
+ WEND
+END
 DEF OTYDOC_Serialize F,S,E,O$
- VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
  VAR L$=""
  
+ IF OTYDOC_TABLEDATA[F]THEN
+  OTYDOC_SerializeTable OTYDOC_TABLEDATA[F],O$,0,0,-1,-1
+  RETURN
+ ENDIF
  VAR S$,TYPE
  FOR TYPE=0TO 2
   OTYDOC_GetStyle OTYDOC_VAL$[F],0,S,TYPE OUT S$
@@ -9239,6 +9546,7 @@
  PUSH O$,LS$
  PUSH O$,LD$
  PUSH O$,LI$
+ 
 END
 DEF OTYDOC_PastePlainText WND,TXT$
  VAR D=OTYDOC_GetData(WND)
@@ -9275,6 +9583,51 @@
  ENDIF
  VOID RepaintWindow(WND)
 END
+DEF OTYDOC_DeserializeTable D$,IN_I,TBLLINE OUT I,TBL
+ VAR L=LEN(D$)-1
+ VAR ROW,COL
+ VAR _
+ VAR COLC,ROWC
+ FOR I=IN_I TO L
+  VAR C=ASC(D$[I])
+  IF I+1>L THEN BREAK
+  VAR CL=ASC(D$[I+1])
+  IF I+1+CL>L THEN BREAK
+  IF C==OTYDOC_FILE_TABLE THEN
+   ROW=ASC(D$[I+2])
+   COL=ASC(D$[I+3])
+   TBL=AllocSBArray()
+   VAR H=OTYDOC_TABLEARY_HEAD+ROW+COL
+   DIM A[ROW*COL*OTYDOC_TBLELM+H]
+   A[OTYDOC_TABLEARY_ROW]=ROW
+   A[OTYDOC_TABLEARY_COL]=COL
+   SetSBArray TBL,A
+   A[OTYDOC_TABLEARY_LINE]=TBLLINE
+   OTYDOC_LINEDATA[TBLLINE]=OTYDOC_TABLE
+  ELSEIF C==OTYDOC_FILE_NEWROW THEN
+   COL=0
+   INC ROWC
+  ELSEIF C==OTYDOC_FILE_NEWCOL THEN
+   INC COLC
+  ELSEIF C==OTYDOC_FILE_TABLEEND THEN
+   I=I+CL+2
+   BREAK
+  ELSE
+   VAR LINE
+   OTYDOC_DeserializeBlock D$,I OUT I,_,LINE
+   
+   A[H+ROWC*COL*OTYDOC_TBLELM+COLC*OTYDOC_TBLELM]=LINE
+   WHILE LINE
+    OTYDOC_TABLEPARENT[LINE]=TBL
+    LINE=OTYDOC_NEXT[LINE]
+   WEND
+   I=I-1
+   CONTINUE
+  ENDIF
+  
+  I=I+CL+1
+ NEXT
+END
 COMMON DEF RTEPaste WND
  VAR D=OTYDOC_GetData(WND)
  IF OTYDOC_ISSEL[D]THEN
@@ -9300,7 +9653,6 @@
  LST$=ST$+LST$
  OTYDOC_VAL$[C]=F$
 
- VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2,OTYDOC_FILE_LINEDATA=3,OTYDOC_FILE_INDENT=4
  VAR L=LEN(D$)-1
  VAR LC
  VAR LINE=C
@@ -9308,9 +9660,19 @@
  VAR FIRSTLINE=TRUE
  FOR I=I TO L
       C=ASC(D$[I])
+  IF C==OTYDOC_FILE_NEWCOL THEN
+   BREAK
+  ENDIF
   IF I+1>L THEN BREAK
   VAR CL=ASC(D$[I+1])
   IF I+1+CL>L THEN BREAK
+  IF C==OTYDOC_FILE_TABLE THEN
+   LINE=OTYDOC_NewLine("",LINE)
+   OTYDOC_DeserializeTable D$,I,LINE OUT I,OTYDOC_TABLEDATA[LINE]
+   INC LC
+   I=I-1
+   CONTINUE
+  ENDIF
   IF LINE!=FL THEN
    IF C==OTYDOC_FILE_LINESTYLE THEN
     VAR V=ASC(D$[I+2])
@@ -9377,6 +9739,13 @@
  VAR E=OTYDOC_SEL2[D]
  VAR SX=OTYDOC_SEL1X[D]
  VAR EX=OTYDOC_SEL2X[D]
+ VAR STBL=OTYDOC_SEL1TABLE[D]
+ VAR SROW=OTYDOC_SEL1ROW[D]
+ VAR SCOL=OTYDOC_SEL1COL[D]
+ VAR ETBL=OTYDOC_SEL2TABLE[D]
+ VAR EROW=OTYDOC_SEL2ROW[D]
+ VAR ECOL=OTYDOC_SEL2COL[D]
+ 
  VAR O$=""
  VAR P$=""
  ClearClipboard
@@ -9388,6 +9757,9 @@
   RETURN
  ENDIF
  VAR _
+ IF STBL&&STBL==ETBL THEN
+  OTYDOC_SERIALIZETABLE STBL,O$,SROW,SCOL,EROW,ECOL
+ ELSE
  OTYDOC_SERIALIZE S,SX,LEN(OTYDOC_VAL$[S]),O$
  OTYDOC_PlainText S,SX,LEN(OTYDOC_VAL$[S]),P$
  S=OTYDOC_NEXT[S]
@@ -9403,6 +9775,7 @@
   OTYDOC_PlainText S,0,LEN(OTYDOC_VAL$[S]),P$
   S=NXT
  WEND
+ ENDIF
  ClipboardSetData$ "RichText",O$
  ClipboardSetText P$
 END
@@ -9618,7 +9991,6 @@
  ENDIF
  IF N$=="OTYDOCCOLOR"THEN
   RTESetTextColor GetWindowVar(WND,0),F
-  VOID DeleteWindow(CW)
  ENDIF
  IF N$==""THEN
   VAR BTNL,BTNC,BTNR
@@ -9712,11 +10084,6 @@
 COMMON DEF OTYDOC_ColorChFocus WND,CTL,TYP,FLG,FW
  IF!FLG THEN
   IF GetParentWindow(FW)==WND THEN RETURN
-  VAR OWN=GetWindowGroupOwner(WND)
-  IF GetWindowVar(WND,0)!=-1THEN
-   VOID SendNotifWindow(OWN,WND,GetConsolePalette(GetWindowVar(WND,0)))
-   RETURN
-  ENDIF
   VOID DeleteWindow(WND)
  ENDIF
 END
@@ -9728,6 +10095,11 @@
  IF COL>15THEN RETURN
  SetWindowVar WND,0,COL
  OTYDOC_COLORPAINT WND,CTL,TYP,0,0
+ VAR OWN=GetWindowGroupOwner(WND)
+ IF GetWindowVar(WND,0)!=-1THEN
+  VOID SendNotifWindow(OWN,WND,GetConsolePalette(GetWindowVar(WND,0)))
+  RETURN
+ ENDIF
 END
 COMMON DEF OTYDOC_ShowMenu CTL,WND,X,Y,X2,Y2
  VAR E,MENUWND
@@ -9901,13 +10273,19 @@
  DIM ICONS[512]
  LOAD"DAT:OTYFILRC",ICONS,0
  OTYFILICODIR=NewArray(16*16)
- LOAD"DAT:OTYFILRC3",OTYFILICODIR,0
+' LOAD"DAT:OTYFILRC3",OTYFILICODIR,0
  OTYFILICOTXT=NewArray(16*16)
  OTYFILICODAT=NewArray(16*16)
  OTYFILICON=NewArray(16*16)
  COPY OTYFILICOTXT,ICONS,0,16*16
  COPY OTYFILICODAT,ICONS,16*16,16*16
- COPY OTYFILICON,ICONS,16*16*2,16*16
+' COPY OTYFILICON,ICONS,16*16*2,16*16
+ DIM A[16,16]
+ LOAD"DAT:FOLDER.IMG",A,0
+ COPY OTYFILICODIR,A,0,16*16
+ LOAD"DAT:FILEMAN.IMG",A,0
+ COPY OTYFILICON,A,0,16*16
+ 
 END
 VAR OTYFILCTL
 VAR OTYFILICONCTL
@@ -10059,7 +10437,7 @@
    ERR=NewDir(FOLNAME$)
   ENDIF
   IF ERR THEN
-   VOID MessageBox(WND,"Files","error:0x"+HEX$(ERR,8),MessageBoxOK())
+   VOID MessageBox(WND,"Files","error:"+GetErrorName$(ERR),MessageBoxOK())
    RETURN
   ENDIF
   VOID(DeleteWindow(WND))
@@ -10217,7 +10595,7 @@
   IF K>=KL THEN
    IF ISSEL THEN
     ISSEL=0
-    KL=GetWindowVar(WND,4)
+    KL=MIN(LEN(ARY$),GetWindowVar(WND,4))
     K=0
    ELSE
     BREAK
@@ -11640,6 +12018,7 @@
  VAR CY=GetWindowVar(WND,2)
  VAR CNT=GetWindowVar(WND,3)
  IF CX<=X||CY<=Y THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_FLAG THEN RETURN
  IF (FIELD[X,Y]AND&B1111)==OTYMINE_MINE THEN
   SetWindowVar WND,4,TRUE'GAMEOVER
   FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_MISS
@@ -11862,11 +12241,11 @@
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
 
-DEF TESTIM_KEY IM,KEY
+DEF DEFIM_KEY IM,KEY
  IF!OTW_ENABLEKEY THEN RETURN
  VOID SendIMText(IM,CHR$(KEY))
 END
-COMMON DEF I_TESTIM
+COMMON DEF I_DEFIM
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
   ExitProcess 1
@@ -11878,11 +12257,11 @@
   ExitProcess ERR
   RETURN
  ENDIF
- ERR=SetIMKeyHandler(IM,"TESTIM_KEY")
+ ERR=SetIMKeyHandler(IM,"DEFIM_KEY")
  SetProcessVar IM
  KEY 1,"KEY OFF"
 END
-COMMON DEF L_TESTIM
+COMMON DEF L_DEFIM
  VAR X,Y,MMM
  TOUCH OUT MMM,X,Y
  IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
@@ -12435,21 +12814,26 @@
  
  SetProcessVar IM
  KEY 1,"KEY OFF"
- EXEC 2
+ 
+ EXEC 3
 END
 COMMON DEF L_RIM
  VAR X,Y,MMM
  TOUCH OUT MMM,X,Y
  IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
   OTW_ENKEY_STATE=1
-  RIM_MODE=(RIM_MODE+1)MOD 4
+  RIM_MODE=(RIM_MODE+1)MOD 3
   IF RIM_MODE==1 THEN
+   SetKeyboardMode!TRUE
    KEY 1,"KEY ON"
   ELSEIF RIM_MODE==2THEN
+   SetKeyboardMode!TRUE
    KEY 1,"かな ON"
   ELSEIF RIM_MODE==3THEN
+   SetKeyboardMode!TRUE
    KEY 1,"カナ ON"
   ELSE
+   SetKeyboardMode TRUE
    KEY 1,"KEY OFF"
   ENDIF
   BEEP 9
@@ -12564,6 +12948,17 @@
    OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X,Y
    CONTINUE
   ENDIF
+  IF D==9THEN
+   IF X MOD TABSTEP THEN
+    X=X+X MOD TABSTEP
+   ELSE
+    X=X+TABSTEP
+   ENDIF
+   IF X>=W THEN
+    OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X,Y
+   ENDIF
+   CONTINUE
+  ENDIF
   CONSOLE[Y*W+X]=(STYLE<<16) OR D
   INC X
   IF X>=W THEN
@@ -12989,14 +13384,22 @@
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,GetWindowBackColor(WND)
  SetWindowDrawPos WND,(GetWindowWidth(WND)-WW)DIV 2,(GetWindowHeight(WND)-WW)DIV 2
- GCIRCLEWindow WND,WW DIV 2,WH DIV 2,WW DIV 2,#BLACK
- VAR H#=RAD(H*(360/24))
- VAR M#=RAD(M*(360/60))
+ VAR S2=H*60*60+M*60+S
+ ?S2,H,M,S
+ VAR H#=RAD(S2/3600*(360/24)+90)'H*(360/24))
+ VAR M#=RAD(S2/60*(360/60)+270)'M*(360/60))
  VAR S#=RAD(S*(360/60))
  H=S
- GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(S#)*(WW/2),WW/2+SIN(S#)*(WW/2),#BLACK
- GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(H#)*(WW/2)*0.5,WW/2+SIN(H#)*(WW/2)*0.5,#BLACK
- GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(M#)*(WW/2),WW/2+SIN(M#)*(WW/2)*0.9,#BLACK
+ VAR C=WW DIV 2
+ GLINEWindow WND,C,C,C+COS(S#)*(C),C+SIN(S#)*(C),#BLACK
+ GCIRCLEWindow WND,C,C,C,#BLACK
+' GLINEWindow WND,C,C,C+COS(H#)*(C)*0.5,C+SIN(H#)*(C)*0.5,#BLACK
+ VAR R#=RAD(3)
+ GTRIWindow WND,C,C,C+COS(H#-R#)*(WW/8),C+SIN(H#-R#)*(WW/8),C+COS(H#)*C,C+SIN(H#)*C,#BLACK
+ GTRIWindow WND,C,C,C+COS(H#+R#)*(WW/8),C+SIN(H#+R#)*(WW/8),C+COS(H#)*(C),C+SIN(H#)*(C),#BLACK
+'GLINEWindow WND,C,C,C+COS(M#)*(C),C+SIN(M#)*(C)*0.9,#BLACK
+ GTRIWindow WND,C,C,C+COS(M#-R#)*(WW/8),C+SIN(M#-R#)*(WW/8),C+COS(M#)*C,C+SIN(M#)*C,#BLACK
+ GTRIWindow WND,C,C,C+COS(M#+R#)*(WW/8),C+SIN(M#+R#)*(WW/8),C+COS(M#)*(C),C+SIN(M#)*(C),#BLACK
  IF GEndWindow(WND)THEN RETURN
 END
 COMMON DEF I_OTWCLOCK
diff -u OTW.TXT OTW2D
--- OTW.TXT
+++ OTW2D
@@ -222,8 +222,10 @@
 VAR IMAGE_IDCNT
 VAR IMAGE_FREE
 VAR IMAGE_NOALLOC
+VAR IMAGE_INVALIDID
 DEF OTW_IMAGE_INITARRAY
  IMAGE_NOALLOC=1
+ IMAGE_INVALIDID=2
  IMAGE_MAX=256
  IMAGE_IDCNT=1
  IMAGE_FREE=1
@@ -259,6 +261,7 @@
 'Select
 DIM MENU_SEL[0]
 DIM MENU_ID[0]
+DIM MENU_CHECKROW[0]
 VAR MENU_MAX
 VAR MENU_IDCNT
 VAR MENU_FREE
@@ -266,8 +269,13 @@
 VAR MENU_STYLE_SEPARATOR
 VAR MENU_SEPARATOR_HEIGHT
 VAR MENU_STYLE_CHILD
+VAR MENU_STYLE_RADIO
+VAR MENU_STYLE_CHECK
+VAR MENU_STYLE_CHECKED
 VAR MENU_CHILD_MARK_W
 VAR MENU_CHILD_MARK_H
+VAR MENU_CHECK_W
+VAR MENU_RADIO_W
 VAR MENU_NOTIFID
 DEF OTW_MENU_INITARRAY
  PrintConsoleln "Init menu..."
@@ -281,6 +289,9 @@
  MENU_STYLE_SEPARATOR=1
  MENU_SEPARATOR_HEIGHT=4
  MENU_STYLE_CHILD=2
+ MENU_STYLE_RADIO=4
+ MENU_STYLE_CHECK=8
+ MENU_STYLE_CHECKED=16
  MENU_CHILD_MARK_W=4
  MENU_CHILD_MARK_H=4
  MENU_IVAR=NewArray(MENU_ITEMMAX)
@@ -295,11 +306,14 @@
  MENU_LAST=NewArray(MENU_MAX)
  MENU_SEL=NewArray(MENU_MAX)
  MENU_SHOW=NewArray(MENU_MAX)
+ MENU_CHECKROW=NewArray(MENU_MAX)
  MENU_IDCNT=0
  MENU_ID=NewArray(MENU_MAX)
  MENU_NEXT=MENU_ITEM
  OTW_INITLIST MENU_NEXT
  MENU_FREE=1
+ MENU_CHECK_W=8
+ MENU_RADIO_W=8
  MENU_NOTIFID=&HDEADFEED
  VAR E
 END
@@ -415,6 +429,7 @@
 VAR CTL_RESIZEHANDLER
 VAR CTL_FRMPAINTHANDLER
 VAR CTL_CHLDWNDHANDLER
+VAR CTL_PRNTWNDHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -437,11 +452,13 @@
 
 VAR CTL_MSGBOXCTL
 
+VAR CTL_HSCRBARCTL
+
 DEF OTW_CTL_INITARRAY
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=20
+ CTL_HANDLER_MAX=21
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -461,6 +478,7 @@
  NewControl "TXTBOX" OUT CTL_TXTBOXCTL,E
  NewControl "LABEL" OUT CTL_LABELCTL,E
  NewControl "VSCRBAR" OUT CTL_VSCRBARCTL,E
+ NewControl "HSCRBAR" OUT CTL_HSCRBARCTL,E
  CTL_PAINTHANDLER=0
 ' CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
  CTL_LBTNDWNHANDLER=1
@@ -483,6 +501,7 @@
  CTL_RESIZEHANDLER=17
  CTL_FRMPAINTHANDLER=18
  CTL_CHLDWNDHANDLER=19
+ CTL_PRNTWNDHANDLER=20
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -512,6 +531,7 @@
  E=SetControlPainter(CTL_VSCRBARCTL,"VSCRBARPainter")
  E=SetControlLMouseUpHandler(CTL_VSCRBARCTL,"VSCRBARLMouseUP")
  E=SetControlLMouseDownHandler(CTL_VSCRBARCTL,"VSCRBARLMouseDown")
+ E=SetControlParentWindowHandler(CTL_VSCRBARCTL,"VSCRBARPARENT")
 
 
  ExtendControl "ToggleButton",CTL_BUTTONCTL OUT CTL_TGLBTNCTL,E
@@ -548,6 +568,12 @@
  ExtendControl "MESSAGEBOX",GetWindowControl() OUT CTL_MSGBOXCTL,E
  E=SetControlCreateHandler(CTL_MSGBOXCTL,"MessageBoxOnCreate")
  E=SetControlNotifHandler(CTL_MSGBOXCTL,"MessageBoxOnNotif")
+
+ E=SetControlPainter(CTL_HSCRBARCTL,"HSCRBARPainter")
+ E=SetControlLMouseUpHandler(CTL_HSCRBARCTL,"HSCRBARLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_HSCRBARCTL,"HSCRBARLMouseDown")
+ E=SetControlParentWindowHandler(CTL_HSCRBARCTL,"HSCRBARPARENT")
+
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
  CTL_CID[0]=&Hdeadbeef
@@ -730,6 +756,9 @@
 COMMON DEF GetDropDownListControl()
  RETURN CTL_DRPDWNCTL
 END
+COMMON DEF GetHScrollBarControl()
+ RETURN CTL_HSCRBARCTL
+END
 'CONTROL
 COMMON DEF FindControl(NAME$)
  VAR I
@@ -906,6 +935,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_CHLDWNDHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlParentWindowHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_PRNTWNDHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -1017,8 +1051,8 @@
  IF PTR==-1 THEN IMG=0:E=IMAGE_NOALLOC:RETURN
  INC IMAGE_IDCNT
  IMAGE_ID[IMAGE_FREE]=IMAGE_IDCNT
- IMAGE_HEIGHT[IMAGE_FREE]=WIDTH
- IMAGE_WIDTH[IMAGE_FREE]=HEIGHT
+ IMAGE_WIDTH[IMAGE_FREE]=WIDTH
+ IMAGE_HEIGHT[IMAGE_FREE]=HEIGHT
  IMAGE_PTR[IMAGE_FREE]=PTR
  IMG=IMAGE_FREE OR IMAGE_IDCNT<<12
  IMAGE_FREE=IMAGE_NEXT[IMAGE_FREE]
@@ -1042,6 +1076,40 @@
  VAR I=IMG AND 4095
  GLOAD X,Y,IMAGE_WIDTH[I],IMAGE_HEIGHT[I],GetSBArray(IMAGE_PTR[I]),1,TF
 END
+COMMON DEF GLOADImagePalette X,Y,IMG,PAL,TF
+ IF!CheckImage(IMG)THEN RETURN
+ VAR I=IMG AND 4095
+ GLOAD X,Y,IMAGE_WIDTH[I],IMAGE_HEIGHT[I],GetSBArray(IMAGE_PTR[I]),PAL,TF
+END
+COMMON DEF GSAVEImage X,Y,IMG
+ IF!CheckImage(IMG)THEN RETURN
+ VAR I=IMG AND 4095
+ GSAVE X,Y,IMAGE_WIDTH[I],IMAGE_HEIGHT[I],GetSBArray(IMAGE_PTR[I]),1
+END
+COMMON DEF GetImageWidth(IMG)
+ IF!CheckImage(IMG)THEN
+  RETURN 0
+ ENDIF
+ VAR I=IMG AND 4095
+ RETURN IMAGE_WIDTH[I]
+END
+COMMON DEF GetImageHeight(IMG)
+ IF!CheckImage(IMG)THEN
+  RETURN 0
+ ENDIF
+ VAR I=IMG AND 4095
+ RETURN IMAGE_HEIGHT[I]
+END
+COMMON DEF GetImageArray IMG OUT ARY,ERR
+ IF!CheckImage(IMG)THEN
+  ERR=IMAGE_INVALIDID
+  ARY=NewArray(0)
+  RETURN
+ ENDIF
+ VAR I=IMG AND 4095
+ ARY=GetSBArray(IMAGE_PTR[I])
+ ERR=0
+END
 VAR MENU_NOALLOC
 COMMON DEF NewMenu OUT MENU,E
  IF !MENU_FREE THEN MENU=0:E=MENU_NOALLOC:RETURN
@@ -1050,6 +1118,7 @@
  MENU_ID[MENU_FREE]=MENU_IDCNT
  MENU_HEIGHT[MENU_FREE]=4
  MENU_WIDTH[MENU_FREE]=0
+ MENU_CHECKROW[MENU_FREE]=FALSE
  VAR M=MENU_FREE
  MENU=MENU_FREE OR MENU_IDCNT<<12
  MENU_FREE=MENU_NEXT[MENU_FREE]
@@ -1171,6 +1240,15 @@
  IF STYLE AND MENU_STYLE_CHILD THEN
   W=W+MENU_CHILD_MARK_W
  ENDIF
+ IF STYLE AND MENU_STYLE_RADIO THEN
+  IF !MENU_CHECKROW[N]THEN INC MENU_WIDTH[N],MENU_CHECK_W
+  MENU_CHECKROW[N]=TRUE
+ ELSEIF STYLE AND MENU_STYLE_CHECK THEN
+  IF !MENU_CHECKROW[N]THEN INC MENU_WIDTH[N],MENU_CHECK_W
+  MENU_CHECKROW[N]=TRUE
+ ENDIF
+  IF MENU_CHECKROW[N]THEN INC W,MENU_CHECK_W
+
  IF MENU_WIDTH[N]<W THEN
   MENU_WIDTH[N]=W
  ENDIF
@@ -1184,13 +1262,103 @@
  IF!MENU_LAST[N]THEN RETURN
  MENU_ICHILD[MENU_LAST[N]]=SUBMENU' AND 4095
 END
+COMMON DEF AddRadioMenuItem MENU,STR$,IVAR,CHECKED
+ VAR S=MENU_STYLE_RADIO
+ IF CHECKED THEN S=S OR MENU_STYLE_CHECKED
+ AddMenuItemStyle MENU,STR$,IVAR,S
+ VAR N=MENU AND 4095
+ IF!MENU_LAST[N]THEN RETURN
+END
+COMMON DEF IsCheckedMenuItem(MENU,IVAR)
+ VAR N=MENU AND 4095
+ VAR I=MENU_ITEM[N]
+ WHILE I
+  IF MENU_IVAR[I]==IVAR THEN
+   IF MENU_ISTYLE[I]AND MENU_STYLE_CHECKED THEN
+    RETURN TRUE
+   ENDIF
+   RETURN FALSE
+  ENDIF
+  I=MENU_INEXT[I]
+ WEND
+ RETURN FALSE
+END
+COMMON DEF GetCheckedRadioMenuItem MENU,IVAR OUT IVAR2
+ IF!CheckMenu(MENU)THEN RETURN
+ VAR N=MENU AND 4095
+ VAR I=MENU_ITEM[N]
+ IVAR2=0
+ WHILE I
+  IF MENU_IVAR[I]==IVAR&&MENU_ISTYLE[I]AND MENU_STYLE_RADIO THEN
+   BREAK
+  ENDIF
+  I=MENU_INEXT[I]
+ WEND
+ IF!I THEN RETURN
+ WHILE I
+  IF!(MENU_ISTYLE[I]AND MENU_STYLE_RADIO)THEN
+   I=MENU_INEXT[I]
+   BREAK
+  ENDIF
+  I=MENU_IPREV[I]
+ WEND
+
+ WHILE MENU_ISTYLE[I]AND MENU_STYLE_RADIO
+  IF MENU_ISTYLE[I]AND MENU_STYLE_CHECKED THEN
+   IVAR2=I
+   RETURN
+  ENDIF
+  I=MENU_INEXT[I]
+ WEND
+ RETURN
+END
+COMMON DEF AddCheckMenuItem MENU,STR$,IVAR,CHECKED
+ VAR S=MENU_STYLE_CHECK
+ IF CHECKED THEN S=S OR MENU_STYLE_CHECKED
+ AddMenuItemStyle MENU,STR$,IVAR,S
+ VAR N=MENU AND 4095
+ IF!MENU_LAST[N]THEN RETURN
+END
 COMMON DEF CheckMenu(MENU)
  RETURN MENU_ID[MENU AND 4095]==MENU>>12
 END
+
+DEF MENU_RADIO_UNCHECK S
+ VAR I=S
+ WHILE 1
+  I=MENU_IPREV[I]
+  IF!I THEN BREAK
+  IF!(MENU_ISTYLE[I]AND MENU_STYLE_RADIO)THEN
+   BREAK
+  ENDIF
+  MENU_ISTYLE[I]=MENU_ISTYLE[I] AND NOT MENU_STYLE_CHECKED
+ WEND
+ I=S
+ WHILE 1
+  I=MENU_INEXT[I]
+  IF!I THEN BREAK
+  IF!(MENU_ISTYLE[I]AND MENU_STYLE_RADIO)THEN
+   BREAK
+  ENDIF
+  MENU_ISTYLE[I]=MENU_ISTYLE[I] AND NOT MENU_STYLE_CHECKED
+ WEND
+ 
+END
 DEF MenuLMouseUp WND,C,T,X,Y
  VAR M=GetWindowVar(WND,0)
  IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
-  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_NOTIFID,MENU_IVAR[MENU_SEL[M]])
+  VAR S=MENU_SEL[M]
+  IF!(MENU_ISTYLE[S] AND MENU_STYLE_CHILD)THEN
+   IF MENU_ISTYLE[S] AND MENU_STYLE_CHECK THEN
+    VAR SF=!(MENU_ISTYLE[S] AND MENU_STYLE_CHECKED)*MENU_STYLE_CHECKED
+    MENU_ISTYLE[S]=(MENU_ISTYLE[S]AND NOT MENU_STYLE_CHECKED) OR SF
+   ELSEIF MENU_ISTYLE[S] AND MENU_STYLE_RADIO THEN
+    MENU_RADIO_UNCHECK S
+    MENU_ISTYLE[S]=MENU_ISTYLE[S]OR MENU_STYLE_CHECKED
+   
+   ENDIF
+   VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_NOTIFID,MENU_IVAR[S])
+  ENDIF
  ENDIF
  VOID DeleteWindow(WND)
  VOID ActiveWindow(MENU_SHOW[M])
@@ -1233,9 +1401,47 @@
  VAR BEG,G,SELF=0'SELECT FLAG
  VAR W=GetWindowWidth(WND)
 
+ VAR IC
  WHILE I
   IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
    INC Y2,MENU_SEPARATOR_HEIGHT
+   GOTO @SKIP2
+  ENDIF
+  INC Y2,8
+  IF Y1<=Y&&Y2>Y THEN
+   SELF=1
+   IF OS!=I&&!G THEN 
+   MENU_SEL[M]=I
+   IF MENU_ICHILD[I]THEN
+    IC=MENU_ICHILD[I]
+    IF CheckMenu(IC)THEN
+     ShowSubMenu M,IC,Y1
+    ENDIF
+   G=0
+   ENDIF
+   IF!OS THEN BREAK
+   ENDIF
+  ELSE
+   IF I==OS THEN
+    IF MENU_ICHILD[OS]THEN
+     IC=MENU_ICHILD[OS]
+     IF CheckMenu(IC)THEN
+      VOID DeleteWindow(NUWIDToWND(MENU_NUWID[IC AND 4095]))
+     ENDIF
+    ENDIF
+    OS=0
+    IF BEG THEN BREAK
+    BEG=1
+   ENDIF
+  ENDIF
+'  ENDIF
+  @SKIP2
+  Y1=Y2
+  I=MENU_INEXT[I]
+ WEND
+ WHILE 0&&I
+  IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
+   INC Y2,MENU_SEPARATOR_HEIGHT
    GOTO @SKIP
   ENDIF
   INC Y2,8
@@ -1249,7 +1455,7 @@
    GPRINTWindow WND,SX,Y1,MENU_INAME$[I],GetSelectionTextColor()
    IF MENU_ICHILD[I]THEN
     GTRIWindow WND,W-SX-2,Y1+2,W-SX-2,Y1+6,W-SX,Y1+4,GetSelectionTextColor()
-    VAR IC=MENU_ICHILD[I]
+    IC=MENU_ICHILD[I]
     IF CheckMenu(IC)THEN
      ShowSubMenu M,IC,Y1
     ENDIF
@@ -1268,9 +1474,9 @@
     IF!BEG&&GBeginWindow(WND)THEN :'BREAK
     GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,WIN_BKGND
     GPRINTWindow WND,SX,Y1,MENU_INAME$[I],&HFF000000
-   IF MENU_ICHILD[I]THEN
-    GTRIWindow WND,W-SX-2,Y1+2,W-SX-2,Y1+6,W-SX,Y1+4,#BLACK
-   ENDIF
+    IF MENU_ICHILD[I]THEN
+     GTRIWindow WND,W-SX-2,Y1+2,W-SX-2,Y1+6,W-SX,Y1+4,#BLACK
+    ENDIF
     OS=0
     IF BEG THEN BREAK
     BEG=1
@@ -1284,11 +1490,13 @@
   MENU_SEL[M]=0
  ENDIF
  IF BEG THEN BEG=GEndWindow(WND)
+ VOID RepaintWindow(WND)
 END
 DEF MenuPainter WND,C,T,XY,WH
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,WIN_BKGND
- VAR SX=2
+ VAR SX1=2
+ VAR SX=SX1
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  GBOXWindow WND,0,0,W,H,&HFF000000
@@ -1302,22 +1510,30 @@
  VAR M=GetWindowVar(WND,0)
  VAR I=MENU_ITEM[M],Y=2
  VAR SEL=MENU_SEL[M]
+ IF MENU_CHECKROW[M]THEN
+  SX=SX+MENU_CHECK_W
+ ENDIF
  WHILE I
   IF MENU_ISTYLE[I]AND MENU_STYLE_SEPARATOR THEN
-   GLINEWindow WND,SX+1,Y+1,W-SX-1,Y+1,RGB(128,128,128)
-   GLINEWindow WND,SX+1,Y+2,W-SX-1,Y+2,-1
+   GLINEWindow WND,SX1+1,Y+1,W-SX1-1,Y+1,RGB(128,128,128)
+   GLINEWindow WND,SX1+1,Y+2,W-SX1-1,Y+2,-1
    INC Y,MENU_SEPARATOR_HEIGHT
   ELSE
    VAR TC
    IF SEL==I  THEN
-    GFILLWindow WND,SX,Y,MENU_WIDTH[M]-SX,Y+7,GetSelectionColor()
+    GFILLWindow WND,SX1,Y,MENU_WIDTH[M]-SX1,Y+7,GetSelectionColor()
     TC=GetSelectionTextColor()
    ELSE
     TC=#BLACK
    ENDIF
    IF MENU_ICHILD[I]THEN
-    GTRIWindow WND,W-SX-2,Y+2,W-SX-2,Y+6,W-SX,Y+4,TC
+    GTRIWindow WND,W-SX1-2,Y+2,W-SX1-2,Y+6,W-SX1,Y+4,TC
    ENDIF
+   IF MENU_ISTYLE[I]AND MENU_STYLE_CHECKED THEN
+    GLINEWindow WND,SX1+1,Y+4,SX1+1,Y+5,TC
+    GLINEWindow WND,SX1+6,Y+1,SX1+2,Y+5,TC
+    GLINEWindow WND,SX1+6,Y+2,SX1+2,Y+6,TC
+   ENDIF
    GPRINTWindow WND,SX,Y,MENU_INAME$[I],TC
    INC Y,8
   ENDIF
@@ -1844,6 +2060,9 @@
 COMMON DEF MessageBoxOK()
  RETURN 1
 END
+COMMON DEF MessageBoxError()
+ RETURN 2
+END
 COMMON DEF CalcTextSize TEXT$ OUT W,H
  VAR I,J
  W=0H=0
@@ -1876,7 +2095,7 @@
  CalcTextSize TEXT$ OUT TW,TH
  VAR LWND,E
  NewWindow GetLabelControl(),TEXT$,MSGBOX_MARGIN_LEFT,MSGBOX_MARGIN_TOP,TW,TH,WND,0 OUT LWND,E
- IF FLAG==MessageBoxOK()THEN
+ IF FLAG AND MessageBoxOK()THEN
   CalcTextSize "OK" OUT BW,BH
   'Button margin
   INC BW,4
@@ -2650,12 +2869,22 @@
 END
 DEF FireResizeWindow(WND,W,H)
  VAR NUWID=WND AND NUWIDMASK
+ VAR CW=WIN_CHILD[NUWID],TYPE=ParentWindowResizeEvent()
+ 
+ WHILE CW
+  VAR _=SendParentWindowEvent(NUWIDToWND(CW),TYPE,WND)
+  CW=WIN_NEXT[CW]
+ WEND
  RETURN SendWindowEvent(WND,CTL_RESIZEHANDLER,0,JoinInt(W,H))
 END
 DEF SendChildWindowEvent(WND,TYPE,CWND)
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_CHLDWNDHANDLER,TYPE,CWND)
 END
+DEF SendParentWindowEvent(WND,TYPE,PWND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_PRNTWNDHANDLER,TYPE,PWND)
+END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
@@ -3242,8 +3471,11 @@
 COMMON DEF GLOADImageWindow WND,X,Y,IMG,F
  GLOADImage X+WING_SX,Y+WING_SY,IMG,F
 END
+COMMON DEF GLOADImagePaletteWindow WND,X,Y,IMG,PAL,F
+ GLOADImagePalette X+WING_SX,Y+WING_SY,IMG,PAL,F
+END
 
-COMMON DEF GSAVEImage IMG,WND,X,Y,W,H,IX,IY
+COMMON DEF _GSAVEImage IMG,WND,X,Y,W,H,IX,IY
  IF (WND AND NUWIDMASK)==GB_WND THEN RETURN
  IF!CheckImage(IMG)THEN RETURN
  VAR PTR=IMAGE_PTR[IMG AND 4095]+IX*IY
@@ -3262,7 +3494,7 @@
 END
 COMMON DEF GLINEArrayMemory PTR,W,H,X,Y,X2,Y2,COL
  COL=RGBToShort(COL)
- DIM M[0]
+ IF 0THEN DIM M[0]
  M=GetRawMemory()
  VAR I
  VAR DX=ABS(X2-X)
@@ -3286,6 +3518,30 @@
   ENDIF
  WEND
 END
+COMMON DEF GLINEArray M,W,H,X,Y,X2,Y2,COL
+ COL=RGBToShort(COL)
+ VAR I
+ VAR DX=ABS(X2-X)
+ VAR DY=ABS(Y2-Y)
+ VAR SX,SY
+ IF X<X2 THEN SX=1 ELSE SX=-1
+ IF Y<Y2 THEN SY=1 ELSE SY=-1
+ VAR ERR=DX-DY
+ VAR E2
+ WHILE 1
+  IF X<W&&Y<H&&X>=0&&Y>=0THEN M[X+Y*W]=COL
+  IF X==X2&&Y==Y2 THEN RETURN
+  E2=2*ERR
+  IF E2>-DY THEN
+   DEC ERR,DY
+   INC X,SX
+  ENDIF
+  IF E2<DX THEN
+   INC ERR,DX
+   INC Y,SY
+  ENDIF
+ WEND
+END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
  INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
  INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -3734,6 +3990,10 @@
 COMMON DEF WindowActiveEvent()
  RETURN 3
 END
+
+COMMON DEF ParentWindowResizeEvent()
+ RETURN 1
+END
 COMMON DEF GetWindowFrameSize WND OUT W1,H1,W2,H2,ERR
  IF!CheckWindow(WND)THEN
   ERR=WIN_INVALIDID
@@ -4361,7 +4621,7 @@
  IF W<0||H<0THEN RETURN
  VAR CW=GetChildWindow(WND)
  LISTBOX_ADJUSTSCRBAR WND
- VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+ 'VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
 END
 COMMON DEF GetListBoxSelectedText$(WND)
  VAR S=GetWindowVar(WND,7)
@@ -4461,11 +4721,36 @@
   VOID RepaintWindow(GetWindowGroupOwner(WND))
  ENDIF
 END
+DEF NewHScrollBar PARENT,SIZ OUT WND,E
+ VAR W=GetWindowWidth(PARENT)
+ VAR H=GetWindowHeight(PARENT)
+ NewWindow GetHScrollBarControl(),"",0,H-8,W,8,PARENT,0 OUT WND,E
+ SetWindowVar WND,1,SIZ
+ SetScrollBarAutoResizeMode WND,1
+END
+DEF NewHVScrollBar PARENT,SIZH,SIZV OUT WNDH,WNDV,E
+ VAR W=GetWindowWidth(PARENT)
+ VAR H=GetWindowHeight(PARENT)
+ NewWindow GetHScrollBarControl(),"",0,H-8,W-8,8,PARENT,0 OUT WNDH,E
+ IF E THEN RETURN
+ SetWindowVar WNDH,1,SIZH
+ SetScrollBarAutoResizeMode WNDH,2
+
+ NewWindow GetVScrollBarControl(),"",W-8,0,8,H-8,PARENT,0 OUT WNDV,E
+ IF E THEN
+  VOID DeleteWindow(WNDH)
+  WNDV=0
+  RETURN
+ ENDIF
+ SetScrollBarAutoResizeMode WNDV,2
+ SetWindowVar WNDV,1,SIZV
+END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
  NewWindow GetVScrollBarControl(),"",W-8,0,8,H,PARENT,0 OUT WND,E
  SetWindowVar WND,1,SIZ
+ SetScrollBarAutoResizeMode WND,1
 END
 COMMON DEF SetScrollBarSize W,SIZ
  SetWindowVar W,1,SIZ
@@ -4490,6 +4775,170 @@
 COMMON DEF GetScrollBarPosition(W)
  RETURN GetWindowVar(W,2)
 END
+COMMON DEF SetScrollBarAutoResizeMode WND,MODE
+ SetWindowVar WND,4,MODE
+END
+DEF HSCRBARPainter W,_,T,XY,WH
+ IF GBEGINWindow(W)THEN RETURN
+ GCLSWindow W,WIN_BKGND
+ 
+ VAR _W=GetWindowWidth(W)
+ VAR _H=GetWindowHeight(W)
+ VAR BTNSIZ=8
+ GBOXWindow W,0,0,_W,_H,RGB(0,0,0)
+ VAR ID=GetWindowVar(W,3)
+ '====
+ 'BOX
+ VAR C=RGB(0,0,0)
+ IF ID==2THEN
+  VAR P=1
+  '
+  GFILLWindow W,3+P,5+P,6+P,3+P,C
+  GFILLWindow W,4+P,6+P,4+P,2+P,C
+  GPSETWindow W,2+P,4+P,C
+  
+  GLINEWindow W,0,0,0,7,C
+  GLINEWindow W,0,0,7,0,C
+  GLINEWindow W,8,0,8,8,-1
+  GLINEWindow W,0,8,8,8,-1
+ ELSE
+  GLINEWindow W,0,0,0,7,-1
+  GLINEWindow W,0,0,7,0,-1
+
+  GLINEWindow W,8,0,8,8,C
+  '
+  GFILLWindow W,3,5,6,3,C
+  GFILLWindow W,4,6,4,2,C
+  GPSETWindow W,2,4,C
+ ENDIF
+ SetWindowDrawPos W,_W-BTNSIZ,0
+ '====
+ IF ID==3THEN
+  'BOX
+  GLINEWindow W,0,_H-1,0,_H-8,C
+  GLINEWindow W,0,_H-8,7,_H-8,C
+  
+  GLINEWindow W,0,_H,8,_H,-1
+  GLINEWindow W,8,_H-8,8,_H,-1
+  '
+  P=1
+  GFILLWindow W,2+P,5+P,5+P,3+P,C
+  GFILLWindow W,4+P,6+P,4+P,2+P,C
+  GPSETWindow W,6+P,4+P,C
+ ELSE
+  'BOX
+  GLINEWindow W,0,_H-1,0,_H-8,-1
+  GLINEWindow W,0,_H-8,7,_H-8,-1
+  '
+  GFILLWindow W,2,5,5,3,C
+  GFILLWindow W,4,6,4,2,C
+  GPSETWindow W,6,4,C
+ ENDIF
+ SetWindowDrawPos W,1,1
+ 
+ 
+ '==BAR==
+ VAR AH=_W-18
+ VAR SIZ=GetWindowVar(W,1)
+ VAR POS=GetWindowVar(W,2)
+ 'Barのながさ
+ VAR BS=AH-SIZ
+ VAR S=8+POS
+ '10いか
+ IF BS<10THEN
+  BS=10
+  IF SIZ THEN S=(S-9)*((AH-10)/SIZ)+9
+ ENDIF
+ VAR C2=RGB(128,128,128)
+ '
+ VAR BH=BTNSIZ-2
+ GLINEWindow W,S+1,0,S+1,BH,-1
+ GLINEWindow W,S+1,0,S+BS,0,-1
+ '
+ GLINEWindow W,BS+S-1,0,BS+S-1,BH,C2
+ GLINEWindow W,S+1,BH,S+BS-1,BH,C2
+ '   
+ GLINEWindow W,S,0,S,BH,C
+ GLINEWindow W,S+BS,0,S+BS,BH,C
+ 
+ IF GENDWindow(W)THEN RETURN
+END
+DEF HSCRBARLMouseUP W,C,T,X,Y
+ IF GetWindowVar(W,3)THEN SetWindowVar W,3,8
+ VOID ReleaseCapture(W)
+ HSCRBARPainter W,C,0,0,0
+END
+DEF HSCRBARLMouseDown W,C,T,Y,_
+ VAR ID=GetWindowVar(W,3)
+ IF ID<8THEN
+  IF!ID THEN
+   ID=1
+   IF Y<9THEN
+    ID=2
+   ENDIF
+   IF Y>GetWindowWidth(W)-9THEN
+    ID=3
+   ENDIF
+   SetWindowVar W,3,ID
+  ENDIF
+  VOID SetCapture(W)
+  VOID LMouseDownWindow(W)
+ ELSE
+  SetWindowVar W,3,0
+  RETURN
+ ENDIF
+ VAR SIZ=GetWindowVar(W,1)
+ VAR POS=GetWindowVar(W,2)
+ IF ID==2&&POS>0 THEN
+  SetWindowVar W,2,POS-1
+  HSCRBARPainter W,C,0,0,0
+  VOID SendNotifWindow(GetParentWindow(W),W,POS-1)
+ ENDIF
+ IF ID==3&&POS<SIZ THEN
+  SetWindowVar W,2,POS+1
+  HSCRBARPainter W,C,0,0,0
+  VOID SendNotifWindow(GetParentWindow(W),W,POS+1)
+ ENDIF
+ IF ID==1THEN
+  VAR _Y=POS'Y
+  IF!SIZ THEN RETURN
+  VAR __TEMP__#=((GetWindowWidth(W)-28)/SIZ)
+  IF!__TEMP__# THEN RETURN'?
+  Y=(Y-9)/__TEMP__#
+  IF Y<0THEN Y=0
+  IF Y>SIZ THEN Y=SIZ
+  IF Y==_Y THEN RETURN
+  SetWindowVar W,2,Y
+  HSCRBARPainter W,C,0,0,0
+  VOID SendNotifWindow(GetParentWindow(W),W,Y)
+ ENDIF
+END
+
+DEF HSCRBARPARENT W,C,T,TYP,A
+ VAR E=CallBaseControlHandler(W,C,T,TYP,A)
+ IF TYP==ParentWindowResizeEvent()THEN
+  VAR MODE=GetWindowVar(W,4)
+  IF!MODE THEN RETURN
+  VAR PW=GetParentWindow(W)
+  VAR WIDTH=GetWindowWidth(PW)
+  VAR HEIGHT=GetWindowHeight(PW)
+  IF MODE==2THEN WIDTH=WIDTH-8
+  VOID MoveResizeWindow(W,0,HEIGHT-8,WIDTH,8)
+ ENDIF
+END
+DEF VSCRBARPARENT W,C,T,TYP,A
+ VAR E=CallBaseControlHandler(W,C,T,TYP,A)
+ IF TYP==ParentWindowResizeEvent()THEN
+  VAR MODE=GetWindowVar(W,4)
+  IF!MODE THEN RETURN
+  VAR PW=GetParentWindow(W)
+  VAR WIDTH=GetWindowWidth(PW)
+  VAR HEIGHT=GetWindowHeight(PW)
+  IF MODE==2THEN HEIGHT=HEIGHT-8
+  VOID MoveResizeWindow(W,WIDTH-8,0,8,HEIGHT)
+ ENDIF
+END
+
 DEF VSCRBARPainter W,_,T,XY,WH
  IF GBEGINWindow(W)THEN RETURN
  GCLSWindow W,WIN_BKGND
@@ -4564,7 +5013,7 @@
  IF GENDWindow(W)THEN RETURN
 END
 DEF VSCRBARLMouseUP W,C,T,X,Y
- SetWindowVar W,3,8
+ IF GetWindowVar(W,3)THEN SetWindowVar W,3,8
  VOID ReleaseCapture(W)
  VSCRBARPainter W,C,0,0,0
 END
@@ -5683,7 +6132,7 @@
 'DEF OTW_LOADMOUSE
 ' 
 'END
-COMMON DEF I_CREATEOTW
+COMMON DEF CREATEOTW
  ?"OTW Develop Tool"
  VAR K$
  INC K$,"VAR _1CTL"+LF$()
@@ -5716,38 +6165,33 @@
  K$=ReplaceStr$(K$,"_H",STR$(_H))
  K$=ReplaceStr$(K$,"_Q",_Q$)
  VAR SLOT=3
- INPUT "InsertSlot";SLOT
- PRGEDIT SLOT
- PRGINS K$
- ExitProcess 0
+ CLIPBOARD K$
 END
-COMMON DEF L_CREATEOTW
-END
 
-VAR PAINTCTL
-COMMON DEF PaintRepaint WND,CTL,T,A1,A2
+VAR PAINT1CTL
+COMMON DEF Paint1Repaint WND,CTL,T,A1,A2
  IF CallBaseControlHandler(WND,CTL,T,A1,A2)THEN RETURN
  DIM A[64*64]
  ReadArray GetWindowVar(WND,2),A,0,LEN(A)
  GLOADWindow WND,0,0,64,64,A,1,0
  VAR E=GEndWindow(WND)
 END
-COMMON DEF PaintLDWN WND,CTL,T,X,Y
+COMMON DEF Paint1LDWN WND,CTL,T,X,Y
  VAR E=CallBaseControlHandler(WND,CTL,T,X,Y)
  SetWindowVar WND,3,1
  SetWindowVar WND,0,X
  SetWindowVar WND,1,Y
  VOID SetCapture(WND)
 END
-COMMON DEF PaintLUP WND,CTL,T,X,Y
+COMMON DEF Paint1LUP WND,CTL,T,X,Y
  SetWindowVar WND,3,0
 END
-COMMON DEF PaintCF WND,CTL,T,F,A2
+COMMON DEF Paint1CF WND,CTL,T,F,A2
 'IF CallBaseControlHandler(WND,CTL,T,F,A2)THEN 
  IF!F THEN SetWindowVar WND,3,0
 END
 
-COMMON DEF PaintMouseMove WND,CTL,T,X,Y
+COMMON DEF Paint1MouseMove WND,CTL,T,X,Y
  IF!GetWindowVar(WND,3)THEN RETURN
  VAR OX=GetWindowVar(WND,0)
  VAR OY=GetWindowVar(WND,1)
@@ -5758,7 +6202,7 @@
  SetWindowVar WND,0,X
  SetWindowVar WND,1,Y
 END
-COMMON DEF I_PAINT
+COMMON DEF I_PAINT1
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
   ExitProcess 1
@@ -5767,19 +6211,19 @@
  VAR PTR=malloc(64*64)
  IF!PTR THEN BEEP:ExitProcess 1RETURN
  VAR WND,E
- IF!PAINTCTL THEN
-  ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
-  E=SetControlMouseMoveHandler(PAINTCTL,"PaintMouseMove")
-  E=SetControlPainter(PAINTCTL,"PaintRepaint")
-  E=SetControlLMouseDownHandler(PAINTCTL,"PaintLDWN")
-  E=SetControlLMouseUpHandler(PAINTCTL,"PaintLUP")
-  E=SetControlChFocusHandler(PAINTCTL,"PaintCF")
+ IF!PAINT1CTL THEN
+  ExtendControl "PAINT1",GetWindowControl() OUT PAINT1CTL,E
+  E=SetControlMouseMoveHandler(PAINT1CTL,"Paint1MouseMove")
+  E=SetControlPainter(PAINT1CTL,"Paint1Repaint")
+  E=SetControlLMouseDownHandler(PAINT1CTL,"Paint1LDWN")
+  E=SetControlLMouseUpHandler(PAINT1CTL,"Paint1LUP")
+  E=SetControlChFocusHandler(PAINT1CTL,"Paint1CF")
  ENDIF
- NewTopLevelWindow PAINTCTL,"PAINT",64,64 OUT WND,E  SetProcessVar WND
+ NewTopLevelWindow PAINT1CTL,"PAINT1",64,64 OUT WND,E  SetProcessVar WND
  SetWindowVar WND,2,PTR
 END
-COMMON DEF L_PAINT
-IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+COMMON DEF L_PAINT1
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
 '===Text editor===
 VAR TXTEDCTL
@@ -6082,7 +6526,7 @@
  SplitInt WH OUT W,H
  IF W<0||H<0THEN RETURN
  VAR CW=GetChildWindow(WND)
- VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+ 'VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
 END
 COMMON DEF TextBoxExPainter WND,CTL,T,_,__
  TextBoxExRepaint WND
@@ -7468,7 +7912,7 @@
  SplitInt WH OUT W,H
  IF W<0||H<0THEN RETURN
  VAR CW=GetChildWindow(WND)
- VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+ 'VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
 'RESIZE TABLE
  VAR D=OTYDOC_GetData(WND)
  VAR LINE=OTYDOC_ShowLine[D]
@@ -10509,7 +10953,7 @@
  IF W<0||H<0THEN RETURN
  VAR CW=GetChildWindow(WND)
  SetScrollBarSize CW,OTYFILGETSCRBARLEN(WND)
- VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+ 'VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
 END
 COMMON DEF OTYFILPAINT WND,CTL,T,A1,A2
  IF CallBaseControlHandler(WND,CTL,T,A1,A2)THEN RETURN
@@ -13106,6 +13550,7 @@
 VAR ODE_IH
 VAR ODE_IX
 VAR ODE_IY
+DIM ODEPAL[0]
 DEF ODE_GETITEM WND,X,Y OUT I,IX,IY
  X=X-ODE_IX
  Y=Y-ODE_IY
@@ -13250,6 +13695,17 @@
  ENDIF
  VAR WND,E
  IF!ODE_CTL THEN
+ IF 0THEN
+ VAR I
+ ODEPAL=NewArray(65536)
+ FOR I=0TO 65535
+  VAR R=((I>>11AND 31)<<3)*0
+  VAR G=((I>>6AND 31)<<3)*0
+  VAR B=((I>>1AND 31)<<3)*1
+  VAR A=(I AND 1)*255
+  ODEPAL[I]=RGB(A,R,G,B)'R>>3<<11OR G>>3<<6OR B>>3<<1OR !!A
+ NEXT
+ ENDIF
   RC_OTYFIL
   NewImage OTYFILICOTXT,16,16 OUT ODE_IMAGE_TXT,E
   NewImage OTYFILICODAT,16,16 OUT ODE_IMAGE_DAT,E
@@ -13425,3 +13881,411 @@
  ENDIF
 END
 
+VAR PAINTCTL
+VAR PAINTCANVASCTL
+VAR PAINT_IMAGE
+VAR PAINT_WND
+VAR PAINT_CANVAS
+VAR PAINT_SCRH
+VAR PAINT_SCRV
+VAR PAINT_CMOUSEX
+VAR PAINT_CMOUSEY
+VAR PAINT_TOOL
+VAR PAINT_ZOOM
+VAR PAINT_
+VAR PAINT_SIZE
+
+VAR PAINT_ZOOM_BASE
+DEF PAINT_ALLOC OUT P
+ P=AllocSBArray()
+ VAR I
+ PAINT_IMAGE=I:INC I
+ PAINT_WND=I:INC I
+ PAINT_CANVAS=I:INC I
+ PAINT_SCRH=I:INC I
+ PAINT_SCRV=I:INC I
+ PAINT_CMOUSEX=I:INC I
+ PAINT_CMOUSEY=I:INC I
+ PAINT_TOOL=I:INC I
+ PAINT_ZOOM=I:INC I
+ 
+ PAINT_SIZE=I:INC I
+ SetSBArray P,NewArray(PAINT_SIZE)
+END
+
+
+VAR PAINT_MENU_NEW
+VAR PAINT_MENU_OPEN
+VAR PAINT_MENU_SAVE
+VAR PAINT_MENU_SAVEAS
+VAR PAINT_MENU_PEN
+VAR PAINT_MENU_ERASER
+VAR PAINT_MENU_LINE
+VAR PAINT_MENU_BOX
+VAR PAINT_MENU_FILLEDBOX
+VAR PAINT_MENU_ZOOMIN
+VAR PAINT_MENU_ZOOMOUT
+VAR PAINT_MENU_HAND
+
+DEF PAINT_GET WND OUT A
+ GetSBArray GetWindowVar(WND,0) OUT A
+END
+COMMON DEF PAINTDELETE WND,CTL,TYP,A1,A2
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ 
+ VAR E
+ DeleteImage A[PAINT_IMAGE] OUT E
+ FreeSBArray GetWindowVar(WND,0)
+END
+COMMON DEF PAINTCANVASCREATE WND,CTL,TYP,A1,A2
+END
+COMMON DEF PAINTCANVASNOTIF WND,CTL,TYP,A1,A2
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ IF A1==A[PAINT_SCRV]THEN
+  VOID RepaintWindow(WND)
+ ENDIF
+ IF A1==A[PAINT_SCRH]THEN
+  VOID RepaintWindow(WND)
+ ENDIF
+END
+COMMON DEF PAINTCANVASPAINT WND,CTL,TYP,XY,WH
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH)
+ VAR SY=GetScrollBarPosition(A[PAINT_SCRV])
+ VAR SX=GetScrollBarPosition(A[PAINT_SCRH])
+ VAR X,Y,W,H
+ VAR SW,SH
+ SW=GetWindowWidth(WND)
+ SH=GetWindowHeight(WND)
+ IF WH THEN
+  SplitInt WH OUT W,H
+  SplitInt XY OUT X,Y
+ ELSE
+  W=SW
+  H=SH
+ ENDIF
+ VAR Z=A[PAINT_ZOOM]
+ VAR HIMG=A[PAINT_IMAGE]
+ VAR IW=GetImageWidth(HIMG)
+ VAR IH=GetImageHeight(HIMG)
+ IF Z!=PAINT_ZOOM_BASE THEN
+  IF 0THEN DIM IMG[0]
+
+  GetImageArray(HIMG) OUT IMG,
+  IF GBeginDirect(WND)THEN @ERR
+  GCLIP 1,X,Y,X+W,Y+H
+  GCLS -1
+  VAR IX,IY
+  VAR Z2=Z DIV PAINT_ZOOM_BASE
+  VAR IX2=SX+SW DIV Z2
+  VAR IY2=SY+SH DIV Z2
+  VAR DX
+  VAR DY
+  VAR GRC=RGB(0,0,0)
+
+  IX2=MIN(IX2,IW-1)
+  IY2=MIN(IY2,IH-1)
+  FOR IX=SX TO IX2
+   GLINE DX,Y,DX,Y+H,GRC
+   DX=DX+Z2
+  NEXT
+  FOR IY=SY TO IY2
+   DX=0
+   GLINE X,DY,X+W,DY,GRC
+   FOR IX=SX TO IX2
+    VAR C=IMG[IX+IY*IW]
+    IF C AND 1THEN
+     GFILL DX,DY,DX+Z2-1,DY+Z2-1,RGB(C>>11AND 31<<3,C>>6AND 31<<3,C>>1AND 31<<3)
+    ENDIF
+    DX=DX+Z2
+   NEXT
+   UpdateMouse
+   DY=DY+Z2
+  NEXT
+  IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,0)THEN @ERR
+ ELSE
+  IF GBeginWindow(WND)THEN @ERR
+  GCLSWindow WND,GetWindowBackColor(WND)
+  GFILLWindow WND,-SX,-SY,IW-SX-1,IH-SY-1,-1
+  GLOADImageWindow WND,-SX,-SY,A[PAINT_IMAGE],0
+ ENDIF
+ IF GEndWindow(WND)THEN @ERR
+ RETURN
+ @ERR
+ RETURN
+END
+DEF PAINT_CALCCANVASPOS WND OUT CX,CY,CW,CH
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ CX=26
+ CY=0
+ CW=W-CX-0
+ CH=H-16
+END
+COMMON DEF PAINTCANVASLMD WND,CTL,TYP,X,Y
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ VAR Z#=(A[PAINT_ZOOM]/PAINT_ZOOM_BASE)
+ VAR SY=GetScrollBarPosition(A[PAINT_SCRV])*Z#
+ VAR SX=GetScrollBarPosition(A[PAINT_SCRH])*Z#
+ X=X+SX
+ Y=Y+SY
+ VAR PT=A[PAINT_TOOL]
+ IF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER THEN
+  A[PAINT_CMOUSEX]=X
+  A[PAINT_CMOUSEY]=Y
+  VOID SetCapture(WND)
+ ELSEIF PT==PAINT_MENU_ZOOMIN THEN
+  INC A[PAINT_ZOOM],PAINT_ZOOM_BASE*4
+  VOID RepaintWindow(WND)
+ ENDIF
+END
+COMMON DEF PAINTCANVASLMU WND,CTL,TYP,X,Y
+ VOID ReleaseCapture(WND)
+END
+
+COMMON DEF PAINTCANVASMMOVE WND,CTL,TYP,X,Y
+ IF GetCapture()!=WND THEN
+  RETURN
+ ENDIF
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ VAR Z#=(A[PAINT_ZOOM]/PAINT_ZOOM_BASE)
+ VAR SY=GetScrollBarPosition(A[PAINT_SCRV])*Z#
+ VAR SX=GetScrollBarPosition(A[PAINT_SCRH])*Z#
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ X=X+SX
+ Y=Y+SY
+ VAR X1=MIN(A[PAINT_CMOUSEX],X)
+ VAR Y1=MIN(A[PAINT_CMOUSEY],Y)
+ VAR X2=MAX(A[PAINT_CMOUSEX],X)
+ VAR Y2=MAX(A[PAINT_CMOUSEY],Y)
+ IF 0THEN DIM I[0]
+
+ GetImageArray(A[PAINT_IMAGE]) OUT I,
+ VAR IW=GetImageWidth(A[PAINT_IMAGE])
+ VAR IH=GetImageHeight(A[PAINT_IMAGE])
+ 
+ VAR C=RGB(0,0,0)
+ IF A[PAINT_TOOL]==PAINT_MENU_ERASER THEN C=0
+ GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+' IF GBeginDirect(WND)THEN RETURN
+'GCLIP 1,X1,Y1,X2,Y2
+' GLOADImage 0,0,A[PAINT_IMAGE],1
+' GLINE A[PAINT_CMOUSEX],A[PAINT_CMOUSEY],X,Y
+' GSAVEImage 0,0,A[PAINT_IMAGE]
+ PAINTCANVASPAINT WND,CTL,TYP,0,0
+
+ A[PAINT_CMOUSEX]=X
+ A[PAINT_CMOUSEY]=Y
+END
+
+COMMON DEF PAINTRESIZE WND,CTL,TYP,A1,A2
+ VAR CX,CY,CW,CH
+ PAINT_CALCCANVASPOS WND OUT CX,CY,CW,CH
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ VOID ResizeWindow(A[PAINT_CANVAS],CW,CH)
+END
+VAR PAINTNEWDLGCTL
+COMMON DEF PAINTNOTIF WND,C,T,A1,A2
+ IF A1==MenuNotifID()THEN
+  PAINT_MENU WND,A2
+ ENDIF
+END
+DEF PAINT_MENU WND,A2
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ ON A2 GOTO @ERR,@NEW,@OPEN,@SAVE,@SAVEAS,@PEN,@ERASER,@LINE,@BOX,@FILLEDBOX,@ZOOMIN,@ZOOMOUT,@HAND
+ @ERR
+ RETURN
+ @NEW
+ VOID NewDialogBoxWithArg(PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0) RETURN
+ @OPEN
+ RETURN
+ @SAVE
+ RETURN
+ @SAVEAS
+ RETURN
+ @PEN
+ A[PAINT_TOOL]=A2
+ RETURN
+ @ERASER
+ A[PAINT_TOOL]=A2
+ RETURN
+ @LINE
+ A[PAINT_TOOL]=A2
+ RETURN
+ @BOX
+ A[PAINT_TOOL]=A2
+ RETURN
+ @FILLEDBOX
+ A[PAINT_TOOL]=A2
+ RETURN
+ @ZOOMIN
+ A[PAINT_TOOL]=A2
+ RETURN
+ @ZOOMOUT
+ A[PAINT_TOOL]=A2
+ RETURN
+ @HAND
+ A[PAINT_TOOL]=A2
+ RETURN
+END
+COMMON DEF PAINTNEWDLGCREATE WND,CTL,TYP,A1,A2
+ SetWindowVar WND,0,A1
+ VAR LWND,E
+ 
+ VAR H=GetWindowHeight(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR LABELW=64
+ NewWindow GetLabelControl(),"Width",0,0,LABELW-1,8,WND,0 OUT LWND,E
+ NewWindow GetLabelControl(),"Height",0,10,LABELW-1,8,WND,0 OUT LWND,E
+ NewWindow GetTextBoxControl(),"400",LABELW,0,W-LABELW,8,WND,0 OUT LWND,E
+ SetWindowVar WND,1,LWND
+ NewWindow GetTextBoxControl(),"240",LABELW,10,W-LABELW,8,WND,0 OUT LWND,E
+ SetWindowVar WND,2,LWND
+ NewWindow GetButtonControl(),"OK",0,H-12,20,12,WND,0 OUT LWND,E
+ SetWindowVar WND,3,LWND
+ NewWindow GetButtonControl(),"Cancel",24,H-12,52,12,WND,0 OUT LWND,E
+ SetWindowVar WND,4,LWND
+END
+COMMON DEF PAINTNEWDLGNOTIF WND,CTL,TYP,A1,A2
+ VAR CANCELBTN=GetWindowVar(WND,4)
+ VAR OKBTN=GetWindowVar(WND,3)
+ VAR HTXTBOX=GetWindowVar(WND,2)
+ VAR WTXTBOX=GetWindowVar(WND,1)
+ IF A1==OKBTN THEN
+  VAR H=VAL(GetWindowName$(HTXTBOX))
+  VAR W=VAL(GetWindowName$(WTXTBOX))
+  IF H&&W THEN
+   PAINT_NEW WND,W,H
+   VOID DeleteWindow(WND)
+  ELSE
+   VOID MessageBox(WND,"Paint","Invalid size",MessageBoxOK()OR MessageBoxError())
+  ENDIF
+ ENDIF
+ IF A1==CANCELBTN THEN
+  VOID DeleteWindow(WND)
+ ENDIF
+END
+DEF PAINT_NEW P,W,H
+ IF 0THEN DIM A[0]
+ PAINT_GET P OUT A
+ VOID DeleteImage(A[PAINT_IMAGE])
+ VAR IMG,E
+ NewImage NewArray(W*H),W,H OUT IMG,E
+ A[PAINT_IMAGE]=IMG
+ SetScrollBarSize A[PAINT_SCRH],W
+ SetScrollBarSize A[PAINT_SCRV],H
+ VOID RepaintWindow(A[PAINT_CANVAS])
+END
+COMMON DEF I_PAINT
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!PAINTCTL THEN
+  ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
+  IF E THEN @ERR_CTL
+  NewControl "PAINT_CANVAS" OUT PAINTCANVASCTL,E
+  IF E THEN @ERR_CTL
+  ExtendControl"PAINTNEWDLGCTL",GetWindowControl() OUT PAINTNEWDLGCTL,E
+  IF E THEN @ERR_CTL
+  IF SetControlDeleteHandler(PAINTCTL,"PAINTDELETE")THEN @ERR_CTL
+  IF SetControlResizeHandler(PAINTCTL,"PAINTRESIZE")THEN @ERR_CTL
+  IF SetControlNotifHandler(PAINTCTL,"PAINTNOTIF")THEN @ERR_CTL
+  IF SetControlCreateHandler(PAINTCANVASCTL,"PAINTCANVASCREATE")THEN @ERR_CTL
+  IF SetControlPainter(PAINTCANVASCTL,"PAINTCANVASPAINT")THEN @ERR_CTL
+  IF SetControlMouseMoveHandler(PAINTCANVASCTL,"PAINTCANVASMMOVE")THEN @ERR_CTL
+  IF SetControlLMouseDownHandler(PAINTCANVASCTL,"PAINTCANVASLMD")THEN @ERR_CTL
+  IF SetControlLMouseUpHandler(PAINTCANVASCTL,"PAINTCANVASLMU")THEN @ERR_CTL
+  IF SetControlNotifHandler(PAINTCANVASCTL,"PAINTCANVASNOTIF")THEN @ERR_CTL
+  IF SetControlCreateHandler(PAINTNEWDLGCTL,"PAINTNEWDLGCREATE")THEN @ERR_CTL
+  IF SetControlNotifHandler(PAINTNEWDLGCTL,"PAINTNEWDLGNOTIF")THEN @ERR_CTL
+ ENDIF
+ NewTopLevelStyleWindow PAINTCTL,"PAINT",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
+ IF E THEN @ERR
+ VAR CX,CY,CW,CH
+ VAR CWND
+ PAINT_CALCCANVASPOS WND OUT CX,CY,CW,CH
+ NewWindow PAINTCANVASCTL,"",CX,CY,CW,CH,WND,WindowBackFlag() OUT CWND,E
+ IF E THEN @ERR
+ SetProcessVar WND
+ 
+ VAR P
+ PAINT_ALLOC OUT P
+ SetWindowVar WND,0,P
+ SetWindowVar CWND,0,P
+ IF 0THEN DIM A[0]
+ A=GetSBArray(P)
+ A[PAINT_WND]=WND
+ A[PAINT_CANVAS]=CWND
+ PAINT_ZOOM_BASE=100
+ A[PAINT_ZOOM]=PAINT_ZOOM_BASE
+ VAR WIDTH=400
+ VAR HEIGHT=240
+ VAR IMG
+ NewImage NewArray(WIDTH*HEIGHT),WIDTH,HEIGHT OUT IMG,E
+ A[PAINT_IMAGE]=IMG
+
+ VAR SCRV,SCRH
+ NewHVScrollBar CWND,WIDTH,HEIGHT OUT SCRH,SCRV,E
+ A[PAINT_SCRH]=SCRH
+ A[PAINT_SCRV]=SCRV
+ VAR MENU
+ VAR MI=1
+ NewMenu OUT MENU,E
+ PAINT_MENU_NEW=MI:INC MI
+ PAINT_MENU_OPEN=MI:INC MI
+ PAINT_MENU_SAVE=MI:INC MI
+ PAINT_MENU_SAVEAS=MI:INC MI
+ PAINT_MENU_PEN=MI:INC MI
+ PAINT_MENU_ERASER=MI:INC MI
+ PAINT_MENU_LINE=MI:INC MI
+ PAINT_MENU_BOX=MI:INC MI
+ PAINT_MENU_FILLEDBOX=MI:INC MI
+ PAINT_MENU_ZOOMIN=MI:INC MI
+ PAINT_MENU_ZOOMOUT=MI:INC MI
+ PAINT_MENU_HAND=MI:INC MI
+ A[PAINT_TOOL]=PAINT_MENU_PEN
+ AddMenuItem MENU,"New",PAINT_MENU_NEW
+ AddMenuItem MENU,"Open",PAINT_MENU_OPEN
+ AddMenuItem MENU,"Save",PAINT_MENU_SAVE
+ AddMenuItem MENU,"Save as",PAINT_MENU_SAVEAS
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ NewMenu OUT MENU,E
+ AddSubMenuItem GetWindowMenu(WND),"Tool",MENU
+ AddRadioMenuItem MENU,"Pen",PAINT_MENU_PEN,TRUE
+ AddRadioMenuItem MENU,"Eraser",PAINT_MENU_ERASER,FALSE
+ AddRadioMenuItem MENU,"Box",PAINT_MENU_BOX,FALSE
+ AddRadioMenuItem MENU,"Filled box",PAINT_MENU_FILLEDBOX,FALSE
+ AddRadioMenuItem MENU,"Line",PAINT_MENU_LINE,FALSE
+ AddRadioMenuItem MENU,"Zoom in",PAINT_MENU_ZOOMIN,FALSE
+ AddRadioMenuItem MENU,"Zoom out",PAINT_MENU_ZOOMOUT,FALSE
+ AddRadioMenuItem MENU,"Hand",PAINT_MENU_HAND,FALSE
+ AddMenuItemSeparator MENU
+ AddMenuItem MENU,"Pen",0
+
+ RETURN
+ 
+ @ERR_CTL
+  VOID DeleteControl(PAINTCTL)
+  VOID DeleteControl(PAINTCANVASCTL)
+  ExitProcess 1
+  RETURN
+ @ERR
+  VOID DeleteControl(WND)
+  VOID DeleteControl(CWND)
+  ExitProcess 1
+END
+COMMON DEF L_PAINT
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
diff -u OTW.TXT OTW2E
--- OTW.TXT
+++ OTW2E
@@ -78,6 +78,8 @@
 DIM WIN_CURX   [0]
 DIM WIN_CURY   [0]
 DIM WIN_IM     [0]
+
+DIM WIN_TIMER  [0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
 VAR WIN_MSGARGSIZE
@@ -116,6 +118,7 @@
 VAR WIN_STYLE_HIDE
 VAR WIN_STYLE_OWNERDRAW
 VAR WIN_STYLE_MINMAX
+VAR WIN_STYLE_TOOL
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -133,6 +136,7 @@
 VAR WIN_SHELL$
 VAR WIN_IM$
 
+VAR WIN_STYLE_NARROW
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
@@ -144,6 +148,8 @@
  WIN_STYLE_HIDE=8
  WIN_STYLE_OWNERDRAW=16
  WIN_STYLE_MINMAX=32
+ WIN_STYLE_TOOL=64
+ WIN_STYLE_NARROW=128
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -204,7 +210,9 @@
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
- WIN_MSGCNT    =NewArray2(WIN_MAX,16)
+ OTW_TIMER_INIT
+ WIN_TIMER     =NewArray(WIN_MAX)
+ 'WIN_MSGCNT    =NewArray2(WIN_MAX,CTL_HANDLER_MAX)
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
  OTW_MENU_INITARRAY
@@ -459,6 +467,7 @@
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
  CTL_HANDLER_MAX=21
+ WIN_MSGCNT    =NewArray2(WIN_MAX,CTL_HANDLER_MAX)
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -480,7 +489,7 @@
  NewControl "VSCRBAR" OUT CTL_VSCRBARCTL,E
  NewControl "HSCRBAR" OUT CTL_HSCRBARCTL,E
  CTL_PAINTHANDLER=0
-' CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
+ 'CTL_NDHNDLR[CTL_PAINTHANDLER]=TRUE
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
  CTL_RBTNUPHANDLER=3
@@ -560,6 +569,7 @@
  E=SetControlLMouseDownHandler(CTL_DRPDWNCTL,"DropDownListLMD")
  E=SetControlLMouseUpHandler(CTL_DRPDWNCTL,"DropDownListLMU")
  E=SetControlNotifHandler(CTL_DRPDWNCTL,"DropDownListNotif")
+ E=SetControlDeleteHandler(CTL_DRPDWNCTL,"DropDownListDelete")
 
  ExtendControl "DROPDOWNLISTBOX",GetListBoxControl() OUT CTL_DRPDWNBOXCTL,E
  E=SetControlChFocusHandler(CTL_DRPDWNBOXCTL,"DropDownListBoxChFocus")
@@ -719,16 +729,135 @@
 VAR WIN_NODRAW
 VAR CTL_NOALLOC
 VAR CTL_INVALIDID
+VAR TIMER_INVALIDID
 DEF OTW_INIT_ERR
- WIN_NOALLOC=1
- WIN_INVALIDID=2
- WIN_EVENTERR=3
- WIN_NODRAW=3
- CTL_NOALLOC=201
- CTL_INVALIDID=202
- IM_NOALLOC=301
- IM_INVALIDID=302
+ WIN_NOALLOC=&H1
+ WIN_INVALIDID=&H2
+ WIN_EVENTERR=&H3
+ WIN_NODRAW=&H4
+ CTL_NOALLOC=&H2001
+ CTL_INVALIDID=&H2002
+ IM_NOALLOC=&H3001
+ IM_INVALIDID=&H3002
+ TIMER_INVALIDID=&H4001
 END
+'======
+'TIMER
+'======
+DIM TIMER_WND[0]
+DIM TIMER_TIMEOUT[0]
+DIM TIMER_ARG[0]
+DIM TIMER_FUNC$[0]
+DIM TIMER_NEXT[0]
+DIM TIMER_PREV[0]
+DIM TIMER_ID[0]
+DIM TIMER_TM[0]
+VAR TIMER_MAX
+VAR TIMER_FREE
+VAR TIMER_IDCNT
+DEF OTW_TIMER_INIT
+ TIMER_MAX=16
+ TIMER_WND=NewArray(TIMER_MAX)
+ TIMER_TIMEOUT=NewArray(TIMER_MAX)
+ TIMER_ARG=NewArray(TIMER_MAX)
+ TIMER_FUNC$=NewArray$(TIMER_MAX)
+ TIMER_NEXT=NewArray(TIMER_MAX)
+ TIMER_PREV=NewArray(TIMER_MAX)
+ TIMER_ID=NewArray(TIMER_MAX)
+ TIMER_TM=NewArray(TIMER_MAX)
+ TIMER_IDCNT=1
+ TIMER_FREE=1
+ OTW_INITLIST TIMER_NEXT
+END
+COMMON DEF SetTimer WND,TIMEOUT,ARG,FUNC$ OUT TIMER,ERR
+ IF!CheckWindow(WND)THEN
+  ERR=WIN_INVALIDID
+  TIMER=0
+ ENDIF
+ ERR=0
+ VAR NUWID=WND AND NUWIDMASK
+ VAR OT=WIN_TIMER[NUWID] AND NUWIDMASK
+ TIMER=ToTimer(NewTimer(WND,TIMEOUT,OT,0,ARG,FUNC$))
+ WIN_TIMER[NUWID]=TIMER
+END
+COMMON DEF CheckTimer(T)
+ RETURN TIMER_ID[T AND NUWIDMASK]==T>>WIDSHIFT
+END
+DEF DeleteWindowTimers(WND)
+ IF!CheckWindow(WND)THEN
+  RETURN WIN_INVALIDID
+ ENDIF
+ VAR NUWID=WND AND NUWIDMASK
+ VAR TIMER=WIN_TIMER[NUWID]
+ VAR T=TIMER AND NUWIDMASK
+ WHILE T
+  VOID DeleteTimer(ToTimer(T))
+  TIMER=WIN_TIMER[NUWID]
+  T=TIMER AND NUWIDMASK
+ WEND
+ RETURN 0
+END
+COMMON DEF DeleteTimer(TIMER)
+ IF!CheckTimer(TIMER)THEN
+  RETURN TIMER_INVALIDID
+ ENDIF
+ VAR T=TIMER AND NUWIDMASK
+ IF!CheckWindow(TIMER_WND[T])THEN
+  RETURN WIN_INVALIDID
+ ENDIF
+ IF TIMER_PREV[T]THEN
+  TIMER_NEXT[TIMER_PREV[T]]=TIMER_NEXT[T]
+ ENDIF
+ IF TIMER_NEXT[T]THEN
+  TIMER_PREV[TIMER_NEXT[T]]=TIMER_PREV[T]
+ ENDIF
+ 
+ VAR NW=TIMER_WND[T]AND NUWIDMASK
+ IF (WIN_TIMER[NW]AND NUWIDMASK)==T THEN
+  WIN_TIMER[NW]=ToTimer(TIMER_NEXT[T])
+ ENDIF
+ TIMER_NEXT[T]=TIMER_FREE
+ TIMER_FREE=T
+END
+DEF ToTimer(T)
+ RETURN TIMER_ID[T]<<WIDSHIFT OR T
+END
+DEF NewTimer(WND,TIMEOUT,NXT,PREV,ARG,FUNC$)
+ IF!TIMER_FREE THEN
+  TIMER_FREE=LEN(TIMER_WND)
+  PUSH TIMER_WND,0
+  PUSH TIMER_TIMEOUT,0
+  PUSH TIMER_ARG,0
+  PUSH TIMER_FUNC$,FUNC$
+  PUSH TIMER_NEXT,0
+  PUSH TIMER_PREV,0
+  PUSH TIMER_NEXT,0
+  PUSH TIMER_ID,0
+  PUSH TIMER_TM,0
+ ENDIF
+ TIMER_WND[TIMER_FREE]=WND
+ TIMER_TIMEOUT[TIMER_FREE]=TIMEOUT
+ TIMER_PREV[TIMER_FREE]=PREV
+ TIMER_ARG[TIMER_FREE]=ARG
+ TIMER_FUNC$[TIMER_FREE]=FUNC$
+ TIMER_ID[TIMER_FREE]=TIMER_IDCNT
+ IF NXT THEN
+  TIMER_PREV[NXT]=TIMER_FREE
+ ENDIF
+ IF PREV THEN
+  TIMER_NEXT[PREV]=TIMER_FREE
+ ENDIF
+ VAR R=TIMER_FREE
+ TIMER_FREE=TIMER_NEXT[TIMER_FREE]
+ TIMER_NEXT[R]=NXT
+ TIMER_IDCNT=TIMER_IDCNT+1
+ TIMER_TM[R]=MILLISEC
+ RETURN R
+END
+'======
+'END TIMER
+'======
+
 COMMON DEF GetWindowControl()
  RETURN CTL_WINDOWCTL
 END
@@ -822,6 +951,8 @@
  NEXT
 END
 COMMON DEF IsControlExtend(CTL,PARENT)
+ IF!CheckControl(CTL) THEN RETURN 0
+ IF!CheckControl(PARENT) THEN RETURN 0
  VAR N=CTL AND 4095
  VAR P=PARENT AND 4095
  WHILE N
@@ -830,6 +961,10 @@
  WEND
  RETURN 0
 END
+COMMON DEF GetControlName$(CTL)
+ IF!CheckControl(CTL) THEN RETURN""
+ RETURN CTL_NAME$[CTL AND 4095]
+END
 COMMON DEF SetControlPainter(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
@@ -1605,6 +1740,9 @@
 COMMON DEF WindowOwnerDrawFlag()
  RETURN 8
 END
+COMMON DEF WindowToolFlag()
+ RETURN 16
+END
 DEF WindowOnCreate WND,CTL,ARG1,ARG2
  VAR NUCID=CTL AND 4095
  IF LEN(CTL_HANDLER$[NUCID,CTL_CREATEHANDLER])THEN
@@ -1726,6 +1864,9 @@
  IF (FLG AND 8)==8THEN
   WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_OWNERDRAW
  ENDIF
+ IF (FLG AND WindowToolFlag())THEN
+  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_TOOL
+ ENDIF
  IF (FLG AND 512)!=512THEN
   WindowOnCreate WND,CTL,0,0
  ENDIF
@@ -1795,6 +1936,9 @@
 COMMON DEF WindowMinMaxStyle()
  RETURN WIN_STYLE_MINMAX
 END
+COMMON DEF WindowNarrowStyle()
+ RETURN WIN_STYLE_NARROW
+END
 VAR WIN_TopLevelX2
 DEF IncTopLevelPos NUCID
  INC WIN_TopLevelX,CTL_FH1[NUCID]-1
@@ -1827,6 +1971,9 @@
   INC CTL_FH2[NUCID],1
   INC CTL_FW2[NUCID],1
  ENDIF
+ IF STYLE AND WIN_STYLE_NARROW THEN
+  DEC CTL_FH1[NUCID],6
+ ENDIF
  NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OR 512 OUT WND,ERR
  VAR MW=32
  IF MW>WIDTH THEN MW=WIDTH
@@ -1834,6 +1981,9 @@
  SetWindowMinSize WND,CTL_FW1[NUCID]+MW,WIN_FH2[NUWID]
  CTL_FH1[NUCID]=_H
  IF ERR THEN RETURN
+ IF STYLE AND WIN_STYLE_NARROW THEN
+  INC CTL_FH1[NUCID],6
+ ENDIF
  'MENU
  IF STYLE AND 1THEN
   NewMenu OUT WIN_MENU[NUWID],ERR
@@ -1841,18 +1991,18 @@
  ENDIF
  'RESIZABLE
  IF STYLE AND 2THEN
-  WIN_STYLE[NUWID]=WIN_STYLE_RESIZ
+  WIN_STYLE[NUWID]=WIN_STYLE[NUWID]OR WIN_STYLE_RESIZ
   DEC CTL_FW1[NUCID],1
   DEC CTL_FH2[NUCID],1
   DEC CTL_FW2[NUCID],1
  ENDIF
  'TRANS
  IF STYLE AND 4THEN
-  WIN_STYLE[NUWID]=WIN_STYLE_TRANS
+  WIN_STYLE[NUWID]=WIN_STYLE[NUWID]OR WIN_STYLE_TRANS
   NOIMPL "TRANS
   NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
  ENDIF
- WIN_STYLE[NUWID]=STYLE
+ WIN_STYLE[NUWID]=WIN_STYLE[NUWID]OR STYLE
  IF STYLE AND WIN_STYLE_HIDE THEN
   WIN_HIDE[NUWID]=1
   IF WIN_SP[NUWID]THEN SPHIDE WIN_SP[NUWID]AND 511
@@ -2026,30 +2176,35 @@
  WindowOnCreate WND,CTL
  VOID ActiveWindow(WND)
 END
-COMMON DEF NewDialogBoxWithArg(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,A1,A2)
+COMMON DEF NewDialogBoxWithArg CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,A1,A2 OUT WND,E
  IF!CheckControl(CTL)THEN
-  RETURN CTL_INVALIDID
+  WND=0
+  E=CTL_INVALIDID
+  RETURN
  ENDIF
  IF!WIN_FREE THEN
-  RETURN WIN_NOALLOC
+  WND=0
+  E=WIN_NOALLOC
+  RETURN
  ENDIF
  VAR O=OWNER AND NUWIDMASK
  VAR AX=WIN_AX[O]+(WIN_WIDTH[O]-WIDTH)/2
  VAR AY=WIN_AY[O]+(WIN_HEIGHT[O]-HEIGHT)/2
- VAR WND,E
  IF AX<0THEN AX=0
  IF AY<0THEN AY=0
  NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWindow(),WindowFrontFlag()OR 512 OUT WND,E
  IF FLAG THEN
   WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
  ENDIF
- IF E THEN RETURN E
+ IF E THEN RETURN
  InitWindow WND,A1,A2
  E=JoinWindowGroup(OWNER,WND)
- RETURN E
+ RETURN
 END
 COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
- RETURN NewDialogBoxWithArg(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,0,0)
+ VAR E
+ NewDialogBoxWithArg CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG,0,0 OUT ,E
+ RETURN E
 END
 COMMON DEF NewModalDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER)
  RETURN NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,1)
@@ -2129,7 +2284,8 @@
  INC W,16'MARGIN
  INC H,16'MARGIN
  VAR TEXT=AllocString(TEXT$)
- VAR RET=NewDialogBoxWithArg(CTL_MSGBOXCTL,TITLE$,W,H,WND,TRUE,FLAG,TEXT)
+ VAR RET
+ NewDialogBoxWithArg CTL_MSGBOXCTL,TITLE$,W,H,WND,TRUE,FLAG,TEXT OUT ,RET
  FreeString TEXT
  RETURN RET
 END
@@ -2209,17 +2365,18 @@
   WIN_GPARENT[NUWID]=0
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
-  IF WIN_GROUP[NUWID]THEN
-   VAR G=WIN_GROUP[NUWID]
-   WHILE G
-    VAR ERR=DeleteWindow(NUWIDToWND(G))
-    IF ERR THEN RETURN ERR
-    G=WIN_GNEXT[G]
-   WEND
-    WIN_GROUP[NUWID]=0
-  ENDIF
-  
  ENDIF
+ IF WIN_GROUP[NUWID]THEN
+  VAR G=WIN_GROUP[NUWID]
+  WHILE G
+   VAR GN=WIN_GNEXT[G]
+   VAR ERR=DeleteWindow(NUWIDToWND(G))
+'   IF ERR THEN RETURN ERR
+   G=GN
+  WEND
+  WIN_GROUP[NUWID]=0
+ ENDIF
+ VOID DeleteWindowTimers(NUWIDToWND(NUWID))
  RETURN 0
 END
 
@@ -2264,13 +2421,30 @@
  WIN_ACTIVENUWID=NUWID
  RETURN 0
 END
+COMMON DEF IsFrontWindow(WND,WND2)
+ IF!CheckWindow(WND)THEN RETURN FALSE
+ IF!CheckWindow(WND2)THEN RETURN FALSE
+ IF GetParentWindow(WND)!=GetParentWindow(WND2)THEN RETURN FALSE
+ RETURN _IsFrontWindow(WND AND NUWIDMASK,WND2 AND NUWIDMASK)
+END
+DEF _IsFrontWindow(N1,N2)
+ WHILE N1
+  IF N1==N2 THEN
+   RETURN TRUE
+  ENDIF
+  N1=WIN_NEXT[N1]
+ WEND
+ RETURN FALSE
+END
 COMMON DEF FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  VAR N,C=WIN_NEXT[NUWID]
  IF C THEN
+  VAR MOVEF=FALSE
   WHILE 1
    IF!WIN_NEXT[C]THEN 
+    IF WIN_NEXT[C]==NUWID THEN BREAK
     VAR NUP=WIN_PREV[NUWID]
     VAR NUN=WIN_NEXT[NUWID]
     IF NUP THEN
@@ -2282,6 +2456,7 @@
      IF NUP THEN WIN_NEXT[NUP]=NUN
      WIN_PREV[NUN]=NUP
     ENDIF
+    MOVEF=TRUE
     WIN_NEXT[C]=NUWID
     WIN_PREV[NUWID]=C
     WIN_NEXT[NUWID]=0
@@ -2292,11 +2467,21 @@
   IF WIN_SP[NUWID] THEN
    OTW_SPSORT
   ENDIF
-  RepaintAllWindow WND,0,0,0,0
+  IF MOVEF THEN RepaintAllWindow WND,0,0,0,0
+  
  ENDIF
  VAR G=WIN_GROUP[NUWID],E
  VAR HASMODAL
  WHILE G
+  IF WIN_STYLE[G]AND WIN_STYLE_TOOL THEN
+   IF!_IsFrontWindow(NUWID,G)THEN
+    E=FrontWindow(NUWIDToWND(G))
+   ENDIF
+  ENDIF
+  G=WIN_GNEXT[G]
+ WEND
+ G=WIN_GROUP[NUWID]
+ WHILE G
   IF WIN_STYLE[G]AND WIN_STYLE_MODAL THEN
    BEEP 
    IF WIN_SP[NUWID]THEN
@@ -2618,11 +2803,13 @@
   IF WIN_SP[NUWID]THEN
    WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
   ENDIF
+  IF 0THEN
   GPAGE OTW_SP,OTW_GP
   GCOPY OTW_DP,WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   GPAGE OTW_SP,OTW_DP
   GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_BKGND
   GCOPY OTW_GP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
+  ENDIF
   OTW_SPCHR NUWID
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
@@ -2773,6 +2960,22 @@
  IF!LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,TYPE])THEN RETURN 0
  IF CTL_NDHNDLR[TYPE]THEN
   IF WIN_MSGCNT[NUWID,TYPE]THEN RETURN 0
+  'INC WIN_MSGCNT[NUWID,TYPE]
+ ENDIF
+ IF TYPE==CTL_PAINTHANDLER||TYPE==CTL_FRMPAINTHANDLER THEN
+  IF WIN_MSGCNT[NUWID,TYPE]THEN
+   VAR I=WIN_MSGE[NUWID]
+   WHILE WIN_MSGS[NUWID]!=I
+    IF WIN_MSGBUF[NUWID,I,0]==TYPE THEN
+     WIN_MSGBUF[NUWID,I,0]=-1
+    ENDIF
+    I=I+1
+    IF I>=WIN_MSGMAX THEN I=0
+   WEND
+   WIN_MSGCNT[NUWID,TYPE]=0
+   A1=0
+   A2=0
+  ENDIF
   INC WIN_MSGCNT[NUWID,TYPE]
  ENDIF
  WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],0]=TYPE
@@ -2812,6 +3015,16 @@
 COMMON DEF SendStrNotifWindow(WND,A1,STR$)
  RETURN SendWindowEvent(WND,CTL_STRNOTIFHANDLER,A1,AllocString(STR$))
 END
+COMMON DEF GetWindowMouseX(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID]
+END
+COMMON DEF GetWindowMouseY(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID]
+END
 DEF MouseMoveWindow(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_MOUSEMVHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
@@ -2916,6 +3129,8 @@
    G=WIN_GNEXT[G]
   WEND
  ENDIF
+ 'TIMER
+ IF WIN_TIMER[NUWID]THEN UpdateTimer WND
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  VAR NUCID=WIN_CTL[NUWID] AND 4095
  WHILE WIN_MSGS[NUWID]!=WIN_MSGE[NUWID]
@@ -2924,6 +3139,7 @@
 
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
+ IF TYPE==-1THEN CONTINUE
  IF TYPE==13THEN
   'CTL_STRNOTIFHANDLER
   CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],GetString$(WIN_MSGBUF[NUWID,S,2])
@@ -2932,15 +3148,32 @@
   CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
  ENDIF
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ DEC WIN_MSGCNT[NUWID,TYPE]
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
- IF CTL_NDHNDLR[TYPE]THEN
-  DEC WIN_MSGCNT[NUWID,TYPE]
- ENDIF
- IF S2!=WIN_MSGS[NUWID]THEN BREAK
+' IF CTL_NDHNDLR[TYPE]THEN
+'  DEC WIN_MSGCNT[NUWID,TYPE]
+' ENDIF
+ 'IF S2!=WIN_MSGS[NUWID]THEN BREAK
 'BREAK
  WEND
  RETURN 0
 END
+DEF UpdateTimer WND
+ VAR NUWID=WND AND NUWIDMASK
+ VAR T=WIN_TIMER[NUWID]AND NUWIDMASK
+ VAR M=MILLISEC
+ 
+ WHILE T
+  VAR NT=TIMER_NEXT[T]
+  IF TIMER_TM[T]+TIMER_TIMEOUT[T]<=M THEN
+   VAR TMR=ToTimer(T)
+   CALL TIMER_FUNC$[T],WND,TMR,TIMER_ARG[T]
+   VOID DeleteTimer(TMR)
+   BREAK
+  ENDIF
+  T=NT
+ WEND
+END
 COMMON DEF UpdateWindow(WND)
  VAR E=UpdateWindowOnly(WND)
  VAR NUWID=WND AND NUWIDMASK
@@ -3197,11 +3430,21 @@
  WING_SY=Y+WIN_FY[NUWID]
 END
 COMMON DEF GBeginDirect(WND)
- IF!CheckWindow(WND)THEN RETURN
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  GPAGE OTW_SP,OTW_DDRAWPAGE
  GCLIP 1
  RETURN 0
 END
+COMMON DEF GetDirectGPAGE WND OUT PAGE1,PAGE2,ERR
+ IF!CheckWindow(WND)THEN
+  PAGE1=0
+  PAGE2=0
+  ERR=WIN_INVALIDID
+ ENDIF
+ ERR=0
+ PAGE1=OTW_SP
+ PAGE2=OTW_DDRAWPAGE
+END
 COMMON DEF GEndDirect(WND)
  IF!CheckWindow(WND)THEN RETURN
  VAR NUWID=WND AND NUWIDMASK
@@ -3648,6 +3891,10 @@
  VAR W=GetWindowFrameWidth(WND)
  VAR H2=WIN_HEIGHT[NUWID]-H
  VAR SH=FH-12'CTL_FH1[NUCID]
+ VAR NARROW=WIN_STYLE[NUWID]AND WIN_STYLE_NARROW
+ IF NARROW THEN
+  SH=FH-6
+ ENDIF
  VAR SW=WIN_FW2[NUWID]-2'CTL_FW1[NUCID]-CTL_FW2[NUCID]
  IF WIN_MENU[NUWID]THEN DEC SH,10'TODO:MENU_HEIGHT
  VAR C=WIN_BKGND
@@ -3656,13 +3903,20 @@
  'GCLSWindow WND,WIN_BACKGND[NUWID]
  VAR FRAMEBKGND=RGB(0,0,255)
  GFILLWindow WND,0,-H+1,W-2,-1,FRAMEBKGND
- GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
- GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
+ IF!NARROW THEN
+  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
+  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
+  GLINEWindow WND,W-08-1,-H+3,W-2-1,-H+9,C
+  GLINEWindow WND,W-7-1,-H+3,W-1-1,-H+9,C
+  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
+  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
+
+ ELSE
+  GFILLWindow WND,W-5-1,-H+1,W-1,-H+5,RGB(224,0,0)
+  GLINEWindow WND,W-4-1,-H+2,W-3,-H+4,C
+  GLINEWindow WND,W-4-1,-H+4,W-3,-H+2,C
+ ENDIF
  GLINEWindow WND,-1,-1,W-2,-1,RGB(0,0,0)
- GLINEWindow WND,W-08-1,-H+3,W-2-1,-H+9,C
- GLINEWindow WND,W-7-1,-H+3,W-1-1,-H+9,C
- GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
- GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
  
  IF FW>1 THEN
@@ -4414,7 +4668,12 @@
 END
 COMMON DEF AddListBoxItem WND,ITEM$
  VAR L=GetWindowVar(WND,2)'
- IF!LISTSTR_FREE THEN RETURN
+ IF!LISTSTR_FREE THEN
+  LISTSTR_FREE=LEN(LISTSTR$)
+  PUSH LISTSTR$,ITEM$
+  PUSH LISTSTRNEXT,0
+  PUSH LISTSTRPREV,0
+ ENDIF
  IF L THEN LISTSTRNEXT[L]=LISTSTR_FREE
  SetWindowVar WND,2,LISTSTR_FREE
  IF!L THEN
@@ -4438,6 +4697,21 @@
  VAR SCR=GetWindowVar(WND,4)
  SetScrollBarSize SCR,LEN-1
 END
+COMMON DEF SelectListBoxItem WND,INDEX
+ VAR V=GetWindowVar(WND,1)
+ WHILE V
+  IF INDEX==0THEN
+   SetWindowVar WND,7,V
+   BREAK
+  ENDIF
+  V=LISTSTRNEXT[V]
+  DEC INDEX
+ WEND
+ VOID RepaintWindow(WND)
+ IF GetWindowVar(WND,6)THEN
+  VOID SendNotifWindow(GetOwnerWindow(WND),WND,1)
+ ENDIF
+END
 DEF ListBoxLMD WND,CT,T,X,Y
  VAR W=GetWindowWidth(WND)-1
  VAR H=GetWindowHeight(WND)
@@ -4683,11 +4957,15 @@
  DropDownListBtn WND,FALSE
  IF GENDWINDOW(WND)THEN RETURN
 END
+COMMON DEF GetDropDownListHeight()
+ RETURN 11
+END
 COMMON DEF GetDropDownListBox(WND)
  VAR LSTBOX=GetWindowVar(WND,0)
  IF!LSTBOX THEN
   VAR E
   NewWindow CTL_DRPDWNBOXCTL,"",0,0,0,0,GetRootWindow(),0 OUT LSTBOX,E
+  VOID SetWindowProperty(LSTBOX,"SHADOW",FALSE)
   IF E THEN @ERR
   SetWindowVar WND,0,LSTBOX
   IF JoinWindowGroup(WND,LSTBOX) THEN @ERR
@@ -4698,11 +4976,16 @@
 END
 DEF ShowDropDownListBox WND
  VAR LSTBOX=GetDropDownListBox(WND)
+ VAR PARENT=GetParentWindow(LSTBOX)
+ VAR PH=GetWindowHeight(PARENT)
  VAR X=GetWindowAX(WND)
  VAR Y=GetWindowAY(WND)
  VAR W=GetWindowWidth(WND)
  VAR H=64
  INC Y,GetWindowHeight(WND)
+ IF Y+H>=PH THEN
+  Y=GetWindowAY(WND)-H
+ ENDIF
  IF MoveResizeWindow(LSTBOX,X,Y,W,H)||FrontWindow(LSTBOX)||ShowWindow(LSTBOX)||FocusWindow(LSTBOX)THEN @ERR
  RETURN
  @ERR
@@ -4715,28 +4998,31 @@
   VOID SendNotifWindow(GetOwnerWindow(WND),A1,A2)
  ENDIF
 END
+COMMON DEF DropDownListDelete WND,CT,T,F,A2
+' VOID DeleteWindow(GetWindowVar(WND,0))
+END
 COMMON DEF DropDownListBoxChFocus WND,CT,T,F,A2
- IF!F&&!IsActiveWindow(WND) THEN
+ IF!IsActiveWindow(WND) THEN
   IF HideWindow(WND)THEN RETURN
   VOID RepaintWindow(GetWindowGroupOwner(WND))
  ENDIF
 END
-DEF NewHScrollBar PARENT,SIZ OUT WND,E
+COMMON DEF NewHScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
- NewWindow GetHScrollBarControl(),"",0,H-8,W,8,PARENT,0 OUT WND,E
+ NewWindow GetHScrollBarControl(),"",0,H-GetScrollBarHeight(),W,GetScrollBarHeight(),PARENT,0 OUT WND,E
  SetWindowVar WND,1,SIZ
  SetScrollBarAutoResizeMode WND,1
 END
-DEF NewHVScrollBar PARENT,SIZH,SIZV OUT WNDH,WNDV,E
+COMMON DEF NewHVScrollBar PARENT,SIZH,SIZV OUT WNDH,WNDV,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
- NewWindow GetHScrollBarControl(),"",0,H-8,W-8,8,PARENT,0 OUT WNDH,E
+ NewWindow GetHScrollBarControl(),"",0,H-GetScrollBarHeight(),W-GetScrollBarWidth(),GetScrollBarHeight(),PARENT,0 OUT WNDH,E
  IF E THEN RETURN
  SetWindowVar WNDH,1,SIZH
  SetScrollBarAutoResizeMode WNDH,2
 
- NewWindow GetVScrollBarControl(),"",W-8,0,8,H-8,PARENT,0 OUT WNDV,E
+ NewWindow GetVScrollBarControl(),"",W-GetScrollBarWidth(),0,GetScrollBarWidth(),H-GetScrollBarHeight(),PARENT,0 OUT WNDV,E
  IF E THEN
   VOID DeleteWindow(WNDH)
   WNDV=0
@@ -4745,14 +5031,21 @@
  SetScrollBarAutoResizeMode WNDV,2
  SetWindowVar WNDV,1,SIZV
 END
-DEF NewVScrollBar PARENT,SIZ OUT WND,E
+COMMON DEF NewVScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
- NewWindow GetVScrollBarControl(),"",W-8,0,8,H,PARENT,0 OUT WND,E
+ NewWindow GetVScrollBarControl(),"",W-GetScrollBarWidth(),0,GetScrollBarWidth(),H,PARENT,0 OUT WND,E
  SetWindowVar WND,1,SIZ
  SetScrollBarAutoResizeMode WND,1
 END
+COMMON DEF GetScrollBarHeight()
+ RETURN 8
+END
+COMMON DEF GetScrollBarWidth()
+ RETURN 8
+END
 COMMON DEF SetScrollBarSize W,SIZ
+ IF GetWindowVar(W,1)==SIZ THEN RETURN
  SetWindowVar W,1,SIZ
  VOID RepaintWindow(W)
  VAR POS=GetWindowVar(W,2)
@@ -4769,6 +5062,7 @@
  VOID RepaintWindow(W)
 END
 COMMON DEF SetScrollBarPosition W,POS
+ IF POS<0||POS>=GetScrollBarSize(W)THEN RETURN
  SetWindowVar W,2,POS
  VOID RepaintWindow(W)
 END
@@ -4868,6 +5162,9 @@
  VOID ReleaseCapture(W)
  HSCRBARPainter W,C,0,0,0
 END
+DEF HSCRBARTimer WND,TIMER,ARG
+ HSCRBARLMouseDown WND,0,-1,GetWindowMouseX(WND),GetWindowMouseY(WND)
+END
 DEF HSCRBARLMouseDown W,C,T,Y,_
  VAR ID=GetWindowVar(W,3)
  IF ID<8THEN
@@ -4882,7 +5179,7 @@
    SetWindowVar W,3,ID
   ENDIF
   VOID SetCapture(W)
-  VOID LMouseDownWindow(W)
+  SetTimer W,16,0,"HSCRBARTimer" OUT ,'LMouseDownWindow(W)
  ELSE
   SetWindowVar W,3,0
   RETURN
@@ -4922,8 +5219,8 @@
   VAR PW=GetParentWindow(W)
   VAR WIDTH=GetWindowWidth(PW)
   VAR HEIGHT=GetWindowHeight(PW)
-  IF MODE==2THEN WIDTH=WIDTH-8
-  VOID MoveResizeWindow(W,0,HEIGHT-8,WIDTH,8)
+  IF MODE==2THEN WIDTH=WIDTH-GetScrollBarWidth()
+  VOID MoveResizeWindow(W,0,HEIGHT-GetScrollBarHeight(),WIDTH,GetScrollBarHeight())
  ENDIF
 END
 DEF VSCRBARPARENT W,C,T,TYP,A
@@ -4934,8 +5231,8 @@
   VAR PW=GetParentWindow(W)
   VAR WIDTH=GetWindowWidth(PW)
   VAR HEIGHT=GetWindowHeight(PW)
-  IF MODE==2THEN HEIGHT=HEIGHT-8
-  VOID MoveResizeWindow(W,WIDTH-8,0,8,HEIGHT)
+  IF MODE==2THEN HEIGHT=HEIGHT-GetScrollBarHeight()
+  VOID MoveResizeWindow(W,WIDTH-GetScrollBarWidth(),0,GetScrollBarWidth(),HEIGHT)
  ENDIF
 END
 
@@ -5017,6 +5314,9 @@
  VOID ReleaseCapture(W)
  VSCRBARPainter W,C,0,0,0
 END
+DEF VSCRBARTimer WND,TIMER,ARG
+ VSCRBARLMouseDown WND,0,-1,GetWindowMouseX(WND),GetWindowMouseY(WND)
+END
 DEF VSCRBARLMouseDown W,C,T,X,Y
  VAR ID=GetWindowVar(W,3)
  IF ID<8THEN
@@ -5031,7 +5331,7 @@
    SetWindowVar W,3,ID
   ENDIF
   VOID SetCapture(W)
-  VOID LMouseDownWindow(W)
+  SetTimer W,16,0,"VSCRBARTimer" OUT ,'LMouseDownWindow(W)
  ELSE
   SetWindowVar W,3,0
   RETURN
@@ -5062,6 +5362,14 @@
   VOID SendNotifWindow(GetParentWindow(W),W,Y)
  ENDIF
 END
+COMMON DEF GSPOITWindow(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN 0
+ INC X,WIN_FX[WND AND NUWIDMASK]
+ INC Y,WIN_FY[WND AND NUWIDMASK]
+ VAR NUWID=RGBToShort(GSPOIT(OTW_MOUSEX,OTW_MOUSEY+240))
+ IF NUWID!=(WND AND NUWIDMASK)THEN RETURN 0
+ RETURN GSPOIT(X,Y)
+END
 VAR OTW_MOUSESIZE
 VAR OTW_MOUSE_HOMEX
 VAR OTW_MOUSE_HOMEY
@@ -5322,85 +5630,15 @@
   OTW_DDRAWPAGE=2
   PrintConsoleln "Init screen..."
   MouseClipDef
-  GPAGE OTW_SP,OTW_SP
-  GPRIO 1023
-  GCLS
-  GCLS RGB(0,192,0)
-  GCLS 
-  VAR I,J
-' FOR J=0TO 2
-'  FOR I=0TO 240/4
-'  GLINE 0,I+60*J,400,I+60*J,&HFF000000 OR(I*8<<J*8)XOR &HFFFFFF'RGB(0,I*4,0)
-'    GLINE 0,I+60*J,400,I+60*J,RGB(0,I*4,I*4) '
- ' NEXT
-' NEXT
-  GCLS RGB(0,192,0)
-  GCLS RGB(0,224,224)
-  GCLS RGB(0,128,128)
-
-
-
-  GCLS #BLUE
-  FOR I=-400TO 400 STEP 2
-   GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
-  NEXT
-  'GCLS RGB(191,191,191)
-  GPUTCHR 0,2,"otya window system 5.0",2,4
-  FOR I=-400TO 400 STEP 2
-   GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
-  NEXT
-  GPUTCHR 2,0,"otya window system 5.0",2,4
-  GPUTCHR 0,240-8,"One moment please...",1,1
-  GPUTCHR 1,240-8,"One moment please...",1,1
+  BACKCOLOR RGB(0,128,128)
+  VISIBLE 1,0,0,1
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
- ' GCLS RGB(0,192,128)
-' GCLS RGB(0,0,255)
-'GCLS 
-  GPRIO 1023
-  GOTO @_
-  XSCREEN 2,512,2
-  DISPLAY 1
-  CLS
-  VISIBLE 1,0,1,0
-  LOCATE 0,25
-  ?":LEFT CLICK"
-  ?":RIGHT CLICK(UNUSED)"
-  ?"TOUCH:CURSOR
-  BGSCREEN 0,25,15
-  BGSCALE 0,19.5/25,19.5/25'1
-  GCLS 'RGB(255,0,0)
-  BACKCOLOR RGB(0,192,128)
-  VAR X,Y
-  I=0
-  FOR Y=0TO 14
-   FOR X=0TO 24
-    BGPUT 0,X,Y,I
-    INC I
-   NEXT
-  I=I+7
-  NEXT
-  BGPAGE OTW_DP
-  VAR K$="KEYBOARD"
-  OTW_KX=39*8
-  OTW_KY=0
-  OTW_KX2=40*8
-  OTW_KY2=LEN(K$)*8
-  ATTR 1
-  FOR I=0TO LEN(K$)-1
-   COLOR 15,8
-   LOCATE 39,I
-   ?K$[I];
-  NEXT
-  COLOR 15,0
-  ATTR 0
-  DISPLAY 0
-  @_
   OTW_INIT=TRUE
   VAR E
-  NewControl "DESKTOP" OUT WIN_ROOTCTL,E
+  NewControl "ROOT" OUT WIN_ROOTCTL,E
 ' E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
-  NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400-1,240-1 OUT WIN_ROOTWND,E
+  NewTopLevelWindow WIN_ROOTCTL,"ROOT",400-1,240-1 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
 ' NewTopLevelWindow TSTCTL,"HELLO",164,164 OUT TSTWND,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
@@ -5428,7 +5666,7 @@
   OTW_SHADOWSP=1
   SPSET OTW_SHADOWSP,0
   OTW_MOUSE=-1
-  OTW_INITSP 0
+  OTW_INITSP 5
   OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
@@ -6060,6 +6298,17 @@
 VAR OTW_MOUSEOLDX,OTW_MOUSEOLDY
 VAR OTW_MOUSEOLDST
 VAR OTW_OLDSTICKMCNT
+COMMON DEF MoveMouse X,Y
+ OTW_MOUSEX=X
+ OTW_MOUSEY=Y
+ IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
+ IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
+ IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2
+ IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
+ SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
+ OTW_MOUSEX#=OTW_MOUSEX
+ OTW_MOUSEY#=OTW_MOUSEY
+END
 COMMON DEF UpdateMouse
  VAR S,X,Y
  TOUCH OUT S,X,Y
@@ -10658,7 +10907,7 @@
  NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNR,E
  INC X,12
  VAR DRP
- NewWindow GetDropDownListControl(),"",X,0,56,11,WND,0 OUT DRP,E
+ NewWindow GetDropDownListControl(),"",X,0,56,GetDropDownListHeight(),WND,0 OUT DRP,E
  VAR LST=GetDropDownListBox(DRP)
  AddListBoxItem LST,"H1"
  AddListBoxItem LST,"H2"
@@ -11059,7 +11308,8 @@
  void(repaintWindow(WND))
 END
 DEF OTYFIL_NEWFOL WND,FLG
- VAR E=NewDialogBoxWithArg(OTYFILNEWFOLCTL,"",40+15*8+4,40,WND,TRUE,FLG,0)
+ VAR E
+ NewDialogBoxWithArg OTYFILNEWFOLCTL,"",40+15*8+4,40,WND,TRUE,FLG,0OUT ,E
 END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
  IF ID==MenuNotifID() THEN
@@ -11381,14 +11631,23 @@
  ClearListBox L
  FOR I=0TO LEN(F$)-1
   IF F$[I][0]==" "&&T==1THEN CONTINUE
-  IF F$[I][1]=="*"&&T==2THEN CONTINUE
+  IF F$[I][0]=="*"&&T==2THEN CONTINUE
   AddListBoxItem L,F$[I]
  NEXT
 END
-COMMON DEF FileDialogCreate WND,C,T,ID,__
+COMMON DEF FileDialogCreate WND,C,T,ID,LIST
  VAR E,L
  NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
+
  SetWindowVar WND,0,L
+ IF LIST THEN
+  IF 0THEN DIM LIST$[0]
+  NewWindow GetDropDownListControl(),"L",0,65,116,GetDropDownListHeight(),WND,0 OUT L,E
+  VAR LB=GetDropDownListBox(L)
+  LIST$=GetSBArray(LIST)
+  AddArrayListBoxItem LB,LIST$
+  SelectListBoxItem LB,0
+ ENDIF
  INITFILEDIALOGLISTBOX WND
  VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
  SetWindowVar WND,1,F
@@ -11407,7 +11666,8 @@
  ENDIF
  IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
  VAR TITLE$=TYPE$
- VAR E=NewDialogBoxWithArg(CTL_FILDIA,"Save "+TYPE$,170,74,OWNER,TRUE,ID,0)
+ VAR E
+ NewDialogBoxWithArg CTL_FILDIA,"Save "+TYPE$,170,74,OWNER,TRUE,ID,0OUT ,E
  RETURN E
 END
 COMMON DEF OpenFileDialog(OWNER,TYPE$,ID)
@@ -11416,9 +11676,42 @@
  ENDIF
  IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
  VAR TITLE$=TYPE$
- VAR E=NewDialogBoxWithArg(CTL_FILDIA,"Open "+TYPE$,170,64,OWNER,TRUE,ID,0)
+ VAR E
+ NewDialogBoxWithArg CTL_FILDIA,"Open "+TYPE$,170,64+10,OWNER,TRUE,ID,0OUT ,E
  RETURN E
 END
+'[0]="All:*"
+'[1]="GRP:*.GRP"
+'[2]="GRPF:*.GRPF"
+COMMON DEF OpenFileDialogEx OWNER,TYPE$,ID,LIST$[] OUT E
+ IF!CTL_FILDIA THEN
+  OTW_FileDialog
+ ENDIF
+ IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
+ VAR TITLE$=TYPE$
+ VAR WND
+ VAR ARY=AllocSBArray()
+ SetSBArray ARY,LIST$
+ NewDialogBoxWithArg CTL_FILDIA,"Open "+TYPE$,170,64+GetDropDownListHeight()+1,OWNER,TRUE,ID,ARY OUT WND,E
+ FreeSBArray ARY
+ 'GetWindowVar 
+END
+COMMON DEF FindWindowByControl(WND,CTL,EXTEND)
+ WND=GetChildWindow(WND)
+ WHILE WND
+  IF EXTEND THEN
+   IF IsControlExtend(GetControl(WND),CTL) THEN
+    RETURN WND
+   ENDIF
+  ELSE
+   IF GetControl(WND)==CTL THEN
+    RETURN WND
+   ENDIF
+  ENDIF
+  WND=GetNextWindow(WND)
+ WEND
+ RETURN 0
+END
 
 '=========
 DEF OTW_LOADFONT
@@ -13588,6 +13881,11 @@
  ODE_PAINTER WND,CTL,TYP,0,0
 END
 COMMON DEF ODE_PAINTER WND,CTL,TYP,XY,WH
+ 'delete loading window
+ VAR WGM=GetWindowGroupMember(WND)
+ IF WGM THEN
+  VOID DeleteWindow(WGM)
+ ENDIF
  VAR X,Y,W,H
  VAR SW,SH
  SW=GetWindowWidth(WND)
@@ -13687,6 +13985,13 @@
  ARY=GetWindowVar(WND,ODE_WV_ICONS)
  SetSBArray ARY,ICONS
 END
+VAR ODELD_CTL
+COMMON DEF ODELD_PAINTER WND,CTL,TYP,A1,A2
+ VOID CallBaseControlHandler(WND,CTL,TYP,A1,A2)
+ VOID GBeginWindow(WND)
+ GPRINTWindow WND,0,0,"Starting...",#BLACK
+ VOID GEndWindow(WND)
+END
 COMMON DEF I_ODE
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -13695,21 +14000,23 @@
  ENDIF
  VAR WND,E
  IF!ODE_CTL THEN
- IF 0THEN
- VAR I
- ODEPAL=NewArray(65536)
- FOR I=0TO 65535
-  VAR R=((I>>11AND 31)<<3)*0
-  VAR G=((I>>6AND 31)<<3)*0
-  VAR B=((I>>1AND 31)<<3)*1
-  VAR A=(I AND 1)*255
-  ODEPAL[I]=RGB(A,R,G,B)'R>>3<<11OR G>>3<<6OR B>>3<<1OR !!A
- NEXT
- ENDIF
+  IF 0THEN
+   VAR I
+   ODEPAL=NewArray(65536)
+   FOR I=0TO 65535
+    VAR R=((I>>11AND 31)<<3)*0
+    VAR G=((I>>6AND 31)<<3)*0
+    VAR B=((I>>1AND 31)<<3)*1
+    VAR A=(I AND 1)*255
+    ODEPAL[I]=RGB(A,R,G,B)'R>>3<<11OR G>>3<<6OR B>>3<<1OR !!A
+   NEXT
+  ENDIF
   RC_OTYFIL
   NewImage OTYFILICOTXT,16,16 OUT ODE_IMAGE_TXT,E
   NewImage OTYFILICODAT,16,16 OUT ODE_IMAGE_DAT,E
   NewImage OTYFILICODIR,16,16 OUT ODE_IMAGE_DIR,E
+  ExtendControl "otya desktop environment:LOADING",GetWindowControl() OUT ODELD_CTL,E
+  E=SetControlPainter(ODELD_CTL,"ODELD_PAINTER")
   NewControl "otya desktop environment" OUT ODE_CTL,E
   E=SetControlPainter(ODE_CTL,"ODE_PAINTER")
   E=SetControlLMouseDownHandler(ODE_CTL,"ODE_LMD")
@@ -13724,7 +14031,12 @@
   ODE_IY=8
  ENDIF
  VAR RWND=GetRootWindow()
+ VAR LDWND
+ NewWindow ODELD_CTL,"desktop",(GetWindowWidth(RWND)-100)DIV 2,(GetWindowHeight(RWND)-32)DIV 2,100,32,RWND,WindowFrontFlag() OUT LDWND,E
+ IF UpdateWindow(LDWND)THEN ENDIF
  NewWindow ODE_CTL,"",0,0,GetWindowWidth(RWND),GetWindowHeight(RWND),RWND,WindowBackFlag() OUT WND,E
+ JoinWindowGroup WND,LDWND OUT E
+
  SetWindowVar WND,ODE_WV_FILES,AllocSBArray()
  SetWindowVar WND,ODE_WV_CURRENT,-1
  SetWindowVar WND,ODE_WV_ICONS,AllocSBArray()
@@ -13890,8 +14202,18 @@
 VAR PAINT_SCRV
 VAR PAINT_CMOUSEX
 VAR PAINT_CMOUSEY
+VAR PAINT_CMOUSEX2
+VAR PAINT_CMOUSEY2
 VAR PAINT_TOOL
 VAR PAINT_ZOOM
+VAR PAINT_COLOR
+VAR PAINT_BACK
+VAR PAINT_PAL_RLNK
+VAR PAINT_PAL_GLNK
+VAR PAINT_PAL_BLNK
+VAR PAINT_PAL_RSCR
+VAR PAINT_PAL_GSCR
+VAR PAINT_PAL_BSCR
 VAR PAINT_
 VAR PAINT_SIZE
 
@@ -13906,8 +14228,18 @@
  PAINT_SCRV=I:INC I
  PAINT_CMOUSEX=I:INC I
  PAINT_CMOUSEY=I:INC I
+ PAINT_CMOUSEX2=I:INC I
+ PAINT_CMOUSEY2=I:INC I
  PAINT_TOOL=I:INC I
  PAINT_ZOOM=I:INC I
+ PAINT_COLOR=I:INC I
+ PAINT_BACK=I:INC I
+ PAINT_PAL_RLNK=I:INC I
+ PAINT_PAL_GLNK=I:INC I
+ PAINT_PAL_BLNK=I:INC I
+ PAINT_PAL_RSCR=I:INC I
+ PAINT_PAL_GSCR=I:INC I
+ PAINT_PAL_BSCR=I:INC I
  
  PAINT_SIZE=I:INC I
  SetSBArray P,NewArray(PAINT_SIZE)
@@ -13968,50 +14300,79 @@
   H=SH
  ENDIF
  VAR Z=A[PAINT_ZOOM]
+ VAR Z#=(Z/PAINT_ZOOM_BASE)
  VAR HIMG=A[PAINT_IMAGE]
  VAR IW=GetImageWidth(HIMG)
  VAR IH=GetImageHeight(HIMG)
+ SetScrollBarSize A[PAINT_SCRH],MAX(0,(IW-(SW-GetScrollBarWidth()) DIV Z#))
+ SetScrollBarSize A[PAINT_SCRV],MAX(0,IH-(SH-GetScrollBarHeight()) DIV Z#)
+ VAR PT=A[PAINT_TOOL]
  IF Z!=PAINT_ZOOM_BASE THEN
   IF 0THEN DIM IMG[0]
 
   GetImageArray(HIMG) OUT IMG,
   IF GBeginDirect(WND)THEN @ERR
   GCLIP 1,X,Y,X+W,Y+H
-  GCLS -1
+  VAR R,G,B
+  RGBREAD A[PAINT_BACK] OUT R,G,B
+  R=R XOR 255
+  G=G XOR 255
+  B=B XOR 255
+  GCLS A[PAINT_BACK]'-1
   VAR IX,IY
   VAR Z2=Z DIV PAINT_ZOOM_BASE
   VAR IX2=SX+SW DIV Z2
   VAR IY2=SY+SH DIV Z2
   VAR DX
   VAR DY
-  VAR GRC=RGB(0,0,0)
+  VAR GRC=RGB(R,G,B)
+  VAR GRC2=RGB(128,128,128)
 
   IX2=MIN(IX2,IW-1)
   IY2=MIN(IY2,IH-1)
-  FOR IX=SX TO IX2
-   GLINE DX,Y,DX,Y+H,GRC
-   DX=DX+Z2
-  NEXT
+  GCLIP 1,MAX(0,-SX*Z#),MAX(0,-SY*Z#),MAX(0,MIN(511,(IW-SX-1)*Z#)),MAX(0,MIN(511,(IH-SY-1)*Z#))
+  VAR GRX=8
+  VAR GRY=8
   FOR IY=SY TO IY2
-   DX=0
-   GLINE X,DY,X+W,DY,GRC
    FOR IX=SX TO IX2
     VAR C=IMG[IX+IY*IW]
     IF C AND 1THEN
-     GFILL DX,DY,DX+Z2-1,DY+Z2-1,RGB(C>>11AND 31<<3,C>>6AND 31<<3,C>>1AND 31<<3)
+     GFILL DX,DY,DX+Z2-1,DY+Z2-1,RGB((C>>11AND 31)<<3,(C>>6AND 31)<<3,(C>>1AND 31)<<3)
     ENDIF
     DX=DX+Z2
    NEXT
+   IF !(IY MOD GRY) THEN
+    GLINE X,DY,X+W,DY,GRC2
+   ELSE
+    GLINE X,DY,X+W,DY,GRC
+   ENDIF
    UpdateMouse
    DY=DY+Z2
+   DX=0
   NEXT
+  
+  FOR IX=SX TO IX2
+   IF !(IX MOD GRX) THEN
+    GLINE DX,Y,DX,Y+H,GRC2
+   ELSE
+    GLINE DX,Y,DX,Y+H,GRC
+   ENDIF
+   DX=DX+Z2
+  NEXT
   IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,0)THEN @ERR
  ELSE
   IF GBeginWindow(WND)THEN @ERR
-  GCLSWindow WND,GetWindowBackColor(WND)
-  GFILLWindow WND,-SX,-SY,IW-SX-1,IH-SY-1,-1
+  GCLSWindow WND,A[PAINT_BACK]'GetWindowBackColor(WND)
+'  GFILLWindow WND,-SX,-SY,IW-SX-1,IH-SY-1,A[PAINT_BACK]
   GLOADImageWindow WND,-SX,-SY,A[PAINT_IMAGE],0
  ENDIF
+ VAR CW=GetCapture()
+ 'tool preview
+ IF CW==WND THEN
+  IF PT==PAINT_MENU_LINE THEN
+   GLINEWindow WND,A[PAINT_CMOUSEX]-SX*Z#,A[PAINT_CMOUSEY]-SY*Z#,A[PAINT_CMOUSEX2]-SX*Z#,A[PAINT_CMOUSEY2]-SY*Z#,A[PAINT_COLOR]
+  ENDIF
+ ENDIF
  IF GEndWindow(WND)THEN @ERR
  RETURN
  @ERR
@@ -14023,21 +14384,30 @@
  CX=26
  CY=0
  CW=W-CX-0
- CH=H-16
+ CH=H'16
 END
-COMMON DEF PAINTCANVASLMD WND,CTL,TYP,X,Y
+COMMON DEF PAINTCANVASLMD WND,CTL,TYP,MX,MY
  IF 0THEN DIM A[0]
  PAINT_GET WND OUT A
+
  VAR Z#=(A[PAINT_ZOOM]/PAINT_ZOOM_BASE)
  VAR SY=GetScrollBarPosition(A[PAINT_SCRV])*Z#
  VAR SX=GetScrollBarPosition(A[PAINT_SCRH])*Z#
- X=X+SX
- Y=Y+SY
+ VAR X=MX+SX
+ VAR Y=MY+SY
  VAR PT=A[PAINT_TOOL]
- IF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER THEN
+ IF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER||PT==PAINT_MENU_LINE THEN
   A[PAINT_CMOUSEX]=X
   A[PAINT_CMOUSEY]=Y
   VOID SetCapture(WND)
+  PAINTCANVASMMOVE WND,CTL,TYP,MX,MY
+ ELSEIF PT==PAINT_MENU_HAND THEN
+  A[PAINT_CMOUSEX]=MX DIV Z#
+  A[PAINT_CMOUSEY]=MY DIV Z#
+  VOID SetCapture(WND)
+ ELSEIF PT==PAINT_MENU_ZOOMOUT THEN
+  A[PAINT_ZOOM]=MAX(A[PAINT_ZOOM]-PAINT_ZOOM_BASE*4,PAINT_ZOOM_BASE)
+  VOID RepaintWindow(WND)
  ELSEIF PT==PAINT_MENU_ZOOMIN THEN
   INC A[PAINT_ZOOM],PAINT_ZOOM_BASE*4
   VOID RepaintWindow(WND)
@@ -14045,9 +14415,30 @@
 END
 COMMON DEF PAINTCANVASLMU WND,CTL,TYP,X,Y
  VOID ReleaseCapture(WND)
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ VAR Z#=(A[PAINT_ZOOM]/PAINT_ZOOM_BASE)
+ VAR SY=GetScrollBarPosition(A[PAINT_SCRV])*Z#
+ VAR SX=GetScrollBarPosition(A[PAINT_SCRH])*Z#
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ X=X+SX
+ Y=Y+SY
+ VAR PT=A[PAINT_TOOL]
+ IF PT==PAINT_MENU_LINE THEN
+  IF 0THEN DIM I[0]
+
+  GetImageArray(A[PAINT_IMAGE]) OUT I,
+  VAR IW=GetImageWidth(A[PAINT_IMAGE])
+  VAR IH=GetImageHeight(A[PAINT_IMAGE])
+ 
+  VAR C=A[PAINT_COLOR]
+  GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  PAINTCANVASPAINT WND,CTL,TYP,0,0
+ ENDIF
 END
 
-COMMON DEF PAINTCANVASMMOVE WND,CTL,TYP,X,Y
+COMMON DEF PAINTCANVASMMOVE WND,CTL,TYP,OX,OY
  IF GetCapture()!=WND THEN
   RETURN
  ENDIF
@@ -14058,30 +14449,43 @@
  VAR SX=GetScrollBarPosition(A[PAINT_SCRH])*Z#
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- X=X+SX
- Y=Y+SY
+ VAR X=OX+SX
+ VAR Y=OY+SY
  VAR X1=MIN(A[PAINT_CMOUSEX],X)
  VAR Y1=MIN(A[PAINT_CMOUSEY],Y)
  VAR X2=MAX(A[PAINT_CMOUSEX],X)
  VAR Y2=MAX(A[PAINT_CMOUSEY],Y)
- IF 0THEN DIM I[0]
+ VAR PT=A[PAINT_TOOL]
+ IF PT==PAINT_MENU_HAND THEN
+  SetScrollBarPosition A[PAINT_SCRH],GetScrollBarPosition(A[PAINT_SCRH])+A[PAINT_CMOUSEX]-OX DIV Z#
+  SetScrollBarPosition A[PAINT_SCRV],GetScrollBarPosition(A[PAINT_SCRV])+A[PAINT_CMOUSEY]-OY DIV Z#
+  PAINTCANVASPAINT WND,CTL,TYP,0,0
+  A[PAINT_CMOUSEX]=OX DIV Z#
+  A[PAINT_CMOUSEY]=OY DIV Z#
+ ELSEIF PT==PAINT_MENU_LINE THEN
+  A[PAINT_CMOUSEX2]=X
+  A[PAINT_CMOUSEY2]=Y
+  PAINTCANVASPAINT WND,CTL,TYP,0,0
+ ELSEIF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER THEN
+  IF 0THEN DIM I[0]
 
- GetImageArray(A[PAINT_IMAGE]) OUT I,
- VAR IW=GetImageWidth(A[PAINT_IMAGE])
- VAR IH=GetImageHeight(A[PAINT_IMAGE])
+  GetImageArray(A[PAINT_IMAGE]) OUT I,
+  VAR IW=GetImageWidth(A[PAINT_IMAGE])
+  VAR IH=GetImageHeight(A[PAINT_IMAGE])
  
- VAR C=RGB(0,0,0)
- IF A[PAINT_TOOL]==PAINT_MENU_ERASER THEN C=0
- GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
-' IF GBeginDirect(WND)THEN RETURN
-'GCLIP 1,X1,Y1,X2,Y2
-' GLOADImage 0,0,A[PAINT_IMAGE],1
-' GLINE A[PAINT_CMOUSEX],A[PAINT_CMOUSEY],X,Y
-' GSAVEImage 0,0,A[PAINT_IMAGE]
- PAINTCANVASPAINT WND,CTL,TYP,0,0
+  VAR C=A[PAINT_COLOR]
+  IF A[PAINT_TOOL]==PAINT_MENU_ERASER THEN C=0
+  GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+ ' IF GBeginDirect(WND)THEN RETURN
+ 'GCLIP 1,X1,Y1,X2,Y2
+ ' GLOADImage 0,0,A[PAINT_IMAGE],1
+ ' GLINE A[PAINT_CMOUSEX],A[PAINT_CMOUSEY],X,Y
+ ' GSAVEImage 0,0,A[PAINT_IMAGE]
+  PAINTCANVASPAINT WND,CTL,TYP,0,0
 
- A[PAINT_CMOUSEX]=X
- A[PAINT_CMOUSEY]=Y
+  A[PAINT_CMOUSEX]=X
+  A[PAINT_CMOUSEY]=Y
+ ENDIF
 END
 
 COMMON DEF PAINTRESIZE WND,CTL,TYP,A1,A2
@@ -14092,6 +14496,53 @@
  VOID ResizeWindow(A[PAINT_CANVAS],CW,CH)
 END
 VAR PAINTNEWDLGCTL
+VAR PAINTOFDID
+DEF PAINT_LOADGRP WND,F$
+ VAR ERR,PAGE1,PAGE2
+ GetSBFile F$ OUT F$,ERR
+ IF ERR THEN RETURN
+ IF MID$(F$,0,4)!="DAT:"THEN RETURN
+ IF GBeginDirect(WND)THEN @ERR
+ GetDirectGPAGE WND OUT PAGE1,PAGE2,ERR
+ IF ERR THEN @ERR
+ VAR C=RGB(0,RND(16)*8,RND(32)*8,RND(32)*8)
+ GCLS C
+ 
+ F$="GRP"+STR$(PAGE2)+MID$(F$,3,&H7FFFFFFF)
+ LOAD F$,0
+ VAR WIDTH
+ FOR WIDTH=0TO 511
+  IF GSPOIT(WIDTH,0)==C THEN
+   BREAK
+  ENDIF
+ NEXT
+ VAR HEIGHT
+ FOR HEIGHT=0TO 511
+  IF GSPOIT(0,HEIGHT)==C THEN
+   BREAK
+  ENDIF
+ NEXT
+ PAINT_NEW WND,WIDTH,HEIGHT
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ IF 0THEN DIM IMG[0]
+
+ GetImageArray A[PAINT_IMAGE] OUT IMG,
+ GSAVE PAGE2,0,0,WIDTH,HEIGHT,IMG,1
+ @ERR
+END
+COMMON DEF PAINTSTRNOTIF WND,C,T,A1,A2$
+ IF A1==PAINTOFDID THEN
+  VAR EXT$=GetFileExtension$(A2$)
+  ToUpper EXT$
+  IF EXT$=="GRP"||EXT$=="GRPF"THEN
+   'GRP
+   PAINT_LOADGRP WND,A2$
+  ELSE
+   NewDialogBoxWithArg PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0 OUT ,
+  ENDIF
+ ENDIF
+END
 COMMON DEF PAINTNOTIF WND,C,T,A1,A2
  IF A1==MenuNotifID()THEN
   PAINT_MENU WND,A2
@@ -14104,8 +14555,15 @@
  @ERR
  RETURN
  @NEW
- VOID NewDialogBoxWithArg(PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0) RETURN
+ NewDialogBoxWithArg PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0 OUT ,
+ RETURN
  @OPEN
+  PAINTOFDID=1
+  DIM LIST$[0]
+  PUSH LIST$,"Auto"
+  PUSH LIST$,"GRP"
+  PUSH LIST$,"Raw image"
+  VOID OpenFileDialogEx(WND,"DAT",PAINTOFDID,LIST$)
  RETURN
  @SAVE
  RETURN
@@ -14184,6 +14642,244 @@
  SetScrollBarSize A[PAINT_SCRV],H
  VOID RepaintWindow(A[PAINT_CANVAS])
 END
+COMMON DEF PAINTCANVASBUTTON WND,CTL,TYP,A1,A2
+ IF 0THEN DIM A[0]
+ A=PAINT_GET(WND)
+ VAR Z=A[PAINT_ZOOM]DIV PAINT_ZOOM_BASE
+ IF A1 AND #LEFT THEN
+  MoveMouse GetMouseX()-Z,GetMouseY()
+ ENDIF
+ IF A1 AND #RIGHT THEN
+  MoveMouse GetMouseX()+Z,GetMouseY()
+ ENDIF
+ IF A1 AND #UP THEN
+  MoveMouse GetMouseX(),GetMouseY()-Z
+ ENDIF
+ IF A1 AND #DOWN THEN
+  MoveMouse GetMouseX(),GetMouseY()+Z
+ ENDIF
+END
+VAR PAINTCOLORCTL
+COMMON DEF PAINTCOLORNOTIF WND,CTL,TYP,A1,A2
+ VAR N$=GetWindowName$(A1)
+ 
+ IF IsControlExtend(GetControl(A1),GetHScrollBarControl())&&(N$=="R"||N$=="G"||N$=="B")THEN
+  IF 0THEN DIM PAL[0]
+  PAL=GetSBArray(GetWindowVar(WND,5))
+  VAR SELC=GetWindowVar(WND,4)
+  VAR OLDR,OLDG,OLDB
+  RGBREAD PAL[SELC]OUT OLDR,OLDG,OLDB
+  VAR R=GetScrollBarPosition(GetWindowVar(WND,1))
+  VAR G=GetScrollBarPosition(GetWindowVar(WND,2))
+  VAR B=GetScrollBarPosition(GetWindowVar(WND,3))
+
+  IF 0THEN DIM A[0]
+  A=PAINT_GET(WND)
+  VAR RLNK=IsCheckedButton(A[PAINT_PAL_RLNK])
+  VAR GLNK=IsCheckedButton(A[PAINT_PAL_GLNK])
+  VAR BLNK=IsCheckedButton(A[PAINT_PAL_BLNK])
+  IF N$=="R"&&!RLNK THEN
+   GLNK=FALSE
+   BLNK=FALSE
+  ELSEIF N$=="G"&&!GLNK THEN
+   RLNK=FALSE
+   BLNK=FALSE
+  ELSEIF N$=="B"&&!BLNK THEN
+   RLNK=FALSE
+   GLNK=FALSE
+  ENDIF
+  VAR DIFF
+  IF N$=="R"THEN RLNK=FALSE:DIFF=R-OLDR DIV 8
+  IF N$=="G"THEN GLNK=FALSE:DIFF=G-OLDG DIV 8
+  IF N$=="B"THEN BLNK=FALSE:DIFF=B-OLDB DIV 8
+  IF RLNK THEN
+   R=R+DIFF
+  ENDIF
+  IF GLNK THEN
+   G=G+DIFF
+  ENDIF
+  IF BLNK THEN
+   B=B+DIFF
+  ENDIF
+  PAL[SELC]=RGB(R*8,G*8,B*8)
+  PAINTPAL_SELECT WND,SELC
+  IF SELC==0THEN
+   A[PAINT_BACK]=PAL[0]
+   VOID RepaintWindow(PAINT_GET(WND)[PAINT_CANVAS])
+  ENDIF
+  VOID RepaintWindow(WND)
+ ENDIF
+END
+COMMON DEF PAINTCOLORCREATE WND,CTL,TYP,A1,A2
+'--- low color palette
+@PALDATA
+DATA 255,255,255
+DATA  63, 63, 63
+DATA 255, 31,  0
+DATA 255, 95,192
+DATA   0, 63,240
+DATA 127, 63,255
+DATA   0,191,255
+DATA 151, 94, 46
+'
+DATA 255,160,  0
+DATA 255,203,167
+DATA   0,127,  0
+DATA   0,240, 31
+DATA 255,224,  0
+DATA 191,191,191
+DATA   0,  0,  0
+DATA 255,255,255
+ VAR Y=(65 DIV 6)*6+8
+ VAR X=10
+ DIM PAL[66]
+ FILL PAL,#BLACK
+ VAR I
+ RESTORE @PALDATA
+ FOR I=0TO 15
+  VAR R,G,B
+  READ R,G,B
+  PAL[I]=RGB(R,G,B)
+ NEXT
+ VAR A=AllocSBArray()
+ SetSBArray A,PAL
+ SetWindowVar WND,5,A
+ SetWindowVar WND,0,A1
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ IF 0THEN DIM P[0]
+ P=PAINT_GET(WND)
+ P[PAINT_BACK]=PAL[0]
+ VAR BW,E
+ NewWindow GetToggleButtonControl(),"R",0,Y,X-1,8,WND,0 OUT BW,E
+ P[PAINT_PAL_RLNK]=BW
+ VAR CW
+ NewWindow GetHScrollBarControl(),"R",X,Y,W-X,GetScrollBarHeight(),WND,0 OUT CW,E
+ SetWindowVar WND,1,CW
+ P[PAINT_PAL_RSCR]=CW
+ Y=Y+10
+ SetScrollBarSize CW,31
+ NewWindow GetHScrollBarControl(),"G",X,Y,W-X,GetScrollBarHeight(),WND,0 OUT CW,E
+ NewWindow GetToggleButtonControl(),"G",0,Y,X-1,8,WND,0 OUT BW,E
+ P[PAINT_PAL_GLNK]=BW
+ SetWindowVar WND,2,CW
+ P[PAINT_PAL_GSCR]=CW
+ Y=Y+10
+ SetScrollBarSize CW,31
+ NewWindow GetHScrollBarControl(),"B",X,Y,W-X,GetScrollBarHeight(),WND,0 OUT CW,E
+ NewWindow GetToggleButtonControl(),"B",0,Y,X-1,8,WND,0 OUT BW,E
+ P[PAINT_PAL_BLNK]=BW
+ P[PAINT_PAL_BSCR]=CW
+ SetWindowVar WND,3,CW
+ SetScrollBarSize CW,31
+
+ PAINTPAL_SELECT WND,14
+END
+DEF PAINTPAL_SELECT WND,SELC
+ IF 0THEN DIM PAL[0]
+ PAL=GetSBArray(GetWindowVar(WND,5))
+ VAR R,G,B
+ RGBREAD PAL[SELC]OUT R,G,B
+ SetScrollBarPosition GetWindowVar(WND,1),R DIV 8
+ SetScrollBarPosition GetWindowVar(WND,2),G DIV 8
+ SetScrollBarPosition GetWindowVar(WND,3),B DIV 8
+ SetWindowVar WND,4,SELC
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ IF SELC THEN
+  A[PAINT_COLOR]=PAL[SELC]
+ ELSE
+  A[PAINT_COLOR]=RGB(0,0,0,0)
+ ENDIF
+END
+COMMON DEF PAINTCOLORLMD WND,CTL,TYP,X,Y
+ VOID SetCapture(WND)
+ 'RGB
+ 'YATTSUKE HANTEI
+ 
+ PAINTCOLORMM WND,CTL,TYP,X,Y
+END
+COMMON DEF PAINTCOLORMM WND,CTL,TYP,X,Y
+ IF GetCapture()!=WND THEN RETURN
+ VAR SELC=GetWindowVar(WND,4)
+ VAR W=GetWindowWidth(WND)
+ VAR IX=X DIV 10
+ VAR IY=Y DIV 6
+ VAR I=IX+IY*(W DIV 10)
+ IF 0>I||I>=66THEN RETURN
+ IF SELC==I THEN RETURN
+ IF 0THEN DIM PAL[0]
+ PAL=GetSBArray(GetWindowVar(WND,5))
+ PAINTPAL_SELECT WND,I
+ VOID RepaintWindow(WND)
+END
+COMMON DEF PAINTCOLORPAINTER WND,CTL,TYP,XY,WH
+ IF CallBaseControlHandler(WND,CTL,TYP,XY,WH)THEN @ERR
+ VAR X,Y,W,H
+ VAR SW,SH
+ SW=GetWindowWidth(WND)
+ SH=GetWindowHeight(WND)
+ IF WH THEN
+  SplitInt WH OUT W,H
+  SplitInt XY OUT X,Y
+ ELSE
+  W=SW
+  H=SH
+ ENDIF
+X=0Y=0
+  W=SW
+  H=SH
+ IF GBeginDirect(WND)THEN @ERR
+ VAR I
+ GCLIP 1,X,Y,X+W,Y+H
+ GCLS GetWindowBackColor(WND)
+ VAR SELC=GetWindowVar(WND,4)
+ IF 0THEN DIM PAL[0]
+ PAL=GetSBArray(GetWindowVar(WND,5))
+ VAR R,G,B
+ RGBREAD PAL[SELC]OUT R,G,B
+ FOR I=0TO 65
+  VAR IX=I MOD 6
+  VAR IY=I DIV 6
+  GFILL IX*10+1,IY*6+1,IX*10+9,IY*6+5,PAL[I]
+  IF I==0THEN
+   VAR SR,SG,SB
+   RGBREAD PAL[I]OUT SR,SG,SB
+   SR=SR XOR 255
+   SG=SG XOR 255
+   SB=SB XOR 255
+   GLINE IX*10+1,IY*6+1,IX*10+9,IY*6+5,RGB(SR,SG,SB)
+  ENDIF
+  IF I==SELC THEN
+   RGBREAD PAL[I]OUT SR,SG,SB
+   SR=SR XOR 255
+   SG=SG XOR 255
+   SB=SB XOR 255
+   GBOX IX*10+1,IY*6+1,IX*10+9,IY*6+5,RGB(SR,SG,SB)
+'   GBOX  IX*10,IY*6,IX*10+10,IY*6+6,#BLACK
+  ENDIF
+ NEXT
+ IY=IY*6+8
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ IY=IY+10
+ IY=IY+10
+ IY=IY+10
+ GFILL W-2,IY+1,W-31,IY+20,RGB(R,G,B)
+ GBOX W-2+1,IY+1-1,W-31-1,IY+20+1,RGB(0,0,0)
+ VAR S$=STR$(R)
+ GPUTCHR 8*3-LEN(S$)*8,IY,S$,#RED
+ IY=IY+8
+ S$=STR$(G)
+ GPUTCHR 8*3-LEN(S$)*8,IY,S$,#GREEN
+ IY=IY+8
+ S$=STR$(B)
+ GPUTCHR 8*3-LEN(S$)*8,IY,S$,#BLUE
+ IY=IY+8
+ IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,0)THEN @ERR
+ IF GEndWindow(WND)THEN @ERR
+ @ERR
+END
 COMMON DEF I_PAINT
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -14198,19 +14894,29 @@
   IF E THEN @ERR_CTL
   ExtendControl"PAINTNEWDLGCTL",GetWindowControl() OUT PAINTNEWDLGCTL,E
   IF E THEN @ERR_CTL
+  ExtendControl"PAINTCOLORCTL",GetWindowControl() OUT PAINTCOLORCTL,E
+  IF E THEN @ERR_CTL
   IF SetControlDeleteHandler(PAINTCTL,"PAINTDELETE")THEN @ERR_CTL
   IF SetControlResizeHandler(PAINTCTL,"PAINTRESIZE")THEN @ERR_CTL
   IF SetControlNotifHandler(PAINTCTL,"PAINTNOTIF")THEN @ERR_CTL
+  IF SetControlStrNotifHandler(PAINTCTL,"PAINTSTRNOTIF")THEN @ERR_CTL
   IF SetControlCreateHandler(PAINTCANVASCTL,"PAINTCANVASCREATE")THEN @ERR_CTL
   IF SetControlPainter(PAINTCANVASCTL,"PAINTCANVASPAINT")THEN @ERR_CTL
   IF SetControlMouseMoveHandler(PAINTCANVASCTL,"PAINTCANVASMMOVE")THEN @ERR_CTL
   IF SetControlLMouseDownHandler(PAINTCANVASCTL,"PAINTCANVASLMD")THEN @ERR_CTL
   IF SetControlLMouseUpHandler(PAINTCANVASCTL,"PAINTCANVASLMU")THEN @ERR_CTL
   IF SetControlNotifHandler(PAINTCANVASCTL,"PAINTCANVASNOTIF")THEN @ERR_CTL
+  IF SetControlButtonHandler(PAINTCANVASCTL,"PAINTCANVASBUTTON")THEN @ERR_CTL
   IF SetControlCreateHandler(PAINTNEWDLGCTL,"PAINTNEWDLGCREATE")THEN @ERR_CTL
   IF SetControlNotifHandler(PAINTNEWDLGCTL,"PAINTNEWDLGNOTIF")THEN @ERR_CTL
+  IF SetControlPainter(PAINTCOLORCTL,"PAINTCOLORPAINTER")THEN @ERR_CTL
+  IF SetControlCreateHandler(PAINTCOLORCTL,"PAINTCOLORCREATE")THEN @ERR_CTL
+  IF SetControlNotifHandler(PAINTCOLORCTL,"PAINTCOLORNOTIF")THEN @ERR_CTL
+  IF SetControlLMouseDownHandler(PAINTCOLORCTL,"PAINTCOLORLMD")THEN @ERR_CTL
+  IF SetControlMouseMoveHandler(PAINTCOLORCTL,"PAINTCOLORMM")THEN @ERR_CTL
  ENDIF
- NewTopLevelStyleWindow PAINTCTL,"PAINT",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
+ VAR COLORWND
+ NewStyleWindow PAINTCTL,"PAINT",0,0,300,128,GetRootWindow(),WindowFrontFlag(),WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
  IF E THEN @ERR
  VAR CX,CY,CW,CH
  VAR CWND
@@ -14218,7 +14924,6 @@
  NewWindow PAINTCANVASCTL,"",CX,CY,CW,CH,WND,WindowBackFlag() OUT CWND,E
  IF E THEN @ERR
  SetProcessVar WND
- 
  VAR P
  PAINT_ALLOC OUT P
  SetWindowVar WND,0,P
@@ -14229,6 +14934,12 @@
  A[PAINT_CANVAS]=CWND
  PAINT_ZOOM_BASE=100
  A[PAINT_ZOOM]=PAINT_ZOOM_BASE
+ A[PAINT_COLOR]=RGB(0,0,0)
+ NewStyleWindowArg PAINTCOLORCTL,"COLOR",GetWindowWidth(GetRootWindow())-80,GetWindowY(WND),60,120,GetRootWindow(),WindowToolFlag(),WindowNarrowStyle(),P,0 OUT COLORWND,E
+ 'NewWindow PAINTCOLORCTL,"COLOR",GetWindowWidth(GetRootWindow())-80,GetWindowY(WND),60,120,GetRootWindow(),WindowToolFlag() OUT COLORWND,E
+ IF E THEN @ERR
+ JoinWindowGroup WND,COLORWND OUT E
+ IF E THEN @ERR
  VAR WIDTH=400
  VAR HEIGHT=240
  VAR IMG
@@ -14282,6 +14993,7 @@
   RETURN
  @ERR
   VOID DeleteControl(WND)
+  VOID DeleteControl(COLORWND)
   VOID DeleteControl(CWND)
   ExitProcess 1
 END
diff -u OTW.TXT OTW2F
--- OTW.TXT
+++ OTW2F
@@ -137,6 +137,7 @@
 VAR WIN_IM$
 
 VAR WIN_STYLE_NARROW
+VAR OTW_INSPECTWIN
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
@@ -519,6 +520,7 @@
  CTL_LEAVEFLG=64
 ' CTL_DRWFRMHANDLER=3
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
+'E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlFramePainter(CTL_WINDOWCTL,"WindowFramePainter")
@@ -2297,20 +2299,50 @@
  RepaintAllWindow WIN_ROOTWND,X,Y,W,H
  RETURN E
 END
+DEF OTW_CHECKWIN(N)
+ N=WIN_CHILD[N]
+ WHILE N
+  IF N&&WIN_NEXT[N]&&N!=WIN_PREV[WIN_NEXT[N]]THEN
+   RETURN 0
+  ENDIF
+  N=WIN_NEXT[N]
+ WEND
+ RETURN 1
+END
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
  WindowOnDelete NUWID
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ IF WIN_GROUP[NUWID]THEN
+  VAR G=WIN_GROUP[NUWID]
+  WHILE G
+   VAR GN=WIN_GNEXT[G]
+   VAR ERR=DeleteWindow(NUWIDToWND(G))
+   G=GN
+  WEND
+  WIN_GROUP[NUWID]=0
+ ENDIF
+ IF WIN_CHILD[NUWID]THEN
+  VAR C=WIN_CHILD[NUWID]
+  VAR D
+  WHILE C
+   D=WIN_NEXT[C]
+   E=DeleteWindowNUWID(C)
+   C=D
+  WEND
+ ENDIF
+ VOID DeleteWindowTimers(NUWIDToWND(NUWID))
  WIN_STYLE[NUWID]=0
  WIN_MENU[NUWID]=0
  WIN_WID[NUWID]=0
  WIN_MSGS[NUWID]=0
  WIN_MSGE[NUWID]=0
+
  VAR I
  FOR I=0TO 7
   WIN_VAR[NUWID,I]=0
  NEXT
- FOR I=0TO 15
+ FOR I=0TO CTL_HANDLER_MAX-1
   WIN_MSGCNT[NUWID,I]=0
  NEXT
  VAR N=WIN_NEXT[NUWID]
@@ -2318,15 +2350,6 @@
  IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
   WIN_CHILD[WIN_PARENT[NUWID]]=N
  ENDIF
- IF WIN_CHILD[NUWID]THEN
-  VAR C=WIN_CHILD[NUWID]
-  VAR D
-  WHILE C
-   D=WIN_NEXT[C]
-   E=DeleteWindowNUWID(C)
-   C=D
-  WEND
- ENDIF
  IF N THEN
   WIN_PREV[N]=P
  ENDIF
@@ -2338,10 +2361,11 @@
  WIN_PARENT[NUWID]=0
  WIN_CHILD[NUWID]=0
  WIN_FREE=NUWID
- WIN_NAME$[NUWID]=""
- IF WIN_SP[NUWID]THEN
+ VAR NULL$
+ WIN_NAME$[NUWID]=NULL$
+ IF WIN_SP[NUWID]AND 511THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
-  IF OTW_ENABLE_SHADOW&&SPVAR(WIN_SP[NUWID]AND 511,1)!=-1THEN
+  IF OTW_ENABLE_SHADOW&&SPVAR(WIN_SP[NUWID]AND 511,1)!=-1&&SPVAR(WIN_SP[NUWID]AND 511,1)!=0THEN
    SPVAR SPVAR(WIN_SP[NUWID]AND 511,1),0,0
    SPCLR SPVAR(WIN_SP[NUWID]AND 511,1)
   ENDIF
@@ -2366,17 +2390,6 @@
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
  ENDIF
- IF WIN_GROUP[NUWID]THEN
-  VAR G=WIN_GROUP[NUWID]
-  WHILE G
-   VAR GN=WIN_GNEXT[G]
-   VAR ERR=DeleteWindow(NUWIDToWND(G))
-'   IF ERR THEN RETURN ERR
-   G=GN
-  WEND
-  WIN_GROUP[NUWID]=0
- ENDIF
- VOID DeleteWindowTimers(NUWIDToWND(NUWID))
  RETURN 0
 END
 
@@ -2393,7 +2406,7 @@
   ELSE
    SPSHOW WIN_SP[NUWID]AND 511
   ENDIF
-  SPOFS WIN_SP[NUWID]AND 511,,,-255+I
+  SPOFS WIN_SP[NUWID]AND 511,,,MAX(-255,-255+I)
 '  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
   NUWID=WIN_NEXT[NUWID]
  WEND
@@ -2437,14 +2450,29 @@
  RETURN FALSE
 END
 COMMON DEF FrontWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK,E
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_TOOL THEN
+  E=FrontWindow(GetWindowGroupOwner(WND))
+  IF!E THEN E=_FrontWindow(WND)
+ ELSE
+  E=_FrontWindow(WND)
+ ENDIF
+ RETURN E
+END
+DEF _FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  VAR N,C=WIN_NEXT[NUWID]
+ VAR MOVEF2'TOOL WINDOW
  IF C THEN
   VAR MOVEF=FALSE
   WHILE 1
    IF!WIN_NEXT[C]THEN 
-    IF WIN_NEXT[C]==NUWID THEN BREAK
+    IF (WIN_STYLE[C]AND WIN_STYLE_TOOL)&&WIN_GPARENT[C]==NUWID THEN
+     MOVEF=FALSE
+     MOVEF2=TRUE
+     BREAK
+    ENDIF
     VAR NUP=WIN_PREV[NUWID]
     VAR NUN=WIN_NEXT[NUWID]
     IF NUP THEN
@@ -2471,15 +2499,17 @@
   
  ENDIF
  VAR G=WIN_GROUP[NUWID],E
- VAR HASMODAL
- WHILE G
-  IF WIN_STYLE[G]AND WIN_STYLE_TOOL THEN
-   IF!_IsFrontWindow(NUWID,G)THEN
-    E=FrontWindow(NUWIDToWND(G))
+ IF!MOVEF2 THEN
+  WHILE G
+   IF WIN_STYLE[G]AND WIN_STYLE_TOOL THEN
+    IF!_IsFrontWindow(NUWID,G)THEN
+     E=_FrontWindow(NUWIDToWND(G))
+    ENDIF
    ENDIF
-  ENDIF
-  G=WIN_GNEXT[G]
- WEND
+   G=WIN_GNEXT[G]
+  WEND
+ ENDIF
+ VAR HASMODAL
  G=WIN_GROUP[NUWID]
  WHILE G
   IF WIN_STYLE[G]AND WIN_STYLE_MODAL THEN
@@ -2703,7 +2733,7 @@
  WIN_HIDE[NUWID]=TRUE
  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_HIDE
  IF WIN_SP[NUWID]THEN
-  OTW_SPHIDE NUWID 
+  OTW_SPHIDE NUWID
  ENDIF
  HideChildWindow NUWID
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
@@ -3446,11 +3476,13 @@
  PAGE2=OTW_DDRAWPAGE
 END
 COMMON DEF GEndDirect(WND)
- IF!CheckWindow(WND)THEN RETURN
- VAR NUWID=WND AND NUWIDMASK
- WIN_BEGIN[NUWID]=TRUE
- GB_WND=NUWID
- VAR E=GEndWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ 'VAR NUWID=WND AND NUWIDMASK
+ 'WIN_BEGIN[NUWID]=TRUE
+ 'GB_WND=NUWID
+ 'VAR E=GEndWindow(WND)
+ GPAGE OTW_SP,OTW_DP
+ GCLIP 1,0,0,399,239
  RETURN 0
 END
 COMMON DEF GCopyDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
@@ -3785,6 +3817,19 @@
   ENDIF
  WEND
 END
+COMMON DEF GPRINTPWindow WND,X,Y,STR$,COL
+ INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
+ INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
+ IF COL>=0THEN RETURN
+ VAR I
+ FOR I=0TO LEN(STR$)-1
+  VAR S=ASC(STR$[I])
+  GPUTCHR X,Y,S,1,1,COL
+  IF S<128THEN X=X+6 ELSE X=X+8
+  
+ NEXT
+ RETURN
+END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
  INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
  INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -4718,6 +4763,7 @@
  IF X<=0||Y<=0||X>=W||Y>=H THEN RETURN
  VAR V=GetWindowVar(WND,3)
  VAR Y1=1,Y2=1,S=GetWindowVar(WND,7),F,GB
+ VAR SELFLG
  WHILE V
   INC Y2,8
   IF Y>=Y1&&Y<Y2 THEN
@@ -4727,6 +4773,7 @@
    GPRINTWindow WND,1,Y1,LISTSTR$[V],GetSelectionTextColor()
    F=1
    GB=1
+   SELFLG=TRUE
    IF!S THEN BREAK
   ELSE IF V==S THEN
    IF!GB&&GBeginWindow(WND)THEN RETURN
@@ -4747,11 +4794,14 @@
   VOID GEndWindow(WND)
  ENDIF
  IF T==CTL_LDBLCLKHANDLER THEN
-  VOID SendNotifWindow(GetOwnerWindow(WND),WND,0)
+  IF SELFLG THEN VOID SendNotifWindow(GetOwnerWindow(WND),WND,0)
  ELSEIF GetWindowVar(WND,6)THEN
-  VOID SendNotifWindow(GetOwnerWindow(WND),WND,1)
+  LISTBOX_SendChItemEvent WND
  ENDIF
 END
+DEF LISTBOX_SendChItemEvent WND
+ VOID SendNotifWindow(GetOwnerWindow(WND),WND,ListBoxChItem())
+END
 COMMON DEF ListBoxChItem()
  RETURN 1
 END
@@ -4767,7 +4817,9 @@
 DEF ClearListBox WND
  VAR L=GetWindowVar(WND,1)
  IF!L THEN RETURN
+ VAR NULL$
  WHILE LISTSTRNEXT[L]
+  LISTSTR$[L]=NULL$
   L=LISTSTRNEXT[L]
  WEND
  LISTSTRNEXT[L]=LISTSTR_FREE
@@ -4877,6 +4929,7 @@
    SetWindowVar WND,7,S
    LISTBOX_SEL WND
    ListBoxPainter WND,CTL,T,0,0
+   LISTBOX_SendChItemEvent WND
   ENDIF
  ENDIF
  IF BTN==#DOWN THEN
@@ -4885,6 +4938,7 @@
    SetWindowVar WND,7,S
    LISTBOX_SEL WND
    ListBoxPainter WND,CTL,T,0,0
+   LISTBOX_SendChItemEvent WND
   ENDIF
  ENDIF
 END
@@ -5062,7 +5116,7 @@
  VOID RepaintWindow(W)
 END
 COMMON DEF SetScrollBarPosition W,POS
- IF POS<0||POS>=GetScrollBarSize(W)THEN RETURN
+ IF POS<0||POS>GetScrollBarSize(W)THEN RETURN
  SetWindowVar W,2,POS
  VOID RepaintWindow(W)
 END
@@ -5370,6 +5424,42 @@
  IF NUWID!=(WND AND NUWIDMASK)THEN RETURN 0
  RETURN GSPOIT(X,Y)
 END
+DEF XORHLINE Y,X1,X2
+ IF X1>X2 THEN SWAP X1,X2
+ REPEAT
+  VAR R,G,B
+  RGBREAD GSPOIT(X1,Y)OUT R,G,B
+  GPSET X1,Y,RGB(R XOR 255,G XOR 255,B XOR 255)
+  X1=X1+1
+ UNTIL X1>X2
+END
+DEF XORVLINE X,Y1,Y2
+ IF Y1>Y2 THEN SWAP Y1,Y2
+ REPEAT
+  VAR R,G,B
+  RGBREAD GSPOIT(X,Y1)OUT R,G,B
+  GPSET X,Y1,RGB(R XOR 255,G XOR 255,B XOR 255)
+  Y1=Y1+1
+ UNTIL Y1>Y2
+END
+DEF XORGBOX X1,Y1,X2,Y2
+ IF X1>X2 THEN SWAP X1,X2
+ IF Y1>Y2 THEN SWAP Y1,Y2
+ XORGBOX2 X1,Y1,X2,Y2
+ XORGBOX2 X1+1,Y1+1,X2-1,Y2-1
+END
+DEF XORGBOX2 X1,Y1,X2,Y2
+ XORHLINE Y1,X1,X2
+ IF Y1==Y2 THEN RETURN
+ XORHLINE Y2,X1,X2
+ IF Y1>Y2 THEN SWAP Y1,Y2
+ IF Y1+1>=Y2 THEN RETURN
+ XORVLINE X1,Y1+1,Y2-1
+ XORVLINE X2,Y1+1,Y2-1
+END
+DEF OTW_XORWindow NUWID
+ XORGBOX WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]
+END
 VAR OTW_MOUSESIZE
 VAR OTW_MOUSE_HOMEX
 VAR OTW_MOUSE_HOMEY
@@ -5579,6 +5669,9 @@
 COMMON DEF S_OTW S
  BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
 END
+COMMON DEF GetWinVer$()
+ RETURN "5.0 rev47"
+END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
 ' KEY 1,"KEY OFF"
@@ -5594,7 +5687,7 @@
   PrintConsole "=================="+LF$()
   PrintConsole "OTYA WINDOW SYSTEM"+LF$()
   PrintConsole "=================="+LF$()
-  PrintConsole "Ver 5.0-26"+LF$()
+  PrintConsole "Ver "+GetWinVer$()+LF$()
 ' BEEP 94,-1000
   VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77+"V10"'34
   M1$=":1"+G$+"T140<<C8 C8&C2."
@@ -5809,7 +5902,6 @@
   
   '=====R=====
   IF BTN AND OTW_RMOUSEDWN THEN
-   CAPTURE_WND=0
    E=FocusWindow(NUWIDToWND(NUWID AND 32767))
    F=MAINCNT
    IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
@@ -5842,7 +5934,6 @@
   ENDIF
 
   IF BTN AND OTW_RMOUSEUP THEN
-    CAPTURE_WND=0
     IF NUWID AND WIN_FRAMEFLG THEN
      E=RMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
      E=RMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
@@ -5861,6 +5952,10 @@
    E=MouseMoveWindow(CAPTURE_WND AND NUWIDMASK)
   ELSE
   IF OLDMOVEMOUSEWINDOW!=NUWID THEN
+   IF OTW_INSPECTWIN&&(OLDMOVEMOUSEWINDOW AND 32767)!=(NUWID AND 32767) THEN
+    OTW_XORWindow NUWID AND 32767
+    OTW_XORWindow OLDMOVEMOUSEWINDOW AND 32767
+   ENDIF
    IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
     E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
    ELSE
@@ -6082,7 +6177,7 @@
  IF E THEN RETURN
  VAR S$="otya window"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,0,S$,RGB(0,0,0)
- S$="system 5.0"
+ S$="system "+GetWinVer$()
  GPRINTWindow WND,(144-LEN(S$)*8)/2,8,S$,RGB(0,0,0)
  GLOADWindow WND,1,1,16,16,OTWLOGO,1,0
  S$="Logo designed by"
@@ -6244,35 +6339,53 @@
   GPRINTWindowCC WCLOCKWND,0,56,TIME$,1
   E=GEndWindow(WCLOCKWND)
  END
-DEF DUMP_WND
- DUMP_WND2 WIN_ROOTWND AND NUWIDMASK,""
+'DEBUG
+COMMON DEF DUMP_WND
+ COLOR #TGRAY,#TBLACK
+ LOCATE ,,-256
+ WINLIST_Add2 GetRootWindow(),"",CHR$(0)
+ COLOR #TGRAY,0
+ LOCATE ,,0
+'DUMP_WND2 WIN_ROOTWND AND NUWIDMASK,""
 END
-DEF DUMP_WND2 NUW,I$
- IF!NUW THEN RETURN
- ?I$;WIN_NAME$[NUW],NUW,WIN_WID[NUW],CTL_NAME$[WIN_CTL[NUW]AND 4095],WIN_CTL[NUW]AND 4095
-' IF CSRY==29 THEN VAR II$INPUT "";II$
- IF LEN(I$) THEN
-  VAR NM$=""
-  IF WIN_NEXT[NUW] THEN
-   NM$=""
-  ELSE
-   NM$=""
+DEF WINLIST_Add2 WND,P$,CNT$
+ WHILE WND
+  VAR C=GetChildWindow(WND)
+  VAR N=GetNextWindow(WND)
+  VAR CNT=ASC(CNT$)
+  IF CNT>=29THEN'SCREEN HEIGHT
+   ?"=== Press ENTER ===";
+   WHILE INKEY$()!=CHR$(13)VSYNC WEND
+   LOCATE 0,
+   ?CHR$(0)*LEN("=== Press ENTER ===");
+   LOCATE 0,
+   CNT=0
   ENDIF
-  IF WIN_NEXT[WIN_PARENT[NUW]]THEN
-   NM$=""+NM$
+  VAR BUF$
+  IF N THEN
+   BUF$=P$+""
   ELSE
-   NM$=" "+NM$
+   BUF$=P$+""
   ENDIF
-  DUMP_WND2 WIN_CHILD[NUW],MID$(I$,0,LEN(I$)-1)+NM$
- ELSE
-  IF WIN_CHILD[NUW]THEN
-   DUMP_WND2 WIN_CHILD[NUW],""
+  COLOR #TGRAY
+  IF N&&WND!=GetPrevWindow(N)THEN
+   COLOR #TMAROON
+   PUSH BUF$,"!broken"
+  ENDIF
+  PUSH BUF$,STR$(WND AND NUWIDMASK)
+  PUSH BUF$,","
+  PUSH BUF$,GetControlName$(GetControl(WND))+":"+GetWindowName$(WND)
+  ?BUF$
+  CNT$[0]=CHR$(CNT+LEN(BUF$) DIV 50+1)
+  IF N THEN
+   IF C THEN WINLIST_Add2 C,P$+"",CNT$
   ELSE
-   DUMP_WND2 WIN_CHILD[NUW],""
+   IF C THEN WINLIST_Add2 C,P$+" ",CNT$
   ENDIF
- ENDIF
- DUMP_WND2 WIN_NEXT[NUW],I$
+  WND=N
+ WEND
 END
+
 DEF UpdateButton()
  VAR B=BUTTON()
  IF!IM_KBDMODE THEN
@@ -6309,19 +6422,29 @@
  OTW_MOUSEX#=OTW_MOUSEX
  OTW_MOUSEY#=OTW_MOUSEY
 END
+VAR OTW_MOUSE_MODE
+
+COMMON DEF SetMouseMode MODE
+ OTW_MOUSE_MODE=MODE
+END
 COMMON DEF UpdateMouse
  VAR S,X,Y
  TOUCH OUT S,X,Y
  IF OTW_MOUSEOLDST&&S THEN
-  OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
-  OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
-   IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
-   IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
-   IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2
-   IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
-   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
-   OTW_MOUSEX#=OTW_MOUSEX
-   OTW_MOUSEY#=OTW_MOUSEY
+  IF OTW_MOUSE_MODE THEN
+   OTW_MOUSEX=X/(320/400)
+   OTW_MOUSEY=Y
+  ELSE
+   OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
+   OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
+  ENDIF
+  IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
+  IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
+  IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2
+  IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
+  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
+  OTW_MOUSEX#=OTW_MOUSEX
+  OTW_MOUSEY#=OTW_MOUSEY
  ELSE
   IF S&&X>=OTW_KX&&X<OTW_KX2&&Y>=OTW_KY&&Y<OTW_KY2 THEN
    BEEP 
@@ -6384,21 +6507,21 @@
 COMMON DEF CREATEOTW
  ?"OTW Develop Tool"
  VAR K$
- INC K$,"VAR _1CTL"+LF$()
- INC K$,"COMMON DEF I__1"+LF$()
- INC K$," IF!CHKCALL(_QIsWinRunning_Q)||!IsWinRunning()THEN"+LF$()
- INC K$,"  PrintConsole _QRequire window system_Q+LF$()"+LF$()
+ INC K$,"VAR \1CTL"+LF$()
+ INC K$,"COMMON DEF I_\1"+LF$()
+ INC K$," IF!CHKCALL(\QIsWinRunning\Q)||!IsWinRunning()THEN"+LF$()
+ INC K$,"  PrintConsole \QRequire window system\Q+LF$()"+LF$()
  INC K$,"  ExitProcess 1"+LF$()
  INC K$,"  RETURN"+LF$()
  INC K$," ENDIF"+LF$()
  INC K$," VAR WND,E"+LF$()
- INC K$," IF!_1CTL THEN"+LF$()
- INC K$,"  ExtendControl _Q_2_Q,GetWindowControl() OUT _1CTL,E"+LF$()
+ INC K$," IF!\1CTL THEN"+LF$()
+ INC K$,"  ExtendControl \Q\2\Q,GetWindowControl() OUT \1CTL,E"+LF$()
  INC K$," ENDIF"+LF$()
- INC K$," NewTopLevelWindow _1CTL,_Q_2_Q,_W,_H OUT WND,E"+LF$()
+ INC K$," NewTopLevelWindow \1CTL,\Q\2\Q,\W,\H OUT WND,E"+LF$()
  INC K$," SetProcessVar WND"+LF$()
  INC K$,"END"+LF$()
- INC K$,"COMMON DEF L__1"+LF$()
+ INC K$,"COMMON DEF L_\1"+LF$()
  INC K$," IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
  INC K$,"END
  VAR _1$
@@ -6408,11 +6531,11 @@
  LINPUT "WindowName?";_2$
  INPUT "Width";_W
  INPUT "Height";_H
- K$=ReplaceStr$(K$,"_1",_1$)
- K$=ReplaceStr$(K$,"_2",_2$)
- K$=ReplaceStr$(K$,"_W",STR$(_W))
- K$=ReplaceStr$(K$,"_H",STR$(_H))
- K$=ReplaceStr$(K$,"_Q",_Q$)
+ K$=ReplaceStr$(K$,"\1",_1$)
+ K$=ReplaceStr$(K$,"\2",_2$)
+ K$=ReplaceStr$(K$,"\W",STR$(_W))
+ K$=ReplaceStr$(K$,"\H",STR$(_H))
+ K$=ReplaceStr$(K$,"\Q",_Q$)
  VAR SLOT=3
  CLIPBOARD K$
 END
@@ -6594,7 +6717,8 @@
  IF P THEN
   TXTBOXEX_NEXT[P]=N
  ENDIF
- TXTBOXEX_VAL$[L]=""
+ VAR NULL$
+ TXTBOXEX_VAL$[L]=NULL$
  TXTBOXEX_NEXT[L]=TXTBOXEX_FREE
  TXTBOXEX_FREE=L
  IF P THEN RETURN P
@@ -8023,6 +8147,8 @@
  IF OTYDOC_TABLEDATA[L]THEN
   'TODO:delete table
  ENDIF
+ VAR NULL$
+ OTYDOC_VAL$[L]=NULL$
  VAR N=OTYDOC_NEXT[L]
  VAR P=OTYDOC_PREV[L]
  IF N THEN
@@ -9669,6 +9795,17 @@
  OTYDOC_AddLine D,-DL
 END
 
+DEF OTYDOC_GetNextTextPos(V$,I)
+ FOR I=I TO LEN(V$)-1
+  VAR C=ASC(V$[I])
+  IF C==&HB10BTHEN
+   I=INSTR(I,V$,CHR$(&HB10C))
+   CONTINUE
+  ENDIF
+  BREAK
+ NEXT
+ RETURN I
+END
 DEF OTYDOC_GetStyle V$,I,E,TYPE OUT S$
  VAR L=LEN(V$)-1
  S$=""
@@ -10170,7 +10307,7 @@
  VAR TYPE:FOR TYPE=0TO 2
   OTYDOC_RemoveAllStyle L$,0,LEN(L$)
  NEXT
- PUSH O$,L$+LF$()
+ PUSH O$,L$'+LF$()
 END
 'if ER=-1, ER=Row size
 'if EC=-1, EC=Col size
@@ -10245,9 +10382,11 @@
  VAR D=OTYDOC_GetData(WND)
  VAR C=OTYDOC_CurLine[D]
  VAR I,J,LF$=LF$()
+ OTYDOC_GetNextTextPos OTYDOC_VAL$[C],OTYDOC_CX[D] OUT OTYDOC_CX[D]
  VAR LST$=MID$(OTYDOC_VAL$[C],OTYDOC_CX[D],LEN(OTYDOC_VAL$[C]))
  VAR F$=LEFT$(OTYDOC_VAL$[C],OTYDOC_CX[D])
  VAR S$,TYPE,ST$
+ 
  FOR TYPE=0TO 2
   OTYDOC_GetStyle F$,0,LEN(F$),TYPE OUT S$
   PUSH ST$,S$
@@ -10455,6 +10594,7 @@
  ELSE
  OTYDOC_SERIALIZE S,SX,LEN(OTYDOC_VAL$[S]),O$
  OTYDOC_PlainText S,SX,LEN(OTYDOC_VAL$[S]),P$
+ PUSH P$,LF$()
  S=OTYDOC_NEXT[S]
  WHILE 1
   VAR NXT=OTYDOC_NEXT[S]
@@ -10466,6 +10606,7 @@
   ENDIF
   OTYDOC_SERIALIZE S,0,LEN(OTYDOC_VAL$[S]),O$
   OTYDOC_PlainText S,0,LEN(OTYDOC_VAL$[S]),P$
+  PUSH P$,LF$()
   S=NXT
  WEND
  ENDIF
@@ -11015,7 +11156,7 @@
  VAR WI=GetWindowWidth(WND)
  VAR S$="OTW Filer"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,0,LEN(S$)*8,7,WND,0 OUT W,E
- S$="Ver 5.0"
+ S$="Ver "+GetWinVer$()
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,8,LEN(S$)*8,7,WND,0 OUT W,E
  S$="© 2011-2017 otya"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,16,LEN(S$)*8,7,WND,0 OUT W,E
@@ -11353,7 +11494,7 @@
    OTYFIL_NEWFOL WND,1
    RETURN
   ENDIF
-  VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
+  VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128+15,40,WND)
   RETURN
  ENDIF
  OTYFILPAINT WND,CTL,T,0,0
@@ -11573,28 +11714,64 @@
 END
 'Init common dialogs
 VAR CTL_FILDIA
+VAR FILDIA_WV_LSTBOX
+VAR FILDIA_WV_ISSAVE
+VAR FILDIA_WV_TXTBOX
+VAR FILDIA_WV_ID
+VAR FILDIA_WV_DRPDWN
+
+
 DEF OTW_FileDialog
  VAR E
  ExtendControl "FileDialog",GetWindowControl()OUT CTL_FILDIA,E
  IF E THEN RETURN
  E=SetControlCreateHandler(CTL_FILDIA,"FileDialogCreate")
  E=SetControlNotifHandler(CTL_FILDIA,"FileDialogNotif")
+ FILDIA_WV_LSTBOX=0
+ FILDIA_WV_ISSAVE=1
+ FILDIA_WV_TXTBOX=2
+ FILDIA_WV_ID=3
+ FILDIA_WV_DRPDWN=4
 END
+COMMON DEF DeleteFileDialogInfo(FDINFO)
+ RETURN DeleteWindow(FDINFO)
+END
+COMMON DEF GetFileDialogInfoFile$(FDINFO)
+ VAR WND=FDINFO
+ VAR ISSAVE=GetWindowVar(WND,FILDIA_WV_ISSAVE)
+ VAR SEL$
+ IF ISSAVE THEN
+  SEL$=GetWindowName$(GetWindowVar(WND,FILDIA_WV_TXTBOX))
+  IF!LEN(SEL$)THEN RETURN""
+  IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
+   SEL$="*"+SEL$
+  ENDIF
+ ELSE
+  SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
+  IF!LEN(SEL$)THEN RETURN""
+ ENDIF
+ VAR FILE$=MID$(SEL$,1,LEN(SEL$))
+ RETURN FILE$
+END
+COMMON DEF GetFileDialogInfoType$(FDINFO)
+ RETURN GetListBoxSelectedText$(GetDropDownListBox(GetWindowVar(FDINFO,FILDIA_WV_DRPDWN)))
+END
 COMMON DEF FileDialogNotif WND,C,T,W,__
- VAR ISSAVE=GetWindowVar(WND,1)
- IF ISSAVE&&__==ListBoxChItem()THEN
+ VAR ISSAVE=GetWindowVar(WND,FILDIA_WV_ISSAVE)
+ VAR DRPDWN=GetWindowVar(WND,FILDIA_WV_DRPDWN)
+ IF W==GetWindowVar(WND,FILDIA_WV_LSTBOX)&&ISSAVE&&__==ListBoxChItem()THEN
   VAR L$=GetListBoxSelectedText$(W)
   IF !LEN(L$)||L$[0]!="/"THEN
-   SetWindowName GetWindowVar(WND,2),L$
-   VOID RepaintWindow(GetWindowVar(WND,2))
+   SetWindowName GetWindowVar(WND,FILDIA_WV_TXTBOX),L$
+   VOID RepaintWindow(GetWindowVar(WND,FILDIA_WV_TXTBOX))
    RETURN
   ENDIF
  ENDIF
- IF GetWindowVar(WND,0)==W&&__==ListBoxChItem()THEN RETURN
+ IF GetWindowVar(WND,FILDIA_WV_LSTBOX)==W&&__==ListBoxChItem()THEN RETURN
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$
   IF ISSAVE&&GetWindowName$(W)=="OK"&&__!=ListBoxChItem() THEN
-   SEL$=GetWindowName$(GetWindowVar(WND,2))
+   SEL$=GetWindowName$(GetWindowVar(WND,FILDIA_WV_TXTBOX))
    IF!LEN(SEL$)THEN RETURN
    IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
     SEL$="*"+SEL$
@@ -11608,9 +11785,14 @@
    INITFILEDIALOGLISTBOX WND
    RETURN
   ENDIF
-  VAR ID=GetWindowVar(WND,3)
-  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,MID$(SEL$,1,LEN(SEL$)))
-  VOID DeleteWindow(WND)
+  VAR FILE$=MID$(SEL$,1,LEN(SEL$))
+  VAR ID=GetWindowVar(WND,FILDIA_WV_ID)
+  IF DRPDWN THEN
+   VOID SendNotifWindow(GetWindowGroupOwner(WND),ID,WND)
+  ELSE
+   VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,FILE$)
+   VOID DeleteWindow(WND)
+  ENDIF
  ELSE
   IF GetWindowName$(W)=="Cancel"THEN
    VOID DeleteWindow(WND)
@@ -11618,7 +11800,7 @@
  ENDIF
 END
 DEF INITFILEDIALOGLISTBOX WND
- VAR L=GetWindowVar(WND,0)'LISTBOX WND
+ VAR L=GetWindowVar(WND,FILDIA_WV_LSTBOX)'LISTBOX WND
  DIM F$[0]
  VAR E
  GetFiles "" OUT F$,E
@@ -11639,7 +11821,8 @@
  VAR E,L
  NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
 
- SetWindowVar WND,0,L
+ VAR HEIGHT=GetWindowHeight(WND)
+ SetWindowVar WND,FILDIA_WV_LSTBOX,L
  IF LIST THEN
   IF 0THEN DIM LIST$[0]
   NewWindow GetDropDownListControl(),"L",0,65,116,GetDropDownListHeight(),WND,0 OUT L,E
@@ -11647,18 +11830,20 @@
   LIST$=GetSBArray(LIST)
   AddArrayListBoxItem LB,LIST$
   SelectListBoxItem LB,0
+  SetWindowVar WND,FILDIA_WV_DRPDWN,L
  ENDIF
  INITFILEDIALOGLISTBOX WND
  VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
  SetWindowVar WND,1,F
  NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
  NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
+ 'SAVE DIALOG
  IF F THEN
-  NewWindow GetTextBoxControl(),"",0,65,170,9,WND,0 OUT L,E
-  SetWindowVar WND,2,L
+  NewWindow GetTextBoxControl(),"",0,HEIGHT-9,170,9,WND,0 OUT L,E
+  SetWindowVar WND,FILDIA_WV_TXTBOX,L
   SetChItemListBoxNotif WND,F
  ENDIF
- SetWindowVar WND,3,ID
+ SetWindowVar WND,FILDIA_WV_ID,ID
 END
 COMMON DEF SaveFileDialog(OWNER,TYPE$,ID)
  IF!CTL_FILDIA THEN
@@ -11680,9 +11865,6 @@
  NewDialogBoxWithArg CTL_FILDIA,"Open "+TYPE$,170,64+10,OWNER,TRUE,ID,0OUT ,E
  RETURN E
 END
-'[0]="All:*"
-'[1]="GRP:*.GRP"
-'[2]="GRPF:*.GRPF"
 COMMON DEF OpenFileDialogEx OWNER,TYPE$,ID,LIST$[] OUT E
  IF!CTL_FILDIA THEN
   OTW_FileDialog
@@ -11696,6 +11878,19 @@
  FreeSBArray ARY
  'GetWindowVar 
 END
+COMMON DEF SaveFileDialogEx(OWNER,TYPE$,ID,LIST$)
+ IF!CTL_FILDIA THEN
+  OTW_FileDialog
+ ENDIF
+ IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
+ VAR TITLE$=TYPE$
+ VAR E
+ VAR ARY=AllocSBArray()
+ SetSBArray ARY,LIST$
+ NewDialogBoxWithArg CTL_FILDIA,"Save "+TYPE$,170,74+GetDropDownListHeight()+1,OWNER,TRUE,ID,ARY OUT ,E
+ FreeSBArray ARY
+ RETURN E
+END
 COMMON DEF FindWindowByControl(WND,CTL,EXTEND)
  WND=GetChildWindow(WND)
  WHILE WND
@@ -12220,6 +12415,7 @@
  IF ERR THEN RETURN
  VAR I
  FOR I=0TO LEN(DIR$)-1
+  UpdateMouse
   IF DIR$[I]=="/.."THEN CONTINUE
   VAR I$=MID$(DIR$[I],1,LEN(DIR$[I]))
   VAR PATH$=CombinePath$(PRG$,I$)
@@ -12277,7 +12473,7 @@
  SetProcessVar WND
  VAR TW
  VAR TSX=24
- VAR TSKW=(SW-9-TSX) DIV 4,TC,TCM=(SW-9-TSX) DIV TSKW
+ VAR TSKW=(SW-9-TSX) DIV 8,TC,TCM=(SW-9-TSX) DIV TSKW
  TB_TASKLIST$=NewArray$(TCM)
  TB_TASKLIST_WND=NewArray(TCM)
  TB_TASKLIST_TW=NewArray(TCM)
@@ -13345,13 +13541,18 @@
   NEXT
   RETURN 0
  ENDIF
- RIM_CONVF=TRUE
- IF 0 THEN DIM A$[0],B$[0]
  IF!OTYIME_LOADED THEN
+  IF!CHKCALL("OTYIME_INIT")THEN
+   VOID MessageBox(GetRootWindow(),"IM","OTYIME is not loaded.",MessageBoxOK()OR MessageBoxError())
+   
+   RETURN 0
+  ENDIF
   OTYIME_INIT
   CLS
   OTYIME_LOADED=TRUE
  ENDIF
+ RIM_CONVF=TRUE
+ IF 0 THEN DIM A$[0],B$[0]
  'OTYIME_K2K RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
   KKC2 RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
 ' B$=NewArray$(LEN(A$))
@@ -13551,8 +13752,8 @@
  
  SetProcessVar IM
  KEY 1,"KEY OFF"
- 
- EXEC 3
+ USE 3
+ 'EXEC 3
 END
 COMMON DEF L_RIM
  VAR X,Y,MMM
@@ -13563,15 +13764,19 @@
   IF RIM_MODE==1 THEN
    SetKeyboardMode!TRUE
    KEY 1,"KEY ON"
+   SYSBEEP=TRUE
   ELSEIF RIM_MODE==2THEN
    SetKeyboardMode!TRUE
    KEY 1,"かな ON"
+   SYSBEEP=TRUE
   ELSEIF RIM_MODE==3THEN
    SetKeyboardMode!TRUE
    KEY 1,"カナ ON"
+   SYSBEEP=TRUE
   ELSE
    SetKeyboardMode TRUE
    KEY 1,"KEY OFF"
+   SYSBEEP=FALSE
   ENDIF
   BEEP 9
  ENDIF
@@ -13924,6 +14129,7 @@
    TC=GetSelectionTextColor()
   ENDIF
   GLOADImage IX+ICONSX,IY,ICON[I],FALSE
+ 'GLOADImagePalette IX+ICONSX,IY,ICON[I],ODEPAL,FALSE
   GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$))*8)DIV 2,IY+16,MID$(NAME$,0,ITW),TC
   IF LEN(NAME$)>ITW THEN
    GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW)*8)DIV 2,IY+24,MID$(NAME$,ITW,ITW),TC
@@ -13962,9 +14168,11 @@
  FOR I=0TO LEN(DIR$)-1
   ICONS[I]=ODE_IMAGE_TXT
   
+  UpdateMouse
   IF ToUpper$(GetFileExtension$(DIR$[I]))=="LNK"THEN
    VAR F$
    LoadFile CombinePath$(D$,MID$(DIR$[I],1,LEN(DIR$[I]))) OUT F$,ERR
+   UpdateMouse
    IF ERR THEN CONTINUE
    IF 0THEN DIM K$[0],V$[0]
    LoadConfigFile F$ OUT K$,V$
@@ -13972,6 +14180,7 @@
    IF I16==-1THEN CONTINUE
    VAR IMG
    LoadImage V$[I16],16,16 OUT IMG,ERR
+   UpdateMouse
    IF ERR THEN CONTINUE
    ICONS[I]=IMG
   ELSEIF DIR$[I][0]=="*"THEN
@@ -14003,10 +14212,10 @@
   IF 0THEN
    VAR I
    ODEPAL=NewArray(65536)
-   FOR I=0TO 65535
-    VAR R=((I>>11AND 31)<<3)*0
-    VAR G=((I>>6AND 31)<<3)*0
-    VAR B=((I>>1AND 31)<<3)*1
+   FOR I=1TO 65535 STEP 2
+    VAR R=((I>>11AND 31)<<3+0)XOR 255'DIV 2
+    VAR G=((I>>6AND 31)<<3+0)XOR 255'DIV 2
+    VAR B=(((I>>1AND 31)<<3))XOR 255'+255)DIV 2
     VAR A=(I AND 1)*255
     ODEPAL[I]=RGB(A,R,G,B)'R>>3<<11OR G>>3<<6OR B>>3<<1OR !!A
    NEXT
@@ -14097,11 +14306,6 @@
    M=MILLISEC+5000
    SetWindowVar WND,0,M
   ENDIF
-  IF M>=MILLISEC THEN
-   VOID RepaintWindow(WND)
-  ELSE
-   SetWindowVar WND,2,FALSE
-  ENDIF
   SetWindowVar WND,1,GetWindowVar(WND,1)+1
   IF GBeginWindow(WND)THEN RETURN
    GFILLWindow WND,RND(W+1),RND(H+1),RND(W+1),RND(H+1),RGB(RND(32)*8,RND(32)*8,RND(32)*8)
@@ -14134,7 +14338,15 @@
  SetProcessVar WND
 END
 COMMON DEF L_OTWBENCH
- IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+ VAR WND=GetProcessVar()
+  VAR M=GetWindowVar(WND,0)
+  IF M>=MILLISEC THEN
+   VOID RepaintWindow(WND)
+  ELSE
+   VOID RepaintWindow(WND)
+   SetWindowVar WND,2,FALSE
+  ENDIF
+ IF UpdateWindow(WND)THEN ExitProcess 1
 END
 VAR OTWCLOCKCTL
 COMMON DEF OTWCLOCKPAINT WND,CTL,TYP,XY,WH_
@@ -14195,6 +14407,8 @@
 
 VAR PAINTCTL
 VAR PAINTCANVASCTL
+VAR PAINTIMPORTDLGCTL
+
 VAR PAINT_IMAGE
 VAR PAINT_WND
 VAR PAINT_CANVAS
@@ -14258,6 +14472,10 @@
 VAR PAINT_MENU_ZOOMIN
 VAR PAINT_MENU_ZOOMOUT
 VAR PAINT_MENU_HAND
+VAR PAINT_MENU_PAINT
+VAR PAINT_MENU_SPOIT
+VAR PAINT_MENU_ABS
+VAR PAINT_MENU_REL
 
 DEF PAINT_GET WND OUT A
  GetSBArray GetWindowVar(WND,0) OUT A
@@ -14282,6 +14500,19 @@
   VOID RepaintWindow(WND)
  ENDIF
 END
+DEF PAINTUpdateScrollBar A
+ VAR WND=A[PAINT_CANVAS]
+ VAR SW,SH
+ SW=GetWindowWidth(WND)
+ SH=GetWindowHeight(WND)
+ VAR Z=A[PAINT_ZOOM]
+ VAR Z#=(Z/PAINT_ZOOM_BASE)
+ VAR HIMG=A[PAINT_IMAGE]
+ VAR IW=GetImageWidth(HIMG)
+ VAR IH=GetImageHeight(HIMG)
+ SetScrollBarSize A[PAINT_SCRH],MAX(0,(IW-(SW-GetScrollBarWidth()) DIV Z#))
+ SetScrollBarSize A[PAINT_SCRV],MAX(0,IH-(SH-GetScrollBarHeight()) DIV Z#)
+END
 COMMON DEF PAINTCANVASPAINT WND,CTL,TYP,XY,WH
  IF 0THEN DIM A[0]
  PAINT_GET WND OUT A
@@ -14299,13 +14530,12 @@
   W=SW
   H=SH
  ENDIF
+ PAINTUpdateScrollBar A
  VAR Z=A[PAINT_ZOOM]
  VAR Z#=(Z/PAINT_ZOOM_BASE)
  VAR HIMG=A[PAINT_IMAGE]
  VAR IW=GetImageWidth(HIMG)
  VAR IH=GetImageHeight(HIMG)
- SetScrollBarSize A[PAINT_SCRH],MAX(0,(IW-(SW-GetScrollBarWidth()) DIV Z#))
- SetScrollBarSize A[PAINT_SCRV],MAX(0,IH-(SH-GetScrollBarHeight()) DIV Z#)
  VAR PT=A[PAINT_TOOL]
  IF Z!=PAINT_ZOOM_BASE THEN
   IF 0THEN DIM IMG[0]
@@ -14330,7 +14560,7 @@
 
   IX2=MIN(IX2,IW-1)
   IY2=MIN(IY2,IH-1)
-  GCLIP 1,MAX(0,-SX*Z#),MAX(0,-SY*Z#),MAX(0,MIN(511,(IW-SX-1)*Z#)),MAX(0,MIN(511,(IH-SY-1)*Z#))
+  GCLIP 1,MAX(0,-SX*Z#),MAX(0,-SY*Z#),MAX(0,MIN(511,(IW-SX)*Z#)),MAX(0,MIN(511,(IH-SY)*Z#))
   VAR GRX=8
   VAR GRY=8
   FOR IY=SY TO IY2
@@ -14371,6 +14601,10 @@
  IF CW==WND THEN
   IF PT==PAINT_MENU_LINE THEN
    GLINEWindow WND,A[PAINT_CMOUSEX]-SX*Z#,A[PAINT_CMOUSEY]-SY*Z#,A[PAINT_CMOUSEX2]-SX*Z#,A[PAINT_CMOUSEY2]-SY*Z#,A[PAINT_COLOR]
+  ELSEIF PT==PAINT_MENU_BOX THEN
+   GBOXWindow WND,A[PAINT_CMOUSEX]-SX*Z#,A[PAINT_CMOUSEY]-SY*Z#,A[PAINT_CMOUSEX2]-SX*Z#,A[PAINT_CMOUSEY2]-SY*Z#,A[PAINT_COLOR]
+  ELSEIF PT==PAINT_MENU_FILLEDBOX THEN
+   GFILLWindow WND,A[PAINT_CMOUSEX]-SX*Z#,A[PAINT_CMOUSEY]-SY*Z#,A[PAINT_CMOUSEX2]-SX*Z#,A[PAINT_CMOUSEY2]-SY*Z#,A[PAINT_COLOR]
   ENDIF
  ENDIF
  IF GEndWindow(WND)THEN @ERR
@@ -14396,7 +14630,7 @@
  VAR X=MX+SX
  VAR Y=MY+SY
  VAR PT=A[PAINT_TOOL]
- IF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER||PT==PAINT_MENU_LINE THEN
+ IF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER||PT==PAINT_MENU_LINE||PT==PAINT_MENU_BOX||PT==PAINT_MENU_FILLEDBOX THEN
   A[PAINT_CMOUSEX]=X
   A[PAINT_CMOUSEY]=Y
   VOID SetCapture(WND)
@@ -14409,8 +14643,31 @@
   A[PAINT_ZOOM]=MAX(A[PAINT_ZOOM]-PAINT_ZOOM_BASE*4,PAINT_ZOOM_BASE)
   VOID RepaintWindow(WND)
  ELSEIF PT==PAINT_MENU_ZOOMIN THEN
-  INC A[PAINT_ZOOM],PAINT_ZOOM_BASE*4
+  'CLICK ちゅうしん
+  VAR Z2=A[PAINT_ZOOM]+PAINT_ZOOM_BASE*4
+  VAR Z2#=Z2/PAINT_ZOOM_BASE
+  VAR W=(GetWindowWidth(WND)-GetScrollBarWidth())DIV Z2# DIV 2
+  VAR H=(GetWindowHeight(WND)-GetScrollBarHeight())DIV Z2# DIV 2
+  X=X DIV Z#
+  Y=Y DIV Z#
+  '?X,Y,W,H
+  A[PAINT_ZOOM]=Z2
+  PAINTUpdateScrollBar A
+  X=MIN(GetScrollBarSize(A[PAINT_SCRH]),MAX(0,X-W))
+  Y=MIN(GetScrollBarSize(A[PAINT_SCRV]),MAX(0,Y-H))
+  SetScrollBarPosition A[PAINT_SCRV],Y
+  SetScrollBarPosition A[PAINT_SCRH],X
+  
   VOID RepaintWindow(WND)
+ ELSEIF PT==PAINT_MENU_PAINT THEN
+  VOID GBeginDirect(WND)
+  GLOADImage 0,0,A[PAINT_IMAGE],1
+  GPAINT X DIV Z#,Y DIV Z#,A[PAINT_COLOR]
+  GSAVEImage 0,0,A[PAINT_IMAGE]',1
+  
+  VOID GEndDirect(WND)
+  VOID RepaintWindow(WND)
+  
  ENDIF
 END
 COMMON DEF PAINTCANVASLMU WND,CTL,TYP,X,Y
@@ -14425,7 +14682,7 @@
  X=X+SX
  Y=Y+SY
  VAR PT=A[PAINT_TOOL]
- IF PT==PAINT_MENU_LINE THEN
+ IF PT==PAINT_MENU_LINE||PT==PAINT_MENU_FILLEDBOX||PT==PAINT_MENU_BOX THEN
   IF 0THEN DIM I[0]
 
   GetImageArray(A[PAINT_IMAGE]) OUT I,
@@ -14433,10 +14690,146 @@
   VAR IH=GetImageHeight(A[PAINT_IMAGE])
  
   VAR C=A[PAINT_COLOR]
-  GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  IF PT==PAINT_MENU_LINE THEN
+   GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  ELSEIF PT==PAINT_MENU_FILLEDBOX THEN
+   GFILLArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  ELSEIF PT==PAINT_MENU_BOX THEN
+   GBOXArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  ENDIF
   PAINTCANVASPAINT WND,CTL,TYP,0,0
  ENDIF
 END
+COMMON DEF GFILLArray M,W,H,X,Y,X2,Y2,COL
+ IF X2<X THEN SWAP X2,X
+ IF Y2<Y THEN SWAP Y2,Y
+ IF X2<0THEN RETURN
+ IF Y2<0THEN RETURN
+ IF X>=W THEN RETURN
+ IF Y>=H THEN RETURN
+ COL=RGBToShort(COL)
+ X=MAX(0,X)
+ X2=MIN(W-1,X2)
+ Y=MAX(0,Y)
+ Y2=MIN(H-1,Y2)
+ VAR CNT=X2-X+1
+ REPEAT
+  FILL M,COL,X+Y*W,CNT
+  Y=Y+1
+ UNTIL Y2<Y
+END
+DIM TESTM[0]
+DIM TESTCOL
+DIM TESTW
+DIM TESTH
+DEF PLOT X,Y,C#
+ IF X<0||X>=TESTW THEN RETURN
+ IF Y<0||Y>=TESTH THEN RETURN
+ TESTM[(0OR X)+(0OR Y)*TESTW]=RGBToShort(RGB((255*C#*255)DIV 255,(255*C#*255)DIV 255,(255*C#*255)DIV 255))
+END
+COMMON DEF GLINEAAArray M,W,H,X,Y,X2,Y2,COL
+' IF!(X-X2)||!(Y-Y2) THEN
+'  M[X+Y*W]=RGBToShort(COL)
+'  RETURN
+' ENDIF
+ TESTM=M
+ TESTW=W
+ TESTH=H
+ VAR STEEP=ABS(Y2-Y)>ABS(X2-X)
+ IF STEEP THEN
+  SWAP X,Y
+  SWAP X2,Y2
+ ENDIF
+ IF X>X2 THEN
+  SWAP X,X2
+  SWAP Y,Y2
+ ENDIF
+ VAR DX=X2-X
+ VAR DY=Y2-X
+ IF DX==0 THEN
+  VAR GRAD#=1
+ ELSE
+  GRAD#=DY/DX
+ ENDIF
+ VAR XEND=X
+ VAR YEND#=Y+GRAD#*(XEND-X)
+ VAR XGAP#=0.5'RFPART#(X2+0.5)
+ VAR XPXL1=XEND
+ VAR YPXL1=YEND#
+ 'RFPART=1-X#+FLOOR(X#)
+ 'RFPART=1-X+X=1
+ 'FPART=X#-FLOOR(X#)
+ 'FPART=X-X=0
+ IF STEEP THEN
+  PLOT YPXL1,XPXL1,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT YPXL1+1,XPXL1,(YEND#-FLOOR(YEND#))*XGAP#
+ ELSE
+  PLOT XPXL1,YPXL1,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT XPXL1,YPXL1+1,(YEND#-FLOOR(YEND#))*XGAP#
+ ENDIF
+ VAR INTERY#=YEND#+GRAD#
+ XEND=X2
+ YEND#=Y2+GRAD#*(XEND-X2)
+ XGAP#=0.5
+ VAR XPXL2=XEND
+ VAR YPXL2=YEND#
+ IF STEEP THEN
+  PLOT YPXL2,XPXL2,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT YPXL2+1,XPXL2,(YEND#-FLOOR(YEND#))*XGAP#
+ ELSE
+  PLOT XPXL2,YPXL2,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT XPXL2,YPXL2+1,(YEND#-FLOOR(YEND#))*XGAP#
+ ENDIF
+ IF STEEP THEN
+  FOR X=XPXL1+1 TO XPXL2-1
+   PLOT INTERY#,X,1-INTERY#+FLOOR(INTERY#)
+   PLOT INTERY#+1,X,INTERY#-FLOOR(INTERY#)
+   INTERY#=INTERY#+GRAD#
+  NEXT
+ ELSE
+  FOR X=XPXL1+1 TO XPXL2-1
+   PLOT X,INTERY#,1-INTERY#+FLOOR(INTERY#)
+   PLOT X,INTERY#+1,INTERY#-FLOOR(INTERY#)
+   INTERY#=INTERY#+GRAD#
+  NEXT
+ ENDIF
+END
+COMMON DEF GBOXArray M,W,H,X,Y,X2,Y2,COL
+ COL=RGBToShort(COL)
+ IF X2<X THEN SWAP X2,X
+ IF Y2<Y THEN SWAP Y2,Y
+ IF X2<0THEN RETURN
+ IF Y2<0THEN RETURN
+ IF X>=W THEN RETURN
+ IF Y>=H THEN RETURN
+ VAR CNT=MIN(W-1,X2)-MAX(X,0)+1
+ IF Y>=0THEN
+  FILL M,COL,MAX(0,X)+Y*W,CNT
+ ENDIF
+ IF Y2<H THEN
+  FILL M,COL,MAX(0,X)+Y2*W,CNT
+ ENDIF
+ Y2=MIN(H-1,Y2)
+ Y=MAX(Y,0)
+ CNT=Y2-Y+1
+ IF X>=0&&X2<W THEN
+  REPEAT
+   M[X+Y*W]=COL
+   M[X2+Y*W]=COL
+   Y=Y+1
+  UNTIL Y2<Y
+ ELSEIF X>=0THEN
+  REPEAT
+   M[X+Y*W]=COL
+   Y=Y+1
+  UNTIL Y2<Y
+ ELSEIF X2<W THEN
+  REPEAT
+   M[X2+Y*W]=COL
+   Y=Y+1
+  UNTIL Y2<Y
+ ENDIF
+END
 
 COMMON DEF PAINTCANVASMMOVE WND,CTL,TYP,OX,OY
  IF GetCapture()!=WND THEN
@@ -14462,7 +14855,7 @@
   PAINTCANVASPAINT WND,CTL,TYP,0,0
   A[PAINT_CMOUSEX]=OX DIV Z#
   A[PAINT_CMOUSEY]=OY DIV Z#
- ELSEIF PT==PAINT_MENU_LINE THEN
+ ELSEIF PT==PAINT_MENU_LINE||PT==PAINT_MENU_BOX||PT==PAINT_MENU_FILLEDBOX THEN
   A[PAINT_CMOUSEX2]=X
   A[PAINT_CMOUSEY2]=Y
   PAINTCANVASPAINT WND,CTL,TYP,0,0
@@ -14497,6 +14890,31 @@
 END
 VAR PAINTNEWDLGCTL
 VAR PAINTOFDID
+VAR PAINTSFDID
+DEF PAINT_IMPORT(WND,F$,W,H,D)
+ VAR ERR
+ GetSBFile F$ OUT F$,ERR
+ IF ERR THEN RETURN 1
+ IF MID$(F$,0,4)!="DAT:"THEN RETURN 1
+ IF D>2THEN
+  RETURN 1
+ ENDIF
+ IF 0THEN DIM IMG[0]
+ PAINT_NEW WND,W,H
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ GetImageArray A[PAINT_IMAGE] OUT IMG,ERR
+ IF ERR THEN RETURN 1
+ IF D==2 THEN
+  DIM ARY[W,H]
+  LOAD F$,ARY,FALSE
+  COPY IMG,ARY
+  ARY=NewArray(0)
+ ELSE
+  LOAD F$,IMG,FALSE
+ ENDIF
+ RETURN 0
+END
 DEF PAINT_LOADGRP WND,F$
  VAR ERR,PAGE1,PAGE2
  GetSBFile F$ OUT F$,ERR
@@ -14505,7 +14923,9 @@
  IF GBeginDirect(WND)THEN @ERR
  GetDirectGPAGE WND OUT PAGE1,PAGE2,ERR
  IF ERR THEN @ERR
- VAR C=RGB(0,RND(16)*8,RND(32)*8,RND(32)*8)
+ REPEAT
+  VAR C=RGB(0,RND(32)*8,RND(32)*8,RND(32)*8)
+ UNTIL C!=RGB(0,0,0)'|C==
  GCLS C
  
  F$="GRP"+STR$(PAGE2)+MID$(F$,3,&H7FFFFFFF)
@@ -14532,18 +14952,31 @@
  @ERR
 END
 COMMON DEF PAINTSTRNOTIF WND,C,T,A1,A2$
- IF A1==PAINTOFDID THEN
-  VAR EXT$=GetFileExtension$(A2$)
+END
+DEF PAINT_OPENFILE WND,A1,A2
+ VAR F$=GetFileDialogInfoFile$(A2)
+ VAR T$=GetFileDialogInfoType$(A2)
+ VOID DeleteFileDialogInfo(A2)
+ IF T$=="GRP"THEN
+  PAINT_LOADGRP WND,F$
+ ELSEIF T$=="Auto"THEN
+  VAR EXT$=GetFileExtension$(F$)
   ToUpper EXT$
   IF EXT$=="GRP"||EXT$=="GRPF"THEN
    'GRP
-   PAINT_LOADGRP WND,A2$
+   PAINT_LOADGRP WND,F$
   ELSE
-   NewDialogBoxWithArg PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0 OUT ,
+   SHOW_PAINT_IMPORT_DIALOG WND,F$
   ENDIF
+ ELSE
+  SHOW_PAINT_IMPORT_DIALOG WND,F$
  ENDIF
 END
 COMMON DEF PAINTNOTIF WND,C,T,A1,A2
+ IF A1&&A1==PAINTOFDID THEN
+  PAINT_OPENFILE WND,A1,A2
+  RETURN
+ ENDIF
  IF A1==MenuNotifID()THEN
   PAINT_MENU WND,A2
  ENDIF
@@ -14551,14 +14984,14 @@
 DEF PAINT_MENU WND,A2
  IF 0THEN DIM A[0]
  PAINT_GET WND OUT A
- ON A2 GOTO @ERR,@NEW,@OPEN,@SAVE,@SAVEAS,@PEN,@ERASER,@LINE,@BOX,@FILLEDBOX,@ZOOMIN,@ZOOMOUT,@HAND
+ ON A2 GOTO @ERR,@NEW,@OPEN,@SAVE,@SAVEAS,@PEN,@ERASER,@LINE,@BOX,@FILLEDBOX,@ZOOMIN,@ZOOMOUT,@HAND,@PAINT,@SPOIT,@REL,@ABS
  @ERR
  RETURN
  @NEW
  NewDialogBoxWithArg PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0 OUT ,
  RETURN
  @OPEN
-  PAINTOFDID=1
+  PAINTOFDID=-1
   DIM LIST$[0]
   PUSH LIST$,"Auto"
   PUSH LIST$,"GRP"
@@ -14568,31 +15001,29 @@
  @SAVE
  RETURN
  @SAVEAS
+  PAINTSFDID=-2
+  DIM LIST2$[0]
+  PUSH LIST2$,"GRP"
+  VOID SaveFileDialogEx(WND,"DAT",PAINTSFDID,LIST2$)
  RETURN
  @PEN
- A[PAINT_TOOL]=A2
- RETURN
  @ERASER
- A[PAINT_TOOL]=A2
- RETURN
  @LINE
- A[PAINT_TOOL]=A2
- RETURN
  @BOX
- A[PAINT_TOOL]=A2
- RETURN
  @FILLEDBOX
- A[PAINT_TOOL]=A2
- RETURN
  @ZOOMIN
- A[PAINT_TOOL]=A2
- RETURN
  @ZOOMOUT
- A[PAINT_TOOL]=A2
- RETURN
  @HAND
+ @PAINT
+ @SPOIT
  A[PAINT_TOOL]=A2
  RETURN
+ @REL
+ SetMouseMode FALSE
+ RETURN
+ @ABS
+ SetMouseMode TRUE
+ RETURN
 END
 COMMON DEF PAINTNEWDLGCREATE WND,CTL,TYP,A1,A2
  SetWindowVar WND,0,A1
@@ -14620,7 +15051,7 @@
  IF A1==OKBTN THEN
   VAR H=VAL(GetWindowName$(HTXTBOX))
   VAR W=VAL(GetWindowName$(WTXTBOX))
-  IF H&&W THEN
+  IF H>0&&W>0 THEN
    PAINT_NEW WND,W,H
    VOID DeleteWindow(WND)
   ELSE
@@ -14813,6 +15244,29 @@
  PAINTPAL_SELECT WND,I
  VOID RepaintWindow(WND)
 END
+COMMON DEF PAINTCOLORBTN WND,CTL,TYP,BTN,A2
+ VAR SELC=GetWindowVar(WND,4)
+ VAR IX=SELC MOD 6
+ VAR IY=SELC DIV 6
+ 
+ IF BTN AND #UP THEN
+  DEC IY
+ ENDIF
+ IF BTN AND #DOWN THEN
+  INC IY
+ ENDIF
+ IF BTN AND #LEFT THEN
+  DEC IX
+ ENDIF
+ IF BTN AND #RIGHT THEN
+  INC IX
+ ENDIF
+ VAR W=GetWindowWidth(WND)
+ VAR I=IX+IY*(W DIV 10)
+ IF I<0||I>65THEN RETURN
+ PAINTPAL_SELECT WND,I
+ VOID RepaintWindow(WND)
+END
 COMMON DEF PAINTCOLORPAINTER WND,CTL,TYP,XY,WH
  IF CallBaseControlHandler(WND,CTL,TYP,XY,WH)THEN @ERR
  VAR X,Y,W,H
@@ -14880,6 +15334,124 @@
  IF GEndWindow(WND)THEN @ERR
  @ERR
 END
+DEF SHOW_PAINT_IMPORT_DIALOG WND,FILE$
+ NewDialogBoxWithArg PAINTIMPORTDLGCTL,"Import "+FILE$,170,49,WND,TRUE,GetWindowVar(WND,0),AllocString(FILE$) OUT ,
+END
+VAR PAINTIMPORT_WV_PAINT
+VAR PAINTIMPORT_WV_FILE
+VAR PAINTIMPORT_WV_OKBTN
+VAR PAINTIMPORT_WV_CANCELBTN
+VAR PAINTIMPORT_WV_WTXTBOX
+VAR PAINTIMPORT_WV_HTXTBOX
+VAR PAINTIMPORT_WV_DTXTBOX
+COMMON DEF PAINTIMPORTCREATE WND,CTL,TYP,A1,A2
+ PAINTIMPORT_WV_PAINT=0
+ PAINTIMPORT_WV_FILE=1
+ PAINTIMPORT_WV_OKBTN=2
+ PAINTIMPORT_WV_CANCELBTN=3
+ PAINTIMPORT_WV_WTXTBOX=4
+ PAINTIMPORT_WV_HTXTBOX=5
+ PAINTIMPORT_WV_DTXTBOX=6
+ VAR FILE$=GetString$(A2)
+ SetWindowVar WND,PAINTIMPORT_WV_PAINT,A1
+ VAR ROW1=9*8
+ VAR WIDTHTXTBOX,HEIGHTTXTBOX,DIMTXTBOX
+ VAR OKBTN,CANCELBTN
+ NewWindow GetLabelControl(),"Type     Raw image",0,0,18*8-1,7,WND,0 OUT ,
+ NewWindow GetLabelControl(),"Width",0,9,5*8-1,7,WND,0 OUT ,
+ NewWindow GetLabelControl(),"Height",0,19,6*8-1,7,WND,0 OUT ,
+ NewWindow GetTextBoxControl(),"",ROW1,8,10*8,8,WND,0 OUT WIDTHTXTBOX,
+ NewWindow GetTextBoxControl(),"",ROW1,18,10*8,8,WND,0 OUT HEIGHTTXTBOX,
+ NewWindow GetLabelControl(),"Dimension",0,29,9*8-1,7,WND,0 OUT ,
+ NewWindow GetTextBoxControl(),"1",ROW1,28,10*8,8,WND,0 OUT DIMTXTBOX,
+ NewWindow GetButtonControl(),"OK",1,38,20,10,WND,0 OUT OKBTN,
+ NewWindow GetButtonControl(),"Cancel",ROW1,38,8*6+4,10,WND,0 OUT CANCELBTN,
+ SetWindowVar WND,PAINTIMPORT_WV_FILE,A2
+ SetWindowVar WND,PAINTIMPORT_WV_WTXTBOX,WIDTHTXTBOX
+ SetWindowVar WND,PAINTIMPORT_WV_HTXTBOX,HEIGHTTXTBOX
+ SetWindowVar WND,PAINTIMPORT_WV_DTXTBOX,DIMTXTBOX
+ SetWindowVar WND,PAINTIMPORT_WV_OKBTN,OKBTN
+ SetWindowVar WND,PAINTIMPORT_WV_CANCELBTN,CANCELBTN
+END
+COMMON DEF PAINTIMPORTNOTIF WND,CTL,TYP,A1,A2
+ VAR OK=GetWindowVar(WND,PAINTIMPORT_WV_OKBTN)
+ IF A1==OK THEN
+  VAR W=VAL(GetWindowName$(GetWindowVar(WND,PAINTIMPORT_WV_WTXTBOX)))
+  VAR H=VAL(GetWindowName$(GetWindowVar(WND,PAINTIMPORT_WV_WTXTBOX)))
+  VAR D=VAL(GetWindowName$(GetWindowVar(WND,PAINTIMPORT_WV_DTXTBOX)))
+  IF W>0&&H>0&&D>0 THEN
+   VAR STR=GetWindowVar(WND,PAINTIMPORT_WV_FILE)
+   VAR ERR=PAINT_IMPORT(WND,GetString$(STR),W,H,D)
+   IF ERR THEN
+    VOID MessageBox(WND,"Paint","Could not import.",MessageBoxOK()OR MessageBoxError())
+    RETURN
+   ENDIF
+  ELSE
+   VOID MessageBox(WND,"Paint","Invalid size",MessageBoxOK()OR MessageBoxError())
+   RETURN
+  ENDIF
+  VOID DeleteWindow(WND)
+  RETURN
+ ENDIF
+ VAR CANCEL=GetWindowVar(WND,PAINTIMPORT_WV_CANCELBTN)
+ IF A1==CANCEL THEN
+  VOID DeleteWindow(WND)
+  RETURN
+ ENDIF
+END
+COMMON DEF PAINTIMPORTDELETE WND,CTL,TYP,A1,A2
+ VAR STR=GetWindowVar(WND,PAINTIMPORT_WV_FILE)
+ FreeString STR
+END
+DEF PAINT_IMPORTDLG_CTL_INIT OUT E
+ ExtendControl"PAINTIMPORTDLGCTL",GetWindowControl() OUT PAINTIMPORTDLGCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTIMPORTDLGCTL,"PAINTIMPORTCREATE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTIMPORTDLGCTL,"PAINTIMPORTNOTIF")THEN @ERR_CTL
+ IF SetControlDeleteHandler(PAINTIMPORTDLGCTL,"PAINTIMPORTDELETE")THEN @ERR_CTL
+ @ERR_CTL
+END
+
+DEF PAINT_CTL_INIT OUT E
+ ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlDeleteHandler(PAINTCTL,"PAINTDELETE")THEN @ERR_CTL
+ IF SetControlResizeHandler(PAINTCTL,"PAINTRESIZE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTCTL,"PAINTNOTIF")THEN @ERR_CTL
+ IF SetControlStrNotifHandler(PAINTCTL,"PAINTSTRNOTIF")THEN @ERR_CTL
+ @ERR_CTL
+END
+DEF PAINT_CANVAS_CTL_INIT OUT E
+ NewControl "PAINT_CANVAS" OUT PAINTCANVASCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTCANVASCTL,"PAINTCANVASCREATE")THEN @ERR_CTL
+ IF SetControlPainter(PAINTCANVASCTL,"PAINTCANVASPAINT")THEN @ERR_CTL
+ IF SetControlMouseMoveHandler(PAINTCANVASCTL,"PAINTCANVASMMOVE")THEN @ERR_CTL
+ IF SetControlLMouseDownHandler(PAINTCANVASCTL,"PAINTCANVASLMD")THEN @ERR_CTL
+ IF SetControlLMouseUpHandler(PAINTCANVASCTL,"PAINTCANVASLMU")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTCANVASCTL,"PAINTCANVASNOTIF")THEN @ERR_CTL
+ IF SetControlButtonHandler(PAINTCANVASCTL,"PAINTCANVASBUTTON")THEN @ERR_CTL
+ @ERR_CTL
+END
+DEF PAINT_NEWDLG_CTL_INIT OUT E
+ ExtendControl"PAINTNEWDLGCTL",GetWindowControl() OUT PAINTNEWDLGCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTNEWDLGCTL,"PAINTNEWDLGCREATE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTNEWDLGCTL,"PAINTNEWDLGNOTIF")THEN @ERR_CTL
+
+ @ERR_CTL
+END
+DEF PAINT_COLOR_CTL_INIT OUT E
+ ExtendControl"PAINTCOLORCTL",GetWindowControl() OUT PAINTCOLORCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlPainter(PAINTCOLORCTL,"PAINTCOLORPAINTER")THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTCOLORCTL,"PAINTCOLORCREATE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTCOLORCTL,"PAINTCOLORNOTIF")THEN @ERR_CTL
+ IF SetControlLMouseDownHandler(PAINTCOLORCTL,"PAINTCOLORLMD")THEN @ERR_CTL
+ IF SetControlMouseMoveHandler(PAINTCOLORCTL,"PAINTCOLORMM")THEN @ERR_CTL
+ IF SetControlButtonHandler(PAINTCOLORCTL,"PAINTCOLORBTN")THEN @ERR_CTL
+ @ERR_CTL
+END
 COMMON DEF I_PAINT
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -14888,32 +15460,11 @@
  ENDIF
  VAR WND,E
  IF!PAINTCTL THEN
-  ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
-  IF E THEN @ERR_CTL
-  NewControl "PAINT_CANVAS" OUT PAINTCANVASCTL,E
-  IF E THEN @ERR_CTL
-  ExtendControl"PAINTNEWDLGCTL",GetWindowControl() OUT PAINTNEWDLGCTL,E
-  IF E THEN @ERR_CTL
-  ExtendControl"PAINTCOLORCTL",GetWindowControl() OUT PAINTCOLORCTL,E
-  IF E THEN @ERR_CTL
-  IF SetControlDeleteHandler(PAINTCTL,"PAINTDELETE")THEN @ERR_CTL
-  IF SetControlResizeHandler(PAINTCTL,"PAINTRESIZE")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTCTL,"PAINTNOTIF")THEN @ERR_CTL
-  IF SetControlStrNotifHandler(PAINTCTL,"PAINTSTRNOTIF")THEN @ERR_CTL
-  IF SetControlCreateHandler(PAINTCANVASCTL,"PAINTCANVASCREATE")THEN @ERR_CTL
-  IF SetControlPainter(PAINTCANVASCTL,"PAINTCANVASPAINT")THEN @ERR_CTL
-  IF SetControlMouseMoveHandler(PAINTCANVASCTL,"PAINTCANVASMMOVE")THEN @ERR_CTL
-  IF SetControlLMouseDownHandler(PAINTCANVASCTL,"PAINTCANVASLMD")THEN @ERR_CTL
-  IF SetControlLMouseUpHandler(PAINTCANVASCTL,"PAINTCANVASLMU")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTCANVASCTL,"PAINTCANVASNOTIF")THEN @ERR_CTL
-  IF SetControlButtonHandler(PAINTCANVASCTL,"PAINTCANVASBUTTON")THEN @ERR_CTL
-  IF SetControlCreateHandler(PAINTNEWDLGCTL,"PAINTNEWDLGCREATE")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTNEWDLGCTL,"PAINTNEWDLGNOTIF")THEN @ERR_CTL
-  IF SetControlPainter(PAINTCOLORCTL,"PAINTCOLORPAINTER")THEN @ERR_CTL
-  IF SetControlCreateHandler(PAINTCOLORCTL,"PAINTCOLORCREATE")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTCOLORCTL,"PAINTCOLORNOTIF")THEN @ERR_CTL
-  IF SetControlLMouseDownHandler(PAINTCOLORCTL,"PAINTCOLORLMD")THEN @ERR_CTL
-  IF SetControlMouseMoveHandler(PAINTCOLORCTL,"PAINTCOLORMM")THEN @ERR_CTL
+  IF PAINT_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_CANVAS_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_NEWDLG_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_COLOR_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_IMPORTDLG_CTL_INIT()THEN @ERR_CTL
  ENDIF
  VAR COLORWND
  NewStyleWindow PAINTCTL,"PAINT",0,0,300,128,GetRootWindow(),WindowFrontFlag(),WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
@@ -14965,6 +15516,10 @@
  PAINT_MENU_ZOOMIN=MI:INC MI
  PAINT_MENU_ZOOMOUT=MI:INC MI
  PAINT_MENU_HAND=MI:INC MI
+ PAINT_MENU_PAINT=MI:INC MI
+ PAINT_MENU_SPOIT=MI:INC MI
+ PAINT_MENU_REL=MI:INC MI
+ PAINT_MENU_ABS=MI:INC MI
  A[PAINT_TOOL]=PAINT_MENU_PEN
  AddMenuItem MENU,"New",PAINT_MENU_NEW
  AddMenuItem MENU,"Open",PAINT_MENU_OPEN
@@ -14981,8 +15536,14 @@
  AddRadioMenuItem MENU,"Zoom in",PAINT_MENU_ZOOMIN,FALSE
  AddRadioMenuItem MENU,"Zoom out",PAINT_MENU_ZOOMOUT,FALSE
  AddRadioMenuItem MENU,"Hand",PAINT_MENU_HAND,FALSE
+ AddRadioMenuItem MENU,"Paint",PAINT_MENU_PAINT,FALSE
+ AddRadioMenuItem MENU,"GSPOIT",PAINT_MENU_SPOIT,FALSE
  AddMenuItemSeparator MENU
  AddMenuItem MENU,"Pen",0
+ NewMenu OUT MENU,E
+ AddSubMenuItem GetWindowMenu(WND),"Mouse",MENU
+ AddRadioMenuItem MENU,"Relative",PAINT_MENU_REL,TRUE
+ AddRadioMenuItem MENU,"Absolute",PAINT_MENU_ABS,FALSE
 
  RETURN
  
@@ -14992,12 +15553,237 @@
   ExitProcess 1
   RETURN
  @ERR
-  VOID DeleteControl(WND)
-  VOID DeleteControl(COLORWND)
-  VOID DeleteControl(CWND)
+  VOID DeleteWindow(WND)
+  VOID DeleteWindow(COLORWND)
+  VOID DeleteWindow(CWND)
   ExitProcess 1
 END
 COMMON DEF L_PAINT
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR EYESCTL
+DEF DrawFilledCircle WND,X,Y,W,H,COL
+ DrawStrokedCircle WND,X,Y,W,H,MIN(W,H),COL
+END
+DEF DrawStrokedCircle WND,X,Y,W,H,S,COL
+ VAR R=180 DIV 20
+ VAR I
+ VAR X#=W/2
+ VAR Y#=H/2
+ VAR OX,OY,F
+ VAR SX#=X#-S
+ VAR SY#=Y#-S
+ VAR OX2,OY2
+' IF X#-X THEN STOP
+' W=W-(X#-X)
+ 'FOR I=90TO 270 STEP R'359 STEP R
+ FOR I=00TO 360 STEP R'359 STEP R
+  VAR NX=X+COS(RAD(I))*X#,NY=Y+SIN(RAD(I))*Y#
+  VAR NX2=X+COS(RAD(I))*SX#,NY2=Y+SIN(RAD(I))*SY#
+  IF F THEN
+'   GTRIWindow WND,NX,NY,OX,OY,NX2,NY2,COL
+'   GTRIWindow WND,NX2,NY2,OX2,OY2,OX,OY,COL
+   GTRI NX,NY,OX,OY,NX2,NY2,COL
+   GTRI NX2,NY2,OX2,OY2,OX,OY,COL
+'   GTRIWindow WND,W-NX,NY,W-OX,OY,W-NX2,NY2,COL
+'   GTRIWindow WND,W-NX2,NY2,W-OX2,OY2,W-OX,OY,COL
+  ENDIF
+  OX=NX
+  OY=NY
+  OX2=NX2
+  OY2=NY2
+  F=TRUE
+ NEXT
+END
+COMMON DEF EYESPainter WND,CTL,TYP,XY,WH
+ IF CallBaseControlHandler(WND,CTL,TYP,XY,WH)THEN @ERR
+ EYESPaint WND
+ @ERR
+END
+DEF EYESDrawEye WND,CX,CY,CW,CH
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ VAR EW=WIDTH DIV 2
 
+ VAR MIN=MIN(EW,HEIGHT)
+ VAR EYEH=MIN DIV 5
+ VAR EYEW=MIN DIV 8
+ 
+ 
+ VAR MX=GetMouseX()
+ VAR MY=GetMouseY()
+ VAR AX=GetWindowAX(WND)
+ VAR AY=GetWindowAY(WND)
+ SetWindowVar WND,0,MX
+ SetWindowVar WND,1,MY
+'VAR EYEH=MIN DIV 7
+ VAR ACX=AX+CX'absolute center
+ VAR ACY=AY+CY'absolute center
+ VAR MX#=ATAN(MY-ACY,MX-ACX)
+ VAR D#=POW(MX-ACX,2)+POW(MY-ACY,2)
+ VAR D2#=POW(COS(MX#)*CW,2)+POW(SIN(MX#)*CH,2)
+ IF D2#>D# THEN
+  DrawFilledCircle WND,MX-AX,MY-AY,EYEW,EYEH,#BLACK
+ ELSE
+  DrawFilledCircle WND,COS(MX#)*CW+CX,SIN(MX#)*CH+CY,EYEW,EYEH,#BLACK
+ ENDIF
+END
+COMMON DEF EYESPaint WND
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ IF HEIGHT<0THEN RETURN
+ IF GBeginDirect(WND)THEN @ERR
+ 'IF GBeginWindow(WND)THEN @ERR
+ GCLIP 1,0,0,WIDTH,HEIGHT
+ GCLS GetWindowBackColor(WND)
+ VAR EW=WIDTH DIV 2
+ VAR CX=EW DIV 2
+ VAR CY=HEIGHT DIV 2
+ EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4
+
+ 
+ VAR MIN=MIN(EW,HEIGHT)
+ DrawStrokedCircle WND,CX,CY,EW,HEIGHT,MIN/10,#BLACK
+ CX=WIDTH DIV 2+EW/2
+ CY=HEIGHT/2
+ DrawStrokedCircle WND,CX,CY,EW,HEIGHT,MIN/10,#BLACK
+ EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4
+
+ UpdateMouse
+ IF GCopyDirect(WND,0,0,WIDTH,HEIGHT,0,0,0)THEN @ERR
+ IF GEndWindow(WND)THEN @ERR
+ @ERR
+END
+COMMON DEF I_EYES
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!EYESCTL THEN
+  ExtendControl "eyes",GetWindowControl() OUT EYESCTL,E
+  SetControlPainter EYESCTL,"EYESPainter" OUT E
+ ENDIF
+ NewTopLevelStyleWindow EYESCTL,"eyes",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
+ SetWindowBackColor WND,#WHITE
+ SetProcessVar WND
+END
+COMMON DEF L_EYES
+ VAR W=GetProcessVar()
+ IF GetMouseX()!=GetWindowVar(W,0)||GetMouseY()!=GetWindowVar(W,1)THEN VOID RepaintWindow(W)
+ 
+ IF UpdateWindow(W)THEN ExitProcess 1
+END
+VAR WINLISTCTL
+
+DEF WINLIST_Update LISTBOX
+ ClearListBox LISTBOX
+ VAR W=GetRootWindow()
+ WINLIST_Add LISTBOX,W,""
+END
+DEF WINLIST_Add LISTBOX,WND,P$
+ WHILE WND
+  VAR C=GetChildWindow(WND)
+  VAR N=GetNextWindow(WND)
+  IF N THEN
+   AddListBoxItem LISTBOX,P$+""+GetControlName$(GetControl(WND))+":"+GetWindowName$(WND)
+   IF C THEN WINLIST_Add LISTBOX,C,P$+""
+  ELSE
+   AddListBoxItem LISTBOX,P$+""+GetControlName$(GetControl(WND))+":"+GetWindowName$(WND)
+   IF C THEN WINLIST_Add LISTBOX,C,P$+" "
+  ENDIF
+  WND=N
+ WEND
+END
+COMMON DEF WINLISTNOTIF WND,CTL,TYP,A1,A2
+ IF A1==MenuNotifID()&&A2==1THEN
+  WINLIST_Update GetWindowVar(WND,0)
+ ENDIF
+END
+COMMON DEF WINLISTRESIZE WND,CTL,TYP,A1,A2
+ VOID ResizeWindow(GetWindowVar(WND,0),GetWindowWidth(WND),GetWindowHeight(WND))
+END
+COMMON DEF I_WINLIST
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!WINLISTCTL THEN
+  ExtendControl "Window list",GetWindowControl() OUT WINLISTCTL,E
+  IF SetControlResizeHandler(WINLISTCTL,"WINLISTRESIZE")THEN @ERR_CTL
+  IF SetControlNotifHandler(WINLISTCTL,"WINLISTNOTIF")THEN @ERR_CTL
+ ENDIF
+ NewTopLevelStyleWindow WINLISTCTL,"Window list",128,128,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
+ SetProcessVar WND
+ VAR LB
+ NewWindow GetListBoxControl(),"",0,0,128,128,WND,0 OUT LB,E
+ WINLIST_Update LB
+ SetWindowVar WND,0,LB
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Update",1
+ AddSubMenuItem GetWindowMenu(WND),"View",MENU
+ 
+END
+COMMON DEF L_WINLIST
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+VAR OTWFREEMEMCTL
+DEF OTWFREEMEM_FORMAT$(F)
+ VAR KIB#=F/1024
+ VAR MIB#=KIB#/1024
+ IF MIB#>=1THEN
+  RETURN FORMAT$("%.2FMiB",MIB#)
+ ENDIF
+ IF KIB#>=1THEN
+  RETURN FORMAT$("%.2FKiB",KIB#)
+ ENDIF
+ RETURN FORMAT$("%DB",F)
+END
+DEF OTWFREEMEM$(FM)
+ RETURN OTWFREEMEM_FORMAT$(FM)+"/"+OTWFREEMEM_FORMAT$(GetMemorySize())
+END
+VAR OTWFMEM_WV_MEM
+VAR OTWFMEM_WV_LABEL
+COMMON DEF I_OTWFREEMEM
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWFREEMEMCTL THEN
+  ExtendControl "FREEMEM",GetWindowControl() OUT OTWFREEMEMCTL,E
+ ENDIF
+ VAR W
+ IF HARDWARE==0||HARDWARE==1THEN
+  W=56*2-1+8'LEN("8.XXMiB")*8
+ ELSE'WiiU?
+  W=88*2-1+8'LEN("128.XXMiB")*8
+ ENDIF
+ NewTopLevelWindow OTWFREEMEMCTL,"FREEMEM",W,7 OUT WND,E
+ VAR LABEL
+ VAR FM=FREEMEM
+ NewWindow GetLabelControl(),OTWFREEMEM$(FM),0,0,W,7,WND,0 OUT LABEL,E
+ SetLabelAlignRight LABEL
+ SetProcessVar WND
+ OTWFMEM_WV_MEM=0
+ OTWFMEM_WV_LABEL=1
+ SetWindowVar WND,OTWFMEM_WV_MEM,FM
+ SetWindowVar WND,OTWFMEM_WV_LABEL,LABEL
+END
+COMMON DEF L_OTWFREEMEM
+ VAR WND=GetProcessVar()
+ IF GetWindowVar(WND,OTWFMEM_WV_MEM)!=FREEMEM THEN
+  VAR FM=FREEMEM
+  VAR L=GetWindowVar(WND,OTWFMEM_WV_LABEL)
+  SetWindowName L,OTWFREEMEM$(FM)
+  VOID RepaintWindow(L)
+  SetWindowVar WND,OTWFMEM_WV_MEM,FM
+ ENDIF
+ IF UpdateWindow(WND)THEN ExitProcess 1
+END
+

