diff -u OTW.TXT OTW29
--- OTW.TXT
+++ OTW29
@@ -73,6 +73,10 @@
 DIM WIN_HIDE   [0]
 DIM WIN_MINW   [0]
 DIM WIN_MINH   [0]
+'for IM
+DIM WIN_CURX   [0]
+DIM WIN_CURY   [0]
+DIM WIN_IM     [0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
 VAR WIN_MSGARGSIZE
@@ -110,6 +114,7 @@
 VAR WIN_STYLE_TRANS
 VAR WIN_STYLE_HIDE
 VAR WIN_STYLE_OWNERDRAW
+VAR WIN_STYLE_MINMAX
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -134,6 +139,7 @@
  WIN_STYLE_TRANS=4
  WIN_STYLE_HIDE=8
  WIN_STYLE_OWNERDRAW=16
+ WIN_STYLE_MINMAX=32
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -188,6 +194,9 @@
  WIN_STYLE     =NewArray(WIN_MAX)
  WIN_IMAGE     =NewArray(WIN_MAX)
  WIN_BACKGND   =NewArray(WIN_MAX)
+ WIN_CURX      =NewArray(WIN_MAX)
+ WIN_CURY      =NewArray(WIN_MAX)
+ WIN_IM        =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -305,6 +314,7 @@
  E=AssociateFile("*","PRG","PRGED")
  E=AssociateFile("*","MML","MPLAY")
  E=AssociateFile("*","LNK","LINKOPEN")
+ E=AssociateFile("*","DOC","OTYDOC")
  E=AssociateFile("/","","OTYFIL")
 END
 DEF GetAssociatedIndex(TYP$,EXT$)
@@ -403,6 +413,7 @@
 VAR CTL_MSLEAVEHANDLER
 VAR CTL_RESIZEHANDLER
 VAR CTL_FRMPAINTHANDLER
+VAR CTL_CHLDWNDHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -429,7 +440,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=19
+ CTL_HANDLER_MAX=20
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -470,6 +481,7 @@
  CTL_MSLEAVEHANDLER=16
  CTL_RESIZEHANDLER=17
  CTL_FRMPAINTHANDLER=18
+ CTL_CHLDWNDHANDLER=19
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -485,6 +497,7 @@
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
  E=SetControlChFocusHandler(CTL_WINDOWCTL,"WindowChFocus")
+ E=SetControlChildWindowHandler(CTL_WINDOWCTL,"WindowChildWindow")
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_BUTTONCTL,"ToggleButtonLMouseDown")
@@ -525,6 +538,7 @@
  E=SetControlPainter(CTL_DRPDWNCTL,"DropDownListPainter")
  E=SetControlLMouseDownHandler(CTL_DRPDWNCTL,"DropDownListLMD")
  E=SetControlLMouseUpHandler(CTL_DRPDWNCTL,"DropDownListLMU")
+ E=SetControlNotifHandler(CTL_DRPDWNCTL,"DropDownListNotif")
 
  ExtendControl "DROPDOWNLISTBOX",GetListBoxControl() OUT CTL_DRPDWNBOXCTL,E
  E=SetControlChFocusHandler(CTL_DRPDWNBOXCTL,"DropDownListBoxChFocus")
@@ -560,6 +574,7 @@
  E=SetControlLDoubleClickHandler(CTL_LSTBOXCTL,"ListBoxLMD")
  E=SetControlDeleteHandler(CTL_LSTBOXCTL,"ListBoxDelete")
  E=SetControlResizeHandler(CTL_LSTBOXCTL,"ListBoxResize")
+ E=SetControlButtonHandler(CTL_LSTBOXCTL,"ListBoxButton")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -730,6 +745,7 @@
  CTL_CID[CTL AND 4095]=CTL_CIDCNT
  CTL_NEXT[CTL AND 4095]=0
  CTL_NAME$[CTL AND 4095]=NAME$
+ CTL_HANDLER$[CTL AND 4095,CTL_CHLDWNDHANDLER]="ControlDefChildWinHandler"
 END
 COMMON DEF ExtendControl NAME$,PARENT OUT CTL,ERR
  IF!CheckControl(PARENT)THEN
@@ -879,6 +895,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_RESIZEHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlChildWindowHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_CHLDWNDHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -1414,36 +1435,21 @@
    ELSE
     WIN_CHILD[PNUWID]=NUWID
    ENDIF
-   OTW_DrawMap NUWID
+   OTW_UpdateMap NUWID
   ELSE
    N=WIN_CHILD[PNUWID]
    WIN_CHILD[PNUWID]=NUWID
-   OTW_DrawMap NUWID
+   OTW_UpdateMap NUWID
    IF N THEN
     WIN_NEXT[NUWID]=N
     WIN_PREV[N]=NUWID
-    VAR B=NUWID
-    WHILE B
-     OTW_DrawMap B
-     IF WIN_CHILD[B]THEN
-      B=WIN_CHILD[B]
-      CONTINUE
-     ENDIF
-     IF!WIN_NEXT[B]THEN
-      WHILE B
-       B=WIN_PARENT[B]
-       IF B==PNUWID THEN BREAK
-       IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
-      WEND
-      IF B==PNUWID THEN BREAK
-     ENDIF
-     B=WIN_NEXT[B]
-     IF B==PNUWID THEN BREAK
-    WEND
    ENDIF
   ENDIF
  ENDIF
  WIN_MSGS[NUWID]=0
+ WIN_CURX[NUWID]=0
+ WIN_CURY[NUWID]=0
+ WIN_IM[NUWID]=FALSE
  VOID RepaintWindow(WND)
  IF PARENT==WIN_ROOTWND THEN
   SPAllocWindow WND
@@ -1518,6 +1524,9 @@
 COMMON DEF WindowHideStyle()
  RETURN 8
 END
+COMMON DEF WindowMinMaxStyle()
+ RETURN WIN_STYLE_MINMAX
+END
 VAR WIN_TopLevelX2
 DEF IncTopLevelPos NUCID
  INC WIN_TopLevelX,CTL_FH1[NUCID]-1
@@ -1905,7 +1914,7 @@
  WIN_NAME$[NUWID]=""
  IF WIN_SP[NUWID]THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
-  IF OTW_ENABLE_SHADOW THEN
+  IF OTW_ENABLE_SHADOW&&SPVAR(WIN_SP[NUWID]AND 511,1)!=-1THEN
    SPVAR SPVAR(WIN_SP[NUWID]AND 511,1),0,0
    SPCLR SPVAR(WIN_SP[NUWID]AND 511,1)
   ENDIF
@@ -2023,11 +2032,12 @@
     SPANIM WIN_SP[NUWID]AND 511,6,-10,RGB(128,128,128),-10,RGB(255,255,255)
    ENDIF
    E=FrontWindow(NUWIDToWND(G))
+   E=ActiveWindow(NUWIDToWND(G))
    HASMODAL=TRUE
   ENDIF
   G=WIN_GNEXT[G]
  WEND
- IF!HASMODAL THEN E=ActiveWindow(WND)
+' IF!HASMODAL THEN E=ActiveWindow(WND)
  RETURN 0
 END
 
@@ -2165,6 +2175,26 @@
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
+DEF OTW_UpdateMap NUWID
+ WHILE NUWID
+  OTW_DrawMap NUWID
+  IF WIN_CHILD[NUWID]THEN
+   NUWID=WIN_CHILD[NUWID]
+   CONTINUE
+  ENDIF
+  IF!WIN_NEXT[NUWID]THEN
+   WHILE NUWID
+    NUWID=WIN_PARENT[NUWID]
+    IF WIN_NEXT[NUWID]THEN
+     NUWID=WIN_NEXT[NUWID]
+     BREAK
+    ENDIF
+   WEND
+   CONTINUE
+  ENDIF
+  NUWID=WIN_NEXT[NUWID]
+ WEND
+END
 COMMON DEF ShowWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -2175,21 +2205,51 @@
    OTW_SPSHOW NUWID
    OTW_SPCHR NUWID
   ENDIF
+  ShowChildWindow NUWID
  ELSE
   RETURN 0
  ENDIF
- OTW_DrawMap NUWID
+ OTW_UpdateMap NUWID
  RETURN RepaintWindow(WND)
 END
+DEF HideChildWindow NUWID
+ VAR C=WIN_CHILD[NUWID]
+ WHILE C
+  IF WIN_STYLE[C] AND WIN_STYLE_HIDE THEN
+   C=WIN_NEXT[C]
+   CONTINUE
+  ENDIF
+  WIN_HIDE[C]=TRUE
+  HideChildWindow C
+  C=WIN_NEXT[C]
+ WEND
+END
+DEF ShowChildWindow NUWID
+ VAR C=WIN_CHILD[NUWID]
+ WHILE C
+  IF WIN_STYLE[C] AND WIN_STYLE_HIDE THEN
+   C=WIN_NEXT[C]
+   CONTINUE
+  ENDIF
+  WIN_HIDE[C]=FALSE
+  VOID RepaintWindow(NUWIDToWND(C))
+  HideChildWindow C
+  C=WIN_NEXT[C]
+ WEND
+END
 COMMON DEF HideWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_STYLE[NUWID] AND WIN_STYLE_HIDE THEN RETURN 0
+ IF IsActiveWindow(WND)THEN
+  WIN_ACTIVENUWID=0
+ ENDIF
  WIN_HIDE[NUWID]=TRUE
  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_HIDE
  IF WIN_SP[NUWID]THEN
   OTW_SPHIDE NUWID 
  ENDIF
+ HideChildWindow NUWID
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -2540,6 +2600,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_RESIZEHANDLER,0,JoinInt(W,H))
 END
+DEF SendChildWindowEvent(WND,TYPE,CWND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_CHLDWNDHANDLER,TYPE,CWND)
+END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
@@ -2677,6 +2741,17 @@
 'RETURN WIN_FY[WND AND NUWIDMASK]
  RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WIN_ROOTWND2 AND NUWIDMASK]-WIN_FH1[WIN_ROOTWND2 AND NUWIDMASK]
 END
+'WNDからのWND2のざひょう
+COMMON DEF CalcWindowX(WND2,WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ IF!CheckWindow(WND2)THEN RETURN -1
+ RETURN WIN_AX[WND AND NUWIDMASK]+WIN_FW1[WND AND NUWIDMASK]-WIN_AX[WND2 AND NUWIDMASK]-WIN_FW1[WND2 AND NUWIDMASK]
+END
+COMMON DEF CalcWindowY(WND2,WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ IF!CheckWindow(WND2)THEN RETURN -1
+ RETURN WIN_AY[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]-WIN_AY[WND2 AND NUWIDMASK]-WIN_FH1[WND2 AND NUWIDMASK]
+END
 COMMON DEF GetWindowVar(WND,I)
  RETURN WIN_VAR[WND AND NUWIDMASK,I]
 END
@@ -2691,6 +2766,8 @@
 END
 COMMON DEF FocusWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+
+ VOID SendChildWindowEvent(GetParentWindow(WND),WindowActiveEvent(),WND)
  VAR OLD=WIN_ACTIVENUWID
  WIN_ACTIVENUWID=WND AND NUWIDMASK
  IF OLD==WIN_ACTIVENUWID THEN RETURN 0
@@ -2709,6 +2786,30 @@
 COMMON DEF GetActiveWindow()
  RETURN NUWIDToWND(WIN_ACTIVENUWID)
 END
+COMMON DEF SetWindowCursor(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_IM[NUWID]=TRUE
+ WIN_CURX[NUWID]=X
+ WIN_CURY[NUWID]=Y
+ RETURN FALSE
+END
+COMMON DEF GetWindowCursor WND OUT X,Y,E
+ IF!CheckWindow(WND)THEN
+  E=WIN_INVALIDID
+  X=0
+  Y=0
+  RETURN
+ ENDIF
+ VAR NUWID=WND AND NUWIDMASK
+ X=WIN_CURX[NUWID]
+ Y=WIN_CURY[NUWID]
+ E=0
+ IF !WIN_IM[NUWID]THEN
+  E=TRUE
+ ENDIF
+END
+
 COMMON DEF GetMouseX()
  RETURN OTW_MOUSEX
 END
@@ -2938,7 +3039,9 @@
  VAR SP=WIN_SP[NUWID]AND 511
  IF OTW_ENABLE_SHADOW THEN
   VAR SP2=SPVAR(SP,1)
-  SPSCALE SP2,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+  IF SP2!=-1THEN
+   SPSCALE SP2,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+  ENDIF
  ENDIF
  SPSCALE SP,1,1
  SPCHR SP,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
@@ -2948,7 +3051,9 @@
  VAR SP=WIN_SP[NUWID]AND 511
  IF OTW_ENABLE_SHADOW THEN
   VAR SP2=SPVAR(SP,1)
-  SPSHOW SP2
+  IF SP2!=-1THEN
+   SPSHOW SP2
+  ENDIF
  ENDIF
  SPSHOW SP
 END
@@ -2956,10 +3061,35 @@
  VAR SP=WIN_SP[NUWID]AND 511
  IF OTW_ENABLE_SHADOW THEN
   VAR SP2=SPVAR(SP,1)
-  SPHIDE SP2
+  IF SP2!=-1THEN SPHIDE SP2
  ENDIF
  SPHIDE SP
 END
+COMMON DEF SetWindowProperty WND,P$,V OUT E
+ IF!CheckWindow(WND)THEN
+  E=WIN_INVALIDID
+  RETURN
+ ENDIF
+ E=0
+ VAR NUWID=WND AND NUWIDMASK
+ IF P$=="SHADOW"THEN
+  IF!OTW_ENABLE_SHADOW THEN RETURN
+  VAR SP=WIN_SP[NUWID]AND 511
+  IF!SP THEN RETURN
+  VAR SP2=SPVAR(SP,1)
+  IF V&&SP2 THEN RETURN
+  IF V THEN
+   SPSET 2,511,0 OUT SP2
+   SPVAR SP,1,SP2
+   OTW_SPCHR NUWID
+   RETURN
+  ENDIF
+  IF!SP2 THEN RETURN
+  SPCLR SP2
+  SPVAR SP,1,-1
+  RETURN
+ ENDIF
+END
 COMMON DEF __GPSETWindow__ WND,X,Y,COL
  GPAGE OTW_SP,OTW_DP
  VAR AX=WIN_FX[WND AND NUWIDMASK]+X
@@ -3170,7 +3300,8 @@
  DEC H,SH
  DEC W,SW
  'GCLSWindow WND,WIN_BACKGND[NUWID]
- GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
+ VAR FRAMEBKGND=RGB(0,0,255)
+ GFILLWindow WND,0,-H+1,W-2,-1,FRAMEBKGND
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
  GLINEWindow WND,-1,-1,W-2,-1,RGB(0,0,0)
@@ -3179,7 +3310,15 @@
  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
+ 
  IF FW>1 THEN
+  IF WIN_STYLE_MINMAX==(WIN_STYLE[NUWID]AND WIN_STYLE_MINMAX)THEN
+   'min max button elements
+   GFILLWindow WND,W-30,-H+1,W-11,-H+10,FRAMEBKGND
+   GBOXWindow WND,W-19,-H+2,W-12,-H+9,C
+   GLINEWindow WND,W-29,-H+9,W-21,-H+9,C
+  ENDIF
+
   INC H,SH
   GLINEWindow WND,-1,-H+1,W-2,-H+1,-1
   GLINEWindow WND,-2,-H,W-1,-H,RGB(224,224,224)
@@ -3315,6 +3454,20 @@
   ENDIF
   RETURN
  ENDIF
+ IF WindowMinMaxStyle()==(GetWindowStyle(WND)AND WindowMinMaxStyle())THEN
+  IF X>=W-20THEN
+   IF BTN AND CTL_BTNUPFLG THEN
+    VOID MaximizeWindow(WND)
+   ENDIF
+   RETURN
+  ENDIF
+  IF X>=W-30THEN
+   IF BTN AND CTL_BTNUPFLG THEN
+    VOID MinimizeWindow(WND)
+   ENDIF
+   RETURN
+  ENDIF
+ ENDIF
  IF BTN AND CTL_LBTNFLG THEN
   IF BTN AND CTL_BTNDWNFLG THEN
  '  IF!IsFocusWindow(WND)THEN RETURN
@@ -3327,7 +3480,7 @@
    SPSHOW OTW_MOVWINSP
    SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
    SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
-   SPOFS OTW_MOVWINSP,AX-X,AY-Y,-256
+   SPOFS OTW_MOVWINSP,AX-X,AY-Y',-256
    SPLINK OTW_MOVWINSP,OTW_MOUSESP
    SPVAR OTW_MOVWINSP,1,NUWID
    SPVAR OTW_MOVWINSP,2,AX-X
@@ -3455,6 +3608,7 @@
   IF!OTW_SMOOTH_MOVE_WINDOW THEN OTW_INITSP 5
   VAR E=MoveWindow(WND,X,Y)
   E=FrontWindow(WND)
+  E=ActiveWindow(WND)
   SPUNLINK OTW_MOVWINSP
  ELSE
   MoveWindowSP TRUE
@@ -3463,6 +3617,68 @@
  MouseClipDef
  'OTW_MOVWINFLG=0
 END
+COMMON DEF MaximizeWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VOID SendChildWindowEvent(GetParentWindow(WND),WindowMaxmizeEvent(),WND)
+ RETURN 0
+END
+COMMON DEF MinimizeWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VOID SendChildWindowEvent(GetParentWindow(WND),WindowMinimizeEvent(),WND)
+ RETURN 0
+END
+COMMON DEF WindowMaxmizeEvent()
+ RETURN 1
+END
+COMMON DEF WindowMinimizeEvent()
+ RETURN 2
+END
+COMMON DEF WindowActiveEvent()
+ RETURN 3
+END
+COMMON DEF GetWindowFrameSize WND OUT W1,H1,W2,H2,ERR
+ IF!CheckWindow(WND)THEN
+  ERR=WIN_INVALIDID
+  W1=0
+  H1=0
+  W2=0
+  H2=0
+ ENDIF
+ VAR N=WND AND NUWIDMASK
+ W1=WIN_FW1[N]
+ H1=WIN_FH1[N]
+ W2=WIN_FW2[N]
+ H2=WIN_FH2[N]
+ DEC W2,W1
+ DEC H2,H1
+ ERR=0
+END
+DEF ControlDefChildWinHandler WND,CTL,TYPE,A1,CWND
+ VAR W1,W2,H1,H2,ERR
+ IF A1==WindowMaxmizeEvent()THEN
+  GetWindowFrameSize CWND OUT W1,H1,W2,H2,ERR
+  VOID MoveResizeWindow(CWND,0,0,GetWindowWidth(GetParentWindow(CWND))-W1-W2,GetWindowHeight(GetParentWindow(CWND))-H2-H1)
+  RETURN
+ ELSEIF A1==WindowMinimizeEvent()THEN
+  VOID MoveResizeWindow(CWND,0,GetWindowHeight(GetParentWindow(CWND))-16,32,16)
+  RETURN
+ ENDIF
+ VOID SendChildWindowEvent(GetParentWindow(WND),A1,CWND)
+END
+DEF WindowChildWindow WND,CTL,TYPE,A1,CWND
+ IF A1==WindowActiveEvent()THEN
+  VOID FrontWindow(WND)
+ ELSEIF A1==WindowMaxmizeEvent()THEN
+  RETURN
+ ELSEIF A1==WindowMinimizeEvent()THEN
+  RETURN
+ ENDIF
+ VOID SendChildWindowEvent(GetParentWindow(WND),A1,CWND)
+END
+COMMON DEF GetWindowStyle(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ RETURN WIN_STYLE[WND AND NUWIDMASK]
+END
 COMMON DEF IsOwnerDrawWindow(WND)
  RETURN !!(WIN_STYLE[WND AND NUWIDMASK]AND WIN_STYLE_OWNERDRAW)
 END
@@ -3595,11 +3811,18 @@
  GPRINTWindow W,1,1,NA$,RGB(0,0,0)
  IF IsFocusWindow(W)THEN
   GFILLWindow W,CX*8,6,CX*8+8,7,RGB(0,0,0)
+  E=SetWindowCursor(W,CX*8+1,1)
  ENDIF
  GBOXWindow W,0,0,WI,HE,RGB(0,0,0)
  E=GEndWindow(W)
 END
 DEF TextBoxLMouseDown W,C,T,X,Y
+ VAR L=LEN(GetWindowName$(W))
+ VAR CX=MAX(0,MIN(X DIV 8,L))
+ IF CX!=GetWindowVar(W,1) THEN
+  SetWindowVar W,1,CX
+  VOID RepaintWindow(W)
+ ENDIF
 END
 DEF TextBoxChFocus W,C,T,X,Y
  TextBoxPainter W,C,T,0,0
@@ -3620,21 +3843,16 @@
  TextBoxPainter W,C,T,0,0
 END
 DEF TextBoxButton W,C,T,B,A2
- VAR F=GetWindowVar(W,2)
- VAR M=MAINCNT
- IF M-F>10THEN
-  SetWindowVar W,2,M
-  VAR CX=GetWindowVar(W,1)
-  IF B AND 4&&CX THEN
-   SetWindowVar W,1,CX-1
+ VAR CX=GetWindowVar(W,1)
+ IF B AND 4&&CX THEN
+  SetWindowVar W,1,CX-1
+  TextBoxPainter W,C,T,0,0
+ ENDIF
+ IF B AND 8THEN
+  IF LEN(GetWindowName$(W))>CX THEN
+   SetWindowVar W,1,CX+1
    TextBoxPainter W,C,T,0,0
   ENDIF
-  IF B AND 8THEN
-   IF LEN(GetWindowName$(W))>CX THEN
-    SetWindowVar W,1,CX+1
-    TextBoxPainter W,C,T,0,0
-   ENDIF
-  ENDIF
  ENDIF
  
 ' BEEP
@@ -3851,16 +4069,16 @@
  LISTSTRNEXT[L]=0
  VAR LEN=GetWindowVar(WND,6)+1
  SetWindowVar WND,6,LEN
- VAR S=(GetWindowHeight(WND)-2)DIV 8
- IF LEN>S THEN DEC LEN,S ELSE LEN=0
- SetScrollBarSize GetWindowVar(WND,4),LEN
+' VAR S=(GetWindowHeight(WND)-2)DIV 8
+' IF LEN>S THEN DEC LEN,S ELSE LEN=0
+ SetScrollBarSize GetWindowVar(WND,4),LEN-1
 END
 DEF LISTBOX_ADJUSTSCRBAR WND
  VAR LEN=GetWindowVar(WND,6)
- VAR S=(GetWindowHeight(WND)-2)DIV 8
- IF LEN>S THEN DEC LEN,S ELSE LEN=0
+' VAR S=(GetWindowHeight(WND)-2)DIV 8
+' IF LEN>S THEN DEC LEN,S ELSE LEN=0
  VAR SCR=GetWindowVar(WND,4)
- SetScrollBarSize SCR,LEN
+ SetScrollBarSize SCR,LEN-1
 END
 DEF ListBoxLMD WND,CT,T,X,Y
  VAR W=GetWindowWidth(WND)-1
@@ -3925,6 +4143,7 @@
  SetWindowVar WND,3,0
  SetWindowVar WND,2,0
  SetWindowVar WND,1,0
+ SetWindowVar WND,6,0
  VOID RepaintWindow(WND)
 END
 DEF ListBoxNotif WND,CT,T,A1,POS
@@ -3979,6 +4198,65 @@
  GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  E=GEndWindow(WND)
 END
+DEF LISTBOX_SEL WND
+ VAR V=GetWindowVar(WND,3)
+ VAR S=GetWindowVar(WND,7)
+ IF!S THEN
+  RETURN
+ ENDIF
+ VAR H=GetWindowHeight(WND)
+ VAR L=GetWindowVar(WND,3),Y=1
+ IF!L THEN
+  L=GetWindowVar(WND,1)
+  SetWindowVar WND,3,L
+ ENDIF
+ IF LISTSTRPREV[L]==S THEN
+  SetWindowVar WND,3,LISTSTRPREV[L]
+  VAR SCR=GetWindowVar(WND,4)
+  SetScrollBarPosition SCR,GetScrollBarPosition(SCR)-1
+  RETURN
+ ENDIF
+ WHILE L
+  IF S==L THEN
+   RETURN
+  ENDIF
+  INC Y,8
+  IF Y>=H THEN BREAK
+  L=LISTSTRNEXT[L]
+ WEND
+ IF LISTSTRNEXT[L]==S THEN
+  SetWindowVar WND,3,LISTSTRNEXT[GetWindowVar(WND,3)]
+      SCR=GetWindowVar(WND,4)
+  SetScrollBarPosition SCR,GetScrollBarPosition(SCR)+1
+  RETURN
+ ENDIF
+END
+COMMON DEF ListBoxButton WND,CTL,T,BTN,__
+ VAR V=GetWindowVar(WND,3)
+ VAR S=GetWindowVar(WND,7)
+ IF!S THEN
+  SetWindowVar WND,7,V
+  ListBoxPainter WND,CTL,T,0,0
+  RETURN
+ ENDIF
+ IF BTN==#UP THEN
+  IF LISTSTRPREV[S]THEN
+   S=LISTSTRPREV[S]
+   SetWindowVar WND,7,S
+   LISTBOX_SEL WND
+   ListBoxPainter WND,CTL,T,0,0
+  ENDIF
+ ENDIF
+ IF BTN==#DOWN THEN
+  IF LISTSTRNEXT[S]THEN
+   S=LISTSTRNEXT[S]
+   SetWindowVar WND,7,S
+   LISTBOX_SEL WND
+   ListBoxPainter WND,CTL,T,0,0
+  ENDIF
+ ENDIF
+END
+
 COMMON DEF ListBoxResize WND,CTL,T,A1,WH
  VAR W,H
  SplitInt WH OUT W,H
@@ -4072,10 +4350,16 @@
  @ERR
  RETURN
 END
+COMMON DEF DropDownListNotif WND,CT,T,A1,A2
+ VAR L=GetWindowVar(WND,0)
+ IF L&&L==A1 THEN
+  VOID HideWindow(L)
+ ENDIF
+END
 COMMON DEF DropDownListBoxChFocus WND,CT,T,F,A2
- IF!F THEN
+ IF!F&&!IsActiveWindow(WND) THEN
   IF HideWindow(WND)THEN RETURN
-  VOID RepaintWindow(GetParentWindow(WND))
+  VOID RepaintWindow(GetWindowGroupOwner(WND))
  ENDIF
 END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
@@ -4500,13 +4784,21 @@
  ' NEXT
 ' NEXT
   GCLS RGB(0,192,0)
+  GCLS RGB(0,224,224)
+  GCLS RGB(0,128,128)
+
+
+
+  GCLS #BLUE
   FOR I=-400TO 400 STEP 2
    GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
   NEXT
-  GCLS RGB(0,224,224)
-  GCLS RGB(0,128,128)
   'GCLS RGB(191,191,191)
-  GPUTCHR 0,0,"otya window system 5.0",2,4
+  GPUTCHR 0,2,"otya window system 5.0",2,4
+  FOR I=-400TO 400 STEP 2
+   GLINE I,0,I+400,400,RGB(0,0,255)'RGB(255,255,255)
+  NEXT
+  GPUTCHR 2,0,"otya window system 5.0",2,4
   GPUTCHR 0,240-8,"One moment please...",1,1
   GPUTCHR 1,240-8,"One moment please...",1,1
   GPAGE OTW_SP,OTW_DP
@@ -4598,6 +4890,10 @@
 ' NewProcess"LAUNCHER","" OUT E,E
   NewProcess"RIM","" OUT E,E
   NewProcess"ODE","" OUT E,E
+  BREPEAT 0,15,4
+  BREPEAT 1,15,4
+  BREPEAT 2,15,4
+  BREPEAT 3,15,4
  ENDIF
 RETURN
 END
@@ -4660,12 +4956,7 @@
   'LEFT MOUSE DOWN
   IF BTN AND OTW_LMOUSEDWN THEN
    CAPTURE_WND=0
-   VAR OA=WIN_ACTIVENUWID
-   WIN_ACTIVENUWID=NUWID
-   IF WIN_ACTIVENUWID!=OA THEN
-    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
-    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
-   ENDIF
+   E=FocusWindow(NUWIDToWND(NUWID AND 32767))
    VAR F=MAINCNT
    IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
     OTW_LCLKWND=0
@@ -4724,12 +5015,7 @@
   '=====R=====
   IF BTN AND OTW_RMOUSEDWN THEN
    CAPTURE_WND=0
-   OA=WIN_ACTIVENUWID
-   WIN_ACTIVENUWID=NUWID
-   IF WIN_ACTIVENUWID!=OA THEN
-    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
-    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
-   ENDIF
+   E=FocusWindow(NUWIDToWND(NUWID AND 32767))
    F=MAINCNT
    IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
     OTW_LCLKWND=0
@@ -4828,7 +5114,7 @@
  ENDIF
  BTN=BUTTON()AND OTW_USEBTN
  IF BTN||OTW_OLDBTN THEN
-  IF MAINCNT-OTW_OLDBTNF||OTW_OLDBTN THEN
+  IF MAINCNT-OTW_OLDBTNF>=8||!OTW_OLDBTN THEN
    E=SendButtonWindow(NUWIDToWND(WIN_ACTIVENUWID),BTN)
    OTW_OLDBTNF=MAINCNT
    OTW_OLDBTN=BTN
@@ -5058,7 +5344,7 @@
  ENDIF
  IF LAUNCHERCTL THEN
   VAR WND,E
-  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,99,WINDOWRESIZABLESTYLE() OUT WND,E
+  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,99,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
   SetProcessVar WND
   NewWindow GetListBoxControl(),"",0,0,80,98,WND,0 OUT WND,E
   AddArrayListBoxItem WND,LAUNCHERITEM$
@@ -5213,6 +5499,7 @@
 END
 VAR OTW_MOUSEOLDX,OTW_MOUSEOLDY
 VAR OTW_MOUSEOLDST
+VAR OTW_OLDSTICKMCNT
 COMMON DEF UpdateMouse
  VAR S,X,Y
  TOUCH OUT S,X,Y
@@ -5235,16 +5522,36 @@
    
    OTW_SP=OTW_DP
    GPAGE OTW_DP,OTW_DP
+   PRUN_RESTORE
    KEY 1,"
   ENDIF
  ENDIF
  OTW_MOUSEOLDX=X
  OTW_MOUSEOLDY=Y
  OTW_MOUSEOLDST=S
- IF!S THEN
+ VAR MCNT=MAINCNT
+ IF OTW_OLDSTICKMCNT-MCNT THEN
   VAR X#,Y#
   STICK OUT X#,Y#
+  VAR D=(MAINCNT-OTW_OLDSTICKMCNT)*2.5
   IF X#!=0 OR Y#!=0 THEN
+   OTW_MOUSEX#=OTW_MOUSEX#+X#*D
+   OTW_MOUSEY#=OTW_MOUSEY#-Y#*D
+   IF OTW_MOUSEX#<OTW_MOUSECLIPX THEN OTW_MOUSEX#=OTW_MOUSECLIPX
+   IF OTW_MOUSEY#<OTW_MOUSECLIPY THEN OTW_MOUSEY#=OTW_MOUSECLIPY
+   IF OTW_MOUSEX#>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX#=OTW_MOUSECLIPX2-1
+   IF OTW_MOUSEY#>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY#=OTW_MOUSECLIPY2
+   'SPANIM OTW_MOUSESP,"XY",OTW_OLDSTICKMCNT-MCNT,OTW_MOUSEX#,OTW_MOUSEY#
+   SPOFS OTW_MOUSESP,OTW_MOUSEX#,OTW_MOUSEY#
+   OTW_MOUSEX=OTW_MOUSEX#
+   OTW_MOUSEY=OTW_MOUSEY#
+  ENDIF
+  OTW_OLDSTICKMCNT=MCNT
+ ENDIF
+ IF 0&&!S THEN
+'  VAR X#,Y#
+  STICK OUT X#,Y#
+  IF X#!=0 OR Y#!=0 THEN
    OTW_MOUSEX#=OTW_MOUSEX#+X#*(4/OTW_FPF#)'0.2'/2
    OTW_MOUSEY#=OTW_MOUSEY#-Y#*(4/OTW_FPF#)'0.2'/2
    IF OTW_MOUSEX#<OTW_MOUSECLIPX THEN OTW_MOUSEX#=OTW_MOUSECLIPX
@@ -5385,6 +5692,7 @@
 DIM TXTBOXEX_CSELPOS2[0]
 DIM TXTBOXEX_CISSEL[0]
 DIM TXTBOXEX_CISSELING[0]
+DIM TXTBOXEX_CLINECNT[0]
 COMMON DEF GetTextBoxExControl()
  RETURN TXTBOXEXCTL
 END
@@ -5426,6 +5734,7 @@
   TXTBOXEX_CSELPOS2=NewArray(TXTBOXEX_MAXCTL)
   TXTBOXEX_CISSEL=NewArray(TXTBOXEX_MAXCTL)
   TXTBOXEX_CISSELING=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CLINECNT=NewArray(TXTBOXEX_MAXCTL)
   VAR I
   FOR I=1TO TXTBOXEX_LINESIZ-2
    TXTBOXEX_NEXT[I]=I+1
@@ -5439,14 +5748,14 @@
   AddMenuItem TextBoxEx_MENU,"Cut",2
   AddMenuItem TextBoxEx_MENU,"Paste",3
   AddMenuItemSeparator TextBoxEx_MENU
-  AddMenuItem TextBoxEx_MENU,"Select all",3
+  AddMenuItem TextBoxEx_MENU,"Select all",4
  ENDIF
 END
 DEF TXTED_NewCTL(WND)
  VAR R=TXTBOXEX_CFREE
  IF!R THEN RETURN 0
  TXTBOXEX_CFREE=TXTBOXEX_CNEXT[TXTBOXEX_CFREE]
- TXTBOXEX_CLINE[R]=1
+ TXTBOXEX_CLINE[TXTBOXEX_CFREE]=0
  RETURN TXTBOXEX_CFREE
 END
 DEF TXTED_NewLINE(V$,P)
@@ -5535,17 +5844,21 @@
  LINE=TXTBOXEX_CLINE[GETWINDOWVar(WND,7)]
  VAR OV
 ' IF X<33THEN RETURN
+ VAR TW,TH
+ VAR LW=TXTED_GETLINEW(W)
  WHILE V
   OV=V
   LINE=LINE+1
-  Y2=Y1+8
+'  TW=LEN(TXTBOXEX_VAL$[V]) MOD LW
+  TH=(LEN(TXTBOXEX_VAL$[V]) DIV LW)*8+8
+  Y2=Y1+TH
   IF Y>=Y1&&Y<Y2 THEN
    BREAK
   ENDIF
-  INC Y1,8
+  Y1=Y2
   V=TXTBOXEX_NEXT[V]
  WEND
- POS=MAX(0,(X-1-32) DIV 8)
+ POS=MAX(0,((X-1-32) DIV 8)+(ABS(Y1-Y)DIV 8)*LW)
  IF!V THEN V=OV
 END
 COMMON DEF TextBoxExLMD WND,CTL,T,X,Y
@@ -5574,21 +5887,28 @@
  ShowContextMenu TextBoxEx_MENU,WND
 END
 DEF TEXTBOXEX_MENU WND,ID
- ON ID GOTO @UNK,@COPY,@CUT,@PASTE
+ ON ID GOTO @UNK,@COPY,@CUT,@PASTE,@ALL
  @UNK
  ?"UNK
  RETURN
- @COPY
  @CUT
+ TextBoxExCopy WND
+ VAR _
+ TEXTBOXEX_REMOVESELECTEDTEXT WND OUT _,_
+ RETURN
+ @COPY
 '?TEXTBOXEXGETSELECTEDTEXT(WND)
  TextBoxExCopy WND
  RETURN
  @PASTE
  TextBoxExPaste WND
+ RETURN
+ @ALL
+ TextBoxExSelectAll WND
 END
 COMMON DEF TextBoxExNotif WND,CTL,T,_,POS
  'MENU
- IF _==0 THEN
+ IF _==MenuNotifID() THEN
   TEXTBOXEX_MENU WND,POS
   RETURN
  ENDIF
@@ -5661,17 +5981,43 @@
 COMMON DEF TextBoxExChFocus WND,CTL,T,_,__
  TextBoxExRepaint WND
 END
+DEF TXTED_GETLINEW(W)
+ RETURN MAX(1,(W-32-8)DIV 8)
+END
+DEF TextBoxExDrawSelBox SELPOS1,SELPOS2,LINEC,LEN,X,Y,W
+ SELPOS1=MIN(LEN,SELPOS1)
+ SELPOS2=MIN(LEN,SELPOS2)
+ VAR SY1=SELPOS1 DIV LINEC
+ VAR SY2=SELPOS2 DIV LINEC
+ IF SY1>SY2 THEN
+  SWAP SY1,SY2
+  SWAP SELPOS1,SELPOS2
+ ENDIF
+ VAR SLC=GetSelectionColor()
+
+ IF SY1==SY2 THEN
+  GFILL X+SELPOS1 MOD LINEC*8,Y+SY1*8,X+SELPOS2 MOD LINEC*8-1,Y+SY2*8+7,SLC
+ ELSE
+  VAR K
+  IF SY2-SY1>1THEN
+   GFILL X,Y+SY1*8+8,W,Y+SY2*8-1,SLC
+  ENDIF
+  GFILL X+SELPOS1 MOD LINEC*8,Y+SY1*8,W,Y+SY1*8+7,SLC
+  GFILL X,Y+SY2*8,X+SELPOS2 MOD LINEC*8-1,Y+SY2*8+7,SLC
+ ENDIF
+END
 COMMON DEF TextBoxExRepaint WND
- VAR E=GBeginWindow(WND)
+ VAR E=GBeginDirect(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ GCLIP 1,0,0,W,H
  VAR BOX=GetWindowVar(WND,7)
  VAR SH=GetTextBoxExMode(BOX)
  IF SH THEN
-  GCLSWindow WND,RGB(0,0,0)
+  GCLS RGB(0,0,0)
  ELSE
-  GCLSWindow WND,RGB(255,255,255)
+  GCLS RGB(255,255,255)
  ENDIF
- VAR W=GetWindowWidth(WND)
- VAR H=GetWindowHeight(WND)
  VAR L=GetWindowVar(WND,1)
  VAR C=GetWindowVar(WND,2)
  VAR V$=TXTBOXEX_VAL$[C]
@@ -5687,6 +6033,7 @@
  VAR Y=1,X=32,PL,LC
  VAR LINE=GetTextBoxExLine(BOX),_
  VAR M0=MAINCNT
+ VAR LINEC=TXTED_GETLINEW(W)'((W-X)DIV 8)-1
  IF TXTBOXEX_CISSEL[BOX]THEN
   VAR SELLINE1=TXTBOXEX_CSELLINE1[BOX]
   VAR SELLINE2=TXTBOXEX_CSELLINE2[BOX]
@@ -5713,37 +6060,52 @@
   IF LINE>=100&&_<=&H9THEN INC _,&H64
   IF !_ THEN _=&H6E
   INC LS$,CHR$(&HE100+_)
-  GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
+  GPUTCHR 1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
   IF LINE>SELLINE1&&LINE<SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,SLC
+   VAR LH=LEN(V$) DIV LINEC
+   IF LH THEN
+    GFILL X,Y,W,Y+LH*8-1,SLC
+   ENDIF
+   GFILL X,Y+LH*8,X+LEN(V$) MOD LINEC*8-1,Y+LH*8+7,SLC
+   'GFILL X,Y,X+LEN(V$)*8,Y+7,SLC
   ENDIF
   IF LINE==SELLINE1&&LINE==SELLINE2 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
+   TextBoxExDrawSelBox SELPOS1,SELPOS2,LINEC,LEN(V$),X,Y,W
+   'GFILL X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ELSEIF LINE==SELLINE1 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,SLC
+   TextBoxExDrawSelBox SELPOS1,LEN(V$),LINEC,LEN(V$),X,Y,W
+'   GFILL X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,SLC
   ELSEIF LINE==SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
+   TextBoxExDrawSelBox 0,SELPOS2,LINEC,LEN(V$),X,Y,W
+'   GFILL X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ENDIF
+  VAR OY=Y
   IF SH THEN
-   TXTED_PRGPRINT WND,X,Y,V$
+   TXTED_PRGPRINT X,Y,V$,LINEC
   ELSE
-   GPRINTWindow WND,X,Y,V$,TC
+   TXTED_PRINT X,Y,V$,TC,LINEC
+'   GPUTCHR X,Y,V$,TC
   ENDIF
+  Y=Y+LEN(V$) DIV LINEC*8
   PL=L
   IF L==C&&IsActiveWindow(WND)THEN
-   GFILLWindow WND,X+CX*8,Y+7,X+7+CX*8,Y+6,TC
+   'GFILL X+CX*8,Y+7,X+7+CX*8,Y+6,TC
+   VAR _CX=X+(CX MOD LINEC)*8,_CY=OY+CX DIV LINEC*8
+   GFILL _CX,_CY+6,_CX+7,_CY+7,TC
+   VOID SetWindowCursor(WND,_CX,_CY)
   ENDIF
   L=TXTBOXEX_NEXT[L]
   INC Y,8
-  IF Y>=H THEN BREAK
+  IF Y+8>=H THEN BREAK
   IF!L THEN
    IF!LEN(V$)||V$[LEN(V$)-1]!=L$THEN
-'    GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
+'    GPUTCHR LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsActiveWindow(WND)THEN
-     GFILLWindow WND,X+CX*8,Y-1,X+7+CX*8,Y-2,TC
+     GFILL X+CX*8,Y-1,X+7+CX*8,Y-2,TC
+     VOID SetWindowCursor(WND,X+CX*8,Y)
     ENDIF
    ELSE
-'    GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
+'    GPUTCHR X,Y,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsFocusWindow(WND)THEN
   '   GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
     ENDIF
@@ -5753,10 +6115,20 @@
   ENDIF
   IF MAINCNT-M0>1THEN UpdateMouse
  WEND
- GBOXWindow WND,0,0,W,H,RGB(0,0,0)
- E=GEndWindow(WND)
+ GBOX 0,0,W,H,RGB(0,0,0)
+ E=GCopyDirect(WND,0,0,W,H,0,0,0)
  SetWindowVar WND,6,PL
 END
+DEF TXTED_PRINT X,Y,V$,TC,W
+ IF LEN(V$)<=W THEN
+  GPUTCHR X,Y,V$,TC
+  RETURN
+ ENDIF
+ VAR I,L=(LEN(V$) DIV W)
+ FOR I=0TO L
+  GPUTCHR X,Y+I*8,MID$(V$,I*W,W),TC
+ NEXT
+END
 DEF TXTED_UpCursor(WND)
   VAR C=GetWindowVar(WND,2)
   IF TXTBOXEX_PREV[C]THEN
@@ -5775,10 +6147,28 @@
   ENDIF
   RETURN 0
 END
+DEF TXTED_GETLASTVLINE(WND)
+ VAR LINEC=TXTED_GETLINEW(GetWindowWidth(WND))
+ VAR H=GetWindowHeight(WND)
+ VAR Y=1
+ VAR C=GetWindowVar(WND,1)
+ VAR PL=C
+ WHILE C
+  PL=C
+  INC Y,(LEN(TXTBOXEX_VAL$[C])DIV LINEC)*8+8
+  IF Y+8>=H THEN
+   BREAK
+  ENDIF
+  C=TXTBOXEX_NEXT[C]
+ WEND
+ RETURN PL
+END
 DEF TXTED_DownCursor(WND)
   VAR C=GetWindowVar(WND,2)
+  VAR ISSCROLL=0
   IF TXTBOXEX_NEXT[C]THEN
    IF GetWindowVar(WND,6)==C THEN
+ @TAIL
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
      SetWindowVar WND,1,L
@@ -5786,10 +6176,16 @@
      VAR LINE=GetTextBoxExLine(BOX)+1
      SetTextBoxExLine BOX,LINE
      SetScrollBarPosition GetChildWindow(WND),LINE
+     ISSCROLL=TRUE
     ENDIF
    ENDIF
    C=TXTBOXEX_NEXT[C]
    SetWindowVar WND,2,C
+   IF ISSCROLL THEN
+    VAR P=TXTED_GETLASTVLINE(WND)
+    ISSCROLL=0
+    IF P!=C THEN @TAIL
+   ENDIF
    RETURN 1
   ENDIF
   RETURN 0
@@ -5800,7 +6196,7 @@
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
  TXTBOXEX_CISSEL[BOX]=0
  IF!BTN THEN SetWindowVar WND,5,0RETURN
- IF MAINCNT-F<R THEN RETURN
+' IF MAINCNT-F<R THEN RETURN
 
  IF BTN AND 1 THEN
   IF TXTED_UpCursor(WND)THEN
@@ -5851,11 +6247,16 @@
   SetWindowVar WND,4,MAINCNT
  ENDIF
 END
+DEF TextBoxEx_UpdateScrollBar WND
+ VAR SCRBAR=GetChildWindow(WND)
+ VAR BOX=GetWindowVar(WND,7)
+ SetScrollBarSize SCRBAR,TXTBOXEX_CLINECNT[BOX]-1
+END
+
 COMMON DEF TextBoxExKey WND,CTL,T,KEY,_
  VAR C=GetWindowVar(WND,2)
  VAR BOX=GetWindowVar(WND,7)
  IF TXTBOXEX_CISSELING[BOX]THEN RETURN
- TXTBOXEX_CISSEL[BOX]=0
  IF!C THEN
   C=TXTED_NewLINE("",0)
   SetWindowVar WND,1,C
@@ -5865,6 +6266,11 @@
  ENDIF
  VAR X=GetWindowVar(WND,3)
  VAR K$=CHR$(KEY)
+ IF TXTBOXEX_CISSEL[BOX]THEN
+  TEXTBOXEX_REMOVESELECTEDTEXT WND OUT C,X
+  IF K$==BS$()THEN @END
+ ENDIF
+ TXTBOXEX_CISSEL[BOX]=0
  IF K$==CR$()THEN K$=LF$()
  IF K$==BS$()THEN
   IF X>0THEN
@@ -5875,6 +6281,7 @@
    IF P THEN
     VAR L=GetWindowVar(WND,1)
     VAR V$=TXTBOXEX_VAL$[C]
+    DEC TXTBOXEX_CLINECNT[BOX]
     L=TXTED_DeleteLine(C)
     IF C==TXTBOXEX_CFIRST[BOX]THEN
      TXTBOXEX_CFIRST[BOX]=L
@@ -5884,7 +6291,14 @@
     SetWindowVar WND,3,LEN(TXTBOXEX_VAL$[L])
     INC TXTBOXEX_VAL$[L],MID$(V$,X,LEN(V$)-X)
     L=GetWindowVar(WND,1)
+    TextBoxEx_UpdateScrollBar WND
+     VAR SCRBAR=GetChildWindow(WND)
+    TextBoxEx_UpdateScrollBar WND
+
     IF L==C THEN
+     VAR LINE=GetTextBoxExLine(BOX)-1
+     SetTextBoxExLine BOX,LINE
+     SetScrollBarPosition SCRBAR,LINE
      SetWindowVar WND,1,GetWindowVar(WND,2)
     ENDIF
    ENDIF
@@ -5892,21 +6306,23 @@
  ELSE
   IF K$==LF$()THEN
    VAR C2=TXTED_NewLine(MID$(TXTBOXEX_VAL$[C],X,LEN(TXTBOXEX_VAL$[C])-X),C)
+   INC TXTBOXEX_CLINECNT[BOX]
    IF!C2 THEN RETURN
    SetWindowVar WND,2,C2
    SetWindowVar WND,3,0
    TXTBOXEX_VAL$[C]=MID$(TXTBOXEX_VAL$[C],0,X)+K$
-   IF GetWindowVar(WND,6)==C THEN
+   IF 1||GetWindowVar(WND,6)==C THEN
     L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
-     VAR LINE=GetTextBoxExLine(BOX)+1
-     SetTextBoxExLine BOX,LINE
-     VAR SCRBAR=GetChildWindow(WND)
-     IF GetScrollBarSize(SCRBAR)<LINE THEN
-      SetScrollBarSize SCRBAR,LINE
+         LINE=GetTextBoxExLine(BOX)
+     IF GetWindowVar(WND,6)==C THEN
+      SetWindowVar WND,1,L
+      INC LINE
      ENDIF
+     SetTextBoxExLine BOX,LINE
+         SCRBAR=GetChildWindow(WND)
+     TextBoxEx_UpdateScrollBar WND
      SetScrollBarPosition SCRBAR,LINE
-     SetWindowVar WND,1,L
     ENDIF
    ENDIF
   ELSE
@@ -5916,11 +6332,13 @@
    SetWindowVar WND,3,X+1
   ENDIF
  ENDIF
+ @END
  TextBoxExRepaint WND
 END
 COMMON DEF TextBoxExSetText WND,TXT$
  VAR BOX=GetWindowVar(WND,7)
  VAR C=GetWindowVar(WND,1),I,J
+ TXTBOXEX_CISSEL[BOX]=FALSE
  IF C THEN
   I=C
   WHILE 1
@@ -5948,7 +6366,7 @@
    OC=1
   ENDIF
   IF!C THEN BREAK
-  IF I==LEN(TXT$)-1THEN BREAK
+  IF I==LEN(TXT$)-1THEN INC L:BREAK
   I=J+1
  WEND
  IF!LEN(TXT$)THEN
@@ -5957,9 +6375,11 @@
   SetWindowVar WND,2,C
   TXTBOXEX_CFIRST[BOX]=C
  ENDIF
+ TXTBOXEX_CLINECNT[BOX]=L+15
  VAR S=L+CEIL((GetWindowHeight(WND)-2)/8)
  IF S<0THEN S=0
- SetScrollBarSize GetChildWindow(WND),S
+ TextBoxEx_UpdateScrollBar WND
+' SetScrollBarSize GetChildWindow(WND),S
  SetScrollBarPosition GetChildWindow(WND),0
  SetTextBoxExLine BOX,0
  VOID RepaintWindow(WND)
@@ -5984,6 +6404,22 @@
  VAR TXT$=ClipboardGetText$()
  TextBoxExSetSelectedText WND,TXT$
 END
+COMMON DEF TextBoxExSelectAll WND
+ VAR BOX=GetWindowVar(WND,7)
+ VAR C=TXTBOXEX_CFIRST[BOX]
+ TXTBOXEX_CSELLINE1[BOX]=1
+ TXTBOXEX_CSELPOS1[BOX]=0
+ VAR LINE
+ WHILE C
+  VAR OC=C
+  INC LINE
+  C=TXTBOXEX_NEXT[C]
+ WEND
+ TXTBOXEX_CSELLINE2[BOX]=LINE
+ TXTBOXEX_CSELPOS2[BOX]=LEN(TXTBOXEX_VAL$[OC])
+ TXTBOXEX_CISSEL[BOX]=TRUE
+ VOID RepaintWindow(WND)
+END
 'TXT$->LINEOBJ
 DEF TEXTBOXEX_PARSETXT TXT$ OUT LINEFIRST,LINELAST,LINECOUNT
  VAR I,J
@@ -6015,8 +6451,8 @@
 'RET:LINE
 DEF TEXTBOXEX_REMOVESELECTEDTEXT WND OUT L,CX
  VAR BOX=GetWindowVar(WND,7)
+ L=GetWindowVar(WND,2)
  IF!TXTBOXEX_CISSEL[BOX]THEN
-  L=GetWindowVar(WND,2)
   CX=GetWindowVar(WND,3)
   RETURN
  ENDIF
@@ -6030,7 +6466,20 @@
   SWAP SELLINE1,SELLINE2
   SWAP SELPOS1,SELPOS2
  ENDIF
+ VAR SEL1LINEDAT
  VAR LINE
+ VAR DELLINE=SELLINE2-SELLINE1
+ VAR SCRBAR=GetChildWindow(WND)
+ VAR CS=TXTBOXEX_CLINECNT[BOX]
+ DEC TXTBOXEX_CLINECNT[BOX],DELLINE
+ TextBoxEx_UpdateScrollBar WND
+ 'SetScrollBarSize SCRBAR,MAX(0,CS-DELLINE-16)
+ IF GetTextBoxExLine(BOX)>CS-DELLINE THEN
+  SetTextBoxExLine BOX,CS-DELLINE
+  TXTBOXEX_CLINECNT[BOX]=CS-DELLINE
+  SetScrollBarPosition SCRBAR,MAX(0,CS-DELLINE-16)
+
+ ENDIF
  CX=SELPOS1
  WHILE C
   INC LINE
@@ -6049,17 +6498,30 @@
   ELSEIF SELLINE1==LINE THEN
    SELPOS1=MIN(SELPOS1,LEN(TXTBOXEX_VAL$[C])-1)
    IF SELPOS1 THEN
-    TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],SELPOS1-1)
+    TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],SELPOS1)
    ELSE
     TXTBOXEX_VAL$[C]=""
    ENDIF
-   CX=MIN(CX,MAX(LEN(TXTBOXEX_VAL$[C])-1,0))
+'   CX=MIN(CX,MAX(LEN(TXTBOXEX_VAL$[C])-1,0))
+   SEL1LINEDAT=C
   ELSEIF SELLINE2==LINE THEN
    SELPOS2=MIN(SELPOS2,LEN(TXTBOXEX_VAL$[C])-1)
+'AAA<
+'BBB
+'C>CC
+   CX=LEN(TXTBOXEX_VAL$[SEL1LINEDAT])
+   INC TXTBOXEX_VAL$[SEL1LINEDAT],RIGHT$(TXTBOXEX_VAL$[C],LEN(TXTBOXEX_VAL$[C])-SELPOS2)
    TXTBOXEX_VAL$[C]=RIGHT$(TXTBOXEX_VAL$[C],LEN(TXTBOXEX_VAL$[C])-SELPOS2-1)
+   VAR OC=C
+   C=TXTBOXEX_NEXT[C]
+   VAR _=TXTED_DeleteLine(OC)
+   
+   C=SEL1LINEDAT
    BREAK
   ELSEIF SELLINE1<LINE THEN
-   C=TXTED_DeleteLine(C)
+   OC=C
+   C=TXTBOXEX_NEXT[C]
+   _=TXTED_DeleteLine(OC)
    CONTINUE
   ENDIF
   C=TXTBOXEX_NEXT[C]
@@ -6082,6 +6544,8 @@
  VAR C
  VAR CX
  TEXTBOXEX_REMOVESELECTEDTEXT WND OUT C,CX
+ VAR BOX=GetWindowVar(WND,7)
+
  IF LASTLF THEN
   VAR MATSUO$=MID$(TXTBOXEX_VAL$[C],CX,LEN(TXTBOXEX_VAL$[C])-CX)
   TXTBOXEX_VAL$[C]=LEFT$(TXTBOXEX_VAL$[C],CX)+T1$
@@ -6090,9 +6554,13 @@
   ELSE
    VOID TXTED_NewLine(MATSUO$,C)
   ENDIF
+  DEC _3
  ELSE
   TXTBOXEX_VAL$[C]=InsertStr$(TXTBOXEX_VAL$[C],CX,T1$)
+  DEC _3
  ENDIF
+ INC TXTBOXEX_CLINECNT[BOX],_3
+ TextBoxEx_UpdateScrollBar WND
  IF _1==_2 THEN
   VOID TXTED_DeleteLine(_1)
   RETURN
@@ -6182,7 +6650,9 @@
 VAR RTXTEDMOD
 VAR RTXTEDDIV
 VAR RTXTEDCALL
-COMMON DEF TXTED_PRGPRINT WND,X,Y,P$
+COMMON DEF TXTED_PRGPRINT X,Y,P$,W
+ W=W*8+X
+ VAR OFSX=X
  VAR L=LEN(P$)-1,I,A
  VAR _0=ASC("0"),_9=ASC("9"),_Q=34
  VAR _S=ASC("'"),_A=ASC("A"),_Z=ASC("Z")
@@ -6202,23 +6672,42 @@
     BREAK
    NEXT
    VAR I$=MID$(P$,S,I-S)
+   VAR C=RGB(0,198,247)
    IF CHKVAR("RTXTED"+I$)THEN
-    GPRINTWindow WND,X,Y,I$,RGB(0,198,247)
+    C=RGB(0,198,247)
    ELSE
-    GPRINTWindow WND,X,Y,I$,-1'RGB(0,0,0)
+    C=-1
    ENDIF
-   INC X,LEN(I$)*8
+   VAR S2=0
+   VAR CL=(W-X)DIV 8
+   WHILE 1
+    IF CL>=LEN(I$)-S2 THEN
+     I$=MID$(I$,S2,CL)
+     GPUTCHR X,Y,I$,C
+     INC X,LEN(I$)*8
+     IF X>=W THEN X=OFSX:Y=Y+8
+     BREAK
+    ELSE
+     GPUTCHR X,Y,MID$(I$,S2,CL),C
+     X=OFSX
+     INC Y,8
+     INC S2,CL
+     CL=(W-OFSX) DIV 8
+    ENDIF
+   WEND
    DEC I
    CONTINUE
   ENDIF
   IF A==_Q THEN
-   GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
+   GPUTCHR X,Y,A,RGB(99,132,247)
    INC X,8
+   IF X>=W THEN X=OFSX:Y=Y+8
    FOR I=I+1 TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
-    GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
+    IF A==_LF THEN GPUTCHR X,Y,A,-1BREAK
+    GPUTCHR X,Y,A,RGB(99,132,247)
     INC X,8
+    IF X>=W THEN X=OFSX:Y=Y+8
     IF A==_Q THEN BREAK
    NEXT
    IF A!=_Q THEN BREAK
@@ -6228,9 +6717,10 @@
   IF A==_S THEN
    FOR I=I TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
-    GPUTCHRWindow WND,X,Y,A,RGB(33,247,16)
+    IF A==_LF THEN GPUTCHR X,Y,A,-1BREAK
+    GPUTCHR X,Y,A,RGB(33,247,16)
     INC X,8
+    IF X>=W THEN X=OFSX:Y=Y+8
    NEXT
    BREAK
   ENDIF
@@ -6238,8 +6728,9 @@
    FOR I=I TO L
     A=ASC(P$[I])
     IF!(A>=_A&&A<=_Z||A>=_LA&&A<=_LZ||A==__||A>=_0&&A<=_9||A==_AT)THEN DEC I:BREAK
-    GPUTCHRWindow WND,X,Y,A,RGB(247,167,0)
+    GPUTCHR X,Y,A,RGB(247,167,0)
     INC X,8
+    IF X>=W THEN X=OFSX:Y=Y+8
    NEXT
    CONTINUE
   ENDIF
@@ -6249,50 +6740,59 @@
     A=ASC(P$[I])
     INC X,8
     IF A==_B THEN
-     GPUTCHRWindow WND,X-8,Y,S,RGB(247,69,149)
-     GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+     GPUTCHR X-8,Y,S,RGB(247,69,149)
+     IF X>=W THEN X=OFSX:Y=Y+8
+     GPUTCHR X,Y,A,RGB(247,69,149)
      INC X,8
+     IF X>=W THEN X=OFSX:Y=Y+8
      S=0
      FOR I=I+1 TO L
       A=ASC(P$[I])
       IF A>_1&&A<=_9 THEN
-       GPUTCHRWindow WND,X,Y,A,-1'RGB(0,0,0)
+       GPUTCHR X,Y,A,-1'RGB(0,0,0)
        INC X,8
+       IF X>=W THEN X=OFSX:Y=Y+8
        S=1
        CONTINUE
       ENDIF
       IF A!=_0&&A!=_1||S THEN DEC I:BREAK
-      GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+      GPUTCHR X,Y,A,RGB(247,69,149)
       INC X,8
+      IF X>=W THEN X=OFSX:Y=Y+8
      NEXT
      DEC I
      BREAK
     ENDIF
     IF A==_H THEN
-     GPUTCHRWindow WND,X-8,Y,S,RGB(247,69,149)
-     GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+     GPUTCHR X-8,Y,S,RGB(247,69,149)
+     IF X>=W THEN X=OFSX:Y=Y+8
+     GPUTCHR X,Y,A,RGB(247,69,149)
      INC X,8
+     IF X>=W THEN X=OFSX:Y=Y+8
      FOR I=I+1 TO L
       A=ASC(P$[I])
       IF!(A>=_0&&A<=_9||A>=_A&&A<=_F)THEN DEC I:BREAK
-      GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+      GPUTCHR X,Y,A,RGB(247,69,149)
       INC X,8
+      IF X>=W THEN X=OFSX:Y=Y+8
      NEXT
      BREAK
     ENDIF
-    GPUTCHRWindow WND,X-8,Y,S,RGB(255,255,255)
+    GPUTCHR X-8,Y,S,RGB(255,255,255)
+    IF X>=W THEN X=OFSX:Y=Y+8
     DEC I
     BREAK
    NEXT
    CONTINUE
   ENDIF
   IF A>=_0&&A<=_9 THEN
-   GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
+   GPUTCHR X,Y,A,RGB(247,69,149)
   ELSE
-   IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)',RGB(0,184,255)BREAK
-   GPUTCHRWindow WND,X,Y,A,-1'RGV(0,0,0)
+   IF A==_LF THEN GPUTCHR X,Y,A,RGB(0,0,0)',RGB(0,184,255)BREAK
+   GPUTCHR X,Y,A,-1'RGV(0,0,0)
   ENDIF
   INC X,8
+  IF X>=W THEN X=OFSX:Y=Y+8
  NEXT
 END
 '===End text editor===
@@ -6312,13 +6812,13 @@
  RETURN
  @OPEN
  VAR ERR,T$
- LoadFile RIGHT$(A2$,LEN(A2$)-1) OUT T$,ERR
+ LoadFile A2$ OUT T$,ERR
  IF ERR THEN RETURN
  TextBoxExSetText GetWindowVar(W,0),T$
  RETURN
  @SAVE
  TextBoxExGetText GetWindowVar(W,0) OUT T$
- SaveFile RIGHT$(A2$,LEN(A2$)-1),T$ OUT ERR
+ SaveFile A2$,T$ OUT ERR
  IF ERR THEN RETURN
  RETURN
 END
@@ -6342,7 +6842,7 @@
   E=SetControlStrNotifHandler(TXTEDCTL,"TXTEDSTRNOTIF")
   E=SetControlResizeHandler(TXTEDCTL,"TXTEDRESIZE")
  ENDIF
- NewTopLevelStyleWindow TXTEDCTL,"TXTED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow TXTEDCTL,"TXTED",128,64,WindowMenuStyle()OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  AddMenuItem MENU,"New",1
@@ -6381,7 +6881,7 @@
   E=SetControlStrNotifHandler(PRGEDCTL,"TXTEDSTRNOTIF")
   E=SetControlResizeHandler(PRGEDCTL,"TXTEDRESIZE")
  ENDIF
- NewTopLevelStyleWindow PRGEDCTL,"PRGED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow PRGEDCTL,"PRGED",128,64,WindowMenuStyle()OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
 'NewTopLevelMenuWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
@@ -6420,7 +6920,7 @@
 COMMON DEF RichTextUnderline()
  RETURN 8
 END
-COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
+COMMON DEF RICHTEXT X,Y,C,STYLE,SIZE,COL
  VAR S2=SIZE DIV 8
  VAR I,X2,BF=0
 ' INC Y,SIZE MOD 8
@@ -6428,21 +6928,13 @@
   X2=X
   @LOOP1
   IF STYLE AND 2THEN
-   IF!BF THEN
-    GPAGE OTW_SP,OTW_DP
-    GCLIP 1
-    GFILL 511-8,511-8,511,511,0
-    GPUTCHR 511-8,511-8,C,1,1,COL
-    GPAGE OTW_SP,OTW_BP
-   ENDIF
-'  FOR I=0TO 7
-'   GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
-'  NEXT
-   'こうそくか
-   GCOPY OTW_DP,511-8,511-8,511,511-5,X+WING_SX+1,Y+WING_SY,0
-   GCOPY OTW_DP,511-8,511-4,511,511,X+WING_SX,Y+WING_SY+4,0
+   VAR IX=512-SIZE,IY=512-SIZE
+   GFILL IX,IY,511,511,0
+   GPUTCHR IX,IY,C,S2,S2,COL
+   GCOPY IX,IY,511,512-S2*4,X+1,Y,0
+   GCOPY IX,IY+S2*4,511,511,X,Y+S2*4,0
   ELSE
-   GPUTCHRSize1Window WND,X,Y,C,S2,COL
+   GPUTCHR X,Y,C,S2,S2,COL
   ENDIF
   IF STYLE AND 1 THEN
    INC X
@@ -6453,16 +6945,16 @@
   ENDIF
   X=X2
  ELSE
-  GPUTCHRSize1Window WND,X,Y,C,S2,COL
+  GPUTCHR X,Y,C,S2,S2,COL
   IF STYLE AND 1 THEN
-   GPUTCHRSize1Window WND,X+1,Y,C,S2,COL
+   GPUTCHR X+1,Y,C,S2,S2,COL
   ENDIF
  ENDIF
  IF STYLE AND 4THEN
-  GLINEWindow WND,X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
+  GLINE X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
  ENDIF
  IF STYLE AND 8THEN
-  GLINEWindow WND,X,Y+SIZE-1,X+SIZE-1,Y+SIZE-1,COL
+  GLINE X,Y+SIZE-1,X+SIZE-1,Y+SIZE-1,COL
  ENDIF
 END
 VAR OTYDOCCTL
@@ -6486,6 +6978,7 @@
 DIM OTYDOC_WPREV[0]
 DIM OTYDOC_ShowLine[0]
 DIM OTYDOC_CurLine[0]
+DIM OTYDOC_LastShowLine[0]
 DIM OTYDOC_WSIZE[0]
 DIM OTYDOC_STYLE[0]
 DIM OTYDOC_WSIZE2[0]
@@ -6493,7 +6986,18 @@
 DIM OTYDOC_COL[0]
 DIM OTYDOC_COL2[0]
 DIM OTYDOC_CX[0]
-
+DIM OTYDOC_SCRBAR[0]
+DIM OTYDOC_SCRBARPOS[0]
+DIM OTYDOC_HASSTARTSEL[0]
+DIM OTYDOC_HASENDSEL[0]
+DIM OTYDOC_SEL1[0]
+DIM OTYDOC_SEL1X[0]
+DIM OTYDOC_SEL2[0]
+DIM OTYDOC_SEL2X[0]
+DIM OTYDOC_SELS[0]
+DIM OTYDOC_SELSX[0]
+DIM OTYDOC_ISSEL[0]
+DIM OTYDOC_SELREVERSE[0]
 VAR OTYDOC_BEG$
 VAR OTYDOC_END$
 COMMON DEF INIT_OTYDOC
@@ -6509,6 +7013,8 @@
   E=SetControlCreateHandler(OTYDOCCTL,"OTYDocCreate")
   E=SetControlResizeHandler(OTYDOCCTL,"OTYDocResize")
   E=SetControlLMouseDownHandler(OTYDOCCTL,"OTYDocLMouseUp")
+  E=SetControlMouseMoveHandler(OTYDOCCTL,"OTYDocMouseMove")
+  E=SetControlNotifHandler(OTYDOCCTL,"OTYDocNotif")
   OTYDOC_LINESIZ=1024
   OTYDOC_VAL$=NewArray$(OTYDOC_LINESIZ)
   OTYDOC_LINE=NewArray(OTYDOC_LINESIZ)
@@ -6529,6 +7035,7 @@
   OTYDOC_WPREV=NewArray(OTYDOC_WSIZ)
   OTYDOC_ShowLine=NewArray(OTYDOC_WSIZ)
   OTYDOC_CurLine=NewArray(OTYDOC_WSIZ)
+  OTYDOC_LastShowLine=NewArray(OTYDOC_WSIZ)
   OTYDOC_WSIZE=NewArray(OTYDOC_WSIZ)
   OTYDOC_STYLE=NewArray(OTYDOC_WSIZ)
   OTYDOC_WSIZE2=NewArray(OTYDOC_WSIZ)
@@ -6536,6 +7043,18 @@
   OTYDOC_COL=NewArray(OTYDOC_WSIZ)
   OTYDOC_COL2=NewArray(OTYDOC_WSIZ)
   OTYDOC_CX=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SCRBAR=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SCRBARPOS=NewArray(OTYDOC_WSIZ)
+  OTYDOC_HASSTARTSEL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_HASENDSEL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL1=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL1X=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL2=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SEL2X=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELS=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELSX=NewArray(OTYDOC_WSIZ)
+  OTYDOC_ISSEL=NewArray(OTYDOC_WSIZ)
+  OTYDOC_SELREVERSE=NewArray(OTYDOC_WSIZ)
   OTYDOC_WFREE=1
   FOR I=1TO OTYDOC_WSIZ-2
    OTYDOC_WNEXT[I]=I+1
@@ -6664,6 +7183,17 @@
  VAR SCR,E
  VAR W=GetWindowWidth(WND),
  NewVScrollBar WND,0 OUT SCR,E
+ OTYDOC_NewCTL WND
+ VAR D=OTYDOC_GetData(WND)
+ IF!D THEN RETURN
+ OTYDOC_SCRBAR[D]=SCR
+ VAR S=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D),0)
+ OTYDOC_ShowLine[D]=S
+ OTYDOC_CurLine[D]=S
+ OTYDOC_COL2[D]=RGBToShort(RGB(0,0,0))
+ OTYDOC_COL[D]=RGBToShort(RGB(0,0,0))
+ OTYDOC_WSIZE[D]=8
+ OTYDOC_WSIZE2[D]=8
 END
 COMMON DEF OTYDocResize WND,C,T,A1,WH
  VAR W,H
@@ -6678,13 +7208,17 @@
 DEF OTYDOCRepaint WND
  OTYDOCRepaintSEL WND,FALSE,0,0
 END
+'CONTAINS STARTSELECTION
+'CONTAINS ENDSELECTION
 DEF OTYDOCRepaintSEL WND,SEL_FLG,SX,SY
- IF GBeginWindow(WND)THEN RETURN
- GCLSWindow WND,RGB(255,255,255)
- VAR W=GetWindowWidth(WND)
+ IF GBeginDirect(WND)THEN RETURN
+ GCLS RGB(255,255,255)
+ VAR W=GetWindowWidth(WND)-8
  VAR H=GetWindowHeight(WND)
- IF!OTYDOC_GetData(WND)THEN OTYDOC_NewCTL WND
  VAR D=OTYDOC_GetData(WND)
+ IF!D THEN
+  RETURN
+ ENDIF
  VAR I=OTYDOC_ShowLine[D]
  VAR CL=OTYDOC_CurLine[D]
  VAR CX=OTYDOC_CX[D]
@@ -6694,6 +7228,27 @@
  VAR COL=RGB(0,0,0)
  VAR OJ
  VAR ACX=-100,ACY=-100
+ VAR CURSORX,CURSORY
+ VAR ISSEL=OTYDOC_ISSEL[D]
+ IF ISSEL THEN
+  VAR HASSEL1=OTYDOC_HASSTARTSEL[D]
+  VAR HASSEL2=OTYDOC_HASENDSEL[D]
+  IF!HASSEL2&&!HASSEL1 THEN
+   ISSEL=FALSE
+  ELSE
+   IF HASSEL1 THEN
+    VAR SEL1=OTYDOC_SEL1[D]
+    VAR SEL1X=OTYDOC_SEL1X[D]
+   ELSE
+    SEL1=I
+    SEL1X=0
+   ENDIF
+   VAR SEL2=OTYDOC_SEL2[D]
+   VAR SEL2X=OTYDOC_SEL2X[D]
+  ENDIF
+ ENDIF
+ VAR SELBKGND=GetSelectionColor()
+ VAR SELFRGND=GetSelectionTextColor()
  WHILE I
   VAR YSZ=OTYDOC_SIZE[I]
 '?"YSZ",YSZ
@@ -6704,13 +7259,27 @@
   VAR L=LEN(V$)-1,J,C
   SZ=8
   X=1
+  
+  IF ISSEL THEN
+   IF I==SEL1 THEN
+    VAR SELSX=SEL1X
+    IF SEL1==SEL2 THEN
+     VAR SELEX=SEL2X
+    ELSE
+     SELEX=&H7FFDDDDF
+    ENDIF
+   ELSEIF I==SEL2 THEN
+    SELSX=0
+    SELEX=SEL2X
+   ENDIF
+  ENDIF
   FOR J=0TO L
    C=ASC(V$[J])
    IF C==&Hb10cTHEN CONTINUE
    IF C==&Hb10bTHEN
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
      OTYDOC_STYLE[D]=ST
      OTYDOC_COL[D]=RGBToShort(COL)
      OTYDOC_WSIZE[D]=SZ
@@ -6737,73 +7306,405 @@
     ST=A
     CONTINUE
    ENDIF
-   IF  C<128THEN
-    RICHTEXTWindow WND,X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,COL
+   IF C<128THEN
+    VAR TW=SZ*6/8+(ST AND 1)
    ELSE
-    RICHTEXTWindow WND,X,Y+YSZ-SZ,C,ST,SZ,COL
+    TW=SZ+(ST AND 1)
    ENDIF
+   IF X+SZ>=W THEN
+    X=1
+    INC Y,YSZ
+    IF Y+YSZ>=H THEN BREAK
+   ENDIF
+   IF ISSEL&&SELSX<=J&&SELEX>J THEN
+     GFILL X,Y,X+TW-1,Y+YSZ-1,SELBKGND
+     IF C<128THEN
+      RICHTEXT X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,SELFRGND
+     ELSE
+      RICHTEXT X,Y+YSZ-SZ,C,ST,SZ,SELFRGND
+     ENDIF
+   ELSEIF  C<128THEN
+    RICHTEXT X-SZ DIV 8,Y+YSZ-SZ,C,ST,SZ,COL
+   ELSE
+    RICHTEXT X,Y+YSZ-SZ,C,ST,SZ,COL
+   ENDIF
    IF I==CL THEN
     IF CX==J THEN
-     GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+     GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+     CURSORX=X
+     CURSORY=Y+YSZ-SZ
      OTYDOC_STYLE[D]=ST
      OTYDOC_COL[D]=RGBToShort(COL)
      OTYDOC_WSIZE[D]=SZ
     ENDIF
    ENDIF
 '   ?HEX$(COL)
-   IF  C<128THEN INC X,SZ*6/8 ELSE INC X,SZ
+   INC X,TW
    IF SEL_FLG THEN
     
    ENDIF
-   IF X+SZ>=W THEN
-    X=1
-    INC Y,YSZ
-    IF Y+YSZ>=H THEN BREAK
-   ENDIF
   NEXT
+  IF ISSEL THEN
+   IF I==SEL1 THEN
+    SELSX=0
+    IF SEL1==SEL2 THEN
+     ISSEL=FALSE
+    ELSE
+     SELEX=&H7FFDDDDF
+    ENDIF
+   ELSEIF I==SEL2 THEN
+    ISSEL=FALSE
+   ENDIF
+  ENDIF
   IF I==CL&&CX>L THEN
-   GFILLWindow WND,X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+   GFILL X,Y+YSZ-SZ,X+1,Y+YSZ-1,RGB(0,0,0)
+   CURSORX=X
+   CURSORY=Y+YSZ-SZ
    OTYDOC_STYLE[D]=ST
    OTYDOC_COL[D]=RGBToShort(COL)
    OTYDOC_WSIZE[D]=SZ
+'   VOID SetWindowCursor(WND,
   ENDIF
   IF LINESTYLE==OTYDOC_CENTER THEN
    'CENTER
    VAR CENT=(W-2-X)DIV 2
-   GCOPYWindow WND,1,Y,X+1,Y+YSZ,CENT,Y,0
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+CENT-1
+   ENDIF
+   GCOPY 1,Y,X+1,Y+YSZ,CENT,Y,0
    IF CENT>1 THEN
-    GFILLWindow WND,1,Y,CENT-1,Y+YSZ,-1
+    GFILL 1,Y,CENT-1,Y+YSZ,-1
    ENDIF
   ENDIF
   IF LINESTYLE==OTYDOC_RIGHT THEN
    'RIGHT
    VAR MOVE=(W-2-X)
-   GCOPYWindow WND,1,Y,X+1,Y+YSZ,MOVE,Y,0
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+MOVE-1
+   ENDIF
+   GCOPY 1,Y,X+1,Y+YSZ,MOVE,Y,0
    IF MOVE>1 THEN
-    GFILLWindow WND,1,Y,MOVE-1,Y+YSZ,-1
+    GFILL 1,Y,MOVE-1,Y+YSZ,-1
    ENDIF
   ENDIF
   INC Y,YSZ
   IF Y+YSZ>=H THEN BREAK
   I=OTYDOC_NEXT[I]
  WEND
- GBOXWindow WND,0,0,W,H,RGB(0,0,0)
- VAR E=GEndWindow(WND)
+ VOID SetWindowCursor(WND,CURSORX,CURSORY)
+ OTYDOC_LastShowLine[D]=I
+ GBOX 0,0,W,H,RGB(0,0,0)
+ VAR E=GCopyDirect(WND,0,0,W,H,0,0,1)
 END
 COMMON DEF OTYDocChFocus WND,CTL,TYPE,A1,A2
 END
-DEF OTYDOC_CLK X,Y
-
+DEF OTYDOC_CLK WND,MX,MY OUT LINE,POS
+ VAR W=GetWindowWidth(WND)-8
+ VAR H=GetWindowHeight(WND)
+ VAR D=OTYDOC_GetData(WND)
+ IF!D THEN
+  RETURN
+ ENDIF
+ VAR I=OTYDOC_ShowLine[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR CX=OTYDOC_CX[D]
+ VAR Y=2,X=2
+ MX=MIN(MAX(X,MX),W)
+ MY=MIN(MAX(Y,MY),H)
+ VAR ST=0
+ VAR SZ=8
+ VAR COL=RGB(0,0,0)
+ VAR OJ
+ VAR ACX=-100,ACY=-100
+ VAR CURSORX,CURSORY
+ VAR MOVECHRPOS
+ WHILE I
+  LINE=-1
+  POS=-1
+  VAR YSZ=OTYDOC_SIZE[I]
+  VAR V$=OTYDOC_VAL$[I]
+  VAR LINESTYLE=OTYDOC_LINESTYLE[I]
+  VAR A
+  VAR L=LEN(V$)-1,J,C
+  VAR ISNCR=LINESTYLE!=OTYDOC_CENTER&&LINESTYLE!=OTYDOC_RIGHT
+  SZ=8
+  X=1
+  MOVECHRPOS=0
+  VAR SY=Y
+  J=0
+  @RETRY
+  VAR SX=X
+  FOR J=J TO L
+   C=ASC(V$[J])
+   IF C==&Hb10cTHEN CONTINUE
+   IF C==&Hb10bTHEN
+   IF I==CL THEN
+    IF CX==J THEN
+     OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
+    ENDIF
+   ENDIF
+    INC J
+    C=ASC(V$[J])
+    ON C GOTO@FNT,@COL,@STY
+    CONTINUE
+    @FNT'0
+    INC J
+    A=ASC(V$[J])
+    SZ=A
+    CONTINUE
+    @COL'1
+    INC J
+    A=ASC(V$[J])
+    COL=ShortToRGB(A)
+    CONTINUE
+    @STY'2
+    INC J
+    A=ASC(V$[J])
+    ST=A
+    CONTINUE
+   ENDIF
+   IF C<128THEN
+    VAR TW=SZ*6/8+(ST AND 1)
+   ELSE
+    TW=SZ+(ST AND 1)
+   ENDIF
+   IF X+SZ>=W THEN
+    X=1
+    INC Y,YSZ
+    IF ISNCR&&LINE!=-1THEN RETURN
+    IF Y+YSZ>=H THEN BREAK
+    MOVECHRPOS=J
+   ENDIF
+   IF MY>=Y&&MY<=Y+YSZ THEN
+    IF MX>=X&&MX<=X+TW-1THEN
+     LINE=I
+     POS=J
+     IF ISNCR THEN RETURN
+    ENDIF
+   ENDIF
+   IF I==CL THEN
+    IF CX==J THEN
+     CURSORX=X
+     CURSORY=Y+YSZ-SZ
+     OTYDOC_STYLE[D]=ST
+     OTYDOC_COL[D]=RGBToShort(COL)
+     OTYDOC_WSIZE[D]=SZ
+    ENDIF
+   ENDIF
+   INC X,TW
+  NEXT
+  IF POS!=-1&&MOVECHRPOS>POS THEN
+   RETURN
+  ENDIF
+  IF I==CL&&CX>L THEN
+   CURSORX=X
+   CURSORY=Y+YSZ-SZ
+   OTYDOC_STYLE[D]=ST
+   OTYDOC_COL[D]=RGBToShort(COL)
+   OTYDOC_WSIZE[D]=SZ
+'   VOID SetWindowCursor(WND,
+  ENDIF
+  IF !ISNCR&&LINESTYLE==OTYDOC_CENTER THEN
+   'CENTER
+   VAR CENT=(W-2-X)DIV 2
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+CENT-1
+   ENDIF
+   IF MY>=Y&&MY<=Y+YSZ THEN
+    X=CENT
+    ISNCR=TRUE
+    J=MOVECHRPOS
+    GOTO @RETRY
+   ENDIF
+   'GCOPY 1,Y,X+1,Y+YSZ,CENT,Y,0
+  ENDIF
+  IF !ISNCR&&LINESTYLE==OTYDOC_RIGHT THEN
+   'RIGHT
+   VAR MOVE=(W-2-X)
+   IF CURSORY>=Y&&CURSORY<=Y+YSZ THEN
+    CURSORX=CURSORX+MOVE-1
+   ENDIF
+   IF MY>=Y&&MY<=Y+YSZ THEN
+    X=MOVE
+    ISNCR=TRUE
+    J=MOVECHRPOS
+    GOTO @RETRY
+   ENDIF
+   'GCOPY 1,Y,X+1,Y+YSZ,MOVE,Y,0
+  ENDIF
+  IF ISNCR&&LINE!=-1THEN RETURN
+  INC Y,YSZ
+  IF MY>=SY&&MY<=Y THEN
+   LINE=I
+   IF SX<=MX THEN
+    POS=LEN(V$)
+   ELSE
+    POS=MOVECHRPOS
+   ENDIF
+   RETURN
+  ENDIF
+  IF!OTYDOC_NEXT[I]THEN
+   MY=Y
+   X=SX
+   IF SX>MX THEN
+    POS=0
+    LINE=I
+    RETURN
+   ENDIF
+   J=MOVECHRPOS
+   GOTO @RETRY
+  ENDIF
+  IF Y+YSZ>=H THEN BREAK
+  I=OTYDOC_NEXT[I]
+ WEND
 END
 COMMON DEF OTYDocLMouseUp WND,CTL,TYPE,X,Y
- ?X,Y
+ VAR LINE,POS
+ VAR D=OTYDOC_GetData(WND)
+ OTYDOC_ISSEL[D]=FALSE
+ OTYDOC_CLK WND,X,Y OUT LINE,POS
+ IF LINE==-1THEN RETURN
+ OTYDOC_CurLine[D]=LINE
+ OTYDOC_CX[D]=POS
+ VOID RepaintWindow(WND)
+ VOID SetCapture(WND)
 END
+DEF OTYDOC_IsForward(S,LINE)
+ VAR S2=S
+ WHILE S&&S2
+  S=OTYDOC_NEXT[S]
+  S2=OTYDOC_PREV[S2]
+  IF S==LINE THEN RETURN TRUE
+  IF S2==LINE THEN RETURN FALSE
+ WEND
+ RETURN S!=0
+END
+COMMON DEF OTYDocMouseMove WND,CTL,TYPE,X,Y
+ IF GetCapture()!=WND THEN
+  RETURN
+ ENDIF
+ VAR D=OTYDOC_GetData(WND)
+ VAR LINE,POS
+ IF Y>GetWindowHeight(WND)THEN
+  OTYDOC_Scroll D,1
+  OTYDOC_ScrollContent D,1
+ ELSEIF Y<0THEN
+  OTYDOC_Scroll D,-1
+  OTYDOC_ScrollContent D,-1
+ ENDIF
+ OTYDOC_CLK WND,X,Y OUT LINE,POS
+ IF LINE==-1THEN RETURN
+ 'FWD,BKWD
+ IF OTYDOC_ISSEL[D]THEN
+  VAR ISF
+  IF OTYDOC_SELREVERSE[D]THEN
+   IF OTYDOC_SEL2[D]==LINE THEN
+    ISF=OTYDOC_SEL2X[D]<POS
+   ELSE
+    ISF=OTYDOC_IsForward(OTYDOC_SEL2[D],LINE)
+   ENDIF
+  ELSE
+   IF OTYDOC_SEL1[D]==LINE THEN
+    ISF=OTYDOC_SEL1X[D]<POS
+   ELSE
+    ISF=OTYDOC_IsForward(OTYDOC_SEL1[D],LINE)
+   ENDIF
+  ENDIF
+  IF ISF==OTYDOC_SELREVERSE[D]THEN
+   VAR RF=TRUE
+   OTYDOC_SEL2X[D]=OTYDOC_SELSX[D]
+   OTYDOC_SEL2[D]=OTYDOC_SELS[D]
+   OTYDOC_SEL1X[D]=OTYDOC_SELSX[D]
+   OTYDOC_SEL1[D]=OTYDOC_SELS[D]
+   OTYDOC_SELREVERSE[D]=!ISF
+  ENDIF
+ ENDIF
+ IF OTYDOC_SELREVERSE[D]THEN
+  IF OTYDOC_ISSEL[D]&&!RF&&OTYDOC_SEL1X[D]==POS&&OTYDOC_SEL1[D]==LINE THEN RETURN
+  OTYDOC_SEL1X[D]=POS
+  OTYDOC_SEL1[D]=LINE
+ ELSE
+  IF OTYDOC_ISSEL[D]&&!RF&&OTYDOC_SEL2X[D]==POS&&OTYDOC_SEL2[D]==LINE THEN RETURN
+  OTYDOC_SEL2X[D]=POS
+  OTYDOC_SEL2[D]=LINE
+ ENDIF
+ OTYDOC_CurLine[D]=LINE
+ OTYDOC_CX[D]=POS
+ IF!OTYDOC_ISSEL[D]THEN
+  OTYDOC_SELREVERSE[D]=FALSE
+  OTYDOC_ISSEL[D]=TRUE
+  OTYDOC_SEL1[D]=LINE
+  OTYDOC_SEL2[D]=LINE
+  OTYDOC_SELS[D]=LINE
+  OTYDOC_SEL1X[D]=POS
+  OTYDOC_SEL2X[D]=POS
+  OTYDOC_SELSX[D]=POS
+  OTYDOC_HASSTARTSEL[D]=TRUE
+  OTYDOC_HASENDSEL[D]=TRUE
+ ENDIF
+ VOID RepaintWindow(WND)
+END
+DEF OTYDOC_ScrollContent D,DIFF
+ VAR I
+ 'DOWN
+ IF DIFF>0THEN
+  FOR I=1TO DIFF
+   VAR S=OTYDOC_ShowLine[D]
+   IF!OTYDOC_NEXT[S]THEN BREAK
+   IF OTYDOC_ISSEL[D]THEN
+    IF OTYDOC_SEL1[D]==S THEN
+     OTYDOC_HASSTARTSEL[D]=FALSE
+    ENDIF
+    IF OTYDOC_SEL2[D]==S THEN
+     OTYDOC_HASENDSEL[D]=FALSE
+    ENDIF
+   ENDIF
+   OTYDOC_ShowLine[D]=OTYDOC_NEXT[S]
+  NEXT
+ 'UP
+ ELSEIF DIFF<0THEN
+  FOR I=DIFF TO -1
+   S=OTYDOC_ShowLine[D]
+   VAR P=OTYDOC_PREV[S]
+   IF!P THEN BREAK
+   IF OTYDOC_ISSEL[D]THEN
+    IF OTYDOC_SEL1[D]==P THEN
+     OTYDOC_HASSTARTSEL[D]=TRUE
+    ENDIF
+    IF OTYDOC_SEL2[D]==P THEN
+     OTYDOC_HASENDSEL[D]=TRUE
+    ENDIF
+   ENDIF
+   OTYDOC_ShowLine[D]=P
+  NEXT
+ ENDIF
+END
+COMMON DEF OTYDocNotif WND,CTL,TYPE,A1,A2
+ VAR D=OTYDOC_GetData(WND)
+ IF!D THEN RETURN
+ IF A1==OTYDOC_SCRBAR[D]THEN
+  VAR OLD=OTYDOC_SCRBARPOS[D]
+  VAR DIFF=A2-OLD
+  OTYDOC_SCRBARPOS[D]=A2
+  OTYDOC_ScrollContent D,DIFF
+  VOID RepaintWindow(WND)
+ ENDIF
+END
 DEF OTYDOC_UpCursor(WND)
   VAR D=GetWindowVar(WND,0)
   VAR C=OTYDOC_CurLine[D]
-  IF OTYDOC_PREV[C]THEN
-   OTYDOC_CurLine[D]=OTYDOC_PREV[C]
-   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+  VAR P=OTYDOC_PREV[C]
+  IF P THEN
+   OTYDOC_ISSEL[D]=0
+   IF C==OTYDOC_ShowLine[D]THEN
+    OTYDOC_ShowLine[D]=OTYDOC_PREV[C]
+    OTYDOC_Scroll D,-1
+   ENDIF
+   VAR CV$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
+   OTYDOC_CurLine[D]=P
+   OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[OTYDOC_CurLine[D]],OTYDOC_GETPOS(CV$,OTYDOC_CX[D]))
    RETURN 1
 'SCROLL
    VAR L=OTYDOC_PREV[GetWindowVar(WND,1)]
@@ -6816,13 +7717,76 @@
   ENDIF
   RETURN 0
 END
+DEF OTYDOC_SetLine D,S
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ SetScrollBarSize SCRBAR,S
+ SetScrollBarPosition SCRBAR,0
+ OTYDOC_SCRBARPOS[D]=0
+END
+DEF OTYDOC_AddLine D,MY
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ SetScrollBarSize SCRBAR,GetScrollBarSize(SCRBAR)+MY
+END
+DEF OTYDOC_Scroll D,MY
+ VAR SCRBAR=OTYDOC_SCRBAR[D]
+ OTYDOC_SCRBARPOS[D]=GetScrollBarPosition(SCRBAR)+MY
+ IF OTYDOC_SCRBARPOS[D]<0||GetScrollBarSize(SCRBAR)<OTYDOC_SCRBARPOS[D] THEN
+  OTYDOC_SCRBARPOS[D]=GetScrollBarPosition(SCRBAR)
+  RETURN
+ ENDIF
+ SetScrollBarPosition SCRBAR,OTYDOC_SCRBARPOS[D]
+END
+DEF OTYDOC_GETPOS(V$,CX)
+ VAR I,L=LEN(V$)-1
+ VAR CC
+ IF CX>L THEN
+  CC=CC+1
+  CX=L
+ ENDIF
+ FOR I=0 TO CX
+  VAR A=ASC(V$[I])
+  IF A==&HB10B THEN
+   FOR I=I TO L
+    IF ASC(V$[I])==&HB10CTHEN
+     BREAK
+    ENDIF
+   NEXT
+   CONTINUE
+  ENDIF
+  CC=CC+1
+ NEXT
+ RETURN MAX(0,CC-1)
+END
+DEF OTYDOC_TOPOS(V$,CC)
+ VAR I,L=LEN(V$)-1
+ FOR I=0 TO L
+  VAR A=ASC(V$[I])
+  IF A==&HB10B THEN
+   FOR I=I TO L
+    IF ASC(V$[I])==&HB10CTHEN
+     BREAK
+    ENDIF
+   NEXT
+   CONTINUE
+  ENDIF
+  IF CC<=0 THEN RETURN I
+  CC=CC-1
+ NEXT
+ RETURN L+1
+END
 DEF OTYDOC_DownCursor(WND)
   VAR D=GetWindowVar(WND,0)
   VAR C=OTYDOC_CurLine[D]
 'SCROLL
   IF OTYDOC_NEXT[C]THEN
+   OTYDOC_ISSEL[D]=0
+   IF OTYDOC_CurLine[D]==OTYDOC_LastShowLine[D]THEN
+    OTYDOC_ShowLine[D]=OTYDOC_NEXT[OTYDOC_ShowLine[D]]
+    OTYDOC_Scroll D,1
+   ENDIF
+   VAR CV$=OTYDOC_VAL$[OTYDOC_CurLine[D]]
    OTYDOC_CurLine[D]=OTYDOC_NEXT[C]
-   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+   OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[OTYDOC_CurLine[D]],OTYDOC_GETPOS(CV$,OTYDOC_CX[D]))
    RETURN 1
    IF GetWindowVar(WND,6)==C THEN
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
@@ -6893,9 +7857,8 @@
  CX2=CX
 END
 COMMON DEF OTYDOCButton WND,CTL,T,BTN,_
+ IF GetCapture()==WND THEN RETURN
  VAR F=GetWindowVar(WND,4),U,R=GetWindowVar(WND,5)
- IF!BTN THEN SetWindowVar WND,5,0RETURN
- IF MAINCNT-F<R THEN RETURN
  IF BTN AND 1 THEN
   IF OTYDOC_UpCursor(WND)THEN
    OTYDOCRepaint WND
@@ -6912,6 +7875,7 @@
  IF BTN AND 4THEN
   VAR CX=OTYDOC_CX[D]
   VAR C=OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=FALSE
   VAR S$=OTYDOC_VAL$[C]
   IF CX<LEN(S$)&&ASC(S$[CX])==&HB10CTHEN
    @LOOP11
@@ -6953,6 +7917,7 @@
  IF BTN AND 8THEN
   CX=OTYDOC_CX[D]
   C=OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=FALSE
   VAR V$=OTYDOC_VAL$[C]
   VAR S0,S1,S2,OC=CX
   IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN
@@ -7050,30 +8015,171 @@
  NEXT
  RETURN FALSE
 END
+DEF OTYDOC_RemoveSelected D OUT X,C
+ IF!OTYDOC_ISSEL[D] THEN
+  RETURN
+ ENDIF
+ C=OTYDOC_CurLine[D]
+ X=OTYDOC_CX[D]
+ VAR SL=OTYDOC_ShowLine[D]
+ VAR S=OTYDOC_SEL1[D]
+ VAR E=OTYDOC_SEL2[D]
+ VAR SX=OTYDOC_SEL1X[D]
+ VAR EX=OTYDOC_SEL2X[D]
+ IF S==E THEN
+  RemoveStrB OTYDOC_VAL$[S],SX,EX-SX
+  IF C==S&&X>SX THEN
+   X=SX
+  ENDIF
+  RETURN
+ ENDIF
+ OTYDOC_VAL$[S]=MID$(OTYDOC_VAL$[S],0,SX)
+ S=OTYDOC_NEXT[S]
+ VAR DL
+ WHILE 1
+  IF S==C THEN
+   C=OTYDOC_PREV[S]
+   X=LEN(OTYDOC_VAL$[C])
+  ENDIF
+  VAR NXT=OTYDOC_NEXT[S]
+  IF S==E THEN
+   VAR S2=OTYDOC_SEL1[D]
+   OTYDOC_VAL$[S2]=OTYDOC_VAL$[S2]+MID$(OTYDOC_VAL$[S],EX,LEN(OTYDOC_VAL$[S]))
+  ENDIF
+  VAR _=OTYDOC_DeleteLine(S)
+  INC DL
+  IF S==E THEN
+   BREAK
+  ENDIF
+  S=NXT
+ WEND
+ OTYDOC_AddLine D,-DL
+END
+
+DEF OTYDOC_GetStyle V$,I,E,TYPE OUT S$
+ VAR L=LEN(V$)-1
+ S$=""
+ WHILE 1
+  I=INSTR(I,V$,CHR$(&HB10B))
+  ?I,E
+  IF I==-1THEN RETURN
+  IF I>=E THEN RETURN
+  IF ASC(V$[I+1])==TYPE THEN
+   VAR O=I
+   I=INSTR(I,V$,CHR$(&HB10C))
+   S$=MID$(V$,O,I-O+1)
+  ELSE
+   I=INSTR(I,V$,CHR$(&HB10C))
+  ENDIF
+ WEND
+END
+DEF OTYDOC_RemoveStyle V$,I,E,TYPE
+ VAR S$
+ OTYDOC_GetStyle V$,0,E,TYPE OUT S$
+ VAR L=LEN(V$)-1
+ IF LEN(S$)THEN V$[E-1]=V$[E-1]+S$
+ WHILE 1
+  I=INSTR(I,V$,CHR$(&HB10B))
+  IF I==-1THEN BREAK
+  IF I>=E THEN BREAK
+  IF ASC(V$[I+1])==TYPE THEN
+   REPEAT
+    VAR VI=ASC(V$[I])
+    V$[I]=""
+    DEC E
+   UNTIL VI==&HB10C
+  ELSE
+   I=INSTR(I,V$,CHR$(&HB10C))
+  ENDIF
+ WEND
+END
+'D:DATA
+'S:LINE
+'S$:STYLE(B10B...B10C)
+DEF OTYDOC_SetLineStyle D,S,SX,EX,S$ OUT SX2,EX2
+ VAR CX=OTYDOC_CX[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR TYPE=ASC(S$[1])
+ VAR UF
+ IF TYPE==0THEN 'FONT SIZE
+  IF OTYDOC_SIZE[S]<ASC(S$[2]) THEN
+   OTYDOC_SIZE[S]=ASC(S$[2])
+   UF=TRUE
+  ENDIF
+ ENDIF
+ IF CL==S THEN
+  VAR X2=OTYDOC_GETPOS(OTYDOC_VAL$[S],CX)
+ ENDIF
+ SX2=OTYDOC_GETPOS(OTYDOC_VAL$[S],SX)
+ EX2=OTYDOC_GETPOS(OTYDOC_VAL$[S],EX)
+ OTYDOC_RemoveStyle OTYDOC_VAL$[S],SX,EX,TYPE
+ IF!LEN(OTYDOC_VAL$[S])||LEN(OTYDOC_VAL$[S])<=SX THEN
+  PUSH OTYDOC_VAL$[S],S$
+ ELSE
+  OTYDOC_VAL$[S][SX]=S$+OTYDOC_VAL$[S][SX]
+ ENDIF
+ SX2=OTYDOC_TOPOS(OTYDOC_VAL$[S],SX2)
+ EX2=OTYDOC_TOPOS(OTYDOC_VAL$[S],EX2)
+ IF CL==S THEN
+  OTYDOC_CX[D]=OTYDOC_TOPOS(OTYDOC_VAL$[S],X2)
+ ENDIF
+ IF TYPE==0&&!UF THEN
+  OTYDOC_AdjustLine S
+ ENDIF
+END
+'&HB10B TYPE ARGS &HB10C
+'=>TYPE ARGSをしてい
+DEF OTYDOC_SetSelectedStyle WND,STYLE$
+ VAR D=OTYDOC_GetData(WND)
+ IF!OTYDOC_ISSEL[D] THEN
+  RETURN
+ ENDIF
+ VAR TYPE=ASC(STYLE$[0])
+ VAR CX=OTYDOC_CX[D]
+ VAR CL=OTYDOC_CurLine[D]
+ VAR SL=OTYDOC_ShowLine[D]
+ VAR S=OTYDOC_SEL1[D]
+ VAR E=OTYDOC_SEL2[D]
+ VAR SX=OTYDOC_SEL1X[D]
+ VAR EX=OTYDOC_SEL2X[D]
+ IF SX==EX&&S==E THEN RETURN
+ VAR S$=CHR$(&HB10B)+STYLE$+CHR$(&HB10C)
+ IF S==E THEN
+  OTYDOC_SetLineStyle D,S,SX,EX,S$ OUT OTYDOC_SEL1X[D],OTYDOC_SEL2X[D]
+  VOID RepaintWindow(WND)
+  RETURN
+ ENDIF
+ VAR _
+ OTYDOC_SetLineStyle D,S,SX,LEN(OTYDOC_VAL$[S]),S$ OUT OTYDOC_SEL1X[D],_
+ S=OTYDOC_NEXT[S]
+ WHILE 1
+  VAR NXT=OTYDOC_NEXT[S]
+  IF S==E THEN
+   VAR S2=OTYDOC_SEL1[D]
+   OTYDOC_SetLineStyle D,S,0,EX,S$ OUT _,OTYDOC_SEL2X[D]
+   BREAK
+  ENDIF
+  OTYDOC_SetLineStyle D,S,0,LEN(OTYDOC_VAL$[S]),S$ OUT _,_
+  S=NXT
+ WEND
+ VOID RepaintWindow(WND)
+END
 COMMON DEF OTYDocKey WND,CTL,TYPE,KEY,A2
+ IF GetCapture()==WND THEN RETURN
  VAR D=OTYDOC_GetData(WND)
  VAR S=OTYDOC_ShowLine[D]
+ IF OTYDOC_ISSEL[D]THEN
+  'REMOVE
+  OTYDOC_RemoveSelected D OUT OTYDOC_CX[D],OTYDOC_CurLine[D]
+  OTYDOC_ISSEL[D]=0
+  IF KEY==8THEN @END
+ ENDIF
  VAR C=OTYDOC_CurLine[D]
  VAR X=OTYDOC_CX[D]
- IF!OTYDOC_COL2[D]THEN
-  OTYDOC_COL2[D]=RGBToShort(RGB(0,0,0))
- ENDIF
- IF!OTYDOC_COL[D]THEN
-  OTYDOC_COL[D]=RGBToShort(RGB(0,0,0))
- ENDIF
- IF!OTYDOC_WSIZE[D]THEN
-  OTYDOC_WSIZE[D]=8
- ENDIF
- IF!OTYDOC_WSIZE2[D]THEN
-  OTYDOC_WSIZE2[D]=8
- ENDIF
  IF!S THEN
-  S=OTYDOC_NewLine("",0)
-  OTYDOC_ShowLine[D]=S
-  OTYDOC_CurLine[D]=S
-  C=S
+  RETURN
  ENDIF
-  VAR I$=CHR$(KEY)
+ VAR I$=CHR$(KEY)
  IF I$==BS$()THEN
   IF X THEN
    DEC OTYDOC_CX[D]
@@ -7101,6 +8207,7 @@
    OTYDOC_AdjustLine C
   ELSE
    IF OTYDOC_PREV[C]THEN
+    OTYDOC_AddLine D,-1
     S$=OTYDOC_VAL$[C]
     C=OTYDOC_DeleteLine(C)
     OTYDOC_CurLine[D]=C
@@ -7111,16 +8218,22 @@
   ENDIF
  ELSE
   IF I$==CR$()THEN
-   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
+   VAR HEAD$=OTYDOC_NewLineInitStyle$(D)
+   VAR C2=OTYDOC_NewLine(HEAD$+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
    IF!C2 THEN RETURN
+   IF OTYDOC_LastShowLine[D]==OTYDOC_CurLine[D]THEN
+    OTYDOC_ShowLine[D]=OTYDOC_NEXT[OTYDOC_ShowLine[D]]
+    OTYDOC_Scroll D,1
+   ENDIF
+   OTYDOC_AddLine D,1
    OTYDOC_VAL$[C]=MID$(OTYDOC_VAL$[C],0,X)
 '  OTYDOC_DeleteDup2 C
 '  OTYDOC_DeleteDup2 C2
    OTYDOC_AdjustLine C
-   OTYDOC_SIZE[C2]=OTYDOC_WSIZE[C]
+   OTYDOC_SIZE[C2]=OTYDOC_WSIZE[D]
    OTYDOC_AdjustLine C2
    OTYDOC_CurLine[D]=C2
-   OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C2])
+   OTYDOC_CX[D]=LEN(HEAD$)
    IF FALSE THEN 
    SetWindowVar WND,2,C2
    SetWindowVar WND,3,0
@@ -7166,10 +8279,14 @@
    OTYDOC_AdjustLine C
   ENDIF
  ENDIF
+ @END
  OTYDOCRepaint WND
  ?OTYDOC_VAL$[C]
  ?" "*MAX(OTYDOC_CX[D],0);""
 END
+DEF OTYDOC_NewLineInitStyle$(D)
+ RETURN CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(1)+CHR$(OTYDOC_COL[D])+CHR$(&HB10C)+CHR$(&HB10B)+CHR$(0)+CHR$(OTYDOC_WSIZE[D])+CHR$(&HB10C)
+END
 '====EVENT HANDLER====
 
 'RichTextEditor API
@@ -7180,6 +8297,9 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT 1
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetItalic WND,F
  VAR D=OTYDOC_GetData(WND)
@@ -7188,6 +8308,9 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextItalic()
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetStrike WND,F
  VAR D=OTYDOC_GetData(WND)
@@ -7196,6 +8319,9 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextStrike()
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetUnderline WND,F
  VAR D=OTYDOC_GetData(WND)
@@ -7204,10 +8330,17 @@
  ELSE
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextUnderline()
  ENDIF
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(2)+CHR$(OTYDOC_STYLE2[D])
+ ENDIF
 END
 COMMON DEF RTESetTextColor WND,COL
  VAR D=OTYDOC_GetData(WND)
  OTYDOC_COL2[D]=RGBToShort(COL)
+ IF OTYDOC_ISSEL[D]THEN
+ ?"S
+  OTYDOC_SetSelectedStyle WND,CHR$(1)+CHR$(OTYDOC_COL2[D])
+ ENDIF
 END
 COMMON DEF RTESetAlignLeft WND
  VAR D=OTYDOC_GetData(WND)
@@ -7227,11 +8360,111 @@
 COMMON DEF RTESetFontSize WND,SIZE
  VAR D=OTYDOC_GetData(WND)
  OTYDOC_WSIZE2[D]=SIZE
+ IF OTYDOC_ISSEL[D]THEN
+  OTYDOC_SetSelectedStyle WND,CHR$(0)+CHR$(OTYDOC_WSIZE2[D])
+ ENDIF
 END
+DEF OTYDOC_GetFirstLine(F)
+ VAR L
+ WHILE F
+  L=F
+  F=OTYDOC_PREV[F]
+ WEND
+ RETURN L
+END
+'OTYDOC FILE FORMAT
+'LINE1:OTYDOC
+'LINE:LINESTYLE(LEFT,RIGHT,CENTER)...
+COMMON DEF RTESave WND,FILE$ OUT ERR
+ VAR D=OTYDOC_GetData(WND)
+ VAR FILE
+ FileOpen FILE$ OUT FILE,ERR
+ IF ERR THEN RETURN
+ FileWrite FILE,"OTYDOC"+LF$() OUT ERR
+ VAR F=OTYDOC_GetFirstLine(OTYDOC_ShowLine[D])
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2
+ WHILE F
+  VAR LS$=CHR$(OTYDOC_FILE_LINESTYLE)+CHR$(1)+CHR$(OTYDOC_LINESTYLE[F])
+  VAR LC$=CHR$(OTYDOC_FILE_CONTENT)+CHR$(LEN(OTYDOC_VAL$[F]))+OTYDOC_VAL$[F]
+
+  FileWrite FILE,LC$ OUT ERR
+  FileWrite FILE,LS$ OUT ERR
+  F=OTYDOC_NEXT[F]
+ WEND
+ FileClose FILE OUT ERR
+END
+COMMON DEF RTENew WND
+ VAR D=OTYDOC_GetData(WND)
+ VAR F=OTYDOC_ShowLine[D]
+ WHILE F
+  VAR N=OTYDOC_NEXT[F]
+  VAR P=OTYDOC_DeleteLine(F)
+  IF P THEN F=P ELSE F=N
+ WEND
+ VAR L=OTYDOC_NewLine(OTYDOC_NewLineInitStyle$(D),0)
+ OTYDOC_ShowLine[D]=L
+ OTYDOC_CurLine[D]=L
+ VOID RepaintWindow(WND)
+ OTYDOC_SetLine D,0
+END
+COMMON DEF RTEOpen WND,FILE$ OUT ERR
+ VAR D=OTYDOC_GetData(WND)
+ VAR F$
+ LoadFile FILE$ OUT F$,ERR
+ IF MID$(F$,0,LEN("OTYDOC")+1)!="OTYDOC"+LF$()THEN
+  ERR=TRUE
+  RETURN
+ ENDIF
+ VAR I=LEN("OTYDOC")+1
+ RTENew WND
+ VAR LINE=OTYDOC_ShowLine[D]
+ VAR OTYDOC_FILE_LINESTYLE=1,OTYDOC_FILE_CONTENT=2
+ VAR L=LEN(F$)-1
+ VAR LC
+ FOR I=I TO L
+  VAR C=ASC(F$[I])
+  IF I+1>L THEN BREAK
+  VAR CL=ASC(F$[I+1])
+  IF I+1+CL>L THEN BREAK
+  IF C==OTYDOC_FILE_LINESTYLE THEN
+   VAR V=ASC(F$[I+2])
+   OTYDOC_LINESTYLE[LINE]=V
+  ELSEIF C==OTYDOC_FILE_CONTENT THEN
+   LINE=OTYDOC_NewLine(MID$(F$,I+2,CL),LINE)
+   INC LC
+   OTYDOC_AdjustLine LINE
+  ENDIF
+  I=I+CL+1
+ NEXT
+ IF LINE!=OTYDOC_ShowLine[D]THEN
+  OTYDOC_ShowLine[D]=OTYDOC_DeleteLine(OTYDOC_ShowLine[D])
+  OTYDOC_CurLine[D]=OTYDOC_ShowLine[D]
+  OTYDOC_SetLine D,LC-1
+ ENDIF
+END
 '==================
 VAR OTYDOCCOLOR_CTL
+VAR OTYDOC_MENU_NEW=1
+VAR OTYDOC_MENU_OPEN=2
+VAR OTYDOC_MENU_SAVE=3
+VAR OTYDOC_MENU_SAVEAS=4
+COMMON DEF OTYDOC_WNDSTRNOTIF WND,CTL,TYPE,A1,A2$
+ IF A1==OTYDOC_MENU_SAVEAS THEN
+  VOID RTESave(GetWindowVar(WND,0),A2$)
+ ENDIF
+ IF A1==OTYDOC_MENU_OPEN THEN
+  VOID RTEOpen(GetWindowVar(WND,0),A2$)
+ ENDIF
+END
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
  IF CW==MenuNotifID()THEN
+  IF F==OTYDOC_MENU_NEW THEN
+   RTENew GetWindowVar(WND,0)
+  ELSEIF F==OTYDOC_MENU_SAVEAS THEN
+   VOID SaveFileDialog(WND,"TXT:.DOC",F)
+  ELSEIF F==OTYDOC_MENU_OPEN THEN
+   VOID OpenFileDialog(WND,"TXT:.DOC",F)
+  ENDIF
   RETURN
  ENDIF
  VAR N$=GetWindowName$(CW)
@@ -7285,7 +8518,7 @@
 '  UnCheckButtonsGroup CW
  ENDIF
  IF GetControl(CW)==GetNumUpDownControl()THEN
-  RTESetFontSize GetWindowVar(WND,0),GetNumUpDownValue(CW)
+  RTESetFontSize GetWindowVar(WND,0),GetNumUpDownValue(CW)*8
  ENDIF
 END
 COMMON DEF OTYDOC_WNDRESIZE WND,CTL,TYPE,A1,A2
@@ -7405,6 +8638,7 @@
 '  ExtendControl "OTYDOCCOLOR",GetWindowControl() OUT OTYDOCCOLOR_CTL,E
   NewControl "OTYDOCCOLOR" OUT OTYDOCCOLOR_CTL,E
   E=SetControlNotifHandler(OTYDOC_WNDCTL,"OTYDOC_WNDNOTIF")
+  E=SetControlStrNotifHandler(OTYDOC_WNDCTL,"OTYDOC_WNDSTRNOTIF")
   E=SetControlPainter(OTYDOCCOLOR_CTL,"OTYDOC_COLORPAINT")
   E=SetControlCreateHandler(OTYDOCCOLOR_CTL,"OTYDOC_COLORCREATE")
   E=SetControlChFocusHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorChFocus")
@@ -7415,9 +8649,13 @@
   E=SetControlPainter(OTYDOCLCRBTN_CTL,"OTYDOC_LCRPAINT")
   E=SetControlLMouseDownHandler(OTYDOCLCRBTN_CTL,"OTYDOC_LCRMouseDown")
  ENDIF
- NewTopLevelStyleWindow OTYDOC_WNDCTL,"OTYDOC",256,128,WindowMenuStyle() OR WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow OTYDOC_WNDCTL,"Document",256,128,WindowMenuStyle() OR WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
+ OTYDOC_MENU_NEW=1
+ OTYDOC_MENU_OPEN=2
+ OTYDOC_MENU_SAVE=3
+ OTYDOC_MENU_SAVEAS=4
  AddMenuItem MENU,"New",1
  AddMenuItem MENU,"Open",2
  AddMenuItem MENU,"Save",3
@@ -7437,7 +8675,7 @@
  NewWindow GetLabelControl(),"size",X,2,31,7,WND,0 OUT E,E
  INC X,32
  NewWindow GetNumUpDownControl(),"0",X,0,11+8*3,11,WND,0 OUT NUM,E
- SetNumUpDownRange NUM,8,96
+ SetNumUpDownRange NUM,1,96/8
  INC X,11+8*3+1
  VAR BTNL,BTNC,BTNR
  NewWindow OTYDOCLCRBTN_CTL,"",X,0,11,11,WND,WindowOwnerDrawFlag() OUT BTNL,E
@@ -7471,6 +8709,10 @@
 'E=JoinWindowGroup(BTNR,BTNL)
 'E=JoinWindowGroup(BTNR,BTNC)
  VOID ActiveWindow(WND)
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+ IF LEN(CMD$)THEN
+  RTEOpen DOC,CMD$ OUT E
+ ENDIF
 END
 COMMON DEF L_OTYDOC
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -7940,7 +9182,7 @@
  GetCommandArg GetProcessArgs$(),I OUT DIR$,I
  E=SetCurrentDir(DIR$)
  VAR W=42*4+8,H=64,LBL
- NewTopLevelStyleWindow OTYFILCTL,"Files",W,H,WINDOWMENUSTYLE()OR WINDOWRESIZABLESTYLE() OUT WND,E
+ NewTopLevelStyleWindow OTYFILCTL,"Files",W,H,WINDOWMENUSTYLE()OR WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  OTYFIL_MOPEN=1
@@ -8011,7 +9253,7 @@
  ENDIF
 END
 COMMON DEF MPLAYSNOTIF W,C,T,A1,A2$
- SetWindowName GetWindowVar(W,0),RIGHT$(A2$,LEN(A2$)-1)
+ SetWindowName GetWindowVar(W,0),A2$
  VOID RepaintWindow(GetWindowVar(W,0))
 END
 COMMON DEF I_MPLAY
@@ -8115,9 +9357,10 @@
    RETURN
   ENDIF
  ENDIF
+ IF GetWindowVar(WND,0)==W&&__==ListBoxChItem()THEN RETURN
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$
-  IF ISSAVE&&__!=ListBoxChItem() THEN
+  IF ISSAVE&&GetWindowName$(W)=="OK"&&__!=ListBoxChItem() THEN
    SEL$=GetWindowName$(GetWindowVar(WND,2))
    IF!LEN(SEL$)THEN RETURN
    IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
@@ -8133,7 +9376,7 @@
    RETURN
   ENDIF
   VAR ID=GetWindowVar(WND,3)
-  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,SEL$)
+  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,MID$(SEL$,1,LEN(SEL$)))
   VOID DeleteWindow(WND)
  ELSE
   IF GetWindowName$(W)=="Cancel"THEN
@@ -8375,7 +9618,7 @@
  IF!ODSKCTL THEN
   ExtendControl "ODSK",GetWindowControl() OUT ODSKCTL,E
  ENDIF
- NewTopLevelStyleWindow ODSKCTL,"Desktop",256,128,WINDOWRESIZABLESTYLE() OUT WIN_ROOTWND2,E
+ NewTopLevelStyleWindow ODSKCTL,"Desktop",256,128,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WIN_ROOTWND2,E
  SetProcessVar WIN_ROOTWND2
 END
 COMMON DEF L_ODSK
@@ -8608,7 +9851,7 @@
   ExtendControl "PRUN",GetWindowControl() OUT PRUNCTL,E
  ENDIF
  VAR WND
- NewTopLevelStyleWindow PRUNCTL,"PRUN",128,32,WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow PRUNCTL,"PRUN",128,32,WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
  E=SetControlNotificationHandler(PRUNCTL,"PRUNNotificationHandler")
  SetProcessVar WND
@@ -8637,7 +9880,7 @@
   ExtendControl "LOADER",GetWindowControl() OUT LOADERCTL,E
  ENDIF
  VAR WND
- NewTopLevelStyleWindow LOADERCTL,"LOADER",128,32,WindowResizableStyle() OUT WND,E
+ NewTopLevelStyleWindow LOADERCTL,"LOADER",128,32,WindowResizableStyle()OR WindowMinMaxStyle() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
  E=SetControlNotificationHandler(LOADERCTL,"LOADERNotificationHandler")
  SetProcessVar WND
@@ -8674,6 +9917,7 @@
  FOR I=0TO LEN(TB_TASKLIST_WND)-1
   IF TB_TASKLIST_WND[I]==CW THEN
    VOID FrontWindow(TB_TASKLIST_TW[I])
+   VOID ActiveWindow(WND)
    RETURN
   ENDIF
  NEXT
@@ -8720,6 +9964,18 @@
   ENDIF
  NEXT
 END
+COMMON DEF TskbarChildWinHandler WND,CTL,TYPE,A1,CWND
+ VAR W1,W2,H1,H2,ERR
+ IF A1==WindowMaxmizeEvent()THEN
+  GetWindowFrameSize CWND OUT W1,H1,W2,H2,ERR
+  VOID MoveResizeWindow(CWND,0,0,GetWindowWidth(GetParentWindow(CWND))-W1-W2,GetWindowHeight(GetParentWindow(CWND))-H2-H1-17)
+  RETURN
+ ELSEIF A1==WindowMinimizeEvent()THEN
+  VOID MoveResizeWindow(CWND,0,GetWindowHeight(GetParentWindow(CWND))-16,32,16)
+  RETURN
+ ENDIF
+ VOID SendChildWindowEvent(GetParentWindow(WND),A1,CWND)
+END
 COMMON DEF I_TSKBAR
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -8741,6 +9997,7 @@
  VAR H=16,W=SW
  NewWindow TSKBARCTL,"TSKBAR",0,SH-H,W,H,GetRootWindow(),WindowFrontFlag() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
+ E=SetControlChildWindowHandler(GetControl(GetRootWindow()),"TskbarChildWinHandler")
  SetProcessVar WND
  VAR TW
  VAR TSX=24
@@ -8832,7 +10089,7 @@
 VAR TSKBAR_TIMER
 VAR TSKBAR_CWND
 COMMON DEF L_TSKBAR
- IF TSKBAR_TIMER!=MAINCNT DIV 10THEN
+ IF 1||TSKBAR_TIMER!=MAINCNT DIV 10THEN
   UPDATE_TSKBAR
 '  TSKBAR_CWND=OCW
   TSKBAR_TIMER=MAINCNT DIV 10
@@ -8915,7 +10172,7 @@
   E=SetControlNotifHandler(CLIPBRDCTL,"CLIPBRDNOTIF")
  ENDIF
  VAR MENU
- NewTopLevelStyleWindow CLIPBRDCTL,"ClipBook Viewer",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE() OUT WND,E
+ NewTopLevelStyleWindow CLIPBRDCTL,"ClipBook Viewer",128,64,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
  NewMenu OUT MENU,E
  CLIPBRD_MENU_UPDATE=1
  AddMenuItem MENU,"Update",CLIPBRD_MENU_UPDATE
@@ -9062,7 +10319,7 @@
 DATA 03,11,01,09
 DATA 15,07,13,05
  ENDIF
- NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
+ NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
  SetWindowBackColor WND,0
  SetProcessVar WND
 END
@@ -9522,6 +10779,8 @@
  IF C$=="SH"THEN@SHA
  IF C$=="T"THEN@TA
  IF C$=="D"THEN RETURN RIM_ADD_DAKUTEN$(RIM_HIRA$("T",V$))
+ IF C$=="TH"THEN@THU
+ IF C$=="TS"THEN@TSA
  IF C$=="CH"THEN@CHA
  IF C$=="N"THEN@NA
  IF C$=="H"THEN@HA
@@ -9580,6 +10839,20 @@
  IF V$=="E"THEN RETURN"て"
  IF V$=="O"THEN RETURN"と"
  RETURN C$+V$
+ @THU
+ IF V$=="A"THEN RETURN"てゃ"
+ IF V$=="I"THEN RETURN"てぃ"
+ IF V$=="U"THEN RETURN"てゅ"
+ IF V$=="E"THEN RETURN"てぇ"
+ IF V$=="O"THEN RETURN"てょ"
+ RETURN C$+V$
+ @TSA
+ IF V$=="A"THEN RETURN"つぁ"
+ IF V$=="I"THEN RETURN"つぃ"
+ IF V$=="U"THEN RETURN"つ"
+ IF V$=="E"THEN RETURN"つぇ"
+ IF V$=="O"THEN RETURN"つぉ"
+ RETURN C$+V$
  @CHA
  IF V$=="A"THEN RETURN"ちゃ"
  IF V$=="I"THEN RETURN"ち"
@@ -9701,11 +10974,14 @@
 END
 VAR RIM_BUF2$
 VAR RIM_WND
-DEF RIM_SENDKEY(IM,K$)
- SetWindowName RIM_WND,RIM_BUF2$
- VOID RepaintWindow(RIM_WND)
+DEF RIM_UPDATEWINDOW K$
+ SetWindowName RIM_WND,K$
+ VOID ResizeWindow(RIM_WND,LEN(K$)*8-1,7)
  VOID ShowWindow(RIM_WND)
+END
+DEF RIM_SENDKEY(IM,K$)
  PUSH RIM_BUF2$,K$
+ RIM_UPDATEWINDOW RIM_BUF2$
 END
 DIM RIM_CURBUNSETSU$[0]
 DIM RIM_CURTXT$[0]
@@ -9727,6 +11003,9 @@
   RETURN SendIMText(IM,CR$())
  ENDIF
  IF RIM_CONVF THEN
+  IF RIM_CANDWND THEN
+   RIMNOTIF 0,0,0,RIM_CANDWND,0
+  ENDIF
   RIM_CONVF=0
   VAR ERR=SendIMText(IM,Join$(RIM_CURTXT$,""))
  ELSE
@@ -9758,6 +11037,7 @@
  NEXT
  RETURN M
 END
+VAR OTYIME_LOADED
 DEF RIM_ENTER(IM)
  IF!LEN(RIM_BUF2$)THEN
   VAR RK$=RIM_KEYBUF$
@@ -9768,9 +11048,12 @@
   DIM CAND$[0]
   OTYIME_GETCAND RIM_CURBUNSETSU$[RIM_SELBUNSETSU] OUT CAND$
   VAR RW=GetParentWindow(RIM_WND),E
-  VAR Y=GetWindowHeight(RW)-64-8
+  VAR Y=GetWindowY(RIM_WND)-64
+  IF Y<0 THEN
+   Y=GetWindowY(RIM_WND)+8
+  ENDIF
   VAR W=RIM_MAXLEN(CAND$)*8+12
-  VAR X=MIN(RW-W,RIM_CALC_X())
+  VAR X=MAX(GetWindowX(RIM_WND)+MIN(RW-W,RIM_CALC_X()),0)
   VAR H=63
   IF RIM_CANDWND THEN
    ClearListBox RIM_CANDWND
@@ -9787,15 +11070,21 @@
  ENDIF
  RIM_CONVF=TRUE
  IF 0 THEN DIM A$[0],B$[0]
- OTYIME_K2K RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
+ IF!OTYIME_LOADED THEN
+  OTYIME_INIT
+  CLS
+  OTYIME_LOADED=TRUE
+ ENDIF
+ 'OTYIME_K2K RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
+  KKC2 RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
+' B$=NewArray$(LEN(A$))
+' COPY B$,A$
  RIM_KEYBUF$=""
  RIM_CURTXT$=A$
  RIM_CURBUNSETSU$=B$
  RIM_SELBUNSETSU=0
  RIM_BUF2$=Join$(A$,"")
- SetWindowName RIM_WND,RIM_BUF2$
- VOID RepaintWindow(RIM_WND)
- VOID ShowWindow(RIM_WND)
+ RIM_UPDATEWINDOW RIM_BUF2$
  RETURN 0'ERR
 END
 DEF RIM_KEY IM,KEY
@@ -9821,16 +11110,29 @@
    VOID POP(RIM_KEYBUF$)
   ELSEIF LEN(RIM_BUF2$)THEN
    VOID POP(RIM_BUF2$)
-   
   ENDIF
-  SetWindowName RIM_WND,RIM_BUF2$+RIM_KEYBUF$
-  VOID RepaintWindow(RIM_WND)
-  VOID ShowWindow(RIM_WND)
+  IF!LEN(RIM_BUF2$)&&!LEN(RIM_KEYBUF$)THEN
+   VOID HideWindow(RIM_WND)
+   VOID DeleteWindow(RIM_CANDWND)
+   RETURN
+  ENDIF
+  RIM_UPDATEWINDOW RIM_BUF2$+RIM_KEYBUF$
   RETURN
  ENDIF
- IF!RIM_CONVF THEN
+ IF!RIM_CONVF&&!RIM_TARGETWND THEN
   VAR W=GetActiveWindow()
   RIM_TARGETWND=W
+  VAR X,Y,E
+  GetWindowCursor W OUT X,Y,E
+  IF !E THEN
+   X=CalcWindowX(GetParentWindow(RIM_WND),W)+X
+   Y=CalcWindowY(GetParentWindow(RIM_WND),W)+Y
+   VOID MoveWindow(RIM_WND,X,Y)
+   VOID FrontWindow(RIM_WND)
+  ELSE
+   VOID MoveWindow(RIM_WND,0,GetWindowHeight(GetParentWindow(RIM_WND))-7)
+   VOID FrontWindow(RIM_WND)
+  ENDIF
  ENDIF
  IF!RIM_ISROMA(KEY)THEN
   IF LEN(RIM_KEYBUF$)THEN
@@ -9853,9 +11155,7 @@
   RETURN
  ENDIF
  PUSH RIM_KEYBUF$,CHR$(KEY)
- SetWindowName RIM_WND,RIM_BUF2$+RIM_KEYBUF$
- VOID RepaintWindow(RIM_WND)
- VOID ShowWindow(RIM_WND)
+ RIM_UPDATEWINDOW RIM_BUF2$+RIM_KEYBUF$
  IF ToUpper$(RIM_KEYBUF$)=="NN"THEN
   VOID RIM_SENDKEY(IM,RIM_K$("ん"))
   RIM_KEYBUF$=""
@@ -9870,24 +11170,35 @@
   RIM_CURTXT$[RIM_SELBUNSETSU]=T$
   VOID DeleteWindow(A1)
   RIM_CANDWND=0
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
 END
+DEF RIM_UPDATEWINDOW2
+ VAR I,L=LEN(RIM_CURTXT$)-1
+ VAR W
+ FOR I=0TO L
+  W=W+LEN(RIM_CURTXT$[I])*8
+ NEXT
+ VOID ResizeWindow(RIM_WND,W-1,7)
+END
 COMMON DEF RIMBTN WND,CTL,TYP,BTN,__
- VAR MC=GetWindowVar(WND,RIM_WV_BTNRPT)
- IF ABS(MC-MAINCNT)<10 THEN
+ IF!BTN THEN RETURN
+ IF (BTN AND (#UP OR #DOWN))&&RIM_CANDWND THEN
+  VOID SendButtonWindow(RIM_CANDWND,BTN)
   RETURN
  ENDIF
- VOID DeleteWindow(RIM_CANDWND)
- RIM_CANDWND=0
- SetWindowVar WND,RIM_WV_BTNRPT,MAINCNT
+ IF RIM_CANDWND THEN
+  RIMNOTIF WND,CTL,TYP,RIM_CANDWND,0
+  VOID DeleteWindow(RIM_CANDWND)
+  RIM_CANDWND=0
+ ENDIF
  IF BTN==#LEFT&&RIM_SELBUNSETSU>0 THEN
   DEC RIM_SELBUNSETSU
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
  IF BTN==#RIGHT&&LEN(RIM_CURTXT$)>RIM_SELBUNSETSU+1 THEN
   INC RIM_SELBUNSETSU
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
  IF BTN==#UP&&LEN(RIM_CURTXT$)>RIM_SELBUNSETSU+1 THEN
   PUSH RIM_CURBUNSETSU$[RIM_SELBUNSETSU],RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1][0]
@@ -9902,7 +11213,7 @@
    RIM_CURTXT$[RIM_SELBUNSETSU]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU]
    RIM_CURTXT$[RIM_SELBUNSETSU+1]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1]
   ENDIF
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
  IF BTN==#DOWN THEN
   IF LEN(RIM_CURBUNSETSU$[RIM_SELBUNSETSU])==1THEN RETURN
@@ -9913,7 +11224,7 @@
   UNSHIFT RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1],POP(RIM_CURBUNSETSU$[RIM_SELBUNSETSU])
   RIM_CURTXT$[RIM_SELBUNSETSU]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU]
   RIM_CURTXT$[RIM_SELBUNSETSU+1]=RIM_CURBUNSETSU$[RIM_SELBUNSETSU+1]
-  VOID RepaintWindow(WND)
+  RIM_UPDATEWINDOW2
  ENDIF
 END
 COMMON DEF RIMPAINT WND,CTL,TYP,XY,WH
@@ -9950,6 +11261,7 @@
  VAR RWND=GetRootWindow()
  VAR WND
  NewWindow RIM_CTL,"",0,GetWindowHeight(RWND)-7,GetWindowWidth(RWND),7,RWND,WindowFrontFlag() OUT WND,E
+ SetWindowProperty WND,"SHADOW",FALSE OUT E
  VOID HideWindow(WND)
  RIM_WND=WND
  VAR IM,ERR
@@ -9963,8 +11275,6 @@
  SetProcessVar IM
  KEY 1,"KEY OFF"
  EXEC 2
- OTYIME_INIT
- CLS
 END
 COMMON DEF L_RIM
  VAR X,Y,MMM
@@ -10211,7 +11521,7 @@
  SetGetConsoleCursorHandler CON,"OTWTERM_GETCUR"OUT E
  VAR CW=40
  VAR CH=20
- NewTopLevelStyleWindow OTWTERMCTL,"OTWTERM",CW*8,CH*8,WINDOWRESIZABLESTYLE() OUT WND,E
+ NewTopLevelStyleWindow OTWTERMCTL,"OTWTERM",CW*8,CH*8,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
  E=SetConsoleVar(CON,WND)
  VAR DEFSTYLE=14
  SetWindowVar WND,0,AllocSBArray()
@@ -10238,15 +11548,16 @@
 VAR ODE_IH
 VAR ODE_IX
 VAR ODE_IY
-DEF ODE_GETITEM X,Y OUT I,IX,IY
+DEF ODE_GETITEM WND,X,Y OUT I,IX,IY
  X=X-ODE_IX
+ Y=Y-ODE_IY
  IX=X DIV ODE_IW
  IY=Y DIV ODE_IH
- I=IY
+ I=IY+(IX*(GetWindowHeight(WND)DIV ODE_IH))
 END
 COMMON DEF ODE_LDC WND,CTL,TYP,X,Y
  VAR I
- ODE_GETITEM X,Y OUT I,X,Y
+ ODE_GETITEM WND,X,Y OUT I,X,Y
  IF I<0THEN RETURN
  SetWindowVar WND,ODE_WV_CURRENT,I
  IF 0 THEN DIM DIR$[0]
@@ -10267,7 +11578,7 @@
  VAR IH=ODE_IH
  VAR ICONSX=(IW-16) DIV 2
  VAR ITW=IW DIV 8
- ODE_GETITEM X,Y OUT I,X,Y
+ ODE_GETITEM WND,X,Y OUT I,X,Y
  IF I<0THEN RETURN
  SetWindowVar WND,ODE_WV_CURRENT,I
  ODE_PAINTER WND,CTL,TYP,0,0
@@ -10322,6 +11633,7 @@
    ENDIF
   ENDIF
   IY=IY+IH
+  IF IY+IH>=SH THEN IY=ODE_IY:IX=IX+ODE_IW
  NEXT
  
  IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,1)THEN @END
@@ -10351,9 +11663,9 @@
   ODE_WV_FILES=0
   ODE_WV_CURRENT=1
   ODE_IW=48
-  ODE_IH=40
+  ODE_IH=44
   ODE_IX=8
-  ODE_IY=0
+  ODE_IY=8
  ENDIF
  VAR RWND=GetRootWindow()
  NewWindow ODE_CTL,"",0,0,GetWindowWidth(RWND),GetWindowHeight(RWND),RWND,WindowBackFlag() OUT WND,E
@@ -10449,4 +11761,52 @@
 COMMON DEF L_OTWBENCH
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR OTWCLOCKCTL
+COMMON DEF OTWCLOCKPAINT WND,CTL,TYP,XY,WH_
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH_)
+ OTWCLOCKDRAW WND
+END
+COMMON DEF OTWCLOCKDRAW WND
+ VAR H,M,S
+ TMREAD OUT H,M,S
+ SetWindowVar WND,0,S
+ VAR WW=GetWindowWidth(WND)
+ VAR WH=GetWindowHeight(WND)
+ WW=MIN(WW,WH)
+ WH=WW
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,GetWindowBackColor(WND)
+ SetWindowDrawPos WND,(GetWindowWidth(WND)-WW)DIV 2,(GetWindowHeight(WND)-WW)DIV 2
+ GCIRCLEWindow WND,WW DIV 2,WH DIV 2,WW DIV 2,#BLACK
+ VAR H#=RAD(H*(360/24))
+ VAR M#=RAD(M*(360/60))
+ VAR S#=RAD(S*(360/60))
+ H=S
+ GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(S#)*(WW/2),WW/2+SIN(S#)*(WW/2),#BLACK
+ GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(H#)*(WW/2)*0.5,WW/2+SIN(H#)*(WW/2)*0.5,#BLACK
+ GLINEWindow WND,WW DIV 2,WH DIV 2,WW/2+COS(M#)*(WW/2),WW/2+SIN(M#)*(WW/2)*0.9,#BLACK
+ IF GEndWindow(WND)THEN RETURN
+END
+COMMON DEF I_OTWCLOCK
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWCLOCKCTL THEN
+  ExtendControl "CLOCK",GetWindowControl() OUT OTWCLOCKCTL,E
+  E=SetControlPainter(OTWCLOCKCTL,"OTWCLOCKPAINT")
+ ENDIF
+  NewTopLevelStyleWindow OTWCLOCKCTL,"CLOCK",64,64,WINDOWRESIZABLESTYLE()OR WindowMinMaxStyle() OUT WND,E
+ SetProcessVar WND
+END
+COMMON DEF L_OTWCLOCK
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+ VAR S
+ TMREAD OUT ,,S
+ IF GetWindowVar(GetProcessVar(),0)!=S THEN
+  OTWCLOCKDRAW GetProcessVar()
+ ENDIF
+END
 
