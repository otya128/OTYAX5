diff -u OTW.TXT OTW26
--- OTW.TXT
+++ OTW26
@@ -4,7 +4,7 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
-VAR WIN_BKGND,WIN_BTNBACK
+VAR WIN_BKGND,WIN_BTNBACK,WIN_SELCOL,WIN_SELTXTCOL
 VAR OTW_ENABLE_SHADOW
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOVWINNUWID
@@ -122,6 +122,8 @@
 VAR OTW_DBLCLKXY
 VAR OTW_DBLCLKX
 VAR OTW_DBLCLKY
+
+VAR OTW_SMOOTH_MOVE_WINDOW
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
@@ -287,13 +289,15 @@
  ASSOC_TYP$=NewArray$(0)
  ASSOC_EXT$=NewArray$(0)
  ASSOC_NAME$=NewArray$(0)
- VAR E=AssociateFile("TXT","","EDITORSEL")
- E=AssociateFile("TXT","TXT","TXTED")
- E=AssociateFile("TXT","PRG","PRGED")
- E=AssociateFile("TXT","MML","MPLAY")
+ VAR E=AssociateFile("*","","EDITORSEL")
+ E=AssociateFile("*","TXT","TXTED")
+ E=AssociateFile("*","PRG","PRGED")
+ E=AssociateFile("*","MML","MPLAY")
+ E=AssociateFile("/","","OTYFIL")
 END
 DEF GetAssociatedIndex(TYP$,EXT$)
  VAR I
+ EXT$=ToUpper$(EXT$)
  FOR I=0TO ASSOC_LEN-1
   IF ASSOC_EXT$[I]==EXT$&&ASSOC_TYP$[I]==TYP$THEN 
    RETURN I
@@ -304,6 +308,10 @@
 COMMON DEF GetAssociatedProgram$(TYP$,EXT$)
  VAR I=GetAssociatedIndex(TYP$,EXT$)
  IF I!=-1THEN RETURN ASSOC_NAME$[I]
+ 'unknown EXT
+ IF LEN(EXT$)THEN
+  RETURN GetAssociatedProgram$(TYP$,"")
+ ENDIF
  RETURN ""
 END
 COMMON DEF AssociateFile(TYP$,EXT$,NAME$)
@@ -318,8 +326,25 @@
  INC ASSOC_LEN
  RETURN 0
 END
+'HOGE
+COMMON DEF ExecFile(F$)
+ VAR TYPE$,E
+ F$=GetAbsolutePath$(F$)
+ GetFileType F$ OUT TYPE$,E
+ IF E THEN RETURN E
+ IF TYPE$=="/"THEN
+  
+ ENDIF
+ VAR EXT$=GetFileExtension$(F$)
+ VAR PRG$=GetAssociatedProgram$(TYPE$,EXT$)
+ VAR PRC
+ NewProcess PRG$,F$ OUT PRC,E
+ IF E THEN RETURN E
+ RETURN 0
+END
+
 'IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
-'ExitProcess 1
+' ExitProcess 1
 'ENDIF
 VAR OTWRunning
 COMMON DEF IsWinRunning()
@@ -530,15 +555,89 @@
 END
 VAR IM_MAX
 VAR IM_FREE
+VAR IM_IDCNT
 DIM IM_NEXT[0]
+DIM IM_ID[0]
 DIM IM_KEY_HANDLER$[0]
-DEF WIN_IM_INITARRAY
+DIM IM_DEL_HANDLER$[0]
+'IM>
+DEF OTW_IM_INITARRAY
  IM_MAX=5
- IM_NEXT=NeeArray(IM_MAX)
- IM_KEY_HANDLER$=NeeArray$(IM_MAX)
+ IM_NEXT=NewArray(IM_MAX)
+ IM_ID=NewArray(IM_MAX)
+ IM_KEY_HANDLER$=NewArray$(IM_MAX)
+ IM_DEL_HANDLER$=NewArray$(IM_MAX)
+ IM_IDCNT=1
  OTW_INITLIST IM_NEXT
  IM_FREE=1
 END
+VAR IM_NOALLOC
+VAR IM_INVALIDID
+COMMON DEF CheckIM(IM)
+ RETURN IM_ID[IM AND 4095]==IM>>12
+END
+COMMON DEF SetIMKeyHandler(IM,FUNC$)
+ IF!CheckIM(IM)THEN
+  RETURN IM_INVALIDID
+ ENDIF
+ VAR NIM=IM AND 4095
+ IM_KEY_HANDLER$[NIM]=FUNC$
+ RETURN 0
+END
+COMMON DEF SetIMDeleteHandler(IM,FUNC$)
+ IF!CheckIM(IM)THEN
+  RETURN IM_INVALIDID
+ ENDIF
+ VAR NIM=IM AND 4095
+ IM_DEL_HANDLER$[NIM]=FUNC$
+ RETURN 0
+END
+COMMON DEF DeleteIM IM OUT ERR
+ IF!CheckIM(IM)THEN
+  ERR=IM_INVALIDID
+  RETURN
+ ENDIF
+ VAR NIM=IM AND 4095
+ IM_ID[NIM]=0
+ IM_NEXT[NIM]=IM_FREE
+ CALL IM_DEL_HANDLER$[NIM],IM
+ IM_KEY_HANDLER$[NIM]=""
+ IM_DEL_HANDLER$[NIM]=""
+ ERR=0
+ IM_FREE=NIM
+END
+COMMON DEF NewIM OUT IM,ERR
+ IM=IM_FREE
+ IF!IM THEN
+  ERR=IM_NOALLOC
+  RETURN
+ ENDIF
+ IM_ID[IM]=IM_IDCNT
+ INC IM_IDCNT
+ IM_FREE=IM_NEXT[IM_FREE]
+ ERR=0
+ IM=IM_ID[IM]<<12 OR IM
+END
+COMMON DEF ProcessIM(IM)
+ IF!CheckIM(IM)THEN
+  RETURN IM_INVALIDID
+ ENDIF
+ VAR NIM=IM AND 4095
+ VAR KH$=IM_KEY_HANDLER$[NIM]
+ WHILE 1
+  VAR INK$=INKEY$()
+  IF!LEN(INK$)THEN RETURN 0
+  CALL KH$,IM,ASC(INK$)
+ WEND
+ RETURN 0
+END
+'IM->PROGRAM
+COMMON DEF SendIMText(IM,TEXT$)
+ VAR I
+ FOR I=0TO LEN(TEXT$)-1
+  VOID SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(TEXT$[I]))
+ NEXT
+END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
 VAR WIN_EVENTERR
@@ -553,6 +652,8 @@
  WIN_NODRAW=3
  CTL_NOALLOC=201
  CTL_INVALIDID=202
+ IM_NOALLOC=301
+ IM_INVALIDID=302
 END
 COMMON DEF GetWindowControl()
  RETURN CTL_WINDOWCTL
@@ -803,7 +904,7 @@
  PATH$=""
 END
 COMMON DEF ClipboardSetFile ISCUT,PATH$
- CLPBRDFIL$=PATH$
+ CLPBRDFIL$=GetAbsolutePath$(PATH$)
  CLPBRDFILCUT=ISCUT
  CLPBRDCFIL=TRUE
 END
@@ -872,7 +973,7 @@
 DEF ShowMenuXY MENU,WND,X,Y
  VAR W=WND AND NUWIDMASK
  VAR E
- NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ NewWindow MENUCTL,"",X,Y,MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWindow(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
  VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
  SetWindowVar MENU_NUWID[MENU],0,MENU
  MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
@@ -886,7 +987,7 @@
 END
 DEF NewMenuItem(STR$,PREV,STYLE)
  VAR I=MENU_ITEMFREE
- IF!I THEN RETURN
+ IF!I THEN RETURN 0
  MENU_INAME$[I]=STR$
  MENU_IPREV[I]=PREV
  IF PREV THEN MENU_INEXT[PREV]=I
@@ -971,8 +1072,8 @@
    MENU_SEL[M]=I
    IF!BEG&&GBeginWindow(WND)THEN :'BREAK
    BEG=1
-   GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,RGB(0,0,255)
-   GPRINTWindow WND,SX,Y1,MENU_INAME$[I],-1
+   GFILLWindow WND,SX,Y1,MENU_WIDTH[M]-SX,Y2-1,GetSelectionColor()
+   GPRINTWindow WND,SX,Y1,MENU_INAME$[I],GetSelectionTextColor()
    G=0
    ENDIF
    IF!OS THEN BREAK
@@ -1068,11 +1169,11 @@
 END
 VAR WIN_ROOTWND
 VAR WIN_ROOTWND2
-COMMON DEF GetRootWND()
+COMMON DEF GetRootWindow()
  RETURN WIN_ROOTWND2
 END
 COMMON DEF CheckWindow(WND)
- RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
+ RETURN (WND AND NUWIDMASK)>0&&(WND AND NUWIDMASK)<LEN(WIN_WID)&&WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
 END
 VAR WIN_TopLevelX
 VAR WIN_TopLevelY
@@ -1270,6 +1371,7 @@
  SPSET SP,0
  ENDIF
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
+'SPANIM SP,"S",-60,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
  SPSHOW SP
  SPVAR SP,0,WND
@@ -1534,7 +1636,7 @@
  VAR WND,E
  IF AX<0THEN AX=0
  IF AY<0THEN AY=0
- NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag()OR 512 OUT WND,E
+ NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWindow(),WindowFrontFlag()OR 512 OUT WND,E
  IF FLAG THEN
   WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
  ENDIF
@@ -2042,7 +2144,7 @@
  WIN_RY[NUWID]=WIN_AY[NUWID]
  OTW_CLIPWindow NUWID
  VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
- VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
+' VOID RepaintWindow(WIN_PARENT[NUWID]OR(WIN_WID[WIN_PARENT[NUWID]]<<WIDSHIFT))
 
  IF!NXT THEN RETURN 'WIN_
  B=NXT
@@ -2115,10 +2217,78 @@
  RETURN 0
 END
 DEF MoveResizeWindowF(WND,X,Y,W,H)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- VAR E=MoveWindow2(WND,X,Y)
- IF E THEN RETURN E
- RETURN ResizeWindowF(WND,W,H)
+ IF W+1<WIN_MINW[NUWID]THEN
+  W=WIN_MINW[NUWID]-1
+ ENDIF
+ IF H+1<WIN_MINH[NUWID]THEN
+  H=WIN_MINH[NUWID]-1
+ ENDIF
+ VAR OX=WIN_AX[NUWID],OY=WIN_AY[NUWID]
+ VAR MX=X-WIN_X[NUWID],MY=Y-WIN_Y[NUWID]
+ VAR OW=WIN_WIDTH[NUWID]
+ VAR OH=WIN_HEIGHT[NUWID]
+
+ IF!MX&&!MY&&W==OW&&H==OH THEN RETURN 0
+ VOID FireResizeWindow(WND,W-WIN_FW2[NUWID],H-WIN_FH2[NUWID])
+ VAR PNUWID=WIN_PARENT[NUWID]
+ WIN_WIDTH[NUWID]=W
+ WIN_HEIGHT[NUWID]=H
+ WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
+ WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+WIN_FW1[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+WIN_FH1[PNUWID]+Y
+ WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
+ WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ OTW_CLIPWindow NUWID
+ VAR NXT=WIN_CHILD[WIN_PARENT[NUWID]],B
+
+' IF!NXT THEN RETURN 0
+ B=NXT
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
+  IF WIN_SP[NUWID]THEN
+   WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
+  ENDIF
+ ENDIF
+ VAR MOVEF=0
+ B=WIN_PARENT[NUWID]
+   WHILE B
+    IF MOVEF THEN
+     WIN_AX[B]=WIN_AX[B]+MX
+     WIN_AY[B]=WIN_AY[B]+MY
+     WIN_FX[B]=WIN_AX[B]+WIN_FW1[B]'+MX
+     WIN_FY[B]=WIN_AY[B]+WIN_FH1[B]'+MY
+     WIN_RFX[B]=WIN_FX[B]'+MX
+     WIN_RFY[B]=WIN_FY[B]'+MY
+     WIN_RX[B]=WIN_AX[B]'+MX
+     WIN_RY[B]=WIN_AY[B]'+MY
+     OTW_CLIPWindow B
+     MOVEF=1
+    ENDIF
+    IF WIN_CHILD[B]THEN
+     IF B==NUWID THEN MOVEF=1
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
+    IF!WIN_NEXT[B]THEN
+     WHILE B
+      B=WIN_PARENT[B]
+      IF B==NUWID THEN MOVEF=0
+      IF WIN_NEXT[B]THEN BREAK
+     WEND
+     IF!B THEN GOTO @END
+    ENDIF
+    B=WIN_NEXT[B]
+   WEND
+   @END
+ RepaintAllWindow WND,0,0,0,0
+ RepaintAllWindow GetParentWindow(WND),OX,OY,OW,OH
+ RETURN 0
 END
 COMMON DEF ResizeWindow(WND,W,H)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -2503,6 +2673,8 @@
 END
 COMMON DEF GBeginDirect(WND)
  GPAGE OTW_SP,OTW_DDRAWPAGE
+ GCLIP 1
+ RETURN 0
 END
 COMMON DEF GEndDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
  GPAGE OTW_SP,OTW_BP
@@ -2511,7 +2683,8 @@
  GPAGE OTW_SP,OTW_BP
  VAR E=GBeginWindow(WND)
  IF E THEN RETURN E
- GCOPY OTW_DDRAWPAGE,X1+WING_SX,Y1+WING_SY,X2+WING_SX,Y2+WING_SY,X3+WING_SX,Y3+WING_SY,MODE
+ GCOPY OTW_DDRAWPAGE,X1,Y1,X2,Y2,X3+WING_SX,Y3+WING_SY,MODE
+ RETURN 0
 END
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -2816,6 +2989,12 @@
 COMMON DEF GetBackColor()
  RETURN WIN_BKGND
 END
+COMMON DEF GetSelectionColor()
+ RETURN WIN_SELCOL
+END
+COMMON DEF GetSelectionTextColor()
+ RETURN WIN_SELTXTCOL
+END
 DEF DesktopPainter WND,CTL,TYPE,A1,A2
 RETURN
  VAR E=GBEGINWindow(WND)
@@ -3077,8 +3256,8 @@
     IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
     BEG=1
     FIND=1
-    GFILLWindow WND,X1,-10,X2-2,-2,RGB(0,0,255)
-    GPRINTWindow WND,X1,-9,MENU_INAME$[I],-1
+    GFILLWindow WND,X1,-10,X2-2,-2,GetSelectionColor()
+    GPRINTWindow WND,X1,-9,MENU_INAME$[I],GetSelectionTextColor()
     MENU_SEL[C]=I
     IN=1
     I=MENU_INEXT[I]
@@ -3119,7 +3298,7 @@
   DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
   VAR X=MX+A1X
   VAR Y=MY+A2Y
-  OTW_INITSP 5
+  IF!OTW_SMOOTH_MOVE_WINDOW THEN OTW_INITSP 5
   VAR E=MoveWindow(WND,X,Y)
   E=FrontWindow(WND)
   SPUNLINK OTW_MOVWINSP
@@ -3540,8 +3719,8 @@
   IF Y>=Y1&&Y<Y2 THEN
    SetWindowVar WND,7,V
    IF!GB&&GBeginWindow(WND)THEN RETURN
-   GFILLWindow WND,1,Y1,W,Y2-1,RGB(0,0,255)
-   GPRINTWindow WND,1,Y1,LISTSTR$[V],-1
+   GFILLWindow WND,1,Y1,W,Y2-1,GetSelectionColor()
+   GPRINTWindow WND,1,Y1,LISTSTR$[V],GetSelectionTextColor()
    F=1
    GB=1
    IF!S THEN BREAK
@@ -3581,6 +3760,19 @@
  LISTSTRNEXT[L]=LISTSTR_FREE
  LISTSTR_FREE=GetWindowVar(WND,1)
 END
+DEF ClearListBox WND
+ VAR L=GetWindowVar(WND,1)
+ IF!L THEN RETURN
+ WHILE LISTSTRNEXT[L]
+  L=LISTSTRNEXT[L]
+ WEND
+ LISTSTRNEXT[L]=LISTSTR_FREE
+ LISTSTR_FREE=GetWindowVar(WND,1)
+ SetWindowVar WND,3,0
+ SetWindowVar WND,2,0
+ SetWindowVar WND,1,0
+ VOID RepaintWindow(WND)
+END
 DEF ListBoxNotif WND,CT,T,A1,POS
  VAR OP=GetWindowVar(WND,5)
  IF OP==POS THEN RETURN
@@ -3621,8 +3813,8 @@
  VAR S=GetWindowVar(WND,7)
  WHILE L
   IF S==L THEN
-   GFILLWindow WND,1,Y,W-1,Y+7,RGB(0,0,255)
-   GPRINTWindow WND,1,Y,LISTSTR$[L],-1
+   GFILLWindow WND,1,Y,W-1,Y+7,GetSelectionColor()
+   GPRINTWindow WND,1,Y,LISTSTR$[L],GetSelectionTextColor()
   ELSE
    GPRINTWindow WND,1,Y,LISTSTR$[L],RGB(0,0,0)
   ENDIF
@@ -3705,7 +3897,7 @@
  VAR LSTBOX=GetWindowVar(WND,0)
  IF!LSTBOX THEN
   VAR E
-  NewWindow CTL_DRPDWNBOXCTL,"",0,0,0,0,GetRootWND(),0 OUT LSTBOX,E
+  NewWindow CTL_DRPDWNBOXCTL,"",0,0,0,0,GetRootWindow(),0 OUT LSTBOX,E
   IF E THEN @ERR
   SetWindowVar WND,0,LSTBOX
   IF JoinWindowGroup(WND,LSTBOX) THEN @ERR
@@ -4087,11 +4279,13 @@
   OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
   WIN_BTNBACK=RGB(192,192,192)
+  WIN_SELCOL=RGB(0,0,255)
+  WIN_SELTXTCOL=RGB(255,255,255)
   VAR FM=FREEMEM
-  PrintConsole "====================="+LF$()
-  PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
-  PrintConsole "====================="+LF$()
-  PrintConsole "Ver 5.0-B"+LF$()
+  PrintConsole "=================="+LF$()
+  PrintConsole "OTYA WINDOW SYSTEM"+LF$()
+  PrintConsole "=================="+LF$()
+  PrintConsole "Ver 5.0-26"+LF$()
 ' BEEP 94,-1000
   VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77'34
   M1$=":1"+G$+"T140<<C8 C8&C2."
@@ -4111,6 +4305,7 @@
   OTW_CTL_INITARRAY
   OTW_INIT_ERR
   OTW_ASSOC_INIT
+  OTW_IM_INITARRAY
   PrintConsoleln "Init setting..."
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -4192,7 +4387,7 @@
   VAR E
   NewControl "DESKTOP" OUT WIN_ROOTCTL,E
 ' E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
-  NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
+  NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400-1,240-1 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
 ' NewTopLevelWindow TSTCTL,"HELLO",164,164 OUT TSTWND,E
 ' NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
@@ -4211,6 +4406,9 @@
   OTW_LMOUSEUP =2
   OTW_RMOUSEDWN=4
   OTW_RMOUSEUP =8
+  DEC FM,FREEMEM
+  OTW_USEMEM=FM
+  PrintConsoleln FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
   
   '290
   SPSET OTW_MOUSESP,0
@@ -4225,12 +4423,11 @@
   OTW_MOVWINCOL=RGB(128,128,128,128)
   OTW_MOVWINCOL=RGB(128,255,255,255)
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
-  DEC FM,FREEMEM
-  OTW_USEMEM=FM
-  PrintConsoleln FORMAT$("UsingMemory8192KB/%DKB",FM/1024)+LF$()
   CLS
   LOCATE 0,29
   NewProcess"LAUNCHER","" OUT E,E
+  NewProcess"TESTIM","" OUT E,E
+  NewProcess"ODE","" OUT E,E
  ENDIF
 RETURN
 END
@@ -4256,23 +4453,22 @@
 VAR OTW_OLDBTN
 VAR OTW_OLDBTNF
 VAR OLDMOVEMOUSEWINDOW
-VAR OTW_SMOOTH_MOVE_WINDOW
 VAR OTW_ENKEY_STATE
 VAR OTW_ENABLEKEY
 COMMON DEF L_OTW
- VAR X,Y,MMM
- TOUCH OUT MMM,X,Y
- IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
-  OTW_ENKEY_STATE=1
-  OTW_ENABLEKEY=!OTW_ENABLEKEY
-  IF OTW_ENABLEKEY THEN
-   KEY 1,"KEY ON"
-  ELSE
-   KEY 1,"KEY OFF"
-  ENDIF
-  BEEP 9
- ENDIF
- IF!MMM THEN OTW_ENKEY_STATE=0
+' VAR X,Y,MMM
+' TOUCH OUT MMM,X,Y
+' IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
+'  OTW_ENKEY_STATE=1
+'  OTW_ENABLEKEY=!OTW_ENABLEKEY
+'  IF OTW_ENABLEKEY THEN
+'   KEY 1,"KEY ON"
+'  ELSE
+'   KEY 1,"KEY OFF"
+'  ENDIF
+'  BEEP 9
+' ENDIF
+' IF!MMM THEN OTW_ENKEY_STATE=0
  IF OTW_MOUSE==5THEN
   OTW_INITSP 0
  ENDIF
@@ -4431,10 +4627,10 @@
 ' IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
  OTW_OLDMOUSEY=OTW_MOUSEY
- VAR K$=INKEY$()
- IF OTW_ENABLEKEY&&LEN(K$)THEN
-  E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
- ENDIF
+' VAR K$=INKEY$()
+' IF OTW_ENABLEKEY&&LEN(K$)THEN
+'  E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
+' ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
 'E=UpdateWindow(TSTWND2)
 'E=UpdateWindow(TSTWND)
@@ -4567,6 +4763,9 @@
    'TODO:Move->Resizeでおかしくなる
    'TODO:MoveResizeWindow
 '   VOID MoveWindow(NUWIDToWND(NW),X,Y)
+'"D
+   DEC X,WIN_FX[WIN_PARENT[NW]]
+   DEC Y,WIN_FY[WIN_PARENT[NW]]
    VOID MoveResizeWindowF(NUWIDToWND(NW),X,Y,W,H)
   ENDIF
  ENDIF
@@ -4622,7 +4821,7 @@
  VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
 ' E=GBeginWindow(WND)
  IF E THEN RETURN
- VAR S$="otya 3D window"
+ VAR S$="otya window"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,0,S$,RGB(0,0,0)
  S$="system 5.0"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,8,S$,RGB(0,0,0)
@@ -4631,7 +4830,7 @@
  GPRINTWindow WND,(144-LEN(S$)*8)/2,30,S$,RGB(0,0,0)
  S$="mintyan"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,38,S$,RGB(0,0,0)
- S$="© 2011-2015 otya"
+ S$="© 2011-2017 otya"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,46+4,S$,RGB(0,0,0)
  E=GEndWindow(WND)
 END
@@ -4681,12 +4880,12 @@
  ENDIF
  IF LAUNCHERCTL THEN
   VAR WND,E
-  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,64,WINDOWRESIZABLESTYLE() OUT WND,E
+  NewTopLevelStyleWindow LAUNCHERCTL,"LAUNCHER",80,99,WINDOWRESIZABLESTYLE() OUT WND,E
   SetProcessVar WND
-  NewWindow GetListBoxControl(),"",0,0,80,64,WND,0 OUT WND,E
+  NewWindow GetListBoxControl(),"",0,0,80,98,WND,0 OUT WND,E
   AddArrayListBoxItem WND,LAUNCHERITEM$
  ELSE
-  LAUNCHERLEN=12
+  LAUNCHERLEN=13
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -4700,6 +4899,7 @@
   LAUNCHERITEM$[9]="MPLAY"
   LAUNCHERITEM$[10]="CLIPBRD"
   LAUNCHERITEM$[11]="OTYMINE"
+  LAUNCHERITEM$[12]="OTWTERM"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
 '  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
 '  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
@@ -5319,6 +5519,7 @@
    SWAP SELPOS1,SELPOS2
   ENDIF
  ENDIF
+ VAR SLC=GetSelectionColor()
  WHILE 1
   INC LINE
   V$=TXTBOXEX_VAL$[L]
@@ -5336,14 +5537,14 @@
   INC LS$,CHR$(&HE100+_)
   GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
   IF LINE>SELLINE1&&LINE<SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X,Y,X+LEN(V$)*8,Y+7,SLC
   ENDIF
   IF LINE==SELLINE1&&LINE==SELLINE2 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ELSEIF LINE==SELLINE1 THEN
-   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X+MIN(LEN(V$),SELPOS1)*8,Y,X+LEN(V$)*8,Y+7,SLC
   ELSEIF LINE==SELLINE2 THEN
-   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,RGB(0,0,255)
+   GFILLWindow WND,X,Y,X+MIN(LEN(V$),SELPOS2)*8,Y+7,SLC
   ENDIF
   IF SH THEN
    TXTED_PRGPRINT WND,X,Y,V$
@@ -5932,12 +6133,15 @@
  ON ID GOTO @OPEN,@SAVE
  RETURN
  @OPEN
- TextBoxExSetText GetWindowVar(W,0),LoadFile$(RIGHT$(A2$,LEN(A2$)-1))
+ VAR ERR,T$
+ LoadFile RIGHT$(A2$,LEN(A2$)-1) OUT T$,ERR
+ IF ERR THEN RETURN
+ TextBoxExSetText GetWindowVar(W,0),T$
  RETURN
  @SAVE
- VAR T$
  TextBoxExGetText GetWindowVar(W,0) OUT T$
- SaveFile$ RIGHT$(A2$,LEN(A2$)-1),T$
+ SaveFile RIGHT$(A2$,LEN(A2$)-1),T$ OUT ERR
+ IF ERR THEN RETURN
  RETURN
 END
 COMMON DEF TXTEDRESIZE WND,C,T,A1,WH
@@ -5975,7 +6179,10 @@
  SetWindowVar WND,0,TED
  VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
  IF LEN(CMD$)THEN
-  TextBoxExSetText GetWindowVar(WND,0),LoadFile$(CMD$)
+  VAR T$
+  LoadFile(CMD$)OUT T$,E
+  IF E THEN RETURN
+  TextBoxExSetText GetWindowVar(WND,0),T$
  ENDIF
 'SetTextBoxExPRGMode WND,TRUE
 END
@@ -6013,7 +6220,10 @@
  SetTextBoxExPRGMode TED,TRUE
  VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
   IF LEN(CMD$)THEN
-   TextBoxExSetText GetWindowVar(WND,0),LoadFile$(CMD$)
+   VAR T$
+   LoadFile(CMD$)OUT T$,E
+   IF E THEN RETURN
+   TextBoxExSetText GetWindowVar(WND,0),T$
   ENDIF
 END
 COMMON DEF L_PRGED
@@ -6964,7 +7174,7 @@
 COMMON DEF OTYDOC_ShowMenu CTL,WND,X,Y,X2,Y2
  VAR E,MENUWND
  IF CTL==OTYDOCCOLOR_CTL THEN
-  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+1,4*8+2*4+2+8+1,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
+  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+1,4*8+2*4+2+8+1,GetRootWindow(),WindowFrontFlag()OUT MENUWND,E
   IF E THEN RETURN
  ENDIF
  E=JoinWindowGroup(WND,MENUWND)
@@ -7094,12 +7304,19 @@
 VAR OTYFIL_MPASTE
 VAR OTYFIL_MFIL
 VAR OTYFIL_MUPD
+VAR OTYFIL_MNEWFOL
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
+DIM OTYFILICODIR[0]
 DIM OTYFILICON[0]
+VAR RC_OTYFIL_LOADED
 COMMON DEF RC_OTYFIL
+ IF RC_OTYFIL_LOADED THEN RETURN
+ RC_OTYFIL_LOADED=TRUE
  DIM ICONS[512]
  LOAD"DAT:OTYFILRC",ICONS,0
+ OTYFILICODIR=NewArray(16*16)
+ LOAD"DAT:OTYFILRC3",OTYFILICODIR,0
  OTYFILICOTXT=NewArray(16*16)
  OTYFILICODAT=NewArray(16*16)
  OTYFILICON=NewArray(16*16)
@@ -7111,6 +7328,7 @@
 VAR OTYFILICONCTL
 VAR OTYFILABOUTCTL
 VAR OTYFILRENCTL
+VAR OTYFILNEWFOLCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
  VAR SEL=GetWindowVar(W,3)
@@ -7143,7 +7361,7 @@
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,0,LEN(S$)*8,7,WND,0 OUT W,E
  S$="Ver 5.0"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,8,LEN(S$)*8,7,WND,0 OUT W,E
- S$="© 2011-2015 otya"
+ S$="© 2011-2017 otya"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,16,LEN(S$)*8,7,WND,0 OUT W,E
  S$="OK"
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
@@ -7159,18 +7377,16 @@
 DEF OTYFIL_OPEN WND
  VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
  IF F$==""THEN RETURN
- VAR TYP$
- IF F$[0]==" "THEN
-  TYP$="DAT"
+ IF F$[0]=="/"THEN
+  IF SetCurrentDir(MID$(F$,1,LEN(F$)))THEN RETURN
+  SetScrollBarPosition GetChildWindow(WND),0
+  OTYFIL_UPD WND
+  RETURN
  ENDIF
- IF F$[0]=="*"THEN
-  TYP$="TXT"
- ENDIF
- F$=MID$(F$,1,99999)
- VAR EXT$=GetFileExtension$(F$)
- VAR PRG$=GetAssociatedProgram$(TYP$,EXT$)
- VAR PRC,E
- NewProcess PRG$,F$ OUT PRC,E
+ VAR TYP$
+ TYP$=F$[0]
+ F$=MID$(F$,1,LEN(F$))
+ VAR E=ExecFile(F$)
 END
 DEF OTYFIL_COPY WND
  VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
@@ -7190,11 +7406,14 @@
 DEF OTYFIL_UPD WND
  VAR PTR=GetWindowVar(WND,3)
  StrArrayGetFiles PTR,""
+ VAR CW=GetChildWindow(WND)
+ SetScrollBarSize CW,OTYFILGETSCRBARLEN(WND)
  void(repaintWindow(WND))
+ SetWindowName WND,GetCurrentDir$()
 END
 '
-'From[HOGEHOGE.TXT]
-'To  [FUGAFUGA.TXT]
+'Old [HOGEHOGE.TXT]
+'New [FUGAFUGA.TXT]
 '       [OK]
 COMMON DEF OTYFILRENCREATE WND,CTL,T,A1,A2
  VAR W=GetWindowWidth(WND)
@@ -7221,13 +7440,39 @@
  GetWindowVar WND,1OUT NEWW
  VAR OLD$=GetWindowName$(OLDW)
  VAR NEW$=GetWindowName$(NEWW)
- RenameFile OLD$,NEW$
+ IF MID$(OLD$,0,1)==" "||MID$(OLD$,0,1)=="*"THEN
+  OLD$=MID$(OLD$,1,LEN(OLD$))
+ ENDIF
+ VAR ERR=RenameFile(OLD$,NEW$)
  VOID DeleteWindow(WND)
 END
+COMMON DEF OTYFILNEWFOLCREATE WND,CTL,T,A1,A2
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ VAR W2,NAMEW,E
+ VAR NAME=LEN("NAME")*8+8
+ NewWindow GetLabelControl(),"Name",1,11,NAME-2,7,WND,0 OUT W2,E
+ NewWindow GetTextBoxControl(),"",NAME,11,W-NAME,8,WND,0 OUT NAMEW,E
+ VAR BW=24
+ NewWindow GetButtonControl(),"OK",(W-BW) DIV 2,22,BW,10,WND,0 OUT W2,E
+ SetWindowName WND,"New Folder"
+ SetWindowVar WND,0,NAMEW
+END
+COMMON DEF OTYFILNEWFOLNOTIF WND,CTL,T,A1,A2
+ IF CheckWindow(A1)&&IsControlExtend(GetControl(A1),GetButtonControl())THEN
+  VAR FOLNAME$=GetWindowName$(GetWindowVar(WND,0))
+  VAR ERR=NewDir(FOLNAME$)
+  IF ERR THEN
+   VOID MessageBox(WND,"Files","error:0x"+HEX$(ERR,8),MessageBoxOK())
+   RETURN
+  ENDIF
+  VOID(DeleteWindow(WND))
+ ENDIF
+END
 DEF OTYFIL_DEL WND
  VAR F$=OTYFIL_GETSELECTEDFILE$(WND)
  IF F$==""THEN RETURN
- DeleteFile F$
+ VAR ERR=DeleteFile(MID$(F$,1,LEN(F$)))
 END
 DEF OTYFIL_PASTE WND
  IF!ClipboardContainsFile()THEN
@@ -7317,18 +7562,24 @@
   IF F$[0]==" "THEN
    GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICODAT,1,0
   ELSE
-   GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICOTXT,1,0
+   IF F$[0]=="*"THEN
+    GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICOTXT,1,0
+   ELSE
+    IF F$[0]=="/"THEN
+     GLOADWindow WND,X+IX,Y-BY1,16,16,OTYFILICODIR,1,0
+    ENDIF
+   ENDIF
   ENDIF
   IF SELECT==K THEN
-   GFILLWindow WND,X,Y-BY2,X+39,Y-BY2+23,RGB(0,0,255)
+   GFILLWindow WND,X,Y-BY2,X+39,Y-BY2+23,GetSelectionColor()
    C=-1
   ENDIF
   VAR L=LEN(F$)-1
-  IF L<=5 THEN 
-  GPRINTWindow WND,X+(5-L)*4,Y-BY2,MID$(F$,1,5),C
+  IF L<=5 THEN
+   GPRINTWindow WND,X+(5-L)*4,Y-BY2,MID$(F$,1,5),C
   ELSEIF L>10THEN
    GPRINTWindow WND,X,Y-BY2+8,MID$(F$,6,5),C
-   GPRINTWindow WND,X+((5-(L-10))*4),Y-BY2+16,MID$(F$,11,4),C
+   GPRINTWindow WND,X+((5-MIN(L-10,5))*4),Y-BY2+16,MID$(F$,11,5),C
    GPRINTWindow WND,X,Y-BY2,MID$(F$,1,5),C
   ELSEIF L>5THEN
    GPRINTWindow WND,X+((5-(L-5))*4),Y-BY2+8,MID$(F$,6,5),C
@@ -7389,6 +7640,9 @@
  ENDIF
  void(repaintWindow(WND))
 END
+DEF OTYFIL_NEWFOL WND
+ VAR E=NewModalDialogBox(OTYFILNEWFOLCTL,"",40+15*8+4,40,WND)
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
  IF!ID THEN
   IF POS==OTYFIL_MOPEN THEN
@@ -7423,6 +7677,10 @@
    OTYFIL_UPD WND
    RETURN
   ENDIF
+  IF POS==OTYFIL_MNEWFOL THEN
+   OTYFIL_NEWFOL WND
+   RETURN
+  ENDIF
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -7431,7 +7689,8 @@
 END
 DEF StrArrayGetFiles PTR,DIR$
  DIM FILES$[0]
- GetFiles FILES$,""
+ VAR ERR
+ GetFiles DIR$ OUT FILES$,ERR
  VAR S$=CHR$(0)*(2*LEN(FILES$))
  VAR I,L=LEN(FILES$)-1
  FOR I=0TO L
@@ -7475,7 +7734,14 @@
   ExtendControl "Files_Rename",GetWindowControl() OUT OTYFILRENCTL,E
   E=SetControlCreateHandler(OTYFILRENCTL,"OTYFILRENCREATE")
   E=SetControlNotifHandler(OTYFILRENCTL,"OTYFILRENNOTIF")
+  ExtendControl "Files_NewFolder",GetWindowControl() OUT OTYFILNEWFOLCTL,E
+  E=SetControlCreateHandler(OTYFILNEWFOLCTL,"OTYFILNEWFOLCREATE")
+  E=SetControlNotifHandler(OTYFILNEWFOLCTL,"OTYFILNEWFOLNOTIF")
  ENDIF
+ VAR CMD$,DIR$,I
+ GetCommandArg GetProcessArgs$(),I OUT CMD$,I
+ GetCommandArg GetProcessArgs$(),I OUT DIR$,I
+ E=SetCurrentDir(DIR$)
  VAR W=42*4+8,H=64,LBL
  NewTopLevelStyleWindow OTYFILCTL,"Files",W,H,WINDOWMENUSTYLE()OR WINDOWRESIZABLESTYLE() OUT WND,E
  VAR MENU
@@ -7489,12 +7755,14 @@
  OTYFIL_MPASTE=7
  OTYFIL_MFIL=8
  OTYFIL_MUPD=9
+ OTYFIL_MNEWFOL=10
  AddMenuItem MENU,"Open",OTYFIL_MOPEN
-'AddMenuItem MENU,"Copy",OTYFIL_MCOPY
-'AddMenuItem MENU,"Cut",OTYFIL_MCUT
-'AddMenuItem MENU,"Paste",OTYFIL_MPASTE
+ AddMenuItem MENU,"Copy",OTYFIL_MCOPY
+ AddMenuItem MENU,"Cut",OTYFIL_MCUT
+ AddMenuItem MENU,"Paste",OTYFIL_MPASTE
  AddMenuItem MENU,"Delete",OTYFIL_MDEL
  AddMenuItem MENU,"Rename",OTYFIL_MREN
+ AddMenuItem MENU,"New Folder",OTYFIL_MNEWFOL
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  OTYFIL_CONTEXTMENU=MENU
  NewMenu OUT MENU,E
@@ -7507,12 +7775,12 @@
  SetProcessVar WND
  SetWindowVar WND,2,AllocString("")
  VAR PTR=AllocString("")
- StrArrayGetFiles PTR,""
  SetWindowVar WND,3,PTR
  NewVScrollBAR WND,OTYFILGETSCRBARLEN(WND) OUT SCR,E
  SetWindowVar WND,4,-1'SELECTED
  OTYFILNOTIF WND,0,0,WND,0
  SetWindowMinSize WND,52,64
+ OTYFIL_UPD WND
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -7522,7 +7790,10 @@
 COMMON DEF MPLAYNOTIF WND,CTL,TYP,CW,ID
  VAR N$=GetWindowName$(CW)
  IF N$==""THEN
-  BGMPLAY LoadFile$(GetWindowName$(GetWindowVar(WND,0)))
+  VAR ERR,T$
+  LoadFile GetWindowName$(GetWindowVar(WND,0)) OUT T$,ERR
+  IF ERR THEN RETURN
+  BGMPLAY T$
   RETURN
  ENDIF
  IF ID==1THEN
@@ -7635,13 +7906,16 @@
 COMMON DEF FileDialogNotif WND,C,T,W,__
  VAR ISSAVE=GetWindowVar(WND,1)
  IF ISSAVE&&__==ListBoxChItem()THEN
-  SetWindowName GetWindowVar(WND,2),GetListBoxSelectedText$(W)
-  VOID RepaintWindow(GetWindowVar(WND,2))
-  RETURN
+  VAR L$=GetListBoxSelectedText$(W)
+  IF !LEN(L$)||L$[0]!="/"THEN
+   SetWindowName GetWindowVar(WND,2),L$
+   VOID RepaintWindow(GetWindowVar(WND,2))
+   RETURN
+  ENDIF
  ENDIF
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$
-  IF ISSAVE THEN
+  IF ISSAVE&&__!=ListBoxChItem() THEN
    SEL$=GetWindowName$(GetWindowVar(WND,2))
    IF!LEN(SEL$)THEN RETURN
    IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
@@ -7651,6 +7925,11 @@
    SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
    IF!LEN(SEL$)THEN RETURN
   ENDIF
+  IF SEL$[0]=="/"THEN
+   VOID SetCurrentDir(MID$(SEL$,1,LEN(SEL$)))
+   INITFILEDIALOGLISTBOX WND
+   RETURN
+  ENDIF
   VAR ID=GetWindowVar(WND,3)
   VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,SEL$)
   VOID DeleteWindow(WND)
@@ -7660,24 +7939,30 @@
   ENDIF
  ENDIF
 END
-COMMON DEF FileDialogCreate WND,C,T,ID,__
- VAR E,L
- NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
+DEF INITFILEDIALOGLISTBOX WND
+ VAR L=GetWindowVar(WND,0)'LISTBOX WND
  DIM F$[0]
- GetFiles F$,""
+ VAR E
+ GetFiles "" OUT F$,E
  VAR I
  VAR T$=GetWindowName$(WND)
  T$=RIGHT$(T$,LEN(T$)-5)
- T=0
+ VAR T=0
  IF T$=="TXT"THEN T=1
  IF T$=="DAT"THEN T=2
+ ClearListBox L
  FOR I=0TO LEN(F$)-1
   IF F$[I][0]==" "&&T==1THEN CONTINUE
   IF F$[I][1]=="*"&&T==2THEN CONTINUE
   AddListBoxItem L,F$[I]
  NEXT
- VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
+END
+COMMON DEF FileDialogCreate WND,C,T,ID,__
+ VAR E,L
+ NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
  SetWindowVar WND,0,L
+ INITFILEDIALOGLISTBOX WND
+ VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
  SetWindowVar WND,1,F
  NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
  NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
@@ -7924,12 +8209,43 @@
 COMMON DEF __PRUN_CONT
  PRUN_CONT=1
  VAR P
+ DIM GPRESULT[6]
+ DIM CON[50,30]
+ VAR CX,CY
+ VAR CCSRX=CSRX,CCSRY=CSRY,CCSRZ=CSRZ
+ FOR CY=0 TO 29
+  FOR CX=0 TO 49
+   CON[CX,CY]=CHKCHR(CX,CY)
+  NEXT
+ NEXT
  FOR P=0TO 5
   SAVE FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+  GPRESULT[P]=RESULT
  NEXT
- DIM SP[512],I
+ DIM SPUSED[512],I
+ DIM SPU[512],SPV[512],SPW[512],SPH[512],SPA[512]
+ DIM SPSX[512],SPSY[512]
+ DIM SPC32[512]
+ DIM SPLINK[512]
+ DIM SPVAR[512,8]
+ DIM SPX[512],SPY[512],SPZ[512]
+ DIM SPHX[512],SPHY[512]
+ DIM SPDR[512]
  FOR I=0TO 511
-  
+  VAR J
+  FOR J=0TO 7
+   SPVAR I,J OUT SPVAR[I,J]
+  NEXT
+  SPUSED I OUT SPUSED[I]
+  IF SPUSED[I] THEN
+   SPCHR I OUT SPU[I],SPV[I],SPW[I],SPH[I],SPA[I]
+   SPSCALE I OUT SPSX[I],SPSY[I]
+   SPCOLOR I OUT SPC32[I]
+   SPLINK I OUT SPLINK[I]
+   SPOFS I OUT SPX[I],SPY[I],SPZ[I]
+   SPHOME I OUT SPHX[I],SPHY[I]
+   SPROT I OUT SPDR[I]
+  ENDIF
  NEXT
  VAR VP,WP
  GPAGE OUT VP,WP
@@ -7943,9 +8259,31 @@
  BGSAVE 3,B3
  PRUN_RESTORE
  OTX_CONT
+ ACLS
+ FOR CY=0 TO 29
+  FOR CX=0 TO 49
+   LOCATE CX,CY
+   ?CHR$(CON[CX,CY]);
+  NEXT
+ NEXT
+ LOCATE CCSRX,CCSRY,CCSRZ
  FOR P=0TO 5
-  LOAD FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+  IF GPRESULT[P]==TRUE THEN LOAD FORMAT$("GRP%D:@GRPPAGE%D",P,P)
  NEXT
+ FOR I=0TO 511
+  FOR J=0TO 7
+   SPVAR I,J,SPVAR[I,J]
+  NEXT
+  IF SPUSED[I] THEN
+   SPSET I,SPU[I],SPV[I],SPW[I],SPH[I],SPA[I]
+   SPSCALE I,SPSX[I],SPSY[I]
+   SPCOLOR I,SPC32[I]
+   IF NOT SPLINK[I]THEN SPLINK I,SPLINK[I]
+   SPOFS I,SPX[I],SPY[I],SPZ[I]
+   SPHOME I,SPHX[I],SPHY[I]
+   SPROT I,SPDR[I]
+  ENDIF
+ NEXT
  VISIBLE 1,1,1,1
  GPAGE VP,WP
  BGPAGE BPP
@@ -7991,7 +8329,7 @@
 END
 DEF PRUN_RESTORE
  ACLS
- VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
+ VAR NW=GetChildWindow(GetRootWindow())AND NUWIDMASK
  GPAGE OTW_SP,OTW_DP
   '290
   SPSET OTW_MOUSESP,0
@@ -8111,6 +8449,19 @@
  IF E THEN ExitProcess 0
 END
 
+VAR TSKBARCTL
+DIM TB_TASKLIST$[0]
+DIM TB_TASKLIST_WND[0]
+DIM TB_TASKLIST_TW[0]
+COMMON DEF TSKBARNotificationHandler WND,C,T,CW,__
+ VAR I
+ FOR I=0TO LEN(TB_TASKLIST_WND)-1
+  IF TB_TASKLIST_WND[I]==CW THEN
+   VOID FrontWindow(TB_TASKLIST_TW[I])
+   RETURN
+  ENDIF
+ NEXT
+END
 COMMON DEF TSKBARP WND,C,T,CW,_
  IF GBeginWindow(WND)THEN RETURN
  GCLSWindow WND,GetBackColor()
@@ -8120,9 +8471,6 @@
  GLINEWindow WND,0,1,W,1,RGB(255,255,255)
  IF GEndWindow(WND)THEN RETURN
 END
-VAR TSKBARCTL
-DIM TB_TASKLIST$[0]
-DIM TB_TASKLIST_WND[0]
 COMMON DEF I_TSKBAR
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require OTW"+LF$()
@@ -8133,17 +8481,21 @@
  IF!TSKBARCTL THEN
   NewControl "TSKBAR" OUT TSKBARCTL,E
   E=SetControlPainter(TSKBARCTL,"TSKBARP")
- ' E=SetControlNotificationHandler(TSKBARCTL,"TSKBARNotificationHandler")
+  E=SetControlNotificationHandler(TSKBARCTL,"TSKBARNotificationHandler")
  ENDIF
+ VAR SW=GetWindowWidth(GetRootWindow())
+ VAR SH=GetWindowHeight(GetRootWindow())
  VAR WND
- VAR H=16,W=399
- NewWindow TSKBARCTL,"TSKBAR",0,239-H,W,H,GetRootWND(),0 OUT WND,E
+ VAR H=16,W=SW
+ NewWindow TSKBARCTL,"TSKBAR",0,SH-H,W,H,GetRootWindow(),WindowFrontFlag() OUT WND,E
  IF E THEN BEEP:ExitProcess 1
  SetProcessVar WND
  VAR TW
- VAR TSKW=84,TC,TSX=24,TCM=5
+ VAR TSX=24
+ VAR TSKW=(SW-9-TSX) DIV 4,TC,TCM=(SW-9-TSX) DIV TSKW
  TB_TASKLIST$=NewArray$(TCM)
  TB_TASKLIST_WND=NewArray(TCM)
+ TB_TASKLIST_TW=NewArray(TCM)
   NewWindow GetToggleButtonControl(),"",1,3,TSX-3,11,WND,0OUT TW,E
  FOR TC=0TO TCM-1
   NewWindow GetToggleButtonControl(),"Task"+STR$(TC),TSKW*TC+TC*2+TSX,3,TSKW,11,WND,WindowHideFlag()OUT TW,E
@@ -8153,19 +8505,64 @@
  SetWindowVar WND,0,TW
 END
 DEF UPDATE_TSKBAR
- VAR TSKW=84,TC,TSX=24,TCM=5
- VAR RW=GetRootWND()
+ VAR TSKW=84,TC,TSX=24,TCM=LEN(TB_TASKLIST_TW)
+ VAR RW=GetRootWindow()
  VAR CW=GetChildWindow(RW)
- IF GetNextWindow(CW)THEN
-  TC=0
-  WHILE GetNextWindow(CW)
-   IF TCM<=TC THEN BREAK
-   SetWindowName TB_TASKLIST_WND[TC],GetWindowName$(CW)
-   IF ShowWindow(TB_TASKLIST_WND[TC])THEN BREAK
-   CW=GetNextWindow(CW)
-   INC TC
-  WEND
+ VAR UPDFLG
+ VAR I
+ VAR CTSKCOUNT
+ VAR DECCOUNT
+ FOR I=0TO TCM-1
+  VAR W=TB_TASKLIST_TW[I]
+  IF!W THEN BREAK
+  UPDFLG=1
+  IF CheckWindow(W)THEN CONTINUE
+  COPY TB_TASKLIST_TW,I,TB_TASKLIST_TW,I+1,LEN(TB_TASKLIST_TW)-I-1
+  INC DECCOUNT
+ NEXT
+ CTSKCOUNT=I-DECCOUNT
+ IF DECCOUNT THEN
+  FOR I=CTSKCOUNT TO TCM-1
+   VOID HideWindow(TB_TASKLIST_WND[I])
+   TB_TASKLIST_TW[I]=0
+  NEXT
  ENDIF
+ 
+ WHILE GetNextWindow(CW)
+  VAR N$=GetWindowName$(CW)
+  IF!IsControlExtend(GetControl(CW),GetWindowControl())THEN
+   CW=GetNextWindow(CW)
+   CONTINUE
+  ENDIF
+  FOR I=0TO TCM-1
+   IF TB_TASKLIST_TW[I]==CW THEN @FOUND
+  NEXT
+  IF CTSKCOUNT<TCM THEN
+   TB_TASKLIST_TW[CTSKCOUNT]=CW
+   TB_TASKLIST$[CTSKCOUNT]=N$
+   SetWindowName TB_TASKLIST_WND[CTSKCOUNT],N$
+   VOID ShowWindow(TB_TASKLIST_WND[CTSKCOUNT])
+   INC CTSKCOUNT
+  ENDIF
+  CW=GetNextWindow(CW)
+  CONTINUE
+  @FOUND
+  IF IsActiveWindow(CW)THEN
+   CheckButton TB_TASKLIST_WND[I]
+  ELSE
+   UnCheckButton TB_TASKLIST_WND[I]
+  ENDIF
+  IF TB_TASKLIST$[I]!=N$THEN
+   TB_TASKLIST$[I]=N$
+   SetWindowName TB_TASKLIST_WND[I],N$
+   VOID RepaintWindow(TB_TASKLIST_WND[I])
+  ENDIF
+  CW=GetNextWindow(CW)
+ WEND
+ FOR I=0TO TCM-1
+  W=TB_TASKLIST_TW[I]
+  IF!W THEN BREAK
+ NEXT
 END
 VAR TSKBAR_TIMER
 VAR TSKBAR_CWND
@@ -8291,7 +8688,7 @@
  SetProcessVar WND
  VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
  NewWindow GetLabelControl(),"Open "+CMD$,1,1,128,7,WND,0 OUT E,E
- NewWindow GetListBoxControl(),"",0,9,127,32,WND,0 OUT WND,E
+ NewWindow GetListBoxControl(),"",0,9,127,31,WND,0 OUT WND,E
  AddListBoxItem WND,"TXTED"
  AddListBoxItem WND,"PRGED"
 END
@@ -8493,8 +8890,8 @@
  VAR CX,CY
  GetWindowVar W2,1 OUT CX
  GetWindowVar W2,2 OUT CY
- VOID ResizeWindow(WND,CX*12,CY*12)
- VOID ResizeWindow(W2,CX*12,CY*12)
+ VOID ResizeWindow(WND,CX*12-1,CY*12-1)
+ VOID ResizeWindow(W2,CX*12-1,CY*12-1)
 END
 VAR OTYMINE_CTBL[0]
 DEF ONOTYMINELMD WND,CTL,TYP,A1,A2
@@ -8747,7 +9144,7 @@
   IF SetControlCreateHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONCREATE")THEN @ERR
   IF SetControlNotifHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONNOTIF")THEN @ERR
  ENDIF
- NewTopLevelMenuWindow OTYMINEWNDCTL,"Minesweeper",96,96 OUT WND,E
+ NewTopLevelMenuWindow OTYMINEWNDCTL,"Minesweeper",95,95 OUT WND,E
  IF E THEN
   E=DeleteWindow(WND)
   GOTO @ERR
@@ -8766,7 +9163,7 @@
  AddMenuItem MENU,"About",OTYMINE_MENU_ABOUT
  AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR MWND
- NewWindow OTYMINECTL,"",0,0,96,96,WND,0 OUT MWND,E
+ NewWindow OTYMINECTL,"",0,0,95,95,WND,0 OUT MWND,E
  IF E THEN
   E=DeleteWindow(GetProcessVar())
   E=DeleteWindow(WND)
@@ -8782,3 +9179,410 @@
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
 
+DEF TESTIM_KEY IM,KEY
+ IF!OTW_ENABLEKEY THEN RETURN
+ VOID SendIMText(IM,CHR$(KEY))
+END
+COMMON DEF I_TESTIM
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR IM,ERR
+ NewIM OUT IM,ERR
+ ERR=SetIMKeyHandler(IM,"TESTIM_KEY")
+ SetProcessVar IM
+END
+COMMON DEF L_TESTIM
+ VAR X,Y,MMM
+ TOUCH OUT MMM,X,Y
+ IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
+  OTW_ENKEY_STATE=1
+  OTW_ENABLEKEY=!OTW_ENABLEKEY
+  IF OTW_ENABLEKEY THEN
+   KEY 1,"KEY ON"
+  ELSE
+   KEY 1,"KEY OFF"
+  ENDIF
+  BEEP 9
+ ENDIF
+ IF!MMM THEN OTW_ENKEY_STATE=0
+ IF ProcessIM(GetProcessVar())THEN
+  VOID DeleteIM(GetProcessVar())
+ ENDIF
+END
+VAR OTWTERMCTL
+DIM OTWTERMCOLORTBL[0]
+COMMON DEF OTWTERMKEY WND,CTL,TYP,A1,A2
+ VAR STR$=GetString$(GetWindowVar(WND,4))
+ IF A1==13THEN A1=10
+ PUSH STR$,CHR$(A1)
+END
+COMMON DEF OTWTERMPAINT WND,CTL,TYP,XY,WH
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH)
+ 'fast
+ IF GBeginDirect(WND)THEN RETURN
+ IF 0THEN DIM CONSOLE[0]
+ CONSOLE=GetSBArray(GetWindowVar(WND,0))
+ VAR CW,CH
+ SplitInt GetWindowVar(WND,2) OUT CW,CH
+ VAR X,Y
+ DEC CW
+ DEC CH
+ 'GCLIP 1,0,0,CW*8+7,CH*8+7
+ GCLS RGB(0,0,0)
+ VAR CX,CY
+ SplitInt GetWindowVar(WND,3) OUT CX,CY
+ FOR Y=0TO CH
+  FOR X=0TO CW
+   VAR C=CONSOLE[Y*CW+Y+X]
+   IF C==0&&(X!=CX||Y!=CY)THEN CONTINUE
+   VAR BACK=OTWTERMCOLORTBL[(C>>(16+4))AND&HF]
+   IF BACK THEN
+    GFILL X*8,Y*8,X*8+7,Y*8+7,BACK
+   ENDIF
+   IF X==CX&&CY==Y THEN
+    GFILL X*8,Y*8,X*8+1,Y*8+7,-1
+   ENDIF
+   IF C==0THEN CONTINUE
+   VAR FORE=OTWTERMCOLORTBL[(C>>16)AND&HF]
+   GPUTCHR X*8,Y*8,C AND &HFFFF,FORE
+  NEXT
+ NEXT
+ IF GCopyDirect(WND,0,0,CW*8+7,CH*8+7,0,0,1)THEN RETURN
+ IF GEndWindow(WND)THEN RETURN
+END
+COMMON DEF OTWTERMRESIZE WND,CTL,TYP,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ VAR CW=W DIV 8,CH=H DIV 8
+ IF 0THEN DIM CONSOLE[0]
+ CONSOLE=GetSBArray(GetWindowVar(WND,0))
+ IF LEN(CONSOLE)<CW*CH THEN
+  VAR I,L=CW*CH-LEN(CONSOLE)
+  FOR I=0TO L
+   PUSH CONSOLE,GetWindowVar(WND,5)<<16
+  NEXT
+ ENDIF
+ SetWindowVar WND,2,JoinInt(CW,CH)
+ VAR X,Y
+ SplitInt GetWindowVar(WND,3) OUT X,Y
+ SetWindowVar WND,3,JoinInt(MAX(0,MIN(X,CW-1)),MAX(0,MIN(Y,CH-1)))
+END
+COMMON DEF OTWTERMDELETE WND,CTL,TYP,A1,WH
+ VAR PRC=GetWindowVar(WND,6)
+ 'FIXME:おやこをまとめてころしたい
+ VOID KillProcess(PRC)
+ VOID DeleteConsole(GetConsole())
+ FreeString GetWindowVar(WND,4)
+ FreeSBArray GetWindowVar(WND,0)
+
+END
+COMMON DEF OTWTERM_GETSIZE CON OUT W,H,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ SplitInt GetWindowVar(WND,2) OUT W,H
+END
+COMMON DEF OTWTERM_RD CON,LEN OUT RES$,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR S=GetWindowVar(WND,4)
+ VAR STR$=GetString$(S)
+ RES$=MID$(STR$,0,LEN)
+ SetString S,MID$(STR$,LEN,LEN(STR$))
+END
+COMMON DEF OTWTERM_PUT CON,BUF$ OUT ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR X,Y,W,H
+ SplitInt GetWindowVar(WND,3) OUT X,Y
+ SplitInt GetWindowVar(WND,2) OUT W,H
+ IF 0THEN DIM CONSOLE[0]
+ CONSOLE=GetSBArray(GetWindowVar(WND,0))
+ VAR L=LEN(BUF$)-1,I
+ VAR STYLE=GetWindowVar(WND,5)
+ FOR I=0TO L
+  VAR D$=BUF$[I],D=ASC(D$)
+  IF D==10THEN
+   OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X,Y
+   CONTINUE
+  ENDIF
+  CONSOLE[Y*W+X]=(STYLE<<16) OR D
+  INC X
+  IF X>=W THEN
+   OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X,Y
+  ENDIF
+ NEXT
+ SetWindowVar WND,3,JoinInt(X,Y)
+ ERR=RepaintWindow(WND)
+END
+DEF OTWTERM_SCROLL_Y CONSOLE,X,Y,W,H,STYLE OUT X_,Y_
+ X=0
+ INC Y
+ IF Y>=H THEN
+  VAR I
+  COPY CONSOLE,0,CONSOLE,W,LEN(CONSOLE)-W
+  DEC Y
+  FILL CONSOLE,STYLE<<16,W*(H-1),W
+ ENDIF
+ X_=X
+ Y_=Y
+END
+COMMON DEF OTWTERM_GETFORE CON OUT C,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=DAT AND &HF
+END
+COMMON DEF OTWTERM_SETFORE CON,C OUT ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ C=C AND &HF
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=(DAT AND (NOT &HF)) OR C
+ SetWindowVar WND,5,C
+END
+COMMON DEF OTWTERM_GETBACK CON OUT C,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=(DAT>>4) AND &HF
+END
+COMMON DEF OTWTERM_SETBACK CON,C OUT ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ C=C AND &HF
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ C=(DAT AND (NOT &HF0)) OR (C<<4)
+ SetWindowVar WND,5,C
+END
+COMMON DEF OTWTERM_GETCUR CON OUT X,Y,ERR
+ VAR WND
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR DAT=GetWindowVar(WND,5)
+ SplitInt GetWindowVar(WND,3) OUT X,Y
+ ERR=0
+END
+COMMON DEF OTWTERM_SETCUR(CON,X,Y)
+ VAR WND,ERR
+ GetConsoleVar CON OUT WND,ERR
+ IF ERR THEN RETURN ERR
+ VAR DAT=GetWindowVar(WND,5)
+ VAR CW,CH
+ SplitInt GetWindowVar(WND,2) OUT CW,CH
+ IF X<0||Y<0||X>=CW||Y>=CH THEN RETURN 1
+ SetWindowVar WND,3,JoinInt(X,Y)
+ RETURN 0
+END
+COMMON DEF I_OTWTERM
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWTERMCTL THEN
+  ExtendControl "OTWTERM",GetWindowControl() OUT OTWTERMCTL,E
+  E=SetControlPainter(OTWTERMCTL,"OTWTERMPAINT")
+  E=SetControlKeyHandler(OTWTERMCTL,"OTWTERMKEY")
+  E=SetControlResizeHandler(OTWTERMCTL,"OTWTERMRESIZE")
+  E=SetControlDeleteHandler(OTWTERMCTL,"OTWTERMDELETE")
+  OTWTERMCOLORTBL=NewArray(16)
+  COPY OTWTERMCOLORTBL,@OTWTERMCOLORTBL
+  @OTWTERMCOLORTBL
+  DATA &H00000000
+  DATA &HFF000000
+  DATA &HFF800000
+  DATA &HFFF80000
+  DATA &HFF008000
+  DATA &HFF00F800
+  DATA &HFF808000
+  DATA &HFFF8F800
+  DATA &HFF000080
+  DATA &HFF0000F8
+  DATA &HFF800080
+  DATA &HFFF800F8
+  DATA &HFF008080
+  DATA &HFF00F8F8
+  DATA &HFF808080
+  DATA &HFFF8F8F8
+ ENDIF
+ VAR CON
+ NewConsole OUT CON,E
+ SetGetConsoleSizeHandler CON,"OTWTERM_GETSIZE"OUT E
+ SetReadConsoleHandler CON,"OTWTERM_RD"OUT E
+ SetPutConsoleHandler CON,"OTWTERM_PUT"OUT E
+ SetGetConsoleCursorHandler CON,"OTWTERM_GETCUR"OUT E
+ SetGetConsoleForeHandler CON,"OTWTERM_GETFORE"OUT E
+ SetSetConsoleForeHandler CON,"OTWTERM_SETFORE"OUT E
+ SetGetConsoleBackHandler CON,"OTWTERM_GETBACK"OUT E
+ SetSetConsoleBackHandler CON,"OTWTERM_SETBACK"OUT E
+ SetSetConsoleCursorHandler CON,"OTWTERM_SETCUR"OUT E
+ SetGetConsoleCursorHandler CON,"OTWTERM_GETCUR"OUT E
+ VAR CW=40
+ VAR CH=20
+ NewTopLevelStyleWindow OTWTERMCTL,"OTWTERM",CW*8,CH*8,WINDOWRESIZABLESTYLE() OUT WND,E
+ E=SetConsoleVar(CON,WND)
+ VAR DEFSTYLE=14
+ SetWindowVar WND,0,AllocSBArray()
+ SetSBArray GetWindowVar(WND,0),NewArray(CH*CW)
+ FILL GetSBArray(GetWindowVar(WND,0)),DEFSTYLE<<16
+ SetWindowVar WND,1,CON
+ SetWindowVar WND,2,JoinInt(CW,CH)
+ SetWindowVar WND,3,JoinInt(0,0)
+ SetWindowVar WND,4,AllocString("")
+ SetWindowVar WND,5,DEFSTYLE
+ VAR PRC
+ SetConsole CON
+ NewProcess "sh","" OUT PRC,E
+ SetWindowVar WND,6,PRC
+ SetProcessVar WND
+END
+COMMON DEF L_OTWTERM
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+VAR ODE_CTL
+VAR ODE_WV_FILES
+VAR ODE_WV_CURRENT
+VAR ODE_IW
+VAR ODE_IH
+VAR ODE_IX
+VAR ODE_IY
+DEF ODE_GETITEM X,Y OUT I,IX,IY
+ X=X-ODE_IX
+ IX=X DIV ODE_IW
+ IY=Y DIV ODE_IH
+ I=IY
+END
+COMMON DEF ODE_LDC WND,CTL,TYP,X,Y
+ VAR I
+ ODE_GETITEM X,Y OUT I,X,Y
+ IF I<0THEN RETURN
+ SetWindowVar WND,ODE_WV_CURRENT,I
+ IF 0 THEN DIM DIR$[0]
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ DIR$=GetSBArray(ARY)
+ VAR F$=DIR$[I]
+ F$=MID$(F$,1,LEN(F$))
+ F$=CombinePath$(CombinePath$(GetHomeDir$(),"desktop"),F$)
+ VAR E=ExecFile(F$)
+END
+COMMON DEF ODE_LMD WND,CTL,TYP,X,Y
+ IF 0 THEN DIM DIR$[0]
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ DIR$=GetSBArray(ARY)
+ VAR I,L=LEN(DIR$)-1
+ VAR IX=ODE_IX,IY=ODE_IY
+ VAR IW=ODE_IW
+ VAR IH=ODE_IH
+ VAR ICONSX=(IW-16) DIV 2
+ VAR ITW=IW DIV 8
+ ODE_GETITEM X,Y OUT I,X,Y
+ IF I<0THEN RETURN
+ SetWindowVar WND,ODE_WV_CURRENT,I
+ ODE_PAINTER WND,CTL,TYP,0,0
+END
+COMMON DEF ODE_PAINTER WND,CTL,TYP,XY,WH
+ VAR X,Y,W,H
+ VAR SW,SH
+ SW=GetWindowWidth(WND)
+ SH=GetWindowHeight(WND)
+ IF WH THEN
+  SplitInt WH OUT W,H
+  SplitInt XY OUT X,Y
+ ELSE
+  W=SW
+  H=SH
+ ENDIF
+
+ IF GBeginDirect(WND)THEN @END
+ GCLS RGB(0,128,128)
+ IF 0 THEN DIM DIR$[0]
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ DIR$=GetSBArray(ARY)
+ VAR I,L=LEN(DIR$)-1
+ VAR IX=ODE_IX,IY=ODE_IY
+ VAR IW=ODE_IW
+ VAR IH=ODE_IH
+ VAR ICONSX=(IW-16) DIV 2
+ VAR ITW=IW DIV 8
+ VAR CUR=GetWindowVar(WND,ODE_WV_CURRENT)
+ 
+ FOR I=0TO L
+  VAR D$=DIR$[I]
+  IF D$=="/.."THEN CONTINUE
+  VAR NAME$=MID$(D$,1,LEN(D$))
+  VAR TC=&HFF000000
+  IF I==CUR THEN
+   GFILL IX,IY+16,IX+IW-1,IY+IH-1,GetSelectionColor()
+   TC=GetSelectionTextColor()
+  ENDIF
+  IF D$[0]=="*"THEN
+   GLOAD IX+ICONSX,IY,16,16,OTYFILICOTXT,1,0
+  ELSEIF D$[0]=="/"THEN
+   GLOAD IX+ICONSX,IY,16,16,OTYFILICODIR,1,0
+  ELSEIF D$[0]==" "THEN
+   GLOAD IX+ICONSX,IY,16,16,OTYFILICODAT,1,0
+  ENDIF
+  GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$))*8)DIV 2,IY+16,MID$(NAME$,0,ITW),TC
+  IF LEN(NAME$)>ITW THEN
+   GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW)*8)DIV 2,IY+24,MID$(NAME$,ITW,ITW),TC
+   IF LEN(NAME$)>ITW+ITW THEN
+    GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW-ITW)*8)DIV 2,IY+32,MID$(NAME$,ITW+ITW,ITW),TC
+   ENDIF
+  ENDIF
+  IY=IY+IH
+ NEXT
+ 
+ IF GCopyDirect(WND,X,Y,X+W,Y+H,X,Y,1)THEN @END
+ @END
+ IF GEndWindow(WND)THEN RETURN
+END
+DEF ODE_UPDATEFILES WND
+ VAR ERR
+ IF 0 THEN DIM DIR$[0]
+ GetFiles CombinePath$(GetHomeDir$(),"desktop/") OUT DIR$,ERR
+ VAR ARY=GetWindowVar(WND,ODE_WV_FILES)
+ SetSBArray ARY,DIR$
+END
+COMMON DEF I_ODE
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!ODE_CTL THEN
+  RC_OTYFIL
+  NewControl "otya desktop environment" OUT ODE_CTL,E
+  E=SetControlPainter(ODE_CTL,"ODE_PAINTER")
+  E=SetControlLMouseDownHandler(ODE_CTL,"ODE_LMD")
+  E=SetControlLDoubleClickHandler(ODE_CTL,"ODE_LDC")
+  ODE_WV_FILES=0
+  ODE_WV_CURRENT=1
+  ODE_IW=48
+  ODE_IH=40
+  ODE_IX=8
+  ODE_IY=0
+ ENDIF
+ VAR RWND=GetRootWindow()
+ NewWindow ODE_CTL,"",0,0,GetWindowWidth(RWND),GetWindowHeight(RWND),RWND,WindowBackFlag() OUT WND,E
+ SetWindowVar WND,ODE_WV_FILES,AllocSBArray()
+ SetWindowVar WND,ODE_WV_CURRENT,-1
+ ODE_UPDATEFILES WND
+ SetProcessVar WND
+ NewProcess "TSKBAR","" OUT E,E
+END
+COMMON DEF L_ODE
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 0
+END
+
