diff -u OTW.TXT OTWA
--- OTW.TXT
+++ OTWA
@@ -316,7 +316,7 @@
   RETURN
  ENDIF
  
- VAR SP=OTW_TOPLEVELCNT,FRAME
+ VAR SP=OTW_TOPLEVELCNT+1,FRAME
 ' IF SPVAR(SP,0)THEN
   WHILE SPVAR(SP,0)
    SP=(SP+1)MOD 255
@@ -435,24 +435,25 @@
 END
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
- 
+ IF!X&&!Y THEN RETURN
  VAR NUWID=WND AND NUWIDMASK
  VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
  VAR NXT=WIN_CHILD[NUWID],B=NXT
+ GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],0
  WIN_AX[NUWID]=WIN_AX[NUWID]+MX
  WIN_AY[NUWID]=WIN_AY[NUWID]+MY
  WIN_FX[NUWID]=WIN_FX[NUWID]+MX
  WIN_FY[NUWID]=WIN_FY[NUWID]+MY
  VAR E=FrontWindow(WND)
  IF E THEN RETURN E
-'WHILE 1
+ 'WHILE 1
 ' 
 'WEND
  NXT=WIN_CHILD[WIN_PARENT[NUWID]]
  IF!NXT THEN RETURN
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
-  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
+  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
   SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
@@ -653,18 +654,18 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
-COMMON DEF GPRINTWindow WND,X,Y,STR$
+COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
- VAR L=LEN(STR$)-1,C$,A,BX,BY,I
+ VAR L=LEN(STR$)-1,C$,A,BX,BY,I,PP=16*COL
  FOR I=0TO L
   C$=MID$(STR$,I,1)
   A=ASC(C$)
   IF A<=&H7F&&A>=&H20THEN
    A=A-&H20
    BX=A*8
-   BY=BX/(512-8)
+   BY=BX/(512-8)+PP
    GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
   ELSE
    GFILL X,Y,X+7,Y+7,-1
@@ -692,7 +693,7 @@
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
- GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND)
+ GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND),15
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
@@ -709,18 +710,13 @@
    VAR AY=WIN_AY[NUWID]
    IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
    SPSHOW OTW_MOVWINSP
-   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
    SPCOLOR OTW_MOVWINSP,RGB(128,80,208,255)
    SPOFS OTW_MOVWINSP,AX-X,AY-Y,-256
    SPLINK OTW_MOVWINSP,OTW_MOUSESP
    SPVAR OTW_MOVWINSP,1,NUWID
    SPVAR OTW_MOVWINSP,2,AX-X
    SPVAR OTW_MOVWINSP,3,AY-Y
-  ELSE
-    ?X,Y
-   IF SPVAR(OTW_MOVWINSP,1)==NUWID THEN
-    ?X,Y
-   ENDIF
   ENDIF
  ENDIF
 END
@@ -738,7 +734,7 @@
  SPDEF 0,408,0,1,1,1
  VAR FORE=RGB(0,0,0)
  VAR BACK=RGB(255,255,255)
- GCOLOR BACK'FORE
+ GCOLOR FORE
  VAR SC#=1,B=416
  GFILL B,0,B+10*SC#,18*SC#,0
  GLINE B,0*SC#,B,14*SC#
@@ -749,7 +745,8 @@
 'GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
  GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
  GLINE B+6*SC#,16*SC#,B+7*SC#,16*SC#'7,16
- SPDEF 290,B,0,10*SC#,18*SC#
+ GPAINT B+1*SC#,2*SC#,BACK,FORE
+ SPDEF 290,B,0,10*SC#,17*SC#
 END
 VAR WIN_ROOTCTL
 VAR TSTWND,TSTCTL
@@ -777,16 +774,20 @@
   GPRIO 1023
   GCLS RGB(0,192,128)
 ' GCLS RGB(0,0,255)
+GCLS 
   OTW_INITSP
   GPRIO 1023
+  'GOTO @_
   DISPLAY 1
-  VISIBLE 1,0,0,0
+  VISIBLE 1,0,1,0
+  LOCATE 0,25
   ?":LEFT CLICK"
   ?":RIGHT CLICK(UNUSED)"
   ?"TOUCH:CURSOR
   BGSCREEN 0,25,15
   BGSCALE 0,20/25,20/25'1
-  GCLS RGB(255,0,0)
+  GCLS 'RGB(255,0,0)
+  BACKCOLOR RGB(0,192,128)
   VAR X,Y,I
   FOR Y=0TO 14
    FOR X=0TO 24
@@ -797,9 +798,12 @@
   NEXT
   BGPAGE OTW_DP
   DISPLAY 0
+  @_
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
+  PrintConsole "Ver 5.0-11"+LF$()
+  BEEP 94,-1000
   OTW_INIT=TRUE
   OTW_WIN_INITARRAY
   OTW_CTL_INITARRAY
@@ -830,12 +834,20 @@
   
   '290
   SPSET OTW_MOUSESP,290
+  SPVAR 0,0,1
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
   SPHOME OTW_MOUSESP,0,0
   SPCOL 0,0,0,1,1
   OTW_MOVWINSP=1
+  SPSET OTW_MOVWINSP,290
+  SPLINK OTW_MOVWINSP,OTW_MOUSESP
+  SPOFS OTW_MOVWINSP,-2,2,-00
+  SPCOLOR OTW_MOVWINSP,RGB(128,0,0,0)
+  SPVAR OTW_MOVWINSP,0,1
+  OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
+  SPVAR OTW_MOVWINSP,0,1
   CLS
   LOCATE 0,29
   NewProcess"WCLOCK","" OUT E,E,E
@@ -846,8 +858,11 @@
  VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  E=GBEGINWindow(WND)
  IF E THEN RETURN
- GFILLWindow WND,0,0,64,64,RGB(0,0,0)
- GPRINTWindow WND,6,1,CHR$(ASC("A")+(WND AND 4095))+"HELLOOOOOOOO"
+ GFILLWindow WND,0,0,64,64,RGB(224,224,224)'RGB(0,0,0)
+ VAR S$="HELLOWORLD",I
+ FOR I=0TO LEN(S$)-1
+  GPRINTWindow WND,6+I*8,1,S$[I],I
+ NEXT
  E=GENDWindow(WND)
 END
 VAR OTW_OLDMOUSEX
@@ -928,7 +943,7 @@
   E=GBeginWindow(WCLOCKWND)
   IF E THEN RETURN
   GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
-  GPRINTWindow WCLOCKWND,0,0,TIME$
+  GPRINTWindow WCLOCKWND,0,0,TIME$,1
   E=GEndWindow(WCLOCKWND)
  END
 DEF DUMP_WND
@@ -1030,6 +1045,10 @@
 'RETURN
  RESTORE @FONT
  VAR C,_$
+ DIM PAL[16]
+ FOR I=0TO 15
+  READ PAL[I]
+ NEXT
  WHILE 1
   READ C$
   IF C$=="END"THEN BREAK
@@ -1044,12 +1063,35 @@
    FOR I=0TO LEN(C$)-1
     _$=MID$(C$,I,1)
     IF _$=="F"THEN C=-1 ELSE C=0
-    GPSET X+I,Y+J,C
+    VAR _Y,_C
+    FOR _Y=0TO 15
+     IF C THEN _C=PAL[_Y]ELSE _C=0
+     GPSET X+I,Y+J+16*_Y,_C
+    NEXT
    NEXT
   NEXT
  WEND
  GPAGE 0,0
 @FONT
+RETURN
+COLOR
+'      AARRGGBB
+DATA &H00000000
+DATA &HFF000000
+DATA &HFF7F0000
+DATA &HFFFF0000
+DATA &HFF007F00
+DATA &HFF00FF00
+DATA &HFF7F7F00
+DATA &HFFFFFF00
+DATA &HFF00007F
+DATA &HFF0000FF
+DATA &HFF7F007F
+DATA &HFFFF00FF
+DATA &HFF007F7F
+DATA &HFF00FFFF
+DATA &HFF7F7F7F
+DATA &HFFFFFFFF
 DATA "0"
 DATA "00FFF000"
 DATA "0F000F00"
