diff -u OTW.TXT OTW9
--- OTW.TXT
+++ OTW9
@@ -126,6 +126,9 @@
 VAR CTL_FREE
 VAR CTL_CIDCNT
 VAR CTL_PAINTHANDLER
+COMMON DEF RepaintControlEvent()
+ RETURN CTL_PAINTHANDLER
+END
 VAR CTL_LBTNUPHANDLER
 VAR CTL_LBTNDWNHANDLER
 VAR CTL_RBTNUPHANDLER
@@ -354,7 +357,7 @@
 ' WIN_HEIGHT[NUWID]=HEIGHT
  
  WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+WIN_FHEIGHT1
- OTW_DrawMap
+ OTW_DrawMap NUWID
  GCLIP 1,0,0,400,240
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
  SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
@@ -371,18 +374,19 @@
 END
 COMMON DEF OTW_SPSORT
  VAR I,Z=0
- IF OTW_TOPLEVELCNT-1THEN Z=(1023+255)/(OTW_TOPLEVELCNT-1)
+ IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT-1)
  VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
 'IF!WIN_NEXT[NUWID]THEN I=
- I=1023+255
+ I=1022+255
  WHILE NUWID
   I=I-Z
   SPOFS WIN_SP[NUWID]AND 1023,,,-255+I
-  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
+'  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
 COMMON DEF OTW_DrawMap NUWID
+ GPAGE OTW_DP,OTW_DP
  GCLIP 1,0,240,400,480
  GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
  GFILL WIN_FX[NUWID],WIN_FY[NUWID]+240,WIN_FX[NUWID]+WIN_FWIDTH[NUWID],WIN_FY[NUWID]+WIN_FHEIGHT[NUWID]+240,ShortToRGB(NUWID)
@@ -391,13 +395,25 @@
 COMMON DEF FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
- IF!WIN_NEXT[NUWID]THEN VOID RepaintWindow(WND) RETURN 0
+ IF!WIN_NEXT[NUWID]THEN RETURN 0
  VAR N,C=WIN_NEXT[NUWID]
   N=C
   WHILE 1
    C=N
    N=WIN_NEXT[N]
    IF!N THEN
+    VAR NUP=WIN_PREV[NUWID]
+    VAR NUN=WIN_NEXT[NUWID]
+    IF NUP THEN
+     WIN_NEXT[NUP]=NUN
+     WIN_PREV[NUN]=NUP
+    ELSE
+     WIN_CHILD[WIN_PARENT[NUWID]]=NUN
+    ENDIF
+    IF NUN THEN
+     IF NUP THEN WIN_NEXT[NUP]=NUN
+     WIN_PREV[NUN]=NUP
+    ENDIF
     WIN_NEXT[C]=NUWID
     WIN_PREV[NUWID]=C
     WIN_NEXT[NUWID]=0
@@ -414,9 +430,39 @@
    ENDIF
   WEND
  VOID RepaintWindow(WND)
- OTW_DrawMap
+ OTW_DrawMap NUWID
  RETURN 0
 END
+COMMON DEF MoveWindow(WND,X,Y)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ 
+ VAR NUWID=WND AND NUWIDMASK
+ VAR MX=X-WIN_AX[NUWID],MY=Y-WIN_AY[NUWID]
+ VAR NXT=WIN_CHILD[NUWID],B=NXT
+ WIN_AX[NUWID]=WIN_AX[NUWID]+MX
+ WIN_AY[NUWID]=WIN_AY[NUWID]+MY
+ WIN_FX[NUWID]=WIN_FX[NUWID]+MX
+ WIN_FY[NUWID]=WIN_FY[NUWID]+MY
+ VAR E=FrontWindow(WND)
+ IF E THEN RETURN E
+'WHILE 1
+' 
+'WEND
+ NXT=WIN_CHILD[WIN_PARENT[NUWID]]
+ IF!NXT THEN RETURN
+ B=NXT
+ IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
+  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
+  SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
+ ENDIF
+ OTW_DrawMap WIN_PARENT[NUWID]
+ WHILE NXT
+  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
+  OTW_DrawMap NXT
+  NXT=WIN_NEXT[NXT]
+ WEND
+ RETURN 0
+END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -451,6 +497,12 @@
  CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
  RETURN 0
 END
+COMMON DEF PeekWindowEvent(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN -1
+ RETURN WIN_MSGBUF[NUWID,WIN_MSGE[NUWID],0]
+END
 COMMON DEF UpdateWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -545,6 +597,7 @@
  VAR AY=WIN_AY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
+ GCLIP 1,AX,AY,AX+W,AY+H
  VAR PNUWID
  IF WIN_CHILD[NUWID]THEN
   PNUWID=WIN_CHILD[NUWID]
@@ -566,7 +619,7 @@
    PNUWID=WIN_NEXT[PNUWID]
    CONTINUE
   ENDIF
-  ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
+'  ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
 '  
 ' IF WIN_AX[PNUWID]THEN
 '   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],-WIN_AX[PNUWID]-WIN_WIDTH[PNUWID],-WIN_AY[PNUWID]-WIN_HEIGHT[PNUWID],0
@@ -578,11 +631,11 @@
   PNUWID=WIN_NEXT[PNUWID]
  WEND
  GPAGE OTW_SP,OTW_DP
-?AX,AY,W,H
+'?AX,AY,W,H
 ' GCOPY OTW_BP,0,0,W,H,AX,AY,0
- GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
  GCLIP 1,0,0,400,240
-' DIALOG"A
+ GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
+'DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
@@ -674,7 +727,7 @@
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
  'VAR NUWID=WND AND NUWIDMASK
  VAR X=MX+A1X
- VAR Y=MY+A1Y
+ VAR Y=MY+A2Y
  VAR E=MoveWindow(WND,X,Y)
  SPHIDE OTW_MOVWINSP
  SPUNLINK OTW_MOVWINSP
@@ -687,6 +740,7 @@
  VAR BACK=RGB(255,255,255)
  GCOLOR BACK'FORE
  VAR SC#=1,B=416
+ GFILL B,0,B+10*SC#,18*SC#,0
  GLINE B,0*SC#,B,14*SC#
  GLINE B,0*SC#,B+10*SC#,10*SC#
  GLINE B,14*SC#,B+3*SC#,11*SC#
@@ -711,18 +765,28 @@
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   'ACLS
+  XSCREEN 2,512,2
   OTW_DP=4
   OTW_SP=0
   OTW_BP=1
+  GPAGE OTW_SP,OTW_SP
+  GPRIO 1023
+  GCLS
+  GCLS RGB(0,192,0)
   GPAGE OTW_SP,OTW_DP
-  GCLS 
+  GPRIO 1023
+  GCLS RGB(0,192,128)
 ' GCLS RGB(0,0,255)
   OTW_INITSP
-  XSCREEN 2,512,2
+  GPRIO 1023
   DISPLAY 1
-  VISIBLE 0,0,1,0
+  VISIBLE 1,0,0,0
+  ?":LEFT CLICK"
+  ?":RIGHT CLICK(UNUSED)"
+  ?"TOUCH:CURSOR
   BGSCREEN 0,25,15
-  BGSCALE 0,20/25,1
+  BGSCALE 0,20/25,20/25'1
+  GCLS RGB(255,0,0)
   VAR X,Y,I
   FOR Y=0TO 14
    FOR X=0TO 24
@@ -774,6 +838,7 @@
   SPHIDE OTW_MOVWINSP
   CLS
   LOCATE 0,29
+  NewProcess"WCLOCK","" OUT E,E,E
  ENDIF
 RETURN
 END
@@ -833,7 +898,39 @@
 ' ExitProcess 1
 RETURN
 END
-
+VAR WCLOCKWND
+VAR WCLOCKTIM
+COMMON DEF I_WCLOCK
+ VAR E
+  NewTopLevelWindow GetWindowControl(),"CLOCK",64,64 OUT WCLOCKWND,E
+ WCLOCKTIM=MAINCNT/60
+ WCLOCKTIM=WCLOCKTIM*60
+END
+COMMON DEF L_WCLOCK
+ VAR E
+ E=PeekWindowEvent(WCLOCKWND)
+ IF E==RepaintControlEvent()THEN
+  WCLOCK_RP
+  E=UpdateWindow(WCLOCKWND)
+  RETURN
+ ENDIF
+ E=UpdateWindow(WCLOCKWND)
+ IF E THEN RETURN
+ IF MAINCNT-WCLOCKTIM>=60 THEN
+  WCLOCKTIM=MAINCNT/60
+  WCLOCKTIM=WCLOCKTIM*60
+  WCLOCK_RP
+ ENDIF
+ 
+END
+ DEF WCLOCK_RP
+  VAR E
+  E=GBeginWindow(WCLOCKWND)
+  IF E THEN RETURN
+  GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
+  GPRINTWindow WCLOCKWND,0,0,TIME$
+  E=GEndWindow(WCLOCKWND)
+ END
 DEF DUMP_WND
  DUMP_WND2 WIN_ROOTWND AND NUWIDMASK,""
 END
@@ -953,6 +1050,106 @@
  WEND
  GPAGE 0,0
 @FONT
+DATA "0"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F00FF00"
+DATA "0F0F0F00"
+DATA "0FF00F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "1"
+DATA "000F0000"
+DATA "0FFF0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "0FFFFF00"
+DATA "00000000"
+DATA "2"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "00000F00"
+DATA "0000F000"
+DATA "000F0000"
+DATA "00F00000"
+DATA "0FFFFF00"
+DATA "00000000"
+DATA "3"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "00000F00"
+DATA "000FF000"
+DATA "00000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "4"
+DATA "0000F000"
+DATA "000FF000"
+DATA "00F0F000"
+DATA "0F00F000"
+DATA "0F00F000"
+DATA "0FFFFF00"
+DATA "0000F000"
+DATA "00000000"
+DATA "5"
+DATA "0FFFFF00"
+DATA "0F000000"
+DATA "0FFFF000"
+DATA "0F000F00"
+DATA "00000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "6"
+DATA "000FF000"
+DATA "00F00000"
+DATA "0F000000"
+DATA "0FFFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "7"
+DATA "0FFFFF00"
+DATA "0F000F00"
+DATA "0000F000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "000F0000"
+DATA "00000000"
+DATA "8"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA "9"
+DATA "00FFF000"
+DATA "0F000F00"
+DATA "0F000F00"
+DATA "00FFFF00"
+DATA "00000F00"
+DATA "00000F00"
+DATA "00FFF000"
+DATA "00000000"
+DATA ":"
+DATA "00000000"
+DATA "00000000"
+DATA "000F0000"
+DATA "00000000"
+DATA "00000000"
+DATA "000F0000"
+DATA "00000000"
+DATA "00000000"
+
 DATA "A"
 DATA "000F0000"
 DATA "00F0F000"
