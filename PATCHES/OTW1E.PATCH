diff -u OTW.TXT OTW1E
--- OTW.TXT
+++ OTW1E
@@ -4,7 +4,12 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
+VAR WIN_BKGND
 VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
+VAR OTW_MOVWINNUWID
+'1:MOV
+'2:RESIZE
+VAR OTW_MOVWINFLG
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
@@ -65,6 +70,8 @@
 DIM WIN_MSGCNT [0,0]
 DIM WIN_USER   [0,0]
 DIM WIN_HIDE   [0]
+DIM WIN_MINW   [0]
+DIM WIN_MINH   [0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
 VAR WIN_MSGARGSIZE
@@ -99,6 +106,7 @@
 VAR WIN_STYLE_MODAL
 VAR WIN_STYLE_RESIZ
 VAR WIN_STYLE_TRANS
+VAR WIN_STYLE_HIDE
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -107,13 +115,19 @@
 VAR OTW_LCLKF
 'なんFRAMEまで DOUBLE CLICKか
 VAR OTW_DBLCLKF
+'MOUSEのずれのキョヨウはんい
+VAR OTW_DBLCLKXY
+VAR OTW_DBLCLKX
+VAR OTW_DBLCLKY
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
  OTW_DBLCLKF=30
+ OTW_DBLCLKXY=4'±4
  WIN_STYLE_MODAL=1
  WIN_STYLE_RESIZ=2
  WIN_STYLE_TRANS=4
+ WIN_STYLE_HIDE=8
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -158,6 +172,8 @@
  WIN_BEGIN     =NewArray(WIN_MAX)
  WIN_SP        =NewArray(WIN_MAX)
  WIN_HIDE      =NewArray(WIN_MAX)
+ WIN_MINW      =NewArray(WIN_MAX)
+ WIN_MINH      =NewArray(WIN_MAX)
  WIN_MENU      =NewArray(WIN_MAX)
  WIN_GROUP     =NewArray(WIN_MAX)
  WIN_GNEXT     =NewArray(WIN_MAX)
@@ -300,6 +316,7 @@
 VAR CTL_DELETEHANDLER
 VAR CTL_LDBLCLKHANDLER
 VAR CTL_MSLEAVEHANDLER
+VAR CTL_RESIZEHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -320,7 +337,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=17
+ CTL_HANDLER_MAX=18
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -359,6 +376,7 @@
  CTL_DELETEHANDLER=14
  CTL_LDBLCLKHANDLER=15
  CTL_MSLEAVEHANDLER=16
+ CTL_RESIZEHANDLER=17
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -618,6 +636,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_MSLEAVEHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlResizeHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_RESIZEHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -784,7 +807,7 @@
   ELSE
    IF I==OS THEN
     IF!BEG&&GBeginWindow(WND)THEN :'BREAK
-    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(224,224,224)
+    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,WIN_BKGND
     GPRINTWindow WND,1,Y1,MENU_INAME$[I],&HFF000000
     OS=0
     IF BEG THEN BREAK
@@ -798,7 +821,7 @@
 END
 DEF MenuPainter WND,C,T,XY,WH
  IF GBeginWindow(WND)THEN RETURN
- GCLSWindow WND,RGB(224,224,224)
+ GCLSWindow WND,WIN_BKGND
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  GBOXWindow WND,0,0,W,H,&HFF000000
@@ -857,10 +880,13 @@
 COMMON DEF WindowFrontFlag()
  RETURN 2
 END
-DEF WindowOnCreate WND,CTL
+COMMON DEF WindowHideFlag()
+ RETURN 4
+END
+DEF WindowOnCreate WND,CTL,ARG1,ARG2
  VAR NUCID=CTL AND 4095
  IF LEN(CTL_HANDLER$[NUCID,CTL_CREATEHANDLER])THEN
-  CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,0,0
+  CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,ARG1,ARG2
  ENDIF
 END
 DEF WindowOnDelete NUWID
@@ -870,6 +896,24 @@
   CALL CTL_HANDLER$[NUCID,CTL_DELETEHANDLER],NUWIDToWND(NUWID),CTL,CTL_DELETEHANDLER,0,0
  ENDIF
 END
+COMMON DEF GetWindowMinSize WND OUT W,H
+ IF!CheckWindow(WND)THEN
+  W=-1
+  H=-1
+  RETURN
+ ENDIF
+ VAR NUWID=WND AND NUWIDMASK
+ W=WIN_MINW[NUWID]
+ H=WIN_MINH[NUWID]
+ RETURN
+END
+COMMON DEF SetWindowMinSize WND,W,H
+ IF!CheckWindow(WND)THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK
+ WIN_MINW[NUWID]=W
+ WIN_MINH[NUWID]=H
+ RETURN
+END
 COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -917,6 +961,10 @@
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_NEXT[NUWID]=0
  WIN_PARENT[NUWID]=PARENT AND NUWIDMASK
+ WIN_MINW[NUWID]=WIN_FW2[NUWID]
+ WIN_MINH[NUWID]=WIN_FH2[NUWID]
+ WIN_HIDE[NUWID]=FLG AND 4
+ WIN_STYLE[NUWID]=(FLG AND 4)*2
  OTW_CLIPWindow NUWID
  IF PNUWID THEN 
   IF FLG AND WindowFrontFlag()THEN
@@ -967,10 +1015,16 @@
  IF PARENT==WIN_ROOTWND THEN
   SPAllocWindow WND
  ENDIF
- WIN_BACKGND[NUWID]=RGB(224,224,224)
- WindowOnCreate WND,CTL
+ WIN_BACKGND[NUWID]=WIN_BKGND
+ IF (FLG AND 512)!=512THEN
+  WindowOnCreate WND,CTL,0,0
+ ENDIF
  VOID ActiveWindow(WND)
 END
+DEF InitWindow WND,ARG1,ARG2
+ IF!CheckWindow(WND)THEN RETURN
+ WindowOnCreate WND,WIN_CTL[WND AND NUWIDMASK],ARG1,ARG2
+END
 COMMON DEF SetWindowBackColor WND,RGB
  IF!CheckWindow(WND)THEN RETURN
  WIN_BACKGND[WND AND NUWIDMASK]=RGB
@@ -1007,6 +1061,9 @@
 COMMON DEF WindowTransStyle()
  RETURN 4
 END
+COMMON DEF WindowHideStyle()
+ RETURN 8
+END
 VAR WIN_TopLevelX2
 DEF IncTopLevelPos NUCID
  INC WIN_TopLevelX,CTL_FH1[NUCID]-1
@@ -1020,7 +1077,7 @@
   WIN_TopLevelX=WIN_TopLevelX2
  ENDIF
 END
-COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
+COMMON DEF NewStyleWindowArg CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG,STYLE,A1,A2 OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
   ERR=CTL_INVALIDID
@@ -1039,10 +1096,75 @@
   INC CTL_FH2[NUCID],1
   INC CTL_FW2[NUCID],1
  ENDIF
- NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag() OUT WND,ERR
+ NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OR 512 OUT WND,ERR
+ VAR MW=32
+ IF MW>WIDTH THEN MW=WIDTH
+ VAR NUWID=WND AND NUWIDMASK,SP
+ SetWindowMinSize WND,CTL_FW1[NUCID]+MW,WIN_FH2[NUWID]
  CTL_FH1[NUCID]=_H
  IF ERR THEN RETURN
+ 'MENU
+ IF STYLE AND 1THEN
+  NewMenu OUT WIN_MENU[NUWID],ERR
+  WIN_MENU[NUWID]=WIN_MENU[NUWID]
+ ENDIF
+ 'RESIZABLE
+ IF STYLE AND 2THEN
+  WIN_STYLE[NUWID]=WIN_STYLE_RESIZ
+  DEC CTL_FW1[NUCID],1
+  DEC CTL_FH2[NUCID],1
+  DEC CTL_FW2[NUCID],1
+ ENDIF
+ 'TRANS
+ IF STYLE AND 4THEN
+  WIN_STYLE[NUWID]=WIN_STYLE_TRANS
+  NOIMPL "TRANS
+  NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
+ ENDIF
+ WIN_STYLE[NUWID]=STYLE
+ IF STYLE AND WIN_STYLE_HIDE THEN
+  WIN_HIDE[NUWID]=1
+  IF WIN_SP[NUWID]THEN SPHIDE WIN_SP[NUWID]AND 511
+ ENDIF
+ InitWindow WND,A1,A2
+END
+COMMON DEF NewStyleWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG,STYLE OUT WND,ERR
+ NewStyleWindowArg CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG,STYLE,0,0 OUT WND,ERR
+END
+COMMON DEF NewTopLevelStyleWindowArg CTL,NAME$,WIDTH,HEIGHT,STYLE,A1,A2 OUT WND,ERR
+ NewStyleWindowArg CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag()OR 512,STYLE,A1,A2 OUT WND,ERR
+ IF ERR THEN RETURN
+ VAR NUCID=CTL AND 4095
+ IncTopLevelPos NUCID
+END
+COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
+ NewTopLevelStyleWindowArg CTL,NAME$,WIDTH,HEIGHT,STYLE,0,0 OUT WND,ERR
+ RETURN
+ IF!CheckControl(CTL)THEN
+  WND=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ VAR NUCID=CTL AND 4095
+' INC OTW_TOPLEVELCNT
+ VAR _H=CTL_FH1[NUCID]
+ 'ごういん
+ IF STYLE AND 1THEN
+  INC CTL_FH1[NUCID],10
+ ENDIF
+ IF STYLE AND 2THEN
+  INC CTL_FH1[NUCID],1
+  INC CTL_FW1[NUCID],1
+  INC CTL_FH2[NUCID],1
+  INC CTL_FW2[NUCID],1
+ ENDIF
+ NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag()OR 512 OUT WND,ERR
+ VAR MW=32
+ IF MW>WIDTH THEN MW=WIDTH
  VAR NUWID=WND AND NUWIDMASK,SP
+ SetWindowMinSize WND,CTL_FW1[NUCID]+MW,WIN_FH2[NUWID]
+ CTL_FH1[NUCID]=_H
+ IF ERR THEN RETURN
  'MENU
  IF STYLE AND 1THEN
   NewMenu OUT WIN_MENU[NUWID],ERR
@@ -1061,7 +1183,13 @@
   NOIMPL "TRANS
   NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
  ENDIF
+ WIN_STYLE[NUWID]=STYLE
+ IF STYLE AND WIN_STYLE_HIDE THEN
+  WIN_HIDE[NUWID]=1
+  IF WIN_SP[NUWID]THEN SPHIDE WIN_SP[NUWID]AND 511
+ ENDIF
  IncTopLevelPos NUCID
+' InitWindow WND,A1,A2
 END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF WIN_ROOTWND THEN
@@ -1262,7 +1390,7 @@
   ELSE
    WIN_GROUP[WIN_GPARENT[NUWID]]=WIN_GNEXT[NUWID]
   ENDIF
-  VOID ActiveWindow(NUWIDToWND(WIN_GPARENT[NUWID]))
+  IF WIN_ACTIVENUWID==NUWID THEN VOID ActiveWindow(NUWIDToWND(WIN_GPARENT[NUWID]))
   WIN_GPARENT[NUWID]=0
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
@@ -1276,12 +1404,17 @@
 
 DEF OTW_SPSORT
  VAR I,Z=0
- IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT)
+ IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/MAX(OTW_TOPLEVELCNT,1)
  VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
 'IF!WIN_NEXT[NUWID]THEN I=
  I=1022+255
  WHILE NUWID
   I=I-Z
+  IF WIN_HIDE[NUWID]THEN
+   SPHIDE WIN_SP[NUWID]AND 511
+  ELSE
+   SPSHOW WIN_SP[NUWID]AND 511
+  ENDIF
   SPOFS WIN_SP[NUWID]AND 511,,,-255+I
 '  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
   NUWID=WIN_NEXT[NUWID]
@@ -1385,7 +1518,7 @@
 '  NXT=WIN_NEXT[NXT]
 ' WEND
 END
-COMMON DEF OTW_CLIPWindow NUWID
+DEF OTW_CLIPWindow NUWID
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
@@ -1427,7 +1560,10 @@
   DEC WIN_AH[NUWID],(WIN_RY[NUWID]+WIN_AH[NUWID])-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
  ENDIF
 
- WIN_HIDE[NUWID]=0
+ WIN_HIDE[NUWID]=WIN_STYLE[NUWID] AND WIN_STYLE_HIDE
+ IF WIN_HIDE[PNUWID]THEN WIN_HIDE[NUWID]=1
+ 
+' IF WIN_STYLE[PNUWID] AND WIN_STYLE_HIDE THEN WIN_HIDE[NUWID]=1
  IF WIN_AH[NUWID]<0THEN
   WIN_HIDE[NUWID]=1
   RETURN
@@ -1437,6 +1573,15 @@
   RETURN
  ENDIF
 END
+DEF OTW_CLIPCHILD NUWID
+ WHILE NUWID
+  OTW_CLIPWINDOW NUWID
+  IF WIN_CHILD[NUWID]THEN
+   OTW_CLIPCHILD WIN_CHILD[NUWID]
+  ENDIF
+  NUWID=WIN_NEXT[NUWID]
+ WEND
+END
 COMMON DEF BeginWindowOP(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  RETURN 0
@@ -1472,39 +1617,37 @@
    WIN_SP[NUWID]=WIN_SP[NUWID] OR 512
   ENDIF
  ENDIF
- WHILE NXT
-  IF WIN_CHILD[NXT]THEN
-   B=WIN_CHILD[NXT]
-   VAR MVF=NUWID==NXT
+ VAR MOVEF=0
+ B=WIN_PARENT[NUWID]
    WHILE B
-    IF MVF THEN
+    IF MOVEF THEN
      WIN_AX[B]=WIN_AX[B]+MX
      WIN_AY[B]=WIN_AY[B]+MY
-     WIN_FX[B]=WIN_FX[B]+MX
-     WIN_FY[B]=WIN_FY[B]+MY
-     WIN_RFX[B]=WIN_RFX[B]+MX
-     WIN_RFY[B]=WIN_RFY[B]+MY
-     WIN_RX[B]=WIN_RX[B]+MX
-     WIN_RY[B]=WIN_RY[B]+MY
+     WIN_FX[B]=WIN_AX[B]+WIN_FW1[B]'+MX
+     WIN_FY[B]=WIN_AY[B]+WIN_FH1[B]'+MY
+     WIN_RFX[B]=WIN_FX[B]'+MX
+     WIN_RFY[B]=WIN_FY[B]'+MY
+     WIN_RX[B]=WIN_AX[B]'+MX
+     WIN_RY[B]=WIN_AY[B]'+MY
+     OTW_CLIPWindow B
+     MOVEF=1
     ENDIF
+    IF WIN_CHILD[B]THEN
+     IF B==NUWID THEN MOVEF=1
+     B=WIN_CHILD[B]
+     CONTINUE
+    ENDIF
     IF!WIN_NEXT[B]THEN
      WHILE B
       B=WIN_PARENT[B]
-      IF B==NXT THEN BREAK
-      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+      IF B==NUWID THEN MOVEF=0
+      IF WIN_NEXT[B]THEN BREAK
      WEND
-     IF B==NXT THEN BREAK
+     IF!B THEN RETURN 0
     ENDIF
-    IF WIN_CHILD[B]THEN
-     B=WIN_CHILD[B]
-     CONTINUE
-    ENDIF
     B=WIN_NEXT[B]
-    IF B==NXT THEN BREAK
    WEND
-  ENDIF
-  NXT=WIN_NEXT[NXT]
- WEND
+ RETURN 0
 END
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
@@ -1535,7 +1678,7 @@
   GPAGE OTW_SP,OTW_GP
   GCOPY OTW_DP,WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   GPAGE OTW_SP,OTW_DP
-  GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],RGB(224,224,224)
+  GFILL WIN_AX[NUWID]-MX,WIN_AY[NUWID]-MY,WIN_AX[NUWID]-MX+WIN_WIDTH[NUWID],WIN_AY[NUWID]-MY+WIN_HEIGHT[NUWID],WIN_BKGND
   GCOPY OTW_GP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],WIN_AX[NUWID],WIN_AY[NUWID],0
   OTW_SPCHR NUWID
  ENDIF
@@ -1576,81 +1719,41 @@
     ENDIF
     B=WIN_NEXT[B]
    WEND
-RETURN
- WHILE NXT
-  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDSHIFT))
-  OTW_DrawMap NXT
-  IF WIN_CHILD[NXT]THEN
-   B=WIN_CHILD[NXT]
-   VAR MVF=NUWID==NXT
-   WHILE B
-    IF MVF THEN
-     WIN_AX[B]=WIN_AX[B]+MX
-     WIN_AY[B]=WIN_AY[B]+MY
-     WIN_FX[B]=WIN_FX[B]+MX
-     WIN_FY[B]=WIN_FY[B]+MY
-     WIN_RFX[B]=WIN_RFX[B]+MX
-     WIN_RFY[B]=WIN_RFY[B]+MY
-     WIN_RX[B]=WIN_RX[B]+MX
-     WIN_RY[B]=WIN_RY[B]+MY
-    ENDIF
-    VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-    OTW_DrawMap B
-    IF!WIN_NEXT[B]THEN
-     WHILE B
-      B=WIN_PARENT[B]
-      IF B==NXT THEN BREAK
-      IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
-     WEND
-     IF B==NXT THEN BREAK
-    ENDIF
-    IF WIN_CHILD[B]THEN
-     B=WIN_CHILD[B]
-     CONTINUE
-    ENDIF
-    B=WIN_NEXT[B]
-    IF B==NXT THEN BREAK
-   WEND
-  ENDIF
-  NXT=WIN_NEXT[NXT]
-'  IF NXT==NUWID THEN BREAK
- WEND
-
-RETURN 0
- NXT=WIN_CHILD[NUWID]:B=NXT
- VAR PAX2=WIN_X[NUWID]+WIN_AW[NUWID]
- VAR PAY2=WIN_Y[NUWID]+WIN_AH[NUWID]
- WHILE B
-  VAR S=WIN_WIDTH[B]-WIN_AW[B]
-  
-  WIN_AX[B]=WIN_AX[B]+MX
-  WIN_AY[B]=WIN_AY[B]+MY
-  WIN_FX[B]=WIN_FX[B]+MX
-  WIN_FY[B]=WIN_FY[B]+MY
-  WIN_RFX[B]=WIN_RFX[B]+MX
-  WIN_RFY[B]=WIN_RFY[B]+MY
-  WIN_RX[B]=WIN_RX[B]+MX
-  WIN_RY[B]=WIN_RY[B]+MY
-  VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-  OTW_DrawMap B
-  IF WIN_CHILD[B]THEN
-   B=WIN_CHILD[B]
-   CONTINUE
-  ENDIF
-  IF!WIN_NEXT[B]THEN
-   WHILE B
-    B=WIN_PARENT[B]
-    IF B==NUWID THEN BREAK
-    IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
-   WEND
-   IF B==NUWID THEN BREAK
-  ENDIF
-  B=WIN_NEXT[B]
-  IF B==NUWID THEN BREAK
- WEND
-
+ RETURN
+END
+DEF ResizeWindowF(WND,W,H)
+ VAR NUWID=WND AND NUWIDMASK
+ 'ちいさい
+ IF W+1<WIN_MINW[NUWID]THEN
+  W=WIN_MINW[NUWID]-1
+ ENDIF
+ IF H+1<WIN_MINH[NUWID]THEN
+  H=WIN_MINH[NUWID]-1
+ ENDIF
+ VOID FireResizeWindow(WND,W-WIN_FW2[NUWID],H-WIN_FH2[NUWID])
+ WIN_WIDTH[NUWID]=W
+ WIN_HEIGHT[NUWID]=H
+ OTW_CLIPWindow NUWID
+ OTW_CLIPCHILD NUWID
+ RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
+DEF MoveResizeWindowF(WND,X,Y,W,H)
+ VAR NUWID=WND AND NUWIDMASK
+ VAR E=MoveWindow2(WND,X,Y)
+ IF E THEN RETURN E
+ RETURN ResizeWindowF(WND,W,H)
+END
+COMMON DEF ResizeWindow(WND,W,H)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN ResizeWindowF(WND,W+WIN_FW2[NUWID],H+WIN_FH2[NUWID])
+END
+COMMON DEF MoveResizeWindow(WND,X,Y,W,H)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN MoveResizeWindowF(WND,X,Y,W+WIN_FW2[NUWID],H+WIN_FH2[NUWID])
+END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -1683,8 +1786,8 @@
 COMMON DEF SendButtonWindow(WND,BTN)
  RETURN SendWindowEvent(WND,CTL_BTNHANDLER,BTN,0)
 END
-COMMON DEF SendChFocusWindow(WND,FLG)
- RETURN SendWindowEvent(WND,CTL_CHFOCUSHANDLER,FLG,0)
+COMMON DEF SendChFocusWindow(WND,FLG,FOCUSW)
+ RETURN SendWindowEvent(WND,CTL_CHFOCUSHANDLER,FLG,FOCUSW)
 END
 COMMON DEF SendStrNotifWindow(WND,A1,STR$)
  RETURN SendWindowEvent(WND,CTL_STRNOTIFHANDLER,A1,AllocString(STR$))
@@ -1706,7 +1809,7 @@
 END
 DEF LDoubleClickWindow(WND)
  VAR NUWID=WND AND NUWIDMASK
- RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,,JoinInt(OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID]))
+ RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
 DEF MouseMoveWindowOnFrame(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
@@ -1723,6 +1826,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMMOUSEMVHANDLER,CTL_LEAVEFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
+DEF FireResizeWindow(WND,W,H)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_RESIZEHANDLER,0,JoinInt(W,H))
+END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
@@ -1831,11 +1938,13 @@
 END
 COMMON DEF GetWindowX(WND)
  IF!CheckWindow(WND)THEN RETURN -1
- RETURN WIN_FX[WND AND NUWIDMASK]
+'RETURN WIN_FX[WND AND NUWIDMASK]
+ RETURN WIN_X[WND AND NUWIDMASK]+WIN_FW1[WND AND NUWIDMASK]
 END
 COMMON DEF GetWindowY(WND)
  IF!CheckWindow(WND)THEN RETURN -1
- RETURN WIN_FY[WND AND NUWIDMASK]
+'RETURN WIN_FY[WND AND NUWIDMASK]
+ RETURN WIN_Y[WND AND NUWIDMASK]+WIN_FH1[WND AND NUWIDMASK]
 END
 COMMON DEF GetWindowVar(WND,I)
  RETURN WIN_VAR[WND AND NUWIDMASK,I]
@@ -1925,6 +2034,8 @@
 END
 ''WINDOW GRAPHIC
 VAR GB_WND
+VAR WING_SX
+VAR WING_SY
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -1934,6 +2045,8 @@
  VAR AY=WIN_RFY[NUWID]'WIN_FH1[NUWID]
  VAR W=WIN_AFW[NUWID]
  VAR H=WIN_AFH[NUWID]
+ WING_SX=WIN_FX[NUWID]
+ WING_SY=WIN_FY[NUWID]
  IF W<0||H<0THEN RETURN WIN_NODRAW
  GPAGE OTW_SP,OTW_BP
 'OTW1C 3.1 の GCLIP BUG の ため
@@ -1960,11 +2073,13 @@
  VAR AY=WIN_RY[NUWID]
  VAR W=WIN_AW[NUWID]'WIN_WIDTH[NUWID]
  VAR H=WIN_AH[NUWID]'WIN_HEIGHT[NUWID]
+ WING_SX=WIN_FX[NUWID]
+ WING_SY=WIN_FY[NUWID]
  GB_WND=NUWID
  GPAGE OTW_SP,OTW_BP
 'OTW1C 3.1 の GCLIP BUG の ため
 ' GCLIP 1,AX,AY,AX+W,AY+H
-' GCLS' RGB(224,224,224)
+' GCLS' WIN_BKGND
  GFILL AX,AY,AX+W,AY+H,0
  RETURN 0
 END
@@ -2032,46 +2147,46 @@
  SPOFS WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID]
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GPSET X+AX,Y+AY,COL
 END
 COMMON DEF GCLSWindow WND,COL
  GCLS COL
 END
 COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GFILL X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GLINEWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GLINE X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GCIRCLEWindow WND,X,Y,R,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GCIRCLE X+AX,Y+AY,R,COL
 END
 COMMON DEF GCIRCLE2Window WND,X,Y,R,S,E,F,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GCIRCLE X+AX,Y+AY,R,S,E,F,COL
 END
 COMMON DEF GTRIWindow WND,X,Y,X2,Y2,X3,Y3,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GTRI X+AX,Y+AY,X2+AX,Y2+AY,X3+AX,Y3+AY,COL
 END
 COMMON DEF GLOADWindow WND,X,Y,W,H,IMG[],FLG,MODE
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  GLOAD X+AX,Y+AY,W,H,IMG,FLG,MODE
 END
 COMMON DEF GSAVEImage IMG,WND,X,Y,W,H,IX,IY
@@ -2088,6 +2203,9 @@
 COMMON DEF GPRINTWindowCC WND,X,Y,STR$,PAL
  GPRINTWindow WND,X,Y,STR$,OTW_CONSOLEPAL[PAL]
 END
+COMMON DEF GetConsolePalette(PAL)
+ RETURN OTW_CONSOLEPAL[PAL]
+END
 COMMON DEF GLINEArrayMemory PTR,W,H,X,Y,X2,Y2,COL
  COL=RGBToShort(COL)
  DIM M[0]
@@ -2115,8 +2233,8 @@
  WEND
 END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
- INC X,WIN_FX[WND AND NUWIDMASK]
- INC Y,WIN_FY[WND AND NUWIDMASK]
+ INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
+ INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
  IF COL AND&HFF000000THEN
   GPUTCHR X,Y,STR$,1,1,COL
  ENDIF
@@ -2131,8 +2249,8 @@
  NEXT
 END
 COMMON DEF GPRINTBWindow WND,X,Y,STR$,COL,BC
- INC X,WIN_FX[WND AND NUWIDMASK]
- INC Y,WIN_FY[WND AND NUWIDMASK]
+ INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
+ INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
  IF BC AND&HFF000000THEN
   GFILL X,Y,X+LEN(STR$)*8-1,Y+7,BC
  ENDIF
@@ -2151,8 +2269,8 @@
 END
 DIM OTW_FNTTMP[0]
 COMMON DEF GPUTCHRWindow WND,X,Y,A,COL
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
  GPUTCHR X,Y,CHR$(A),1,1,COL
  RETURN
@@ -2164,8 +2282,8 @@
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
 COMMON DEF GPUTCHRBWindow WND,X,Y,A,COL,BC
- VAR AX=WIN_FX[WND AND NUWIDMASK]
- VAR AY=WIN_FY[WND AND NUWIDMASK]
+ VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
  IF BC AND&HFF000000THEN
   GFILL X,Y,X+7,Y+7,BC
@@ -2197,13 +2315,13 @@
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
  VAR H2=WIN_HEIGHT[NUWID]-H
- VAR SH=FH-CTL_FH1[NUCID]
- VAR SW=WIN_FW2[NUWID]-CTL_FW1[NUCID]-CTL_FW2[NUCID]
+ VAR SH=FH-12'CTL_FH1[NUCID]
+ VAR SW=WIN_FW2[NUWID]-2'CTL_FW1[NUCID]-CTL_FW2[NUCID]
  IF WIN_MENU[NUWID]THEN DEC SH,10'TODO:MENU_HEIGHT
- VAR C=RGB(224,224,224)
+ VAR C=WIN_BKGND
  DEC H,SH
  DEC W,SW
- GCLSWindow WND,RGB(224,224,224)
+ GCLSWindow WND,WIN_BKGND
  GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
@@ -2213,10 +2331,12 @@
  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
- IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+ IF FW>1 THEN
   INC H,SH
   GLINEWindow WND,-1,-H+1,W-2,-H+1,-1
+  GLINEWindow WND,-2,-H,W-1,-H,RGB(224,224,224)
   GLINEWindow WND,-1,-H+1,-1,H2-2,-1
+  GLINEWindow WND,-2,-H+1,-2,H2-1,RGB(224,224,224)
   GLINEWindow WND,W-1,-H+1,W-1,H2-1,RGB(128,128,128)
   GLINEWindow WND,W,-H,W,H2,RGB(0,0,0)
   GLINEWindow WND,W-2,H2-1,-1,H2-1,RGB(128,128,128)
@@ -2224,7 +2344,7 @@
  ENDIF
  IF WIN_MENU[NUWID]THEN
   GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
-  GFILLWindow WND,0,-10,W-2,-2,RGB(224,224,224)
+  GFILLWindow WND,0,-10,W-2,-2,WIN_BKGND
   C=WIN_MENU[NUWID]AND 4095
   VAR I=MENU_ITEM[C]
   VAR X=0
@@ -2248,7 +2368,72 @@
  VAR X,Y
  SplitInt POS OUT X,Y
  VAR W=GetWindowFrameWidth(WND)
-  VAR NUWID=WND AND NUWIDMASK
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+  '2     3     4
+  ' 
+  ' 
+  '           
+  '5          6
+  '           
+  '           
+  '           
+  '789
+  WHILE 1
+  IF Y<4&&X<4THEN
+   OTW_MOVWINFLG=2'
+   BREAK
+  ENDIF
+  VAR EX=WIN_WIDTH[NUWID]-X
+  VAR EY=WIN_HEIGHT[NUWID]-Y
+  IF EX<4&&Y<4THEN 
+   OTW_MOVWINFLG=4'
+   BREAK
+  ENDIF
+  IF EY<4&&X<4THEN
+   OTW_MOVWINFLG=7'
+   BREAK          '
+  ENDIF
+  IF EX<4&&EY<4THEN
+   OTW_MOVWINFLG=9
+   BREAK
+  ENDIF
+  IF EY<2THEN
+   OTW_MOVWINFLG=8
+   BREAK
+  ENDIF
+  IF EX<2THEN
+   OTW_MOVWINFLG=6
+   BREAK
+  ENDIF
+  IF Y<2THEN
+   OTW_MOVWINFLG=3
+   BREAK
+  ENDIF
+  IF X<2THEN
+   OTW_MOVWINFLG=5
+   BREAK
+  ENDIF
+  BREAK
+  WEND
+  IF OTW_MOVWINFLG>=2THEN
+   VAR AX=WIN_AX[NUWID]
+   VAR AY=WIN_AY[NUWID]
+   INC X,AX
+   INC Y,AY
+   IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
+   SPSHOW OTW_MOVWINSP
+   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+   SPOFS OTW_MOVWINSP,AX,AY,-256
+   SPVAR OTW_MOVWINSP,1,NUWID
+   SPVAR OTW_MOVWINSP,2,AX-X
+   SPVAR OTW_MOVWINSP,3,AY-Y
+   VAR PNUWID=WIN_PARENT[NUWID]
+   MouseClip WIN_FX[PNUWID],WIN_FY[PNUWID],WIN_WIDTH[PNUWID]-WIN_FW2[PNUWID],WIN_HEIGHT[PNUWID]-WIN_FH2[PNUWID]
+   RETURN
+  ENDIF
+ ENDIF
  IF!IsFocusWindow(WND)THEN RETURN
  IF X&&Y>11&&Y<21&&WIN_MENU[NUWID]THEN
   IF BTN AND CTL_BTNUPFLG THEN
@@ -2277,8 +2462,9 @@
  IF BTN AND CTL_LBTNFLG THEN
   IF BTN AND CTL_BTNDWNFLG THEN
  '  IF!IsFocusWindow(WND)THEN RETURN
-   VAR AX=WIN_AX[NUWID]
-   VAR AY=WIN_AY[NUWID]
+   OTW_MOVWINFLG=1'MOV
+   AX=WIN_AX[NUWID]
+   AY=WIN_AY[NUWID]
    INC X,AX
    INC Y,AY
    IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
@@ -2290,7 +2476,7 @@
    SPVAR OTW_MOVWINSP,1,NUWID
    SPVAR OTW_MOVWINSP,2,AX-X
    SPVAR OTW_MOVWINSP,3,AY-Y
-   VAR PNUWID=WIN_PARENT[NUWID]
+   PNUWID=WIN_PARENT[NUWID]
    MouseClip WIN_FX[PNUWID],WIN_FY[PNUWID],WIN_WIDTH[PNUWID]-WIN_FW2[PNUWID],WIN_HEIGHT[PNUWID]-WIN_FH2[PNUWID]
   ENDIF
  ENDIF
@@ -2323,7 +2509,7 @@
    OTW_INITSP 4
    RETURN
   ENDIF
-  IF EX<4&&EX<4THEN
+  IF EX<4&&EY<4THEN
    OTW_INITSP 3
    RETURN
   ENDIF
@@ -2375,7 +2561,7 @@
      X2=X2+LEN(MENU_INAME$[I])*8+4
      IF I==OS THEN
       OS=0
-      GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+      GFILLWindow WND,X1,-10,X2,-2,WIN_BKGND
       GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
       BREAK
      ENDIF
@@ -2388,7 +2574,7 @@
      IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
      BEG=1
      OS=0
-     GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+     GFILLWindow WND,X1,-10,X2,-2,WIN_BKGND
      GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
     IF IN THEN BREAK
     ENDIF
@@ -2401,15 +2587,20 @@
 END
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
  VAR NUWID=WND AND NUWIDMASK
- DEC MX,WIN_AX[WIN_PARENT[NUWID]]+WIN_FW1[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
- DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
- VAR X=MX+A1X
- VAR Y=MY+A2Y
- VAR E=MoveWindow(WND,X,Y)
- E=FrontWindow(WND)
+ IF OTW_MOVWINFLG==1THEN
+  DEC MX,WIN_AX[WIN_PARENT[NUWID]]+WIN_FW1[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
+  DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
+  VAR X=MX+A1X
+  VAR Y=MY+A2Y
+  VAR E=MoveWindow(WND,X,Y)
+  E=FrontWindow(WND)
+  SPUNLINK OTW_MOVWINSP
+ ELSE
+  MoveWindowSP TRUE
+ ENDIF
  SPHIDE OTW_MOVWINSP
- SPUNLINK OTW_MOVWINSP
  MouseClipDef
+ OTW_MOVWINFLG=0
 END
 DEF ButtonPainter W,C,T,A1,A2
  VAR E=GBeginWindow(W)
@@ -2422,7 +2613,7 @@
  VAR B2=-1
  IF TG THEN SWAP B1,B2
  GFILLWindow W,0,0,WI,HE,RGB(192,192,192)
- GPRINTWindow W,(WI-GetTextWidth(NA$)-2)/2+TG+1,(HE-6)/2+TG,NA$,RGB(0,0,0)
+ GPRINTWindow W,(WI-GetTextWidth(NA$))/2+TG+1,(HE-6)/2+TG,NA$,RGB(0,0,0)
  GBOXWindow W,0,0,WI,HE,B1
  GLINEWindow W,0,0,0,HE-1,B2
  GLINEWindow W,0,0,WI-1,0,B2
@@ -2606,7 +2797,15 @@
   'あとしまつ
   VOID GEndWindow(WND)
  ENDIF
+ IF T==CTL_LDBLCLKHANDLER THEN
+  VOID SendNotifWindow(GetParentWindow(WND),WND,0)
+ ELSEIF GetWindowVar(WND,6)THEN
+  VOID SendNotifWindow(GetParentWindow(WND),WND,1)
+ ENDIF
 END
+COMMON DEF ListBoxChItem()
+ RETURN 1
+END
 DEF ListBoxDelete WND,CT,T,A1,A2
  VAR L=GetWindowVar(WND,1)
  IF!L THEN RETURN
@@ -2673,6 +2872,9 @@
  IF!S THEN RETURN""
  RETURN LISTSTR$[S]
 END
+COMMON DEF SetChItemListBoxNotif WND,F
+ SetWindowVar WND,6,F
+END
 DEF NewVScrollBar PARENT,SIZ OUT WND,E
  VAR W=GetWindowWidth(PARENT)
  VAR H=GetWindowHeight(PARENT)
@@ -2693,7 +2895,7 @@
 END
 DEF VSCRBARPainter W,_,T,XY,WH
  IF GBEGINWindow(W)THEN RETURN
- GCLSWindow W,RGB(224,224,224)
+ GCLSWindow W,WIN_BKGND
  VAR _W=GetWindowWidth(W)
  VAR _H=GetWindowHeight(W)
  GBOXWindow W,0,0,_W,_H,RGB(0,0,0)
@@ -2726,7 +2928,7 @@
  '10いか
  IF BS<10THEN
   BS=10
-  S=(S-9)*((AH-10)/SIZ)+9
+  IF SIZ THEN S=(S-9)*((AH-10)/SIZ)+9
  ENDIF
  GLINEWindow W,1,S,_W-1,S,C
  GLINEWindow W,1,S+BS,_W-1,S+BS,C
@@ -2934,6 +3136,7 @@
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  WIN_BKGND=RGB(208,208,208)
   VAR FM=FREEMEM
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
@@ -2988,7 +3191,7 @@
   NEXT
   GCLS RGB(0,224,224)
   GCLS RGB(0,128,128)
-  GCLS RGB(191,191,191)
+  'GCLS RGB(191,191,191)
   GPAGE OTW_SP,OTW_DP
   GPRIO 1023
  ' GCLS RGB(0,192,128)
@@ -3119,12 +3322,11 @@
    VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
    IF WIN_ACTIVENUWID!=OA THEN
-    E=SendChFocusWindow(NUWIDToWND(OA),FALSE)
-    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE)
+    E=SendChFocusWindow(NUWIDToWND(OA),FALSE,NUWIDToWND(WIN_ACTIVENUWID AND 32767))
+    E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE,NUWIDToWND(OA))
    ENDIF
    VAR F=MAINCNT
-   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF THEN
-    BEEP
+   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
     OTW_LCLKWND=0
     IF NUWID AND WIN_FRAMEFLG THEN
      'TODO:Double Click
@@ -3133,7 +3335,7 @@
      WIN_ACTIVENUWID=NUWID AND 32767
     ELSE
      IF LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,CTL_LDBLCLKHANDLER])THEN
-?"A
+      E=LDoubleClickWindow(NUWIDToWND(NUWID))
      ELSE
       E=LMouseDownWindow(NUWIDToWND(NUWID))
      ENDIF
@@ -3141,6 +3343,8 @@
    ELSE
     OTW_LCLKWND=NUWID
     OTW_LCLKF=F
+    OTW_DBLCLKX=OTW_MOUSEX
+    OTW_DBLCLKY=OTW_MOUSEY
    IF NUWID AND WIN_FRAMEFLG THEN
     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
     
@@ -3165,6 +3369,7 @@
   ENDIF
  ENDIF
  IF MOVEMOUSE THEN
+  MoveWindowSP FALSE
   IF OLDMOVEMOUSEWINDOW!=NUWID THEN
    IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
     E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
@@ -3222,6 +3427,106 @@
 ' ExitProcess 1
 RETURN
 END
+  '2     3     4
+  ' 
+  ' 
+  '           
+  '5          6
+  '           
+  '           
+  '           
+  '789
+DEF MoveWindowSP F
+ IF OTW_MOVWINFLG>=2THEN
+  VAR NW=SPVAR(OTW_MOVWINSP,1)
+  VAR W=WIN_WIDTH[NW],H=WIN_HEIGHT[NW]
+  VAR X=WIN_AX[NW],Y=WIN_AY[NW]
+  VAR LTOPH,LTOPW
+  VAR RTOPH,RTOPW
+  IF OTW_MOVWINFLG==2THEN
+   LTOPH=1LTOPW=1
+  ENDIF
+  IF OTW_MOVWINFLG==3THEN
+   LTOPH=1
+  ENDIF
+  IF OTW_MOVWINFLG==5THEN
+   LTOPW=1
+  ENDIF
+   IF LTOPW THEN
+    INC W,X-OTW_MOUSEX
+    X=OTW_MOUSEX
+    IF W<WIN_MINW[NW]THEN
+     W=WIN_MINW[NW]-1
+     X=WIN_AX[NW]+WIN_WIDTH[NW]-W
+    ENDIF
+   ENDIF
+   IF LTOPH THEN
+    INC H,Y-OTW_MOUSEY
+    Y=OTW_MOUSEY
+    IF H<WIN_MINH[NW]THEN
+     H=WIN_MINH[NW]-1
+     Y=WIN_AY[NW]+WIN_HEIGHT[NW]-H
+    ENDIF
+   ENDIF
+  IF OTW_MOVWINFLG==4THEN
+   RTOPH=1RTOPW=1
+  ENDIF
+  IF OTW_MOVWINFLG==6THEN
+   RTOPW=1
+  ENDIF
+   IF RTOPW THEN
+    DEC W,X-OTW_MOUSEX+W
+    IF W<WIN_MINW[NW]THEN W=WIN_MINW[NW]-1
+   ENDIF
+   IF RTOPH THEN
+    INC H,Y-OTW_MOUSEY
+    Y=OTW_MOUSEY
+    IF H<WIN_MINH[NW]THEN
+     H=WIN_MINH[NW]-1
+     Y=WIN_AY[NW]+WIN_HEIGHT[NW]-H
+    ENDIF
+   ENDIF
+  VAR LBOTH,LBOTW
+  VAR RBOTH,RBOTW
+  IF OTW_MOVWINFLG==7THEN
+   LBOTH=1LBOTW=1
+  ENDIF
+  IF OTW_MOVWINFLG==8THEN
+   LBOTH=1
+  ENDIF
+   IF LBOTW THEN
+    INC W,X-OTW_MOUSEX
+    X=OTW_MOUSEX
+    IF W<WIN_MINW[NW]THEN
+     W=WIN_MINW[NW]-1
+     X=WIN_AX[NW]+WIN_WIDTH[NW]-W
+    ENDIF
+   ENDIF
+   IF LBOTH THEN
+    DEC H,Y-OTW_MOUSEY+H
+    IF H<WIN_MINH[NW]THEN H=WIN_MINH[NW]-1
+   ENDIF
+  IF OTW_MOVWINFLG==9THEN
+   RBOTH=1RBOTW=1
+  ENDIF
+   IF RBOTW THEN
+    DEC W,X-OTW_MOUSEX+W
+    IF W<WIN_MINW[NW]THEN W=WIN_MINW[NW]-1
+   ENDIF
+   IF RBOTH THEN
+    DEC H,Y-OTW_MOUSEY+H
+    IF H<WIN_MINH[NW]THEN H=WIN_MINH[NW]-1
+   ENDIF
+  SPOFS OTW_MOVWINSP,X,Y
+  SPSCALE OTW_MOVWINSP,W+1,H+1'TODO:WH
+  IF F THEN
+   'TODO:Move->Resizeでおかしくなる
+   'TODO:MoveResizeWindow
+'   VOID MoveWindow(NUWIDToWND(NW),X,Y)
+   VOID MoveResizeWindowF(NUWIDToWND(NW),X,Y,W,H)
+  ENDIF
+ ENDIF
+END
 VAR RUNCTL
 COMMON DEF I_RUN
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
@@ -3410,7 +3715,7 @@
   VAR E
   E=GBeginWindow(WCLOCKWND)
   IF E THEN RETURN
-  GCLSWindow WCLOCKWND,RGB(224,224,224)'255,160,16)
+  GCLSWindow WCLOCKWND,WIN_BKGND'255,160,16)
   GPRINTWindowCC WCLOCKWND,0,0,TIME$,1
   GPRINTWindowCC WCLOCKWND,0,8,TIME$,1
   GPRINTWindowCC WCLOCKWND,0,56,TIME$,1
@@ -3651,6 +3956,7 @@
   E=SetControlCreateHandler(TXTBOXEXCTL,"TextBoxExCreate")
   E=SetControlNotifHandler(TXTBOXEXCTL,"TextBoxExNotif")
   E=SetControlLMouseDownHandler(TXTBOXEXCTL,"TextBoxExLMD")
+  E=SetControlResizeHandler(TXTBOXEXCTL,"TextBoxResize")
   TXTBOXEX_LINESIZ=10000'1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -3760,6 +4066,13 @@
  VAR W=GetWindowWidth(WND),
  NewVScrollBar WND,0 OUT SCR,E
 END
+DEF TextBoxResize WND,CTL,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W<0||H<0THEN RETURN
+ VAR CW=GetChildWindow(WND)
+ VOID MoveResizeWindow(CW,W-GetWindowWidth(CW),0,GetWindowWidth(CW),H)
+END
 COMMON DEF TextBoxExPainter WND,CTL,T,_,__
  TextBoxExRepaint WND
 END
@@ -3790,6 +4103,7 @@
  IF SH THEN TC=-1
  VAR Y=1,X=32,PL,LC
  VAR LINE=(GetWindowVar(WND,7)AND 2147483647),_
+ VAR M0=MAINCNT
  WHILE 1
   INC LINE
   V$=TXTBOXEX_VAL$[L]
@@ -3833,6 +4147,7 @@
    PL=0
    BREAK
   ENDIF
+  IF MAINCNT-M0>1THEN UpdateMouse
  WEND
  GBOXWindow WND,0,0,W,H,RGB(0,0,0)
  E=GEndWindow(WND)
@@ -3993,18 +4308,42 @@
   IF LEN(TXT$)==I THEN BREAK
   IF J==-1THEN J=LEN(TXT$)-1
   C=TXTED_NewLINE(MID$(TXT$,I,J-I+1),C)
-  IF!C THEN BREAK
   IF!OC THEN
    SetWindowVar WND,1,C
    SetWindowVar WND,2,C
    OC=1
   ENDIF
+  IF!C THEN BREAK
   IF I==LEN(TXT$)-1THEN BREAK
   I=J+1
  WEND
- SetScrollBarSize GetChildWindow(WND),L+CEIL((GetWindowHeight(WND)-2)/8)
+ IF!LEN(TXT$)THEN
+  C=TXTED_NewLINE("",C)
+  SetWindowVar WND,1,C
+  SetWindowVar WND,2,C
+ ENDIF
+ VAR S=L+CEIL((GetWindowHeight(WND)-2)/8)
+ IF S<0THEN S=0
+ SetScrollBarSize GetChildWindow(WND),S
+ SetScrollBarPosition GetChildWindow(WND),0
+ VAR F=GetWindowVar(WND,7)
+ IF F<0THEN
+  SetWindowVar WND,7,-2147483648
+ ELSE
+  SetWindowVar WND,7,0
+ ENDIF
  VOID RepaintWindow(WND)
 END
+COMMON DEF TextBoxExGetText WND OUT TXT$
+ TXT$=""
+ VAR C=GetWindowVar(WND,1)
+
+
+ WHILE C
+  PUSH TXT$,TXTBOXEX_VAL$[C]
+  C=TXTBOXEX_NEXT[C]
+ WEND
+END
 '===syntax highlighting===
 'HashSet
 VAR RTXTEDTRUE
@@ -4158,13 +4497,26 @@
 END
 '===End text editor===
 COMMON DEF TXTEDNOTIF W,C,T,A1,A2
+ IF A2==4THEN
+  VOID SaveFileDialog(W,"TXT")
+ ENDIF
  IF A2==2THEN
   VOID OpenFileDialog(W,"TXT")
  ENDIF
+ IF A2==1THEN
+  TextBoxExSetText GetWindowVar(W,0),LF$()
+ ENDIF
 END
 COMMON DEF TXTEDSTRNOTIF W,C,T,A1,A2$
  TextBoxExSetText GetWindowVar(W,0),LoadFile$(RIGHT$(A2$,LEN(A2$)-1))
 END
+COMMON DEF TXTEDRESIZE WND,C,T,A1,WH
+ VAR W,H
+ SplitInt WH OUT W,H
+ IF W>=0THEN
+  VOID ResizeWindow(GetChildWindow(WND),W,H)
+ ENDIF
+END
 COMMON DEF I_TXTED
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -4176,6 +4528,7 @@
   ExtendControl "TXTED",GetWindowControl() OUT TXTEDCTL,E
   E=SetControlNotifHandler(TXTEDCTL,"TXTEDNOTIF")
   E=SetControlStrNotifHandler(TXTEDCTL,"TXTEDSTRNOTIF")
+  E=SetControlResizeHandler(TXTEDCTL,"TXTEDRESIZE")
  ENDIF
  NewTopLevelStyleWindow TXTEDCTL,"TXTED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
  VAR MENU
@@ -4188,6 +4541,7 @@
  SetProcessVar WND
  VAR TED
  NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT TED,E
+ TextBoxExSetText TED,LF$()
  SetWindowVar WND,0,TED
 'SetTextBoxExPRGMode WND,TRUE
 END
@@ -4206,8 +4560,10 @@
   ExtendControl "PRGED",GetWindowControl() OUT PRGEDCTL,E
   E=SetControlNotifHandler(PRGEDCTL,"TXTEDNOTIF")
   E=SetControlStrNotifHandler(PRGEDCTL,"TXTEDSTRNOTIF")
+  E=SetControlResizeHandler(PRGEDCTL,"TXTEDRESIZE")
  ENDIF
- NewTopLevelMenuWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
+ NewTopLevelStyleWindow PRGEDCTL,"PRGED",128,64,WindowMenuStyle()OR WindowResizableStyle() OUT WND,E
+'NewTopLevelMenuWindow PRGEDCTL,"PRGED",128,64 OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
  AddMenuItem MENU,"New",1
@@ -4218,6 +4574,7 @@
  SetProcessVar WND
  VAR TED
  NewWindow GetTextBoxExControl(),"",0,0,128,64,WND,0 OUT TED,E
+ TextBoxExSetText TED,LF$()
  SetWindowVar WND,0,TED
  SetTextBoxExPRGMode TED,TRUE
 END
@@ -4234,23 +4591,42 @@
 COMMON DEF RichTextStrike()
  RETURN 4
 END
-COMMON DEF RichTextUnderLine()
+COMMON DEF RichTextUnderline()
  RETURN 8
 END
 COMMON DEF RICHTEXTWindow WND,X,Y,C,STYLE,SIZE,COL
- VAR I
- IF SIZE==8&&(STYLE AND 3)!=3THEN
-  GPUTCHRWindow WND,X,Y,C,COL
-  IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
+ VAR I,X2
+ IF SIZE==8THEN'&&(STYLE AND 3)!=3THEN
+  X2=X
+  @LOOP1
+  IF STYLE AND 2THEN
+   GPAGE OTW_SP,OTW_DP
+   GCLIP 1
+   GFILL 511-8,511-8,511,511,0
+   GPUTCHR 511-8,511-8,C,1,1,COL
+   GPAGE OTW_SP,OTW_BP
+   FOR I=0TO 7
+    GCOPY OTW_DP,511-8,511-8+I,511,511-8+I,X+WING_SX+I DIV 4,Y+WING_SY+I,0
+   NEXT
+  ELSE
+   GPUTCHRWindow WND,X,Y,C,COL
+  ENDIF
+  IF STYLE AND 1 THEN
+   INC X
+   STYLE=STYLE AND NOT 1
+   GOTO @LOOP1
+   'GPUTCHRWindow WND,X+1,Y,C,COL
+  ENDIF
+  X=X2
  ELSE
   GPUTCHRWindow WND,X,Y,C,COL
   IF STYLE AND 1 THEN GPUTCHRWindow WND,X+1,Y,C,COL
  ENDIF
  IF STYLE AND 4THEN
-  GLINEWindow WND,X,Y+SIZE/2,X+SIZE,Y+SIZE/2,COL
+  GLINEWindow WND,X,Y+SIZE/2-1,X+SIZE,Y+SIZE/2-1,COL
  ENDIF
  IF STYLE AND 8THEN
-  GLINEWindow WND,X,Y+SIZE,X+SIZE,Y+SIZE,COL
+  GLINEWindow WND,X,Y+SIZE-1,X+SIZE-1,Y+SIZE-1,COL
  ENDIF
 END
 VAR OTYDOCCTL
@@ -4405,6 +4781,7 @@
   X=1
   FOR J=0TO L
    C=ASC(V$[J])
+   IF C==&Hb10cTHEN CONTINUE
    IF C==&Hb10bTHEN
    IF I==CL THEN
     IF CX==J THEN
@@ -4455,10 +4832,15 @@
 END
 
 DEF OTYDOC_UpCursor(WND)
-  VAR C=GetWindowVar(WND,2)
-  IF TXTBOXEX_PREV[C]THEN
-   VAR L=TXTBOXEX_PREV[GetWindowVar(WND,1)]
-   C=TXTBOXEX_PREV[C]
+  VAR D=GetWindowVar(WND,0)
+  VAR C=OTYDOC_CurLine[D]
+  IF OTYDOC_PREV[C]THEN
+   OTYDOC_CurLine[D]=OTYDOC_PREV[C]
+   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+   RETURN 1
+'SCROLL
+   VAR L=OTYDOC_PREV[GetWindowVar(WND,1)]
+   C=OTYDOC_PREV[C]
    IF L==C THEN
      SetWindowVar WND,1,L
    ENDIF
@@ -4468,8 +4850,13 @@
   RETURN 0
 END
 DEF OTYDOC_DownCursor(WND)
-  VAR C=GetWindowVar(WND,2)
-  IF TXTBOXEX_NEXT[C]THEN
+  VAR D=GetWindowVar(WND,0)
+  VAR C=OTYDOC_CurLine[D]
+'SCROLL
+  IF OTYDOC_NEXT[C]THEN
+   OTYDOC_CurLine[D]=OTYDOC_NEXT[C]
+   OTYDOC_CX[D]=MIN(LEN(OTYDOC_VAL$[OTYDOC_CurLine[D]]),OTYDOC_CX[D])
+   RETURN 1
    IF GetWindowVar(WND,6)==C THEN
     VAR L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
     IF L THEN
@@ -4487,13 +4874,13 @@
  IF!BTN THEN SetWindowVar WND,5,0RETURN
  IF MAINCNT-F<R THEN RETURN
  IF BTN AND 1 THEN
-  IF TXTED_UpCursor(WND)THEN
+  IF OTYDOC_UpCursor(WND)THEN
    OTYDOCRepaint WND
   ENDIF
   U=1
  ENDIF
  IF BTN AND 2 THEN
-  IF TXTED_DownCursor(WND)THEN
+  IF OTYDOC_DownCursor(WND)THEN
    OTYDOCRepaint WND
   ENDIF
   U=1
@@ -4501,12 +4888,33 @@
  VAR D=GetWindowVar(WND,0)
  IF BTN AND 4THEN
   VAR CX=OTYDOC_CX[D]
+  VAR C=OTYDOC_CurLine[D]
+  VAR S$=OTYDOC_VAL$[C]
+  IF CX<LEN(S$)&&ASC(S$[CX])==&HB10CTHEN
+   @LOOP11
+   FOR CX=CX TO 0 STEP -1
+    IF ASC(S$[CX])==&HB10BTHEN DEC CX:BREAK
+   NEXT
+   IF CX<0THEN CX=0
+   IF ASC(S$[CX])==&HB10CTHEN @LOOP11
+   OTYDOC_CX[D]=CX
+  ENDIF
   IF CX THEN
    DEC OTYDOC_CX[D]
+   DEC CX
+   IF ASC(S$[CX])==&HB10CTHEN
+    @LOOP1
+    FOR CX=CX TO 0 STEP -1
+     IF ASC(S$[CX])==&HB10BTHEN DEC CX:BREAK
+    NEXT
+    IF CX<0THEN CX=0
+    IF ASC(S$[CX])==&HB10CTHEN @LOOP1
+    OTYDOC_CX[D]=CX
+   ENDIF
    OTYDOCRepaint WND
   ELSE
    IF OTYDOC_UpCursor(WND)THEN
-    VAR C=OTYDOC_CurLine[D]
+    'VAR C=OTYDOC_CurLine[D]
     OTYDOC_CX[D]=LEN(OTYDOC_VAL$[C])
     OTYDOCRepaint WND
    ENDIF
@@ -4515,17 +4923,42 @@
  ENDIF
  IF BTN AND 8THEN
   CX=OTYDOC_CX[D]
-  INC OTYDOC_CX[D]
-  C=OTYDOC_CurLine[D]'GetWindowVar(WND,2)
+  C=OTYDOC_CurLine[D]
   VAR V$=OTYDOC_VAL$[C]
-  IF LEN(V$)<=CX||LEN(V$)-1==CX&&V$[CX]==LF$()THEN
+  IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN
+   @LOOP21
+   FOR CX=CX TO LEN(V$)-1
+    IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
+   NEXT
+   IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP21
+   OTYDOC_CX[D]=CX
+  ENDIF
+  INC OTYDOC_CX[D]
+  INC CX'TODO:BUG?  IF LEN(V$)<=CX||LEN(V$)-1==CX&&V$[CX]==LF$()THEN
+
+  IF LEN(V$)<=CX THEN'IF LEN(V$)<=CX||LEN(V$)==CX&&V$[CX]==LF$()THEN
+   IF LEN(V$)<CX THEN 
    IF OTYDOC_DownCursor(WND)THEN
     OTYDOC_CX[D]=0
+   ELSE
+    DEC OTYDOC_CX[D]
    ENDIF
+   ENDIF
+  ELSE
+   IF ASC(V$[CX])==&HB10BTHEN
+    @LOOP2
+    FOR CX=CX TO LEN(V$)-1
+     IF ASC(V$[CX])==&HB10CTHEN INC CX:BREAK
+    NEXT
+    IF CX<LEN(V$)&&ASC(V$[CX])==&HB10BTHEN @LOOP2
+    OTYDOC_CX[D]=CX
+   ENDIF
   ENDIF
   OTYDOCRepaint WND
   U=1
  ENDIF
+ ?OTYDOC_VAL$[OTYDOC_CurLine[D]]'C]
+ ?" "*(OTYDOC_CX[D]);""
  IF U THEN
   IF R==0 THEN
    SetWindowVar WND,5,20
@@ -4548,10 +4981,48 @@
   C=S
  ENDIF
   VAR I$=CHR$(KEY)
+ IF I$==BS$()THEN
+  IF X THEN
+   DEC OTYDOC_CX[D]
+   DEC X
+   VAR S$=OTYDOC_VAL$[C]
+   IF ASC(S$[X])==&Hb10cTHEN
+    FOR X=X TO 0 STEP -1
+     IF ASC(S$[X])==&Hb10bTHEN DEC X:BREAK
+    NEXT
+    IF X<0THEN X=0
+    OTYDOC_CX[D]=X
+   ENDIF
+   IF ASC(S$[X])==&Hb10bTHEN
+    DEC X
+    DEC OTYDOC_CX[D]
+   ENDIF
+   RemoveStrB OTYDOC_VAL$[C],X,1
+  ENDIF
+ ELSE
+  IF I$==CR$()THEN
+
+   VAR C2=OTYDOC_NewLine(CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)+MID$(OTYDOC_VAL$[C],X,LEN(OTYDOC_VAL$[C])-X),C)
+   IF!C2 THEN RETURN
+   OTYDOC_VAL$[C]=MID$(OTYDOC_VAL$[C],0,X)
+   OTYDOC_CurLine[D]=C2
+   OTYDOC_CX[D]=0
+   IF FALSE THEN 
+   SetWindowVar WND,2,C2
+   SetWindowVar WND,3,0
+'  OTYDOC_VAL$[C]=MID$(TXTBOXEX_VAL$[C],0,X)+K$
+   IF GetWindowVar(WND,6)==C THEN
+'   L=TXTBOXEX_NEXT[GetWindowVar(WND,1)]
+'   IF L THEN
+'    SetWindowVar WND,1,L
+'   ENDIF
+   ENDIF
+   ENDIF
+  ELSE
   IF OTYDOC_STYLE[D]!=OTYDOC_STYLE2[D]THEN
-   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+I$+CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])
+   I$=CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE2[D])+CHR$(&HB10C)+I$+CHR$(&HB10B)+CHR$(2)+CHR$(OTYDOC_STYLE[D])+CHR$(&HB10C)
    OTYDOC_STYLE[D]=OTYDOC_STYLE2[D]
-   INC OTYDOC_CX[D],3
+   INC OTYDOC_CX[D],4
   ENDIF
   INC OTYDOC_CX[D]
   IF!LEN(OTYDOC_VAL$[C])THEN
@@ -4559,8 +5030,11 @@
   ELSE
    InsertStrB OTYDOC_VAL$[C],X,I$
   ENDIF
+  ENDIF
+ ENDIF
  OTYDOCRepaint WND
  ?OTYDOC_VAL$[C]
+ ?" "*MAX(OTYDOC_CX[D],0);""
 END
 '====EVENT HANDLER====
 
@@ -4573,14 +5047,105 @@
   OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT 1
  ENDIF
 END
+COMMON DEF RTESetItalic WND,F
+ VAR D=OTYDOC_GetData(WND)
+ IF F THEN
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] OR RichTextItalic()
+ ELSE
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextItalic()
+ ENDIF
+END
+COMMON DEF RTESetStrike WND,F
+ VAR D=OTYDOC_GetData(WND)
+ IF F THEN
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] OR RichTextStrike()
+ ELSE
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextStrike()
+ ENDIF
+END
+COMMON DEF RTESetUnderline WND,F
+ VAR D=OTYDOC_GetData(WND)
+ IF F THEN
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] OR RichTextUnderline()
+ ELSE
+  OTYDOC_STYLE2[D]=OTYDOC_STYLE2[D] AND NOT RichTextUnderline()
+ ENDIF
+END
 '==================
+VAR OTYDOCCOLOR_CTL
 COMMON DEF OTYDOC_WNDNOTIF WND,CTL,TYPE,CW,F
  VAR N$=GetWindowName$(CW)
  IF N$=="B"THEN
   RTESetBold GetWindowVar(WND,0),F
   RETURN
  ENDIF
+ IF N$=="I"THEN
+  RTESetItalic GetWindowVar(WND,0),F
+  RETURN
+ ENDIF
+ IF N$=="S"THEN
+  RTESetStrike GetWindowVar(WND,0),F
+  RETURN
+ ENDIF
+ IF N$=="U"THEN
+  RTESetUnderline GetWindowVar(WND,0),F
+  RETURN
+ ENDIF
+ IF N$==""THEN
+  VAR X=GetWindowX(WND)+GetWindowX(CW),Y=GetWindowY(WND)+GetWindowY(CW)
+  OTYDOC_ShowMenu OTYDOCCOLOR_CTL,WND,X,Y,X+GetWindowWidth(CW),Y+GetWindowHeight(CW)
+ ENDIF
 END
+'2PX
+'
+'
+'
+'
+COMMON DEF OTYDOC_COLORCREATE WND,CTL,TYP,A1,A2
+ VAR E
+ NewWindow GetButtonControl(),">>>",1,GetWindowHeight(WND)-10,27,10,WND,0 OUT E,E
+ 
+END
+COMMON DEF OTYDOC_COLORPAINT WND,CTL,TYP,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,A1,A2)
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,RGB(200,200,200)
+ GBOXWindow WND,0,0,GetWindowWidth(WND),GetWindowHeight(WND),RGB(0,0,0)
+ VAR X,Y,C
+ FOR Y=0TO 3
+  FOR X=0TO 3
+   VAR RGB
+   IF!C THEN
+    RGB=RGB(0,0,0)
+    GBOXWindow WND,X*8+2*X+2,Y*8+2*Y+2,X*8+7+2*X+2,Y*8+7+2*Y+2,RGB
+   ELSE
+    RGB=GetConsolePalette(C)
+    GFILLWindow WND,X*8+2*X+2,Y*8+2*Y+2,X*8+7+2*X+2,Y*8+7+2*Y+2,RGB
+   ENDIF
+   INC C
+  NEXT
+ NEXT
+ E=GEndWindow(WND)
+END
+COMMON DEF OTYDOC_ColorNotif WND,CTL,TYP,FLG,FW
+ 'そのうち まともに
+ VOID ActiveWindow(WND)
+END
+COMMON DEF OTYDOC_ColorChFocus WND,CTL,TYP,FLG,FW
+ IF!FLG THEN
+  IF GetParentWindow(FW)==WND THEN RETURN
+  VOID DeleteWindow(WND)
+ ENDIF
+END
+COMMON DEF OTYDOC_ShowMenu CTL,WND,X,Y,X2,Y2
+ VAR E,MENUWND
+ IF CTL==OTYDOCCOLOR_CTL THEN
+  NewWindow OTYDOCCOLOR_CTL,"OTYDOCCOLOR",X,Y2,4*8+2*4+2,4*8+2*4+2+8+2,GetRootWND(),WindowFrontFlag()OUT MENUWND,E
+  IF E THEN RETURN
+ ENDIF
+ E=JoinWindowGroup(WND,MENUWND)
+ 
+END
 COMMON DEF I_OTYDOC
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -4591,14 +5156,25 @@
  IF!OTYDOC_WNDCTL THEN
   INIT_OTYDOC
   ExtendControl "OTYDOC",GetWindowControl() OUT OTYDOC_WNDCTL,E
+'  ExtendControl "OTYDOCCOLOR",GetWindowControl() OUT OTYDOCCOLOR_CTL,E
+  NewControl "OTYDOCCOLOR" OUT OTYDOCCOLOR_CTL,E
   E=SetControlNotifHandler(OTYDOC_WNDCTL,"OTYDOC_WNDNOTIF")
+  E=SetControlPainter(OTYDOCCOLOR_CTL,"OTYDOC_COLORPAINT")
+  E=SetControlCreateHandler(OTYDOCCOLOR_CTL,"OTYDOC_COLORCREATE")
+  E=SetControlChFocusHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorChFocus")
+  E=SetControlNotifHandler(OTYDOCCOLOR_CTL,"OTYDOC_ColorNotif")
  ENDIF
  NewTopLevelWindow OTYDOC_WNDCTL,"OTYDOC",256,128 OUT WND,E
  SetProcessVar WND
- VAR DOC
+ VAR DOC,COL
  NewWindow OTYDOCCTL,"OTYDOC",0,12,256,116,WND,0 OUT DOC,E
  SetWindowVar WND,0,DOC
  NewWindow GetToggleButtonControl(),"B",0,0,11,11,WND,0 OUT E,E
+ NewWindow GetToggleButtonControl(),"I",12*1,0,11,11,WND,0 OUT E,E
+ NewWindow GetToggleButtonControl(),"S",12*2,0,11,11,WND,0 OUT E,E
+ NewWindow GetToggleButtonControl(),"U",12*3,0,11,11,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"color",12*4,0,11+32,11,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"",12*5+32,0,11,11,WND,0 OUT E,E
 END
 COMMON DEF L_OTYDOC
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -4629,7 +5205,7 @@
  IF SEL THEN
   GCLSWindow W,RGB(0,0,255)
  ELSE
-  GCLSWindow W,RGB(224,224,224)
+  GCLSWindow W,WIN_BKGND
  ENDIF
  VAR TYP=GetWindowVar(W,1)
  IF TYP THEN
@@ -4661,7 +5237,7 @@
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
 END
 COMMON DEF OTYFILLMouse WND,CTL,T,A1,A2
- SetWindowBackColor GetWindowVar(WND,1),RGB(224,224,224)
+ SetWindowBackColor GetWindowVar(WND,1),WIN_BKGND
  SetWindowVar WND,1,0
  SetString GetWindowVar(WND,2),""
 END
@@ -4674,7 +5250,7 @@
  VAR OLD=GetWindowVar(PW,1)
  IF OLD==W THEN RETURN
  IF OLD THEN
-  SetWindowBackColor OLD,RGB(224,224,224)
+  SetWindowBackColor OLD,WIN_BKGND
  ENDIF
  SetWindowBackColor W,RGB(0,0,255)
  SetWindowVar PW,1,W
@@ -4724,7 +5300,7 @@
     ENDIF
     IF SW==I THEN
      IF N$!=SN$THEN
-      SetWindowBackColor SW,RGB(224,224,224)
+      SetWindowBackColor SW,WIN_BKGND
      ENDIF
     ENDIF
     SetWindowName I,N$
@@ -4879,7 +5455,12 @@
  E=SetControlNotifHandler(CTL_FILDIA,"FileDialogNotif")
 END
 COMMON DEF FileDialogNotif WND,C,T,W,__
- IF GetWindowName$(W)=="OK"THEN
+ IF __==ListBoxChItem()THEN
+  SetWindowName GetWindowVar(WND,2),GetListBoxSelectedText$(W)
+  VOID RepaintWindow(GetWindowVar(WND,2))
+  RETURN
+ ENDIF
+ IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
   IF!LEN(SEL$)THEN RETURN
   VOID SendStrNotifWindow(GetWindowGroupOwner(WND),1,SEL$)
@@ -4892,7 +5473,7 @@
 END
 COMMON DEF FileDialogCreate WND,C,T,_,__
  VAR E,L
- NewWindow GetListBoxControl(),"",0,0,116,64,WND,0 OUT L,E
+ NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
  DIM F$[0]
  GetFiles F$,""
  VAR I
@@ -4906,10 +5487,26 @@
   IF F$[I][1]=="*"&&T==2THEN CONTINUE
   AddListBoxItem L,F$[I]
  NEXT
+ VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
  SetWindowVar WND,0,L
+ SetWindowVar WND,1,F
  NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
  NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
+ IF F THEN
+  NewWindow GetTextBoxControl(),"",0,65,170,9,WND,0 OUT L,E
+  SetWindowVar WND,2,L
+  SetChItemListBoxNotif WND,F
+ ENDIF
 END
+COMMON DEF SaveFileDialog(OWNER,TYPE$)
+ IF!CTL_FILDIA THEN
+  OTW_FileDialog
+ ENDIF
+ IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
+ VAR TITLE$=TYPE$
+ VAR E=NewModalDialogBox(CTL_FILDIA,"Save "+TYPE$,170,74,OWNER)
+ RETURN E
+END
 COMMON DEF OpenFileDialog(OWNER,TYPE$)
  IF!CTL_FILDIA THEN
   OTW_FileDialog
@@ -5053,10 +5650,6 @@
   OTW_FNTTBL[R1]=C1
  WEND
 @RANGE
-DATA &H20,&H20,&H7F,&H7F
-DATA 57857,1,57883,27
-DATA 65280,32,65371,123
-DATA 57984,128,58015,159
 DATA -1,"A"
 @GRPFTABLE
 
@@ -5111,4 +5704,192 @@
 COMMON DEF L_ODSK
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+DEF PRUN_RMFIRSTSP P$
+ VAR I,L=LEN(P$)-1,_$
+ FOR I=0TO L
+  IF P$[0]!=" "THEN RETURN
+  _$=SHIFT(P$)
+ NEXT
+END
+DEF PRUN_ISTHEN(P$)
+ VAR I,L=LEN(P$)-1,I$,THEN$="THEN",J=LEN(THEN$)-1
+ FOR I=L TO 0STEP -1
+  I$=P$[I]
+  IF I$==" "THEN CONTINUE
+  IF J==-1THEN
+   'IF ASC(I$)>= THEN 'ISALPHA
+   'TODO AATHENなどのばあいや COMMENT
+   RETURN TRUE
+  ENDIF
+  IF P$[I]==THEN$[J] THEN
+   DEC J
+   CONTINUE
+  ENDIF
+  BREAK
+ NEXT
+ RETURN FALSE
+END
+DEF PRUN_EDITPRG
+ PRGEDIT 2,1
+ VAR I,L=PRGSIZE(2)
+ VAR H$="INT"+HEX$(RND(&HFFFF),4)
+ VAR L$=":"+H$
+ VAR H2$=HEX$(RND(&H7FFFFFFF),8)
+ VAR Y=CSRY
+ FOR I=1TO L
+  LOCATE 0,Y
+  ?I/L*100;"%";
+  PRGEDIT 2,I
+  VAR P$=PRGGET$()
+  IF LEN(P$)&&ASC(P$[LEN(P$)-1])==10THEN P$=LEFT$(P$,LEN(P$)-1)
+  PRUN_RMFIRSTSP P$
+  IF LEN(P$)&&!PRUN_ISTHEN(P$)THEN
+   PRGEDIT 2,I
+   PRGSET P$+L$
+  ENDIF
+ NEXT
+ PRGINS"DEF "+H$
+ PRGINS"IF BUTTON()=="+STR$(512+64)+" THEN GOTO"+CHR$(34)+"2:@"+H2$
+ PRGINS"END"
+ PRGINS "@"+H2$
+ PRGINS "END"
+END
+COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
+ VAR TW=GetWindowVar(NDW,0)
+ DIM U[512] 
+ DIM V[512] 
+ DIM W[512] 
+ DIM H[512] 
+ DIM A[512] 
+ DIM X[512] 
+ DIM Y[512] 
+ DIM Z[512] 
+ DIM DEFNO[512] 
+ DIM SV[512,8] 
+ VAR I
+ DIM GP0[0]
+ DIM GP1[0]
+ DIM GP2[0]
+ DIM GP3[0]
+ DIM GP4[0]
+ DIM GP5[0]
+ GCLIP 1
+ GSAVE OTW_SP,GP0,1
+ GSAVE OTW_DP,GP1,1
 
+' FOR I=0TO 511
+'  VAR J
+'  FOR J=0TO 7
+'   SV[I,J]=SPVAR(I,J)
+'  NEXT
+'  IF SV[I,0]THEN
+'   SPCHR I OUT U[I],V[I],W[I],H[I],A[I]
+'   SPOFS I OUT X[I],Y[I],Z[I]
+'  ENDIF
+' NEXT
+ LOCATE 0,29
+ ?"Now loading..."
+ LOAD"PRG2:"+GetWindowName$(TW),0
+ ?"OK"
+ ?"EXEC..."
+ PRUN_EDITPRG
+ ACLS
+ EXEC 2
+ ACLS
+ 'FOR I=0TO 511
+ ' IF SV[I,0]THEN
+ '  SPSET I,U[I],V[I],W[I],H[I],A[I]
+ '  ?SV[I,0],I,U[I],V[I],W[I],H[I],A[I]
+ '  SPOFS I,X[I],Y[I],Z[I]
+ '  FOR J=0TO 7
+ '   SPVAR I,J,SV[I,J]
+ '  NEXT
+ ' ENDIF
+ 'NEXT
+ VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
+ 
+ WHILE NW
+  VAR SP=WIN_SP[NW]AND 511
+  IF SP THEN
+   SPSET WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
+   SPOFS WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW]
+  ENDIF
+  NW=WIN_NEXT[NW]
+ WEND
+ GPRIO 1023
+ OTW_SPSORT
+ GPAGE OTW_SP,OTW_SP
+ GLOAD GP0,1,1
+ GPAGE OTW_SP,OTW_DP
+ GLOAD GP1,1,1
+ GCLIP 1,0,0,400,239
+ GPAGE OTW_SP,OTW_DP
+  '290
+  SPSET OTW_MOUSESP,0
+  OTW_SHADOWSP=1
+  SPSET OTW_SHADOWSP,0
+  OTW_INITSP 0
+  OTW_MOVWINSP=2
+  SPSET OTW_MOVWINSP,0
+  SPSCALE OTW_MOVWINSP,1,1
+  SPHIDE OTW_MOVWINSP
+  SPVAR OTW_MOVWINSP,0,1
+  OTW_MOVWINCOL=RGB(128,128,128,128)
+  OTW_MOVWINCOL=RGB(128,255,255,255)
+  SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+END
+VAR PRUNCTL
+COMMON DEF I_PRUN
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ IF!PRUNCTL THEN
+  ExtendControl "PRUN",GetWindowControl() OUT PRUNCTL,E
+ ENDIF
+ VAR WND
+ NewTopLevelStyleWindow PRUNCTL,"PRUN",128,32,WindowResizableStyle() OUT WND,E
+ IF E THEN BEEP:ExitProcess 1
+ E=SetControlNotificationHandler(PRUNCTL,"PRUNNotificationHandler")
+ SetProcessVar WND
+ VAR TW
+ NewWindow GetButtonControl(),"RUN Program",0,10,32+68,10,WND,0OUT TW,E
+ NewWindow GetTextBoxControl(),"",0,0,128,8,WND,0OUT TW,E
+ SetWindowVar WND,0,TW
+END
+COMMON DEF L_PRUN
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 0
+END
+COMMON DEF LOADERNotificationHandler NDW,C,T,CW,_
+ VAR TW=GetWindowVar(NDW,0)
+ EXEC"PRG2:"+GetWindowName$(TW)
+END
+VAR LOADERCTL
+COMMON DEF I_LOADER
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ IF!LOADERCTL THEN
+  ExtendControl "LOADER",GetWindowControl() OUT LOADERCTL,E
+ ENDIF
+ VAR WND
+ NewTopLevelStyleWindow LOADERCTL,"LOADER",128,32,WindowResizableStyle() OUT WND,E
+ IF E THEN BEEP:ExitProcess 1
+ E=SetControlNotificationHandler(LOADERCTL,"LOADERNotificationHandler")
+ SetProcessVar WND
+ VAR TW
+ NewWindow GetButtonControl(),"Load",0,10,40,10,WND,0OUT TW,E
+ NewWindow GetTextBoxControl(),"",0,0,128,8,WND,0OUT TW,E
+ SetWindowVar WND,0,TW
+END
+COMMON DEF L_LOADER
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 0
+END
+
