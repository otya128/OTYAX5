diff -u OTW.TXT OTWE
--- OTW.TXT
+++ OTWE
@@ -550,17 +550,11 @@
   RETURN
  ENDIF
  
- VAR SP=OTW_TOPLEVELCNT+1,FRAME
-' IF SPVAR(SP,0)THEN
-  WHILE SPVAR(SP,0)
-   SP=(SP+1)MOD 255
-  WEND
-  FRAME=SP+1
-  WHILE SPVAR(FRAME,0)
-   FRAME=(FRAME+1)MOD 255
-  WEND
-' ENDIF
- WIN_SP[NUWID]=SP OR FRAME<<10
+ VAR SP=OTW_TOPLEVELCNT+1
+ WHILE SPVAR(SP,0)
+  SP=(SP+1)MOD 255
+ WEND
+ WIN_SP[NUWID]=SP'OR FRAME<<10
  VAR ROOTNUWID=WIN_ROOTWND AND NUWIDMASK
  VAR C=WIN_CHILD[ROOTNUWID],N
  WIN_PARENT[NUWID]=ROOTNUWID
@@ -606,13 +600,8 @@
  SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
  SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
  SPSHOW SP
-'SPSET FRAME,0
- SPSCALE FRAME,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
- SPOFS FRAME,WIN_AX[NUWID]-1,WIN_AY[NUWID]-9,0
+
  SPVAR SP,0,WND
- SPVAR FRAME,0,WND
- SPCOLOR FRAME,RGB(128,0,0,255)
- SPCOL FRAME,0,0,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
  OTW_SPSORT
 END
 
@@ -620,12 +609,13 @@
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  RepaintAllWindow WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID],WIN_AH[NUWID]
- VAR E=DeleteWindow(NUWID)
+ VAR E=DeleteWindowNUWID(NUWID)
  RETURN E
 END
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ WIN_WID[NUWID]=0
  WIN_MSGS[NUWID]=0
  WIN_MSGE[NUWID]=0
  VAR I
@@ -635,15 +625,15 @@
  IF WIN_CHILD[NUWID]THEN
   VAR C=WIN_CHILD[NUWID]
   WHILE C
-   E=DeleteWindow(C)
+   E=DeleteWindowNUWID(C)
+   C=WIN_NEXT[NUWID]
   WEND
  ENDIF
  VAR N=WIN_NEXT[NUWID]
  VAR P=WIN_PREV[NUWID]
+ WIN_NEXT[NUWID]=0
+ WIN_PREV[NUWID]=0
  IF N THEN
-  IF P THEN
-   WIN_NEXT[P]=N
-  ENDIF
   WIN_PREV[N]=P
  ENDIF
  IF P THEN
@@ -652,6 +642,10 @@
  IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
   WIN_CHILD[WIN_PARENT[NUWID]]=N
  ENDIF
+ IF WIN_SP[NUWID]THEN
+  SPVAR WIN_SP[NUWID],0,0
+  SPCLR WIN_SP[NUWID]
+ ENDIF
  RETURN 0
 END
 
@@ -706,8 +700,6 @@
      SPOFS WIN_SP[C]AND 1023OUT S,S,Z2
      SPOFS WIN_SP[NUWID]AND 1023,,,Z2
      SPOFS WIN_SP[C]AND 1023,,,Z
-     SPOFS WIN_SP[NUWID]>>10,,,Z2+1'1
-     SPOFS WIN_SP[C]>>10,,,Z+1'1
     ENDIF
     VOID RepaintWindow(WND)
     OTW_DrawMap NUWID
@@ -831,7 +823,7 @@
 'ENDIF
 'IALOG STR$(WIN_FX[PNUWID]-WIN_AX[NUWID])
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK)THEN
- GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
+' GFILL WIN_RX[NUWID],WIN_RY[NUWID],WIN_RX[NUWID]+WIN_AW[NUWID],WIN_RY[NUWID]+WIN_AH[NUWID],0
  ENDIF
  VAR E=FrontWindow(WND)
  IF E THEN RETURN E
@@ -960,10 +952,12 @@
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID])
 END
 DEF LMouseDownWindowOnFrame(WND)
- RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
 DEF LMouseUpWindowOnFrame(WND)
- RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
@@ -986,6 +980,7 @@
  VAR S=WIN_MSGE[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ IF WIN_WID[NUWID]<=0THEN RETURN 0
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
@@ -999,6 +994,7 @@
  VAR S=WIN_MSGE[NUWID]
  VAR TYPE=WIN_MSGBUF[NUWID,S,0]
  CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ IF WIN_WID[NUWID]<=0THEN RETURN 0
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
@@ -1165,8 +1161,6 @@
   WHILE PNUWID
    GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
 
-'GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],WIN_AX[PNUWID]-AX,WIN_AY[PNUWID]-AY,0
-'   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
    PNUWID=WIN_NEXT[PNUWID]
   WEND
  ENDIF
@@ -1180,23 +1174,13 @@
    PNUWID=WIN_NEXT[PNUWID]
    CONTINUE
   ENDIF
-'  ?WIN_AY[PNUWID],WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID]-AX,WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID]-AY
-'  
-' IF WIN_AX[PNUWID]THEN
-'   GCOPY OTW_DP,WIN_AX[PNUWID],WIN_AY[PNUWID],WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],-WIN_AX[PNUWID]-WIN_WIDTH[PNUWID],-WIN_AY[PNUWID]-WIN_HEIGHT[PNUWID],0
-' ELSE
-'  GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
-' ENDIF
    GCOPY OTW_DP,WIN_RX[PNUWID],WIN_RY[PNUWID],WIN_RX[PNUWID]+WIN_AW[PNUWID],WIN_RY[PNUWID]+WIN_AH[PNUWID],WIN_RX[PNUWID],WIN_RY[PNUWID],0
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
  GPAGE OTW_SP,OTW_DP
-'?AX,AY,W,H
-' GCOPY OTW_BP,0,0,W,H,AX,AY,0
  GCLIP 1,0,0,400,240
  GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
-'DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
@@ -1278,7 +1262,8 @@
  GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+1,GetWindowName$(WND),15
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
- VAR C=RGB(20,20,20)
+ VAR C=RGB(224,224,224)
+ GFILLWindow WND,W-09,-H,W,-1,RGB(224,0,0)
  GLINEWindow WND,W-08,-H+2,W-2,-2,C
  GLINEWindow WND,W-7,-H+2,W-1,-2,C
  GLINEWindow WND,W-2,-H+2,W-8,-2,C
@@ -1292,11 +1277,21 @@
 DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
  VAR X,Y
  SplitInt POS OUT X,Y
+ VAR W=GetWindowFrameWidth(WND)
+ IF X>=W-9THEN
+  IF BTN AND CTL_BTNUPFLG THEN
+   VAR E=DeleteWindow(WND)
+   ?E
+  ENDIF
+  RETURN
+ ENDIF
  IF BTN AND CTL_LBTNFLG THEN
   VAR NUWID=WND AND NUWIDMASK
   IF BTN AND CTL_BTNDWNFLG THEN
    VAR AX=WIN_AX[NUWID]
    VAR AY=WIN_AY[NUWID]
+   INC X,AX
+   INC Y,AY
    IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
    SPSHOW OTW_MOVWINSP
    SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
@@ -1430,6 +1425,12 @@
 VAR OTW_USEBTN
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  PrintConsole "====================="+LF$()
+  PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
+  PrintConsole "====================="+LF$()
+  PrintConsole "Ver 5.0-B"+LF$()
+  BEEP 94,-1000
+  OTW_LOADFONT
   OTWRunning=TRUE
   OTW_USEBTN=&B11001111
   OTW_FPS=1
@@ -1489,11 +1490,6 @@
   ATTR 0
   DISPLAY 0
   @_
-  PrintConsole "====================="+LF$()
-  PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
-  PrintConsole "====================="+LF$()
-  PrintConsole "Ver 5.0-B"+LF$()
-  BEEP 94,-1000
   OTW_INIT=TRUE
   OTW_WIN_INITARRAY
   OTW_CTL_INITARRAY
@@ -1507,7 +1503,6 @@
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
-  OTW_LOADFONT
   GCLIP 1,0,0,400,240
   VISIBLE 1,1,1,1
   OTW_MOUSEX=(400-16)/2
@@ -1608,9 +1603,9 @@
   E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
- VOID UpdateWindow(TSTWND2)
- VOID UpdateWindow(TSTWND)
- VOID UpdateWindow(TSTWND3)
+ E=UpdateWindow(TSTWND2)
+ E=UpdateWindow(TSTWND)
+ E=UpdateWindow(TSTWND3)
  OTW_FDIFF=MAINCNT-OTW_FCNT
  IF OTW_FDIFF>1 THEN
   OTW_FPF#=OTW_FPFCNT
@@ -1661,7 +1656,67 @@
 END
 COMMON DEF L_RUN
  VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 1
 END
+VAR ABOUTCTL
+COMMON DEF I_ABOUT
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR E
+ ExtendControl "ABOUT",GetWindowControl() OUT ABOUTCTL,E
+ VAR WND
+ NewTopLevelWindow ABOUTCTL,"OTW",128,32 OUT WND,E
+ SetProcessVar WND
+ E=SetControlPainter(ABOUTCTL,"AboutPainter")
+END
+COMMON DEF AboutPainter WND,CTL,TYPE,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
+' E=GBeginWindow(WND)
+ IF E THEN RETURN
+ GPRINTWindow WND,0,0," otya 3D window ",RGB(0,0,0)
+ GPRINTWindow WND,0,8,"   system 5.0   ",RGB(0,0,0)
+ E=GEndWindow(WND)
+END
+COMMON DEF L_ABOUT
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 1
+END
+VAR LAUNCHERCTL
+DIM LAUNCHERITEM$[0]
+DIM LAUNCHERLEN
+COMMON DEF LauncherPainter WND,CTL,T,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,T,A1,A2)
+ VAR I
+ FOR I=0TO LAUNCHERLEN-1
+  GPRINTWindow WND,0,I*8,LAUNCHERITEM$[I],RGB(0,0,0)
+ NEXT
+ E=GEndWindow(WND)
+END
+COMMON DEF I_LAUNCHER
+ IF LAUNCHERCTL THEN
+  VAR WND,E
+  NewTopLevelWindow LAUNCHERCTL,"LAUNCHER",64,64 OUT WND,E
+  SetProcessVar WND
+  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
+ ELSE
+  LAUNCHERLEN=4
+  LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
+  LAUNCHERITEM$[0]="WCLOCK"
+  LAUNCHERITEM$[1]="RUN"
+  LAUNCHERITEM$[2]="ABOUT"
+  LAUNCHERITEM$[3]="LAUNCHER"
+  ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
+  I_LAUNCHER
+ ENDIF
+END
+COMMON DEF L_LAUNCHER
+ VAR E=UpdateWindow(GetProcessVar())
+ IF E THEN ExitProcess 1
+END
+
 VAR WCLOCKWND
 VAR WCLOCKCTL
 VAR WCLOCKBC
@@ -1713,7 +1768,7 @@
 '  RETURN
 ' ENDIF
  E=UpdateWindow(WCLOCKWND)
- IF E THEN RETURN
+ IF E THEN ExitProcess 1
  IF MAINCNT-WCLOCKTIM>=60 THEN
   WCLOCKTIM=MAINCNT/60
   WCLOCKTIM=WCLOCKTIM*60
@@ -1837,7 +1892,7 @@
  VAR T$=" !"+CHR$(34)+"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghiijklmnopqrstuvwxyz{|}~¢£¦§¨¨©®±´¶ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĊċČčĎďĒēĔĕĖėĘęĞğĠġĢģĦħĪīĮįİıĲĳĶķĹĺĻļĽľŁłŃńŅņŇňŐőŒœŔŕŘřŚśŞşŠšŤťŪūŮůŰűŲųŸŹźŻżŽžƒǅǆǲǳȚț˚;΄΅ΆΈΉΊΌΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώЁАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяё“”†‡…‰※€⇒⇔∀∂∞∴∵⊂⊃⌒☆♀♂♡♧♭、。〃々〆「」『』〒〜〝〟ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろわをんゝゞァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロワヲンヴ・ー仝｀｜"
  'LOAD FONT-1
  VAR C$
- OTW_FNT1=NewArray2(&H7F-&H20,2)
+ OTW_FNT1=NewArray2(&H7F-&H20+1,2)
 'GPAGE 0,5
  VAR X,Y,I,J
 'RETURN
@@ -1848,6 +1903,37 @@
  FOR I=0TO 15
   READ PAL[I]
  NEXT
+ LOAD"GRP0:FNT",0
+ VAR L
+ GPAGE 0,0
+ FOR I=&H20TO &H7F
+  L=I-&H20
+  X=I*8
+  Y=X/512
+  Y=Y*8
+  X=X MOD 512
+  VAR X2=X+7,Y2=Y+7
+  VAR F=0
+  FOR J=Y TO Y2
+   FOR K=X TO X2
+   NEXT
+  NEXT
+   VAR B=1
+   FOR K=Y+7 TO Y+4 STEP -1
+    FOR J=X+7 TO X STEP -1
+     IF(GSPOIT(J,K)AND&HFF000000)THEN OTW_FNT1[L,1]=OTW_FNT1[L,1]OR B
+     B=B<<1
+    NEXT
+   NEXT
+   B=1
+   FOR K=Y+3 TO Y STEP -1
+    FOR J=X+7 TO X STEP -1
+     IF(GSPOIT(J,K)AND&HFF000000)THEN OTW_FNT1[L,0]=OTW_FNT1[L,0]OR B
+     B=B<<1
+    NEXT
+   NEXT
+ NEXT
+RETURN
  WHILE 1
   READ C$
   IF C$=="END"THEN BREAK
@@ -1908,340 +1994,5 @@
 DATA &B01000100
 DATA &B00111000
 DATA &B00000000
-DATA "1"
-DATA &B00010000
-DATA &B01110000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B01111100
-DATA &B00000000
-DATA "2"
-DATA &B00111000
-DATA &B01000100
-DATA &B00000100
-DATA &B00001000
-DATA &B00010000
-DATA &B00100000
-DATA &B01111100
-DATA &B00000000
-DATA "3"
-DATA &B00111000
-DATA &B01000100
-DATA &B00000100
-DATA &B00011000
-DATA &B00000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "4"
-DATA &B00001000
-DATA &B00011000
-DATA &B00101000
-DATA &B01001000
-DATA &B01001000
-DATA &B01111100
-DATA &B00001000
-DATA &B00000000
-DATA "5"
-DATA &B01111100
-DATA &B01000000
-DATA &B01111000
-DATA &B01000100
-DATA &B00000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "6"
-DATA &B00011000
-DATA &B00100000
-DATA &B01000000
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "7"
-DATA &B01111100
-DATA &B01000100
-DATA &B00001000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "8"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "9"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B00111100
-DATA &B00000100
-DATA &B00000100
-DATA &B00111000
-DATA &B00000000
-DATA ":"
-DATA &B00000000
-DATA &B00000000
-DATA &B00010000
-DATA &B00000000
-DATA &B00000000
-DATA &B00010000
-DATA &B00000000
-DATA &B00000000
-
-DATA "A"
-DATA &B00010000
-DATA &B00101000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "B"
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B00000000
-DATA "C"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "D"
-DATA &B01110000
-DATA &B01001000
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01001000
-DATA &B01110000
-DATA &B00000000
-DATA "E"
-DATA &B01111100
-DATA &B01000000
-DATA &B01000000
-DATA &B01111000
-DATA &B01000000
-DATA &B01000000
-DATA &B01111100
-DATA &B00000000
-DATA "F"
-DATA &B01111100
-DATA &B01000000
-DATA &B01000000
-DATA &B01111000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B00000000
-DATA "G"
-DATA &B00111100
-DATA &B01000000
-DATA &B01000000
-DATA &B01011100
-DATA &B01000100
-DATA &B01000100
-DATA &B00111100
-DATA &B00000000
-DATA "H"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01111100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "I"
-DATA &B00111000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00111000
-DATA &B00000000
-DATA "J"
-DATA &B00011100
-DATA &B00001000
-DATA &B00001000
-DATA &B00001000
-DATA &B00001000
-DATA &B01001000
-DATA &B00110000
-DATA &B00000000
-DATA "K"
-DATA &B01000100
-DATA &B01001000
-DATA &B01010000
-DATA &B01100000
-DATA &B01010000
-DATA &B01001000
-DATA &B01000100
-DATA &B00000000
-DATA "L"
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B01111100
-DATA &B00000000
-DATA "M"
-DATA &B01000100
-DATA &B01101100
-DATA &B01010100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "N"
-DATA &B01000100
-DATA &B01100100
-DATA &B01010100
-DATA &B01001100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "O"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "P"
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B01000000
-DATA &B01000000
-DATA &B01000000
-DATA &B00000000
-DATA "Q"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01010100
-DATA &B01001000
-DATA &B00110100
-DATA &B00000000
-DATA "R"
-DATA &B01111000
-DATA &B01000100
-DATA &B01000100
-DATA &B01111000
-DATA &B01010000
-DATA &B01001000
-DATA &B01000100
-DATA &B00000000
-DATA "S"
-DATA &B00111000
-DATA &B01000100
-DATA &B01000000
-DATA &B00111000
-DATA &B00000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "T"
-DATA &B01111100
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "U"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00111000
-DATA &B00000000
-DATA "V"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B00101000
-DATA &B00101000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "W"
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01000100
-DATA &B01010100
-DATA &B01101100
-DATA &B01000100
-DATA &B00000000
-DATA "X"
-DATA &B01000100
-DATA &B01000100
-DATA &B00101000
-DATA &B00010000
-DATA &B00101000
-DATA &B01000100
-DATA &B01000100
-DATA &B00000000
-DATA "Y"
-DATA &B01000100
-DATA &B01000100
-DATA &B00101000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00010000
-DATA &B00000000
-DATA "Z"
-DATA &B01111100
-DATA &B00000100
-DATA &B00001000
-DATA &B00010000
-DATA &B00100000
-DATA &B01000000
-DATA &B01111100
-DATA &B00000000
 DATA "END"
-DATA "a"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-DATA "00000000"
-
 END
