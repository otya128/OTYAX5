diff -u OTW.TXT OTWB
--- OTW.TXT
+++ OTWB
@@ -8,9 +8,10 @@
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
-VAR OTW_FNT1[0]'0x20~0x7F
-VAR OTW_FNT2[0]'
-VAR OTW_FNT3[0]'
+VAR OTW_FNT1[0,0]'0x20~0x7F
+VAR OTW_FNT2[0,0]'
+VAR OTW_FNT3[0,0]'
+VAR OTW_CONSOLEPAL[0]
 '=======================
 '        WINDOW         
 '=======================
@@ -23,6 +24,8 @@
 DIM WIN_HEIGHT [0]
 DIM WIN_AX     [0]
 DIM WIN_AY     [0]
+DIM WIN_AW     [0]
+DIM WIN_AH     [0]
 DIM WIN_FX     [0]
 DIM WIN_FY     [0]
 DIM WIN_FWIDTH [0]
@@ -72,10 +75,11 @@
 'W1         W2
 '
 DEF OTW_WIN_INITARRAY
- WIN_FWIDTH1=1
+ VAR FM=FREEMEM
+ WIN_FWIDTH1=0
  WIN_FHEIGHT1=10
- WIN_FWIDTH2=1
- WIN_FHEIGHT2=1
+ WIN_FWIDTH2=0
+ WIN_FHEIGHT2=0
  WIN_MAX=256
  WIN_MSGMAX=64
  WIN_MSGARGSIZE=3
@@ -90,6 +94,8 @@
  WIN_HEIGHT    =NewArray(WIN_MAX)
  WIN_AX        =NewArray(WIN_MAX)
  WIN_AY        =NewArray(WIN_MAX)
+ WIN_AW        =NewArray(WIN_MAX)
+ WIN_AH        =NewArray(WIN_MAX)
  WIN_FX        =NewArray(WIN_MAX)
  WIN_FY        =NewArray(WIN_MAX)
  WIN_FWIDTH    =NewArray(WIN_MAX)
@@ -112,6 +118,13 @@
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
 END
+'IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+'ExitProcess 1
+'ENDIF
+VAR OTWRunning
+COMMON DEF IsWinRunning()
+ RETURN OTWRunning
+END
 '=======================
 'CONTROL
 '=======================
@@ -119,7 +132,11 @@
 VAR CTL_HANDLER_MAX
 DIM CTL_NAME$    [0]
 DIM CTL_CID      [0]
-DIM CTL_REF      [0]
+DIM CTL_DAT      [0]
+DIM CTL_FW1      [0]
+DIM CTL_FH1      [0]
+DIM CTL_FW2      [0]
+DIM CTL_FH2      [0]
 DIM CTL_NEXT     [0]
 DIM CTL_PARENTCTL[0]
 DIM CTL_HANDLER$ [0,0]
@@ -140,10 +157,16 @@
 VAR CTL_BTNDWNFLG
 VAR CTL_BTNUPFLG
 VAR CTL_WINDOWCTL
+VAR CTL_BUTTONCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
  CTL_NAME$     =NewArray$(CTL_MAX)
+ CTL_DAT       =NewArray(CTL_MAX)
+ CTL_FW1       =NewArray(CTL_MAX)
+ CTL_FH1       =NewArray(CTL_MAX)
+ CTL_FW2       =NewArray(CTL_MAX)
+ CTL_FH2       =NewArray(CTL_MAX)
  CTL_CID       =NewArray(CTL_MAX)
  CTL_NEXT      =NewArray(CTL_MAX)
  CTL_PARENTCTL =NewArray(CTL_MAX)
@@ -152,6 +175,7 @@
  OTW_INITLIST CTL_NEXT
  VAR E
  NewControl "WINDOW" OUT CTL_WINDOWCTL,E
+ NewControl "BUTTON" OUT CTL_BUTTONCTL,E
  CTL_PAINTHANDLER=0
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
@@ -165,9 +189,12 @@
  CTL_BTNDWNFLG=1
  CTL_BTNUPFLG=2
 ' CTL_DRWFRMHANDLER=3
+ E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
+ E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
+ E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -190,6 +217,9 @@
 COMMON DEF GetWindowControl()
  RETURN CTL_WINDOWCTL
 END
+COMMON DEF GetButtonControl()
+ RETURN CTL_BUTTONCTL
+END
 'CONTROL
 COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
@@ -218,6 +248,10 @@
  FOR I=0TO CTL_HANDLER_MAX-1
   CTL_HANDLER$[NUCID,I]=CTL_HANDLER$[P,I]
  NEXT
+ CTL_FW1[NUCID]=CTL_FW1[P]
+ CTL_FH1[NUCID]=CTL_FH1[P]
+ CTL_FW2[NUCID]=CTL_FW2[P]
+ CTL_FH2[NUCID]=CTL_FH2[P]
 END
 COMMON DEF CheckControl(CTL)
  RETURN CTL_CID[CTL AND 4095]==CTL>>12
@@ -228,12 +262,26 @@
  CTL_NEXT[NUCID]=CTL_FREE
  CTL_FREE=NUCID
  CTL_CID[NUCID]=0
+ CTL_FW1[NUCID]=0
+ CTL_FH1[NUCID]=0
+ CTL_FW2[NUCID]=0
+ CTL_FH2[NUCID]=0
+ CTL_DAT[NUCID]=0
  CTL_NAME$[NUCID]=""
  VAR I
  FOR I=0TO CTL_HANDLER_MAX-1
   CTL_HANDLER$[I]=""
  NEXT
 END
+COMMON DEF IsControlExtend(CTL,PARENT)
+ VAR N=CTL AND 4095
+ VAR P=PARENT AND 4095
+ WHILE N
+  IF N==P THEN RETURN 1
+  N=CTL_PARENTCTL[N]AND 4095
+ WEND
+ RETURN 0
+END
 COMMON DEF SetControlPainter(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
@@ -249,6 +297,15 @@
  CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
  RETURN 0
 END
+DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ VAR C=CTL AND 4095
+ CTL_FW1[C]=W1
+ CTL_FH1[C]=H1
+ CTL_FW2[C]=W2
+ CTL_FH2[C]=H2
+ RETURN 0
+END
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
@@ -269,6 +326,88 @@
 VAR WIN_TopLevelX
 VAR WIN_TopLevelY
 VAR OTW_TOPLEVELCNT
+COMMON DEF WindowBackFlag()
+ RETURN 1
+END
+COMMON DEF WindowFrontFlag()
+ RETURN 2
+END
+COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
+  IF!CheckControl(CTL)THEN
+  WND=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ IF!WIN_FREE THEN
+  WND=0
+  ERR=WIN_NOALLOC
+  RETURN
+ ENDIF
+ VAR NC=CTL AND 4095
+ ERR=0
+ INC WIN_WIDCNT
+ VAR NUWID,WID
+ VAR PNUWID=PARENT AND NUWIDMASK
+ NUWID=WIN_FREE
+ WIN_FREE=WIN_NEXT[WIN_FREE]
+ WID=WIN_WIDCNT
+ WND=WIDNUWIDToWND(WID,NUWID)
+ WIN_WID[NUWID]=WID
+ WIN_CTL[NUWID]=CTL
+ WIN_NAME$[NUWID]=NAME$
+ '
+ WIN_X[NUWID]=X
+ WIN_Y[NUWID]=Y
+ 
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AX[PNUWID]+Y '
+ WIN_FX[NUWID]=WIN_AX[NUWID]+CTL_FW1[NC]
+ WIN_FY[NUWID]=WIN_AX[NUWID]+CTL_FH1[NC]
+ WIN_WIDTH[NUWID]=WIDTH
+ WIN_HEIGHT[NUWID]=HEIGHT
+ WIN_FWIDTH[NUWID]=WIDTH+CTL_FW2[NC]
+ WIN_FHEIGHT[NUWID]=HEIGHT+CTL_FH2[NC]
+ WIN_AW[NUWID]=WIDTH
+ WIN_AH[NUWID]=HEIGHT
+ VAR E1=WIN_AX[NUWID]+WIDTH
+ VAR E2=WIN_AX[PNUWID]+WIN_AW[PNUWID]
+ IF E1>E2 THEN
+  DEC WIN_AW[NUWID],E1-E2
+ ENDIF
+ E1=WIN_AY[NUWID]+HEIGHT
+ E2=WIN_AY[PNUWID]+WIN_AH[PNUWID]
+ IF E1>E2 THEN
+  DEC WIN_AH[NUWID],E1-E2
+ ENDIF
+ WIN_NEXT[NUWID]=0
+ WIN_PARENT[NUWID]=PARENT AND NUWIDMASK
+ IF PNUWID THEN 
+  IF FLG AND WindowFrontFlag()THEN
+   IF WIN_CHILD[PNUWID]THEN
+    VAR N
+    WHILE 1
+     IF!WIN_NEXT[N]THEN
+      WIN_NEXT[N]=NUWID
+      WIN_PREV[NUWID]=N
+      BREAK
+     ENDIF
+     N=WIN_NEXT[N]
+    WEND
+   ELSE
+    WIN_CHILD[PNUWID]=N
+   ENDIF
+  ELSE
+   N=WIN_CHILD[PNUWID]
+   WIN_CHILD[PNUWID]=NUWID
+   IF N THEN
+    WIN_NEXT[NUWID]=N
+    WIN_PREV[N]=NUWID
+   ENDIF
+  ENDIF
+ ENDIF
+ VOID RepaintWindow(WND)
+ OTW_DrawMap NUWID
+END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -310,6 +449,8 @@
  IF!WIN_ROOTWND THEN
   GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
   GCLIP 1,0,0,400,240
+  WIN_AW[NUWID]=WIDTH
+  WIN_AH[NUWID]=HEIGHT
 ' SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
 ' SPSHOW SP
 ' SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],1023
@@ -357,6 +498,8 @@
 ' WIN_HEIGHT[NUWID]=HEIGHT
  
  WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+WIN_FHEIGHT1
+ WIN_AW[NUWID]=WIN_WIDTH[NUWID]
+ WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
  OTW_DrawMap NUWID
  GCLIP 1,0,0,400,240
 ' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
@@ -372,7 +515,7 @@
  SPCOL FRAME,0,0,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
  OTW_SPSORT
 END
-COMMON DEF OTW_SPSORT
+DEF OTW_SPSORT
  VAR I,Z=0
  IF OTW_TOPLEVELCNT-1THEN Z=(1022+255)/(OTW_TOPLEVELCNT-1)
  VAR NUWID=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
@@ -385,8 +528,8 @@
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
-COMMON DEF OTW_DrawMap NUWID
- GPAGE OTW_DP,OTW_DP
+DEF OTW_DrawMap NUWID
+ GPAGE OTW_SP,OTW_DP
  GCLIP 1,0,240,400,480
  GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
  GFILL WIN_FX[NUWID],WIN_FY[NUWID]+240,WIN_FX[NUWID]+WIN_FWIDTH[NUWID],WIN_FY[NUWID]+WIN_FHEIGHT[NUWID]+240,ShortToRGB(NUWID)
@@ -450,11 +593,13 @@
 ' 
 'WEND
  NXT=WIN_CHILD[WIN_PARENT[NUWID]]
- IF!NXT THEN RETURN
+ IF!NXT THEN RETURN'WIN_
  B=NXT
  IF WIN_PARENT[NUWID]==(WIN_ROOTWND AND NUWIDMASK) THEN
-  SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
-  SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
+  IF WIN_SP[NUWID]THEN
+   SPCHR WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+   SPOFS WIN_SP[NUWID] AND 1023,WIN_AX[NUWID],WIN_AY[NUWID]
+  ENDIF
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  WHILE NXT
@@ -462,6 +607,31 @@
   OTW_DrawMap NXT
   NXT=WIN_NEXT[NXT]
  WEND
+ 
+ NXT=WIN_CHILD[NUWID]:B=NXT
+ VAR PAX2=WIN_X[NUWID]+WIN_AW[NUWID]
+ VAR PAY2=WIN_Y[NUWID]+WIN_AH[NUWID]
+ WHILE B
+  VAR S=WIN_WIDTH[B]-WIN_AW[B]
+  
+  WIN_AX[B]=WIN_AX[B]+MX
+  WIN_AY[B]=WIN_AY[B]+MY
+  WIN_FX[B]=WIN_FX[B]+MX
+  WIN_FY[B]=WIN_FY[B]+MY
+  VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+  OTW_DrawMap B
+  IF!WIN_NEXT[B]THEN
+   WHILE B
+    B=WIN_PARENT[B]
+    IF B==NUWID THEN BREAK
+    IF WIN_NEXT[B]THEN B=WIN_NEXT[B]:BREAK
+   WEND
+   IF B==NUWID THEN BREAK
+  ENDIF
+  B=WIN_NEXT[B]
+  IF B==NUWID THEN BREAK
+ WEND
+
  RETURN 0
 END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
@@ -479,10 +649,10 @@
 COMMON DEF RepaintWindow(WND)
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
-COMMON DEF LMouseUpWindow(WND)
+DEF LMouseUpWindow(WND)
  RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX,OTW_MOUSEY)
 END
-COMMON DEF LMouseDownWindow(WND)
+DEF LMouseDownWindow(WND)
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX,OTW_MOUSEY)
 END
 DEF LMouseDownWindowOnFrame(WND)
@@ -517,6 +687,24 @@
  IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
  RETURN 0
 END
+
+DEF GetWindowFrameWidth(WND)
+ RETURN WIN_WIDTH[WND AND NUWIDMASK]
+END
+DEF GetWindowFrameHeight(WND)
+ RETURN WIN_FHEIGHT1
+END
+common def GetWindowName$(wnd)
+ return win_name$[wnd and nuwidmask]
+end
+COMMON DEF GetWindowWidth(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_FWIDTH[WND AND NUWIDMASK]
+END
+COMMON DEF GetWindowHeight(WND)
+ IF!CheckWindow(WND)THEN RETURN -1
+ RETURN WIN_FHEIGHT[WND AND NUWIDMASK]
+END
 VAR WIN_DRAGHANDLER$
 VAR WIN_DRAGHANDLER_A1
 VAR WIN_DRAGHANDLER_A2
@@ -546,33 +734,33 @@
  RETURN 0
 END
 ''WINDOW GRAPHIC
-COMMON DEF GBEGINWindow(WND)
+COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
  WIN_BEGIN[NUWID]=TRUE
  VAR AX=WIN_FX[NUWID]
  VAR AY=WIN_FY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
  GCLS
  RETURN 0
 END
-DEF ReGBEGINWindow(WND)
+DEF ReGBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  INC WIN_BEGIN[NUWID]
  VAR AX=WIN_FX[NUWID]
  VAR AY=WIN_FY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
  RETURN 0
 END
-DEF GBEGINFrameWindow(WND)
+DEF GBeginFrameWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
@@ -586,7 +774,7 @@
  GCLS
  RETURN 0
 END
-COMMON DEF GENDWindow(WND)
+COMMON DEF GEndWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF!WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
@@ -596,8 +784,8 @@
  WIN_BEGIN[NUWID]=FALSE
  VAR AX=WIN_AX[NUWID]
  VAR AY=WIN_AY[NUWID]
- VAR W=WIN_WIDTH[NUWID]
- VAR H=WIN_HEIGHT[NUWID]
+ VAR W=WIN_AW[NUWID]
+ VAR H=WIN_AH[NUWID]
  GCLIP 1,AX,AY,AX+W,AY+H
  VAR PNUWID
  IF WIN_CHILD[NUWID]THEN
@@ -654,7 +842,11 @@
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
+COMMON DEF GPRINTWindowCC WND,X,Y,STR$,PAL
+ GPRINTWindow WND,X,Y,STR$,OTW_CONSOLEPAL[PAL]
+END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
+ IF!(COL AND&HFF000000)THEN RETURN
  VAR AX=WIN_FX[WND AND NUWIDMASK]
  VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
@@ -664,11 +856,26 @@
   A=ASC(C$)
   IF A<=&H7F&&A>=&H20THEN
    A=A-&H20
-   BX=A*8
-   BY=BX/(512-8)+PP
-   GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
+'   BX=A*8
+'   BY=BX/(512-8)+PP
+'   GCOPY 5,BX,BY,BX+7,BY+7,X,Y,0
+   VAR F=OTW_FNT1[A,1],B=1'&H80000000
+'  ?BIN$(F)
+   FOR BY=Y+7 TO Y+4 STEP -1
+    FOR BX=X+7 TO X STEP -1
+     IF F AND B THEN GPSET BX,BY,COL
+     B=B<<1
+    NEXT
+   NEXT
+   F=OTW_FNT1[A,0]:B=1
+   FOR BY=Y+3 TO Y STEP -1
+    FOR BX=X+7 TO X STEP -1
+     IF F AND B THEN GPSET BX,BY,COL
+     B=B<<1
+    NEXT
+   NEXT
   ELSE
-   GFILL X,Y,X+7,Y+7,-1
+   GFILL X,Y,X+6,Y+6,-1
   ENDIF
   X=X+8
  NEXT
@@ -680,20 +887,11 @@
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
  E=GENDWindow(WND)
 END
-DEF GetWindowFrameWidth(WND)
- RETURN WIN_WIDTH[WND AND NUWIDMASK]
-END
-DEF GetWindowFrameHeight(WND)
- RETURN WIN_FHEIGHT1
-END
-common def GetWindowName$(wnd)
- return win_name$[wnd and nuwidmask]
-end
 DEF WindowPainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
- GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND),15
+ GPRINTWindowCC WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND),15
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
@@ -728,6 +926,12 @@
  SPHIDE OTW_MOVWINSP
  SPUNLINK OTW_MOVWINSP
 END
+DEF ButtonPainter W,C,T,A1,A2
+ VAR E=GBeginWindow(W)
+ IF E THEN RETURN
+ GFILLWindow W,0,0,GetWindowWidth(W),GetWindowHeight(W),RGB(128,128,128)
+ E=GEndWindow(W)
+END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
  GPSET 408,0,-1
@@ -759,8 +963,11 @@
 VAR OTW_LMOUSEUP
 VAR OTW_RMOUSEDWN
 VAR OTW_RMOUSEUP
+VAR OTW_CNT,OTW_FPS,OTW_FPSCNT
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  OTWRunning=TRUE
+  OTW_FPS=1
   'ACLS
   XSCREEN 2,512,2
   OTW_DP=4
@@ -802,7 +1009,7 @@
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
-  PrintConsole "Ver 5.0-11"+LF$()
+  PrintConsole "Ver 5.0-B"+LF$()
   BEEP 94,-1000
   OTW_INIT=TRUE
   OTW_WIN_INITARRAY
@@ -850,7 +1057,7 @@
   SPVAR OTW_MOVWINSP,0,1
   CLS
   LOCATE 0,29
-  NewProcess"WCLOCK","" OUT E,E,E
+ NewProcess"WCLOCK","" OUT E,E,E
  ENDIF
 RETURN
 END
@@ -861,7 +1068,7 @@
  GFILLWindow WND,0,0,64,64,RGB(224,224,224)'RGB(0,0,0)
  VAR S$="HELLOWORLD",I
  FOR I=0TO LEN(S$)-1
-  GPRINTWindow WND,6+I*8,1,S$[I],I
+  GPRINTWindowCC WND,6+I*8,1,S$[I],I
  NEXT
  E=GENDWindow(WND)
 END
@@ -910,19 +1117,37 @@
  VOID UpdateWindow(TSTWND2)
  VOID UpdateWindow(TSTWND)
  VOID UpdateWindow(TSTWND3)
+ VAR _CNT=MAINCNT-OTW_CNT
+ IF _CNT>60 THEN
+  OTW_FPS=OTW_FPSCNT
+  OTW_FPSCNT=0
+  ?OTW_FPS
+  OTW_CNT=MAINCNT
+ ELSE
+  INC OTW_FPSCNT
+ ENDIF
 ' ExitProcess 1
 RETURN
 END
 VAR WCLOCKWND
+VAR WCLOCKBC
 VAR WCLOCKTIM
 COMMON DEF I_WCLOCK
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require OTW"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
  VAR E
   NewTopLevelWindow GetWindowControl(),"CLOCK",64,64 OUT WCLOCKWND,E
  WCLOCKTIM=MAINCNT/60
  WCLOCKTIM=WCLOCKTIM*60
+ 'NewWindow GetButtonControl()
+ NewWindow TSTCTL,"TEST",8,8,64,64,WCLOCKWND,0 OUT WCLOCKBC,E
 END
 COMMON DEF L_WCLOCK
  VAR E
+ E=UpdateWindow(WCLOCKBC)
  E=PeekWindowEvent(WCLOCKWND)
  IF E==RepaintControlEvent()THEN
   WCLOCK_RP
@@ -943,7 +1168,8 @@
   E=GBeginWindow(WCLOCKWND)
   IF E THEN RETURN
   GFILLWindow WCLOCKWND,0,0,64,64,RGB(255,160,16)
-  GPRINTWindow WCLOCKWND,0,0,TIME$,1
+  GPRINTWindowCC WCLOCKWND,0,0,TIME$,1
+  GPRINTWindowCC WCLOCKWND,0,8,TIME$,1
   E=GEndWindow(WCLOCKWND)
  END
 DEF DUMP_WND
@@ -1017,8 +1243,8 @@
   VAR X#,Y#
   STICK OUT X#,Y#
   IF X#!=0 OR Y#!=0 THEN
-   OTW_MOUSEX#=OTW_MOUSEX#+X#/2
-   OTW_MOUSEY#=OTW_MOUSEY#-Y#/2
+   OTW_MOUSEX#=OTW_MOUSEX#+X#*0.2'/2
+   OTW_MOUSEY#=OTW_MOUSEY#-Y#*0.2'/2
    IF OTW_MOUSEX#<0THEN OTW_MOUSEX#=0
    IF OTW_MOUSEY#<0THEN OTW_MOUSEY#=0
    IF OTW_MOUSEX#>=400THEN OTW_MOUSEX#=399
@@ -1039,25 +1265,34 @@
  VAR T$=" !"+CHR$(34)+"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghiijklmnopqrstuvwxyz{|}~¢£¦§¨¨©®±´¶ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĊċČčĎďĒēĔĕĖėĘęĞğĠġĢģĦħĪīĮįİıĲĳĶķĹĺĻļĽľŁłŃńŅņŇňŐőŒœŔŕŘřŚśŞşŠšŤťŪūŮůŰűŲųŸŹźŻżŽžƒǅǆǲǳȚț˚;΄΅ΆΈΉΊΌΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώЁАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюяё“”†‡…‰※€⇒⇔∀∂∞∴∵⊂⊃⌒☆♀♂♡♧♭、。〃々〆「」『』〒〜〝〟ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろわをんゝゞァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロワヲンヴ・ー仝｀｜"
  'LOAD FONT-1
  VAR C$
- OTW_FNT1=NewArray3(&H7F-&H20,8,8)
- GPAGE 0,5
+ OTW_FNT1=NewArray2(&H7F-&H20,2)
+'GPAGE 0,5
  VAR X,Y,I,J
 'RETURN
  RESTORE @FONT
- VAR C,_$
+ VAR C,_$,K
  DIM PAL[16]
+ OTW_CONSOLEPAL=PAL
  FOR I=0TO 15
   READ PAL[I]
  NEXT
  WHILE 1
   READ C$
   IF C$=="END"THEN BREAK
-IF LEN(C$)-1 THEN CONTINUE
-?C$;
+  IF LEN(C$)-1 THEN CONTINUE
+  ?C$;
   I=ASC(C$)-&H20
-  X=I*8
-  IF I>=512-8THEN X=I MOD 64Y=1
+  'X=I*8
+  'IF I>=512-8THEN X=I MOD 64Y=1
 ' GFILL X,Y,X+8,Y+8,0
+  FOR K=0TO 1
+   FOR J=0TO 3
+    READ C
+    OTW_FNT1[I,K]=(OTW_FNT1[I,K]<<8)+C
+   NEXT
+  NEXT
+ WEND
+RETURN
   FOR J=0TO 7
    READ C$
    FOR I=0TO LEN(C$)-1
@@ -1070,7 +1305,7 @@
     NEXT
    NEXT
   NEXT
- WEND
+'WEND
  GPAGE 0,0
 @FONT
 RETURN
@@ -1093,339 +1328,339 @@
 DATA &HFF7F7F7F
 DATA &HFFFFFFFF
 DATA "0"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F00FF00"
-DATA "0F0F0F00"
-DATA "0FF00F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000'"00FFF000"
+DATA &B01000100
+DATA &B01001100
+DATA &B01010100
+DATA &B01100100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "1"
-DATA "000F0000"
-DATA "0FFF0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B00010000
+DATA &B01110000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B01111100
+DATA &B00000000
 DATA "2"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "00000F00"
-DATA "0000F000"
-DATA "000F0000"
-DATA "00F00000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B00000100
+DATA &B00001000
+DATA &B00010000
+DATA &B00100000
+DATA &B01111100
+DATA &B00000000
 DATA "3"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "00000F00"
-DATA "000FF000"
-DATA "00000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B00000100
+DATA &B00011000
+DATA &B00000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "4"
-DATA "0000F000"
-DATA "000FF000"
-DATA "00F0F000"
-DATA "0F00F000"
-DATA "0F00F000"
-DATA "0FFFFF00"
-DATA "0000F000"
-DATA "00000000"
+DATA &B00001000
+DATA &B00011000
+DATA &B00101000
+DATA &B01001000
+DATA &B01001000
+DATA &B01111100
+DATA &B00001000
+DATA &B00000000
 DATA "5"
-DATA "0FFFFF00"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "00000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000000
+DATA &B01111000
+DATA &B01000100
+DATA &B00000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "6"
-DATA "000FF000"
-DATA "00F00000"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00011000
+DATA &B00100000
+DATA &B01000000
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "7"
-DATA "0FFFFF00"
-DATA "0F000F00"
-DATA "0000F000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000100
+DATA &B00001000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "8"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "9"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFFF00"
-DATA "00000F00"
-DATA "00000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B00111100
+DATA &B00000100
+DATA &B00000100
+DATA &B00111000
+DATA &B00000000
 DATA ":"
-DATA "00000000"
-DATA "00000000"
-DATA "000F0000"
-DATA "00000000"
-DATA "00000000"
-DATA "000F0000"
-DATA "00000000"
-DATA "00000000"
+DATA &B00000000
+DATA &B00000000
+DATA &B00010000
+DATA &B00000000
+DATA &B00000000
+DATA &B00010000
+DATA &B00000000
+DATA &B00000000
 
 DATA "A"
-DATA "000F0000"
-DATA "00F0F000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFFF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B00010000
+DATA &B00101000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "B"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "00000000"
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B00000000
 DATA "C"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "D"
-DATA "0FFF0000"
-DATA "0F00F000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F00F000"
-DATA "0FFF0000"
-DATA "00000000"
+DATA &B01110000
+DATA &B01001000
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01001000
+DATA &B01110000
+DATA &B00000000
 DATA "E"
-DATA "0FFFFF00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000000
+DATA &B01000000
+DATA &B01111000
+DATA &B01000000
+DATA &B01000000
+DATA &B01111100
+DATA &B00000000
 DATA "F"
-DATA "0FFFFF00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFF000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "00000000"
+DATA &B01111100
+DATA &B01000000
+DATA &B01000000
+DATA &B01111000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B00000000
 DATA "G"
-DATA "00FFFF00"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F0FFF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFFF00"
-DATA "00000000"
+DATA &B00111100
+DATA &B01000000
+DATA &B01000000
+DATA &B01011100
+DATA &B01000100
+DATA &B01000100
+DATA &B00111100
+DATA &B00000000
 DATA "H"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFFF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01111100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "I"
-DATA "00FFF000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00111000
+DATA &B00000000
 DATA "J"
-DATA "000FFF00"
-DATA "0000F000"
-DATA "0000F000"
-DATA "0000F000"
-DATA "0000F000"
-DATA "0F00F000"
-DATA "00FF0000"
-DATA "00000000"
+DATA &B00011100
+DATA &B00001000
+DATA &B00001000
+DATA &B00001000
+DATA &B00001000
+DATA &B01001000
+DATA &B00110000
+DATA &B00000000
 DATA "K"
-DATA "0F000F00"
-DATA "0F00F000"
-DATA "0F0F0000"
-DATA "0FF00000"
-DATA "0F0F0000"
-DATA "0F00F000"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01001000
+DATA &B01010000
+DATA &B01100000
+DATA &B01010000
+DATA &B01001000
+DATA &B01000100
+DATA &B00000000
 DATA "L"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B01111100
+DATA &B00000000
 DATA "M"
-DATA "0F000F00"
-DATA "0FF0FF00"
-DATA "0F0F0F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01101100
+DATA &B01010100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "N"
-DATA "0F000F00"
-DATA "0FF00F00"
-DATA "0F0F0F00"
-DATA "0F00FF00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01100100
+DATA &B01010100
+DATA &B01001100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "O"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "P"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "0F000000"
-DATA "00000000"
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B01000000
+DATA &B01000000
+DATA &B01000000
+DATA &B00000000
 DATA "Q"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F0F0F00"
-DATA "0F00F000"
-DATA "00FF0F00"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01010100
+DATA &B01001000
+DATA &B00110100
+DATA &B00000000
 DATA "R"
-DATA "0FFFF000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0FFFF000"
-DATA "0F0F0000"
-DATA "0F00F000"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01111000
+DATA &B01000100
+DATA &B01000100
+DATA &B01111000
+DATA &B01010000
+DATA &B01001000
+DATA &B01000100
+DATA &B00000000
 DATA "S"
-DATA "00FFF000"
-DATA "0F000F00"
-DATA "0F000000"
-DATA "00FFF000"
-DATA "00000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B00111000
+DATA &B01000100
+DATA &B01000000
+DATA &B00111000
+DATA &B00000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "T"
-DATA "0FFFFF00"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01111100
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "U"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00FFF000"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00111000
+DATA &B00000000
 DATA "V"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00F0F000"
-DATA "00F0F000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B00101000
+DATA &B00101000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "W"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "0F0F0F00"
-DATA "0FF0FF00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01000100
+DATA &B01010100
+DATA &B01101100
+DATA &B01000100
+DATA &B00000000
 DATA "X"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00F0F000"
-DATA "000F0000"
-DATA "00F0F000"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B00101000
+DATA &B00010000
+DATA &B00101000
+DATA &B01000100
+DATA &B01000100
+DATA &B00000000
 DATA "Y"
-DATA "0F000F00"
-DATA "0F000F00"
-DATA "00F0F000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "000F0000"
-DATA "00000000"
+DATA &B01000100
+DATA &B01000100
+DATA &B00101000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00010000
+DATA &B00000000
 DATA "Z"
-DATA "0FFFFF00"
-DATA "00000F00"
-DATA "0000F000"
-DATA "000F0000"
-DATA "00F00000"
-DATA "0F000000"
-DATA "0FFFFF00"
-DATA "00000000"
+DATA &B01111100
+DATA &B00000100
+DATA &B00001000
+DATA &B00010000
+DATA &B00100000
+DATA &B01000000
+DATA &B01111100
+DATA &B00000000
 DATA "END"
 DATA "a"
 DATA "00000000"
