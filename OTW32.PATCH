diff -u OTW.TXT OTW32
--- OTW.TXT
+++ OTW32
@@ -125,6 +125,8 @@
 VAR WIN_STYLE_NARROW
 VAR WIN_STYLE_TOPMST
 VAR WIN_STYLE_NEVERACTV
+VAR WIN_STYLE_MAX
+VAR WIN_STYLE_MIN
 VAR WIN_ACTIVENUWID
 'DOUBLE CLICK
 'まえ CLICK した WINDOW
@@ -165,6 +167,8 @@
  WIN_STYLE_NCLIP=256
  WIN_STYLE_TOPMST=512
  WIN_STYLE_NEVERACTV=1024
+ WIN_STYLE_MAX=2048
+ WIN_STYLE_MIN=4096
 'WIN_FWIDTH1=0
 'WIN_FHEIGHT1=10
 'WIN_FWIDTH2=0
@@ -495,6 +499,10 @@
 
 VAR CTL_HSCRBARCTL
 
+VAR WINCTL_CAPCY
+VAR WINCTL_MENUCY
+VAR WINCTL_NARROW_CAPCY
+
 DEF OTW_CTL_INITARRAY
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
@@ -564,6 +572,10 @@
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
  E=SetControlChFocusHandler(CTL_WINDOWCTL,"WindowChFocus")
  E=SetControlChildWindowHandler(CTL_WINDOWCTL,"WindowChildWindow")
+ WINCTL_CAPCY=10
+ WINCTL_MENUCY=10
+ WINCTL_NARROW_CAPCY=5
+
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_BUTTONCTL,"ToggleButtonLMouseDown")
@@ -2477,6 +2489,12 @@
 COMMON DEF WindowNeverActiveStyle()
  RETURN WIN_STYLE_NEVERACTV
 END
+COMMON DEF WindowMaximizedStyle()
+ RETURN WIN_STYLE_MAX
+END
+COMMON DEF WindowMinimizedStyle()
+ RETURN WIN_STYLE_MIN
+END
 COMMON DEF NewStyleWindowArg CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG,STYLE,A1,A2 OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -4446,24 +4464,36 @@
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
  E=GENDWindow(WND)
 END
-DEF WindowQueryFrame WND,CTL,TYPE,STYLE,ZERO OUT W1,H1,W2,H2
- W1=1
- H1=12
- W2=1
- H2=1
- IF STYLE AND 1THEN
-  INC H1,10
- ENDIF
+DEF CalcWindowBorderSize WND,STYLE OUT W1,H1,W2,H2
+ 'HAS EDGE
  IF STYLE AND 2THEN
-  INC H1,1
-  INC W1,1
-  INC H2,1
-  INC W2,1
+  H1=3
+  W1=3
+  H2=3
+  W2=3
+ ELSE
+  H1=1
+  W1=1
+  H2=1
+  W2=1
  ENDIF
+END
+DEF CalcWindowCaptionHeight WND,STYLE OUT H
  IF STYLE AND WIN_STYLE_NARROW THEN
-  DEC H1,6
+  H=WINCTL_NARROW_CAPCY
+ ELSE
+  H=WINCTL_CAPCY
  ENDIF
 END
+DEF WindowQueryFrame WND,CTL,TYPE,STYLE,ZERO OUT W1,H1,W2,H2
+ CalcWindowBorderSize WND,STYLE OUT W1,H1,W2,H2
+ VAR CH
+ CalcWindowCaptionHeight WND,STYLE OUT CH
+ INC H1,CH
+ IF STYLE AND 1THEN
+  INC H1,WINCTL_MENUCY
+ ENDIF
+END
 DEF WindowPainter WND,CTL,TYPE,A1,A2
  WindowFramePainter WND,CTL,TYPE,A1,A2
  VAR E=ReGBeginWindow(WND)
@@ -4471,6 +4501,112 @@
   GCLSWindow WND,WIN_BACKGND[WND AND NUWIDMASK]
  ENDIF
 END
+'WINDOW EDGE
+'GGGGGGGGGGGGB
+'GWWWWWWWWWWgB
+'GWGGGGGGGGGgB
+'GWG       GgB
+'GWG       GgB
+'GWG       GgB
+'GWG       GgB
+'GWG       GgB
+'GWGGGGGGGGGgB
+'GgggggggggggB
+'BBBBBBBBBBBBB
+DEF WindowFramePainterDrawFrame WND,X1,Y1,X2,Y2,EDGE
+ VAR G1=RGB(192,192,192)
+ VAR G2=RGB(136,136,136)
+ VAR W=RGB(255,255,255)
+ IF EDGE THEN
+  GBOXWindow WND,X1+2,Y1+2,X2-2,Y2-2,G1
+  GBOXWindow WND,X1+1,Y1+1,X2-1,Y2-1,G2
+  GLINEWindow WND,X1+1,Y1+1,X2-2,Y1+1,W
+  GLINEWindow WND,X1+1,Y1+1,X1+1,Y2-2,W
+  GBOXWindow WND,X1,Y1,X2,Y2,#BLACK
+  GLINEWindow WND,X1,Y1,X1,Y2-1,G1
+  GLINEWindow WND,X1,Y1,X2-1,Y1,G1
+ ELSE
+  GBOXWindow WND,X1,Y1,X2,Y2,#BLACK
+ ENDIF
+END
+DEF NEW_WINDOW_FRAME_PAINTER WND
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ VAR STYLE=GetWindowStyle(WND)
+
+ VAR FW1,FH1,FW2,FH2
+ GetWindowFrameSize WND OUT FW1,FH1,FW2,FH2,
+ VAR HASBORDER=!HasProp(WND,"WINOLDSTATE")
+ IF HASBORDER THEN
+  VAR BW1,BH1,BW2,BH2
+  CalcWindowBorderSize WND,STYLE OUT BW1,BH1,BW2,BH2
+  VAR EDGE=BW1>1
+  WindowFramePainterDrawFrame WND,-FW1,-FH1,W+FW2,H+FH2,EDGE
+ ELSE
+ ENDIF
+
+ VAR CH
+ VAR NRRW=STYLE AND WindowNarrowStyle()
+ CalcWindowCaptionHeight WND,STYLE OUT CH
+ VAR CAPTX1=-FW1+BW1
+ VAR CAPTY1=-FH1+BH1
+ VAR CAPTX2=W+FW2-BW2
+ VAR CAPTY2=-FH1+BH1+CH-1
+ VAR G1=RGB(192,192,192)
+ GFILLWindow WND,CAPTX1,CAPTY1,CAPTX2,CAPTY2,RGB(0,0,136)
+ IF EDGE THEN
+  GLINEWindow WND,CAPTX1,CAPTY2,CAPTX2,CAPTY2,G1
+ ELSE
+  GLINEWindow WND,CAPTX1,CAPTY2,CAPTX2,CAPTY2,#BLACK
+ ENDIF
+ VAR BW=9
+ VAR BH=8
+ '_[MARGIN12][MARGIN1]X[MARGIN0]
+ VAR MARGIN0=0
+ VAR MARGIN1=1
+ VAR MARGIN2=0
+ VAR BX1=CAPTX2-BW-MARGIN0
+ VAR BY1=CAPTY1'+1
+ VAR BX2=CAPTX2-MARGIN0
+ VAR BY2=BY1+BH
+ IF!NRRW THEN
+  GPRINTWindow WND,CAPTX1,CAPTY1+1,GetWindowName$(WND),#WHITE
+
+  'x button
+  GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
+  GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
+  GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
+  GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
+  '
+  GLINEWindow WND,BX1+1,BY1+1,BX2-3,BY2-2,#BLACK
+  GLINEWindow WND,BX1+2,BY1+1,BX2-2,BY2-2,#BLACK
+  '/
+  GLINEWindow WND,BX2-3,BY1+1,BX1+1,BY2-2,#BLACK
+  GLINEWindow WND,BX2-2,BY1+1,BX1+2,BY2-2,#BLACK
+
+  IF STYLE AND WindowMinMaxStyle()THEN
+   'max
+   BX1=BX1-BW-MARGIN1-1
+   BX2=BX2-BW-MARGIN1-1
+   GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
+   GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
+   GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
+   GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
+   GBOXWindow WND,BX1+1,BY1+1,BX2-2,BY2-2,#BLACK
+   GLINEWindow WND,BX1+1,BY1+2,BX2-2,BY1+2,#BLACK
+   'min
+   BX1=BX1-BW-MARGIN2-1
+   BX2=BX2-BW-MARGIN2-1
+   GFILLWindow WND,BX1+1,BY1+1,BX2-1,BY2-1,G1
+   GBOXWindow WND,BX1,BY1,BX2,BY2,#BLACK
+   GLINEWindow WND,BX1,BY1,BX1,BY2-1,#WHITE
+   GLINEWindow WND,BX1,BY1,BX2-1,BY1,#WHITE
+   GLINEWindow WND,BX1+2,BY2-2,BX2-2,BY2-2,#BLACK
+  ENDIF
+ ELSE
+ 
+ ENDIF
+END
 DEF WindowFramePainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
@@ -4559,6 +4695,7 @@
    I=MENU_INEXT[I]
   WEND
  ENDIF
+ NEW_WINDOW_FRAME_PAINTER WND
  E=ReGBeginWindow(WND)
 END
 COMMON DEF SetWindowMoveFrame(WND,X,Y,WIDTH,HEIGHT)
@@ -6454,7 +6591,7 @@
  BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
 END
 COMMON DEF GetWinVer$()
- RETURN "5.0 rev49"
+ RETURN "5.0 rev50"
 END
 COMMON DEF GetWinMemorySize()
  RETURN OTW_USEMEM
@@ -13521,9 +13658,37 @@
 VAR TSKBAR_WV_BTNST
 VAR TSKBAR_WV_PAGE
 VAR TSKBAR_WV_COUNT
+DEF TSKBAR_ARE
+ VAR RW=GetRootWindow()
+ VAR W=GetWindowWidth(RW)
+ VAR H=GetWindowHeight(RW)
+ VAR X
+ 'VOID GBeginWindow(RW)
+ 'FOR X=-W TO W STEP 2
+ ' GLINEWindow RW,X,0,X+W,W,#BLACK
+ 'NEXT
+ 'VOID GEndWindowEx(RW,FALSE)
+ VAR Y
+ FOR Y=0TO H STEP 2
+  VOID GBeginWindow(RW)
+  FOR X=0TO W STEP 2
+   GPSETWindow RW,X,Y,#BLACK
+  NEXT
+  VOID GEndWindowEx(RW,FALSE)
+ NEXT
+ FOR Y=1TO H STEP 2
+  VOID GBeginWindow(RW)
+  FOR X=1TO W STEP 2
+   GPSETWindow RW,X,Y,#BLACK
+  NEXT
+  VOID GEndWindowEx(RW,FALSE)
+ NEXT
+END
+
 COMMON DEF TSKBARNotificationHandler WND,C,T,CW,__
  IF CW==MenuNotifID()THEN
   IF __==TSKBAR_MENU_EXIT THEN
+   TSKBAR_ARE
    void ExitWin()
    RETURN
   ENDIF
@@ -13864,6 +14029,7 @@
   UPDATE_TSKBAR GetProcessVar()
 '  TSKBAR_CWND=OCW
   TSKBAR_TIMER=MAINCNT DIV 10
+  IF 0THEN
   VAR Y,M,D,H,MI
   DTREAD OUT Y,M,D
   TMREAD OUT H,MI,
@@ -13888,6 +14054,7 @@
    ____$=":0"
   ENDIF
   SetMenuItem GetWindowVar(GetProcessVar(),TSKBAR_WV_MENU),STR$(Y)+_$+STR$(M)+__$+STR$(D)+___$+STR$(H)+____$+STR$(MI),-1
+  ENDIF
 
  ENDIF
  VAR E=UpdateWindow(GetProcessVar())

