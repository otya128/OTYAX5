diff -u OTW.TXT OTW23
--- OTW.TXT
+++ OTW23
@@ -87,6 +87,7 @@
 VAR OTW_BP
 'GPAGE
 VAR OTW_GP
+VAR OTW_DDRAWPAGE
 'VAR WIN_FWIDTH1
 'VAR WIN_FHEIGHT1
 'VAR WIN_FWIDTH2
@@ -364,6 +365,7 @@
 VAR CTL_LDBLCLKHANDLER
 VAR CTL_MSLEAVEHANDLER
 VAR CTL_RESIZEHANDLER
+VAR CTL_FRMPAINTHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -387,7 +389,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=18
+ CTL_HANDLER_MAX=19
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -427,6 +429,7 @@
  CTL_LDBLCLKHANDLER=15
  CTL_MSLEAVEHANDLER=16
  CTL_RESIZEHANDLER=17
+ CTL_FRMPAINTHANDLER=18
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -437,6 +440,7 @@
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
+ E=SetControlFramePainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseDownHandler(CTL_WINDOWCTL,"WindowLMouseDown")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
  E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
@@ -516,6 +520,17 @@
   ARY[I]=I+1
  NEXT
 END
+VAR IM_MAX
+VAR IM_FREE
+DIM IM_NEXT[0]
+DIM IM_KEY_HANDLER$[0]
+DEF WIN_IM_INITARRAY
+ IM_MAX=5
+ IM_NEXT=NeeArray(IM_MAX)
+ IM_KEY_HANDLER$=NeeArray$(IM_MAX)
+ OTW_INITLIST IM_NEXT
+ IM_FREE=1
+END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
 VAR WIN_EVENTERR
@@ -633,6 +648,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlFramePainter(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_FRMPAINTHANDLER]=HANDLER$
+ RETURN 0
+END
 COMMON DEF SetControlLMouseUpHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_LBTNUPHANDLER]=HANDLER$
@@ -779,10 +799,18 @@
  CLPBRDFILCUT=ISCUT
  CLPBRDCFIL=TRUE
 END
+COMMON DEF LoadGRPImage FIL$ OUT IMG,E
+ NewImage 512,512 OUT IMG,E
+ VAR I=IMG AND 4095
+ LoadData FIL$,GetSBArray(IMAGE_PTR[I])
+END
+COMMON DEF NewArrayImage ARRAY OUT IMG,E
+ 
+END
 COMMON DEF NewImage WIDTH,HEIGHT OUT IMG,E
  IF !IMAGE_FREE THEN IMG=0:E=IMAGE_NOALLOC:RETURN
- VAR PTR=malloc(WIDTH*HEIGHT)
- IF!PTR THEN IMG=0:E=IMAGE_NOALLOC:RETURN
+ VAR PTR=AllocSBArray()
+ IF PTR==-1 THEN IMG=0:E=IMAGE_NOALLOC:RETURN
  INC IMAGE_IDCNT
  IMAGE_ID[IMAGE_FREE]=IMAGE_IDCNT
  IMAGE_HEIGHT[IMAGE_FREE]=WIDTH
@@ -790,6 +818,7 @@
  IMAGE_PTR[IMAGE_FREE]=PTR
  IMG=IMAGE_FREE OR IMAGE_IDCNT<<12
  IMAGE_FREE=IMAGE_NEXT[IMAGE_FREE]
+ SetSBArray PTR,NewArray(WIDTH,HEIGHT)
  E=0
  RETURN
 END
@@ -1685,13 +1714,53 @@
 DEF RepaintAllWindow WND,X,Y,W,H
  VAR NXT=WND AND NUWIDMASK
  VAR B=NXT
-' WHILE NXT
-'  VOID RepaintWindow(NXT OR(WIN_WID[NXT]<<WIDHIFT))
-'  OTW_DrawMap NXT
-'  IF WIN_CHILD[NXT]THEN
-'   B=WIN_CHILD[NXT]
+CLS
+ VAR CLIPMODE=1
+ IF!X&&!Y&&!W&&!H THEN CLIPMODE=0
+ VAR X2=X+W
+ VAR Y2=Y+H
+ 
    WHILE B
-    IF!WIN_HIDE[B]THEN VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+    IF B!=1&&!WIN_HIDE[B] THEN
+     IF!CLIPMODE THEN
+      VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+      GOTO @CONT
+     ENDIF
+     VAR FX=WIN_AX[B]+WIN_FW1[B]
+     VAR FY=WIN_AY[B]+WIN_FH1[B]
+     VAR FW=WIN_WIDTH[B]-WIN_FW2[B]
+     VAR FH=WIN_HEIGHT[B]-WIN_FH2[B]
+     VAR CX=MAX(X,FX)
+     VAR CY=MAX(Y,FY)
+     VAR CX2=MIN(X2,FX+FW)
+     VAR CY2=MIN(Y2,FY+FH)
+     VAR CW=CX2-CX
+     VAR CH=CY2-CY
+     CX=CX-FX
+     CY=CY-FY
+     IF CX>=0&&CX<=FW&&CY>=0&&CY<=FH&&CW>=0&&CH>=0THEN
+      VOID RepaintWindowWithARect(B OR(WIN_WID[B]<<WIDSHIFT),MAX(0,CX),MAX(0,CY),CW,CH)
+     ELSE
+      FX=WIN_AX[B]
+      FY=WIN_AY[B]
+      FW=WIN_WIDTH[B]
+      FH=WIN_HEIGHT[B]
+      CX=MAX(X,FX)
+      CY=MAX(Y,FY)
+      CX2=MIN(X2,FX+FW)
+      CY2=MIN(Y2,FY+FH)
+      CW=CX2-CX
+      CH=CY2-CY
+      CX=CX-FX
+      CY=CY-FY
+      
+      IF CX>=0&&CX<=FW&&CY>=0&&CY<=FH&&CW>=0&&CH>=0 THEN
+       VOID RepaintFrameWindow(B OR(WIN_WID[B]<<WIDSHIFT))
+       
+      ENDIF
+     ENDIF
+    ENDIF
+    @CONT
     OTW_DrawMap B
     IF WIN_CHILD[B]THEN
      B=WIN_CHILD[B]
@@ -1875,8 +1944,9 @@
 COMMON DEF MoveWindow(WND,X,Y)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ VAR OX=WIN_AX[NUWID],OY=WIN_AY[NUWID]
  VAR MX=X-WIN_X[NUWID],MY=Y-WIN_Y[NUWID]
- IF!MX&&!MY THEN RETURN 0
+' IF!MX&&!MY THEN RETURN 0
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
  WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
@@ -1907,8 +1977,8 @@
  ENDIF
  OTW_DrawMap WIN_PARENT[NUWID]
  '   B=WIN_CHILD[NXT]
- VAR MOVEF=0
- B=WIN_PARENT[NUWID]
+ VAR MOVEF=1
+ B=WIN_CHILD[NUWID]
    WHILE B
     IF MOVEF THEN
      WIN_AX[B]=WIN_AX[B]+MX
@@ -1922,27 +1992,22 @@
      OTW_CLIPWindow B
      MOVEF=1
     ENDIF
-    IF!WIN_HIDE[B]THEN
-     VOID RepaintWindow(B OR(WIN_WID[B]<<WIDSHIFT))
-     OTW_DrawMap B
-    ENDIF
-
     IF WIN_CHILD[B]THEN
-     IF B==NUWID THEN MOVEF=1
      B=WIN_CHILD[B]
      CONTINUE
     ENDIF
     IF!WIN_NEXT[B]THEN
      WHILE B
       B=WIN_PARENT[B]
-      IF B==NUWID THEN MOVEF=0
+      IF B==NUWID THEN B=0
       IF WIN_NEXT[B]THEN BREAK
      WEND
-     IF!B THEN RETURN 0
+     IF!B THEN BREAK
     ENDIF
     B=WIN_NEXT[B]
    WEND
- RETURN
+   RepaintAllWindow NUWIDToWND(WIN_PARENT[NUWID]),OX,OY,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+ RETURN 0
 END
 DEF ResizeWindowF(WND,W,H)
  VAR NUWID=WND AND NUWIDMASK
@@ -1954,11 +2019,13 @@
   H=WIN_MINH[NUWID]-1
  ENDIF
  VOID FireResizeWindow(WND,W-WIN_FW2[NUWID],H-WIN_FH2[NUWID])
+ VAR OW=WIN_WIDTH[NUWID]
+ VAR OH=WIN_HEIGHT[NUWID]
  WIN_WIDTH[NUWID]=W
  WIN_HEIGHT[NUWID]=H
  OTW_CLIPWindow NUWID
  OTW_CLIPCHILD NUWID
- RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+ RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],OW,OH
 'WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
  RETURN 0
 END
@@ -1994,10 +2061,18 @@
  IF WIN_MSGS[NUWID]>=WIN_MSGMAX THEN WIN_MSGS[NUWID]=0
  RETURN 0
 END
+DEF RepaintFrameWindow(WND)
+ IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
+ RETURN SendWindowEvent(WND,CTL_FRMPAINTHANDLER,0,0)
+END
 COMMON DEF RepaintWindow(WND)
  IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
+DEF RepaintWindowWithARect(WND,AX,AY,AX2,AY2)
+ IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
+ RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,AX OR AY<<16,AX2 OR AY2<<16)
+END
 COMMON DEF SendNotificationWindow(WND,DAT,DAT2)
  RETURN SendWindowEvent(WND,CTL_NOTIFHANDLER,DAT,DAT2)
 END
@@ -2127,7 +2202,7 @@
   DEC WIN_MSGCNT[NUWID,TYPE]
  ENDIF
  IF S2!=WIN_MSGS[NUWID]THEN BREAK
- BREAK
+'BREAK
  WEND
  RETURN 0
 END
@@ -2341,6 +2416,18 @@
  WING_SX=X+WIN_FX[NUWID]
  WING_SY=Y+WIN_FY[NUWID]
 END
+COMMON DEF GBeginDirect(WND)
+ GPAGE OTW_SP,OTW_DDRAWPAGE
+END
+COMMON DEF GEndDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
+ GPAGE OTW_SP,OTW_BP
+END
+COMMON DEF GCopyDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
+ GPAGE OTW_SP,OTW_BP
+ VAR E=GBeginWindow(WND)
+ IF E THEN RETURN E
+ GCOPY OTW_DDRAWPAGE,X1+WING_SX,Y1+WING_SY,X2+WING_SX,Y2+WING_SY,X3+WING_SX,Y3+WING_SY,MODE
+END
 COMMON DEF GBeginWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -2472,6 +2559,15 @@
  ENDIF
  SPHIDE SP
 END
+COMMON DEF __GPSETWindow__ WND,X,Y,COL
+ GPAGE OTW_SP,OTW_DP
+ VAR AX=WIN_FX[WND AND NUWIDMASK]+X
+ VAR AY=WIN_FY[WND AND NUWIDMASK]+Y
+ GCLIP 1
+ IF RGBToShort(GSPOIT(AX,AY+240))==(WND AND NUWIDMASK)THEN
+  GPSET AX,AY,COL
+ ENDIF
+END
 COMMON DEF GPSETWindow WND,X,Y,COL
  VAR AX=WING_SX'WIN_FX[WND AND NUWIDMASK]
  VAR AY=WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -2659,7 +2755,7 @@
  VAR C=WIN_BKGND
  DEC H,SH
  DEC W,SW
- GCLSWindow WND,WIN_BKGND
+ GCLSWindow WND,WIN_BACKGND[NUWID]
  GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
@@ -2931,6 +3027,7 @@
   DEC MY,WIN_AY[WIN_PARENT[NUWID]]+WIN_FH1[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
   VAR X=MX+A1X
   VAR Y=MY+A2Y
+  OTW_INITSP 5
   VAR E=MoveWindow(WND,X,Y)
   E=FrontWindow(WND)
   SPUNLINK OTW_MOVWINSP
@@ -3578,24 +3675,52 @@
  VAR _W=GetWindowWidth(W)
  VAR _H=GetWindowHeight(W)
  GBOXWindow W,0,0,_W,_H,RGB(0,0,0)
+ VAR ID=GetWindowVar(W,3)
  '====
  'BOX
- GLINEWindow W,0,0,0,7,-1
- GLINEWindow W,0,0,7,0,-1
  VAR C=RGB(0,0,0)
- '
- GLINEWindow W,4,2,2,4,C
- GFILLWindow W,3,3,5,6,C
- GPSETWindow W,6,4,C
- GLINEWindow W,0,8,8,8,C
+ IF ID==2THEN
+  VAR P=1
+  GLINEWindow W,4+P,2+P,2+P,4+P,C
+  GFILLWindow W,3+P,3+P,5+P,6+P,C
+  GPSETWindow W,6+P,4+P,C
+  GLINEWindow W,P,8+P,8+P,8+P,C
+  
+  GLINEWindow W,0,0,0,7,C
+  GLINEWindow W,0,0,7,0,C
+  GLINEWindow W,8,0,8,8,-1
+  GLINEWindow W,0,8,8,8,-1
+ ELSE
+  GLINEWindow W,0,0,0,7,-1
+  GLINEWindow W,0,0,7,0,-1
+  '
+  GLINEWindow W,4,2,2,4,C
+  GFILLWindow W,3,3,5,6,C
+  GPSETWindow W,6,4,C
+  GLINEWindow W,0,8,8,8,C
+ ENDIF
  '====
- 'BOX
- GLINEWindow W,0,_H-1,0,_H-8,-1
- GLINEWindow W,0,_H-8,7,_H-8,-1 
- '
- GLINEWindow W,2,_H-4,4,_H-2,C
- GFILLWindow W,3,_H-6,5,_H-3,C
- GPSETWindow W,6,_H-4,C
+ IF ID==3THEN
+  'BOX
+  GLINEWindow W,0,_H-1,0,_H-8,C
+  GLINEWindow W,0,_H-8,7,_H-8,C
+  
+  GLINEWindow W,0,_H,8,_H,-1
+  GLINEWindow W,8,_H-8,8,_H,-1
+  '
+  P=1
+  GLINEWindow W,2+P,_H-4+P,4+P,_H-2+P,C
+  GFILLWindow W,3+P,_H-6+P,5+P,_H-3+P,C
+  GPSETWindow W,6+P,_H-4+P,C
+ ELSE
+  'BOX
+  GLINEWindow W,0,_H-1,0,_H-8,-1
+  GLINEWindow W,0,_H-8,7,_H-8,-1
+  '
+  GLINEWindow W,2,_H-4,4,_H-2,C
+  GFILLWindow W,3,_H-6,5,_H-3,C
+  GPSETWindow W,6,_H-4,C
+ ENDIF
  
  '==BAR==
  VAR AH=_H-18
@@ -3620,6 +3745,7 @@
 DEF VSCRBARLMouseUP W,C,T,X,Y
  SetWindowVar W,3,8
  VOID ReleaseCapture(W)
+ VSCRBARPainter W,C,0,0,0
 END
 DEF VSCRBARLMouseDown W,C,T,X,Y
  VAR ID=GetWindowVar(W,3)
@@ -3669,8 +3795,11 @@
 VAR OTW_MOUSESIZE
 VAR OTW_MOUSE_HOMEX
 VAR OTW_MOUSE_HOMEY
+VAR OTW_MOUSE
 'ざんてい じっそう
 DEF OTW_INITSP NUM
+ IF OTW_MOUSE==NUM THEN RETURN
+ OTW_MOUSE=NUM
  GCLIP 1
  GPSET 408,0,-1
  SPDEF 0,408,0,1,1,1
@@ -3678,7 +3807,7 @@
  VAR BACK=RGB(255,255,255)
  GCOLOR FORE
  VAR SC#=1,B=416
- IF !NUM THEN
+ IF 0&&!NUM THEN
   OTW_MOUSE_HOMEX=0
   OTW_MOUSE_HOMEY=0
   GFILL B,0,B+10*SC#,18*SC#,0
@@ -3715,9 +3844,10 @@
     X2=I
     IF RVSF THEN X2=L-I
     VAR C=ASC(D$[I])-48
+    IF C<0THEN IF W<X2+1 THEN W=X2+1
     IF C<0THEN C=0
     IF C>9THEN DEC C,7'HEX
-    IF C>9THEN IF W<X2+1 THEN W=X2+1
+'    IF C>9THEN IF W<X2+1 THEN W=X2+1
     IF SWPF THEN
      GPSET B+Y,X+X2,OTW_CONSOLEPAL[C]
     ELSE
@@ -3743,11 +3873,30 @@
  SPCOL 0,0,0,1,1
  SPCHR OTW_SHADOWSP,290
  SPLINK OTW_SHADOWSP,OTW_MOUSESP
- SPOFS OTW_SHADOWSP,-2,2,-00
+ SPOFS OTW_SHADOWSP,-2,2,1
  SPCOLOR OTW_SHADOWSP,RGB(128,0,0,0)
  SPVAR OTW_SHADOWSP,0,1
  SPHOME OTW_SHADOWSP,OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
  'NORMAL CURSOR
+ @0
+ DATA "1         
+ DATA 0,0
+ DATA "11        
+ DATA "1F1       
+ DATA "1FF1      
+ DATA "1FFF1     
+ DATA "1FFFF1    
+ DATA "1FFFFF1   
+ DATA "1FFFFFF1  
+ DATA "1FFFFFFF1 
+ DATA "1FFFFF1111
+ DATA "1FF1FF1   
+ DATA "1F1 1FF1  
+ DATA "11  1FF1  
+ DATA "1    1FF1 
+ DATA "     1FF1 
+ DATA "      11  
+ DATA ""
  @1
  DATA "    F    
  DATA 4,10
@@ -3775,25 +3924,48 @@
  @2
  DATA "S",1
  @3
- DATA "FFFFFFF         
+ DATA "FFFFFFF        
  DATA 7,7
- DATA "F11111F         
- DATA "F1111F          
- DATA "F111F           
- DATA "F11F1F          
- DATA "F1F F1F         
- DATA "FF   F1F        
- DATA "      F1F       
- DATA "       F1F   FF 
- DATA "        F1F F1F 
- DATA "         F1F11F 
- DATA "          F111F 
- DATA "         F1111F 
- DATA "        F11111F 
- DATA "        FFFFFFF 
+ DATA "F11111F        
+ DATA "F1111F         
+ DATA "F111F          
+ DATA "F11F1F         
+ DATA "F1F F1F        
+ DATA "FF   F1F       
+ DATA "      F1F      
+ DATA "       F1F   FF
+ DATA "        F1F F1F
+ DATA "         F1F11F
+ DATA "          F111F
+ DATA "         F1111F
+ DATA "        F11111F
+ DATA "        FFFFFFF
  DATA "
  @4
  DATA "R",3'REVERSE 3
+ @5
+ DATA "11111111111   
+ DATA 0,0
+ DATA "11FFFFFFF11   
+ DATA "11111111111   
+ DATA "1FFFFFFFFF1   
+ DATA "1FFFFFFFFF1   
+ DATA "1FFFFFFFFF1   
+ DATA "1FFFF1FFFF1   
+ DATA "11FF1F1FF11   
+ DATA " 11FF1FF11    
+ DATA "  11FFF11     
+ DATA "   11F11      
+ DATA "  11FFF11     
+ DATA " 11FFFFF11    
+ DATA "11FFF1FFF11   
+ DATA "1FFF1F1FFF1   
+ DATA "1FF1F1F1FF1   
+ DATA "1F1F1F1F1F1   
+ DATA "11111111111   
+ DATA "11FFFFFFF11   
+ DATA "11111111111   
+ DATA ""
 END
 VAR WIN_ROOTCTL
 VAR TSTWND,TSTCTL
@@ -3819,6 +3991,7 @@
 END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
+  KEY 1,"KEY OFF"
   OTW_ENABLE_SHADOW=1
   WIN_BKGND=RGB(208,208,208)
   WIN_BTNBACK=RGB(192,192,192)
@@ -3857,6 +4030,7 @@
   OTW_SP=0
   OTW_BP=1
   OTW_GP=2
+  OTW_DDRAWPAGE=2
   PrintConsoleln "Init screen..."
   MouseClipDef
   GPAGE OTW_SP,OTW_SP
@@ -3925,7 +4099,7 @@
   OTW_INIT=TRUE
   VAR E
   NewControl "DESKTOP" OUT WIN_ROOTCTL,E
-  E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
+' E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
   NewTopLevelWindow WIN_ROOTCTL,"DESKTOP",400,240 OUT WIN_ROOTWND,E
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
 ' NewTopLevelWindow TSTCTL,"HELLO",164,164 OUT TSTWND,E
@@ -3950,6 +4124,7 @@
   SPSET OTW_MOUSESP,0
   OTW_SHADOWSP=1
   SPSET OTW_SHADOWSP,0
+  OTW_MOUSE=-1
   OTW_INITSP 0
   OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
@@ -3990,7 +4165,25 @@
 VAR OTW_OLDBTNF
 VAR OLDMOVEMOUSEWINDOW
 VAR OTW_SMOOTH_MOVE_WINDOW
+VAR OTW_ENKEY_STATE
+VAR OTW_ENABLEKEY
 COMMON DEF L_OTW
+ VAR X,Y,MMM
+ TOUCH OUT MMM,X,Y
+ IF MMM&&!OTW_ENKEY_STATE&&X>=5&&X<=63&&Y>=5&&Y<=16THEN
+  OTW_ENKEY_STATE=1
+  OTW_ENABLEKEY=!OTW_ENABLEKEY
+  IF OTW_ENABLEKEY THEN
+   KEY 1,"KEY ON"
+  ELSE
+   KEY 1,"KEY OFF"
+  ENDIF
+  BEEP 9
+ ENDIF
+ IF!MMM THEN OTW_ENKEY_STATE=0
+ IF OTW_MOUSE==5THEN
+  OTW_INITSP 0
+ ENDIF
  VAR MOVEMOUSE
  UpdateMouse
  IF OTW_MOUSEX!=OTW_OLDMOUSEX THEN MOVEMOUSE=1
@@ -4147,7 +4340,7 @@
  OTW_OLDMOUSEX=OTW_MOUSEX
  OTW_OLDMOUSEY=OTW_MOUSEY
  VAR K$=INKEY$()
- IF LEN(K$)THEN
+ IF OTW_ENABLEKEY&&LEN(K$)THEN
   E=SendKeyWindow(NUWIDToWND(WIN_ACTIVENUWID),ASC(K$))
  ENDIF
  VOID UpdateWindowOnly(WIN_ROOTWND)
@@ -4744,6 +4937,7 @@
   E=SetControlRMouseDownHandler(TXTBOXEXCTL,"TextBoxExRMD")
   E=SetControlResizeHandler(TXTBOXEXCTL,"TextBoxResize")
   E=SetControlMouseMoveHandler(TXTBOXEXCTL,"TextBoxExMMOVE")
+  E=SetControlDeleteHandler(TXTBOXEXCTL,"TextBoxExDelete")
   TXTBOXEX_LINESIZ=10000'1024
   TXTBOXEX_VAL$=NewArray$(TXTBOXEX_LINESIZ)
   TXTBOXEX_LINE=NewArray(TXTBOXEX_LINESIZ)
@@ -4816,6 +5010,7 @@
  IF P THEN
   TXTBOXEX_NEXT[P]=N
  ENDIF
+ TXTBOXEX_VAL$[L]=""
  TXTBOXEX_NEXT[L]=TXTBOXEX_FREE
  TXTBOXEX_FREE=L
  IF P THEN RETURN P
@@ -4963,6 +5158,13 @@
  TXTBOXEX_CSELLINE2[C]=0
  TXTBOXEX_CSELPOS2[C]=0
 END
+COMMON DEF TextBoxExDelete WND,CTL,T,_,__
+ VAR BOX=GetWindowVar(WND,7)
+ VAR F=TXTBOXEX_CFIRST[BOX]
+ WHILE F
+  F=TXTED_DeleteLine(F)
+ WEND
+END
 DEF GetTextBoxExMode(CTL)
  RETURN TXTBOXEX_CMODE[CTL]
 END
@@ -6797,6 +6999,8 @@
 VAR OTYFIL_MREN
 VAR OTYFIL_MABOUT
 VAR OTYFIL_MPASTE
+VAR OTYFIL_MFIL
+VAR OTYFIL_MUPD
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
 DIM OTYFILICON[0]
@@ -6856,7 +7060,7 @@
  VAR KL=LEN(ARY$)
  VAR SELECT=GetWindowVar(WND,4)
  F$=""
- IF SELECT<0||KL<SELECT THEN RETURN
+ IF SELECT<0||KL<=SELECT THEN RETURN
  F$=GetString$(ASC(ARY$[SELECT])OR ASC(ARY$[SELECT+1])<<16)
 END
 DEF OTYFIL_OPEN WND
@@ -6887,6 +7091,14 @@
  ClearClipboard
  ClipboardSetFile TRUE,F$
 END
+DEF OTYFIL_FIL WND
+ 
+END
+DEF OTYFIL_UPD WND
+ VAR PTR=GetWindowVar(WND,3)
+ StrArrayGetFiles PTR,""
+ void(repaintWindow(WND))
+END
 '
 'From[HOGEHOGE.TXT]
 'To  [FUGAFUGA.TXT]
@@ -6894,29 +7106,29 @@
 COMMON DEF OTYFILRENCREATE WND,CTL,T,A1,A2
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
- VAR FROM=LEN("FROM")*8+8
- VAR E,W2,FROMW,TOW
- VAR FROM$=GetWindowName$(WND)
- NewWindow GetLabelControl(),"From",1,1,32,7,WND,0 OUT W2,E
- NewWindow GetLabelControl(),"To",1,11,16,7,WND,0 OUT W2,E
- NewWindow GetTextBoxControl(),FROM$,FROM,0,W-FROM,9,WND,0 OUT FROMW,E
- NewWindow GetTextBoxControl(),"",FROM,11,W-FROM,9,WND,0 OUT TOW,E
+ VAR OLD=LEN("Old")*8+8
+ VAR E,W2,OLDW,NEWW
+ VAR OLD$=GetWindowName$(WND)
+ NewWindow GetLabelControl(),"Old",1,1,OLD-2,7,WND,0 OUT W2,E
+ NewWindow GetLabelControl(),"New",1,11,OLD-2,7,WND,0 OUT W2,E
+ NewWindow GetTextBoxControl(),OLD$,OLD,0,W-OLD,8,WND,0 OUT OLDW,E
+ NewWindow GetTextBoxControl(),"",OLD,11,W-OLD,8,WND,0 OUT NEWW,E
  VAR BW=24
  NewWindow GetButtonControl(),"OK",(W-BW) DIV 2,22,BW,10,WND,0 OUT W2,E
  SetWindowName WND,"Rename"
- SetWindowVar WND,0,FROMW
- SetWindowVar WND,1,TOW
- IF FROM$[0]==" "THEN
+ SetWindowVar WND,0,OLDW
+ SetWindowVar WND,1,NEWW
+ IF OLD$[0]==" "THEN
   SetWindowVar WND,2,1
  ENDIF
 END
 COMMON DEF OTYFILRENNOTIF WND,CTL,T,A1,A2
- VAR FROMW,TOW
- GetWindowVar WND,0OUT FROMW
- GetWindowVar WND,1OUT TOW
- VAR FROM$=GetWindowName$(FROMW)
- VAR TO$=GetWindowName$(TOW)
- RenameFile FROM$,TO$
+ VAR OLDW,NEWW
+ GetWindowVar WND,0OUT OLDW
+ GetWindowVar WND,1OUT NEWW
+ VAR OLD$=GetWindowName$(OLDW)
+ VAR NEW$=GetWindowName$(NEWW)
+ RenameFile OLD$,NEW$
  VOID DeleteWindow(WND)
 END
 DEF OTYFIL_DEL WND
@@ -6975,6 +7187,7 @@
  VAR W=GetWindowWidth(WND)
  VAR OL=W DIV 42
  VAR LEN=LEN(GetString$(GetWindowVar(WND,3)))
+ IF OL==0THEN OL=1
  VAR AW=(LEN DIV OL)*10
  RETURN AW
 END
@@ -7029,7 +7242,7 @@
    GPRINTWindow WND,X,Y-BY2,MID$(F$,1,5),C
   ENDIF
   X=X+W
-  IF X+W>=WIDTH THEN
+  IF X+W>WIDTH THEN
    X=0
    IF Y>=HEIGHT THEN BREAK
    Y=Y+H
@@ -7041,6 +7254,48 @@
  WEND
  IF GENDWindow(WND)THEN RETURN
 END
+DEF OTYFILSCR WND,SEL
+ VAR S=GetChildWindow(WND)
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ VAR R=WIDTH DIV 42
+ SetScrollBarPosition S,((SEL DIV 2)DIV R)*20
+END
+COMMON DEF OTYFILKEY WND,CTL,T,KEY,A2
+ VAR IND=0
+ VAR K$=CHR$(KEY)
+ VAR ARY$=GetString$(GetWindowVar(WND,3))
+ VAR KL=LEN(ARY$)
+ VAR K=GetWindowVar(WND,4),SEL=-1,ISSEL=TRUE
+ IF K==-1THEN
+  K=0
+  ISSEL=FALSE
+ ELSE
+  K=K+2
+ ENDIF
+ WHILE TRUE
+  IF K>=KL THEN
+   IF ISSEL THEN
+    ISSEL=0
+    KL=GetWindowVar(WND,4)
+    K=0
+   ELSE
+    BREAK
+   ENDIF
+  ENDIF
+  VAR F$=GetString$(ASC(ARY$[K])OR ASC(ARY$[K+1])<<16)
+  IF LEN(F$)>IND+1&&F$[IND+1]==K$ THEN
+   SEL=K
+   BREAK
+  ENDIF
+  K=K+2
+ WEND
+ IF SEL!=-1THEN
+  SetWindowVar WND,4,SEL
+  OTYFILSCR WND,SEL
+ ENDIF
+ void(repaintWindow(WND))
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
  IF!ID THEN
   IF POS==OTYFIL_MOPEN THEN
@@ -7067,6 +7322,14 @@
    OTYFIL_PASTE WND
    RETURN
   ENDIF
+  IF POS==OTYFIL_MFIL THEN
+   OTYFIL_FIL WND
+   RETURN
+  ENDIF
+  IF POS==OTYFIL_MUPD THEN
+   OTYFIL_UPD WND
+   RETURN
+  ENDIF
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -7109,6 +7372,7 @@
   E=SetControlLMouseDownHandler(OTYFILCTL,"OTYFILLMouse")
   E=SetControlRMouseUpHandler(OTYFILCTL,"OTYFILRMouse")
   E=SetControlLDoubleClickHandler(OTYFILCTL,"OTYFILLDBL")
+  E=SetControlKeyHandler(OTYFILCTL,"OTYFILKEY")
   NewControl "OTYFILICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
   RC_OTYFIL
@@ -7130,6 +7394,8 @@
  OTYFIL_MREN=5
  OTYFIL_MABOUT=6
  OTYFIL_MPASTE=7
+ OTYFIL_MFIL=8
+ OTYFIL_MUPD=9
  AddMenuItem MENU,"Open",OTYFIL_MOPEN
 'AddMenuItem MENU,"Copy",OTYFIL_MCOPY
 'AddMenuItem MENU,"Cut",OTYFIL_MCUT
@@ -7139,6 +7405,9 @@
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  OTYFIL_CONTEXTMENU=MENU
  NewMenu OUT MENU,E
+ AddMenuItem MENU,"Filter",OTYFIL_MFIL
+ AddMenuItem MENU,"Update",OTYFIL_MUPD
+ AddSubMenuItem GetWindowMenu(WND),"View",MENU NewMenu OUT MENU,E
  AddMenuItem MENU,"About",OTYFIL_MABOUT
  AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR SCR
@@ -7150,6 +7419,7 @@
  NewVScrollBAR WND,OTYFILGETSCRBARLEN(WND) OUT SCR,E
  SetWindowVar WND,4,-1'SELECTED
  OTYFILNOTIF WND,0,0,WND,0
+ SetWindowMinSize WND,52,64
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -7566,6 +7836,10 @@
  FOR I=1TO L
   LOCATE 0,Y
   ?I/L*100;"%";
+  VAR __$=PRGGET$()
+  PRGINS H$,0
+      __$=PRGGET$()
+  CONTINUE
   PRGEDIT 2,I
   VAR P$=PRGGET$()
   IF LEN(P$)&&ASC(P$[LEN(P$)-1])==10THEN P$=LEFT$(P$,LEN(P$)-1)
@@ -7575,6 +7849,9 @@
    PRGSET P$+L$
   ENDIF
  NEXT
+ __$=PRGGET$()
+ PRGINS "",1
+ __$=PRGGET$()
  PRGINS"DEF "+H$
  PRGINS"IF BUTTON()=="+STR$(512+64)+" THEN GOTO"+CHR$(34)+"2:@"+H2$
  PRGINS"END"
@@ -7583,37 +7860,8 @@
 END
 COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
  VAR TW=GetWindowVar(NDW,0)
- DIM U[512] 
- DIM V[512] 
- DIM W[512] 
- DIM H[512] 
- DIM A[512] 
- DIM X[512] 
- DIM Y[512] 
- DIM Z[512] 
- DIM DEFNO[512] 
- DIM SV[512,8] 
  VAR I
- DIM GP0[0]
- DIM GP1[0]
- DIM GP2[0]
- DIM GP3[0]
- DIM GP4[0]
- DIM GP5[0]
  GCLIP 1
- GSAVE OTW_SP,GP0,1
- GSAVE OTW_DP,GP1,1
-
-' FOR I=0TO 511
-'  VAR J
-'  FOR J=0TO 7
-'   SV[I,J]=SPVAR(I,J)
-'  NEXT
-'  IF SV[I,0]THEN
-'   SPCHR I OUT U[I],V[I],W[I],H[I],A[I]
-'   SPOFS I OUT X[I],Y[I],Z[I]
-'  ENDIF
-' NEXT
  LOCATE 0,29
  ?"Now loading..."
  LOAD"PRG2:"+GetWindowName$(TW),0
@@ -7623,39 +7871,15 @@
  ACLS
  EXEC 2
  ACLS
- 'FOR I=0TO 511
- ' IF SV[I,0]THEN
- '  SPSET I,U[I],V[I],W[I],H[I],A[I]
- '  ?SV[I,0],I,U[I],V[I],W[I],H[I],A[I]
- '  SPOFS I,X[I],Y[I],Z[I]
- '  FOR J=0TO 7
- '   SPVAR I,J,SV[I,J]
- '  NEXT
- ' ENDIF
- 'NEXT
  VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
- 
- WHILE NW
-  VAR SP=WIN_SP[NW]AND 511
-  IF SP THEN
-   SPSET WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
-   SPOFS WIN_SP[NW] AND 511,WIN_RX[NW],WIN_RY[NW]
-  ENDIF
-  NW=WIN_NEXT[NW]
- WEND
- GPRIO 1023
- OTW_SPSORT
- GPAGE OTW_SP,OTW_SP
- GLOAD GP0,1,1
  GPAGE OTW_SP,OTW_DP
- GLOAD GP1,1,1
- GCLIP 1,0,0,400,239
- GPAGE OTW_SP,OTW_DP
   '290
   SPSET OTW_MOUSESP,0
   OTW_SHADOWSP=1
   SPSET OTW_SHADOWSP,0
+  OTW_MOUSE=-1
   OTW_INITSP 0
+  OTW_MOUSE=0
   OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
   SPSCALE OTW_MOVWINSP,1,1
@@ -7664,6 +7888,34 @@
   OTW_MOVWINCOL=RGB(128,128,128,128)
   OTW_MOVWINCOL=RGB(128,255,255,255)
   SPCOLOR OTW_MOVWINSP,OTW_MOVWINCOL
+ 
+ WHILE NW
+  VAR SP=WIN_SP[NW]AND 511,SP2
+  IF SP THEN
+   SPSET SP,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
+   SPOFS SP,WIN_RX[NW],WIN_RY[NW]
+  IF OTW_ENABLE_SHADOW THEN
+   SPSET 2,511,0 OUT SP2
+   IF SP>SP2 THEN
+    SWAP SP,SP2
+    SPSET SP,WIN_RX[NW],WIN_RY[NW],WIN_AW[NW]+1,WIN_AH[NW]+1,1
+    SPOFS SP,WIN_RX[NW],WIN_RY[NW]
+    SPSET SP2,511
+   ENDIF
+   SPVAR SP,1,SP2
+   SPLINK SP2,SP
+   SPSCALE SP2,WIN_WIDTH[NW]+1,WIN_HEIGHT[NW]+1
+   SPCOLOR SP2,RGB(128,063,063,063)
+   SPOFS SP2,3,3,1
+   SPSHOW SP2
+   SPVAR SP2,0,NUWIDToWND(NW)
+  ENDIF
+  ENDIF
+  NW=WIN_NEXT[NW]
+ WEND
+ GPRIO 1023
+ OTW_SPSORT
+ RepaintAllWindow WIN_ROOTWND,0,0,0,0
 END
 VAR PRUNCTL
 COMMON DEF I_PRUN
@@ -7907,4 +8159,91 @@
 COMMON DEF L_EDITORSEL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR IMGVIEWCTL
+VAR IMGOPTCTL
+COMMON DEF IMGVIEWNOTIF WND,CTL,TYP,A1,A2
+ VAR B$=GetWindowName$(A1)
+ IF B$=="Open"THEN
+  VAR E=NewModalDialogBox(IMGOPTCTL,"Option",128,40,WND)
+ ENDIF
+END
+COMMON DEF IMGVIEWOPTCREATE WND,CTL,TYP,A1,A2
+END
+COMMON DEF I_IMGVIEW
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!IMGVIEWCTL THEN
+  ExtendControl "Image Viewer",GetWindowControl() OUT IMGVIEWCTL,E
+  E=SetControlNotifHandler(IMGVIEWCTL,"IMGVIEWNOTIF")
+  ExtendControl "Option",GetWindowControl() OUT IMGOPTCTL,E
+  E=SetControlCreateHandler(IMGOPTCTL,"IMGVIEWOPTCREATE")
 
+ ENDIF
+ VAR W1=128+32
+ VAR W=128+32+52
+ NewTopLevelWindow IMGVIEWCTL,"Image Viewer",W,32 OUT WND,E
+ VAR CMD$=GetCommandArgsWithoutName$(GetProcessArgs$())
+ NewWindow GetLabelControl(),"File:",1,2,39,7,WND,0 OUT E,E
+ NewWindow GetTextBoxControl(),"File:",41,1,W1-41,8,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"Browse",W1+1,0,51,10,WND,0 OUT E,E
+ NewWindow GetButtonControl(),"Open",1,12,51,10,WND,0 OUT E,E
+' NewWindow GetButtonControl(),"Option",54,12,51,10,WND,0 OUT E,E
+ 
+ SetProcessVar WND
+END
+COMMON DEF L_IMGVIEW
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+COMMON DEF COLORPAINT WND,CTL,TYP,XY,WH
+ VAR E=CallBaseControlHandler(WND,CTL,TYP,XY,WH)
+ VAR X=XY AND 65535,Y=XY>>16
+ VAR W1=GetWindowWidth(WND)
+ VAR H1=GetWindowHeight(WND)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ IF WH THEN
+  W=X+(WH AND 65535)'GetWindowWidth(WND)
+  H=Y+(WH>>16)'GetWindowHeight(WND)
+  
+ ENDIF
+ IF!W||!H THEN RETURN
+' GBOXWindow WND,X,Y,X+W,Y+H,-1
+ E=GEndWindow(WND)
+ VAR X1,Y1
+ ?"AAAAA",X,Y,W,H
+ FOR Y1=Y TO H
+  FOR X1=X TO W
+   VAR C=RGB(255,X1*(255/W1),Y1*(255/H1),0)
+   IF X1==X THEN C=-1
+   IF Y1==Y THEN C=-1
+   IF X1==H THEN C=-1
+   IF Y1==W THEN C=-1
+   __GPSETWindow__ WND,X1,Y1,C
+  NEXT
+  UpdateMouse
+ NEXT
+END
+VAR COLORCTL
+COMMON DEF I_COLOR
+IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!COLORCTL THEN
+  ExtendControl "COLOR",GetWindowControl() OUT COLORCTL,E
+  E=SetControlPainter(COLORCTL,"COLORPAINT")
+ ENDIF
+ NewTopLevelStyleWindow COLORCTL,"COLOR",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
+ SetWindowBackColor WND,0
+ SetProcessVar WND
+END
+COMMON DEF L_COLOR
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
