diff -u OTW.TXT OTW1D
--- OTW.TXT
+++ OTW1D
@@ -4,7 +4,7 @@
 ' OTYA WINDOW SYSTEM 
 '====================
 'グローバルへんすうのていぎ
-VAR OTW_INIT,OTW_MOUSESP,OTW_MOVWINSP,OTW_MOVWINCOL
+VAR OTW_INIT,OTW_MOUSESP,OTW_SHADOWSP,OTW_MOVWINSP,OTW_MOVWINCOL
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
@@ -56,6 +56,7 @@
 DIM WIN_GPREV  [0]
 DIM WIN_GPARENT[0]
 DIM WIN_STYLE  [0]
+DIM WIN_BACKGND[0]
 DIM WIN_IMAGE  [0]
 'QUEUE
 DIM WIN_MSGS   [0]
@@ -99,9 +100,17 @@
 VAR WIN_STYLE_RESIZ
 VAR WIN_STYLE_TRANS
 VAR WIN_ACTIVENUWID
+'DOUBLE CLICK
+'まえ CLICK した WINDOW
+VAR OTW_LCLKWND
+'そのFRAME
+VAR OTW_LCLKF
+'なんFRAMEまで DOUBLE CLICKか
+VAR OTW_DBLCLKF
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
+ OTW_DBLCLKF=30
  WIN_STYLE_MODAL=1
  WIN_STYLE_RESIZ=2
  WIN_STYLE_TRANS=4
@@ -156,6 +165,7 @@
  WIN_GPARENT   =NewArray(WIN_MAX)
  WIN_STYLE     =NewArray(WIN_MAX)
  WIN_IMAGE     =NewArray(WIN_MAX)
+ WIN_BACKGND   =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
@@ -164,6 +174,7 @@
  OTW_INITLIST WIN_NEXT
  OTW_MENU_INITARRAY
  OTW_IMAGE_INITARRAY
+ WIN_WID[0]=&Hdeadbeef
 END
 DIM IMAGE_PTR[0]
 DIM IMAGE_HEIGHT[0]
@@ -286,10 +297,14 @@
 VAR CTL_FRMMOUSEMVHANDLER
 VAR CTL_CREATEHANDLER
 VAR CTL_STRNOTIFHANDLER
+VAR CTL_DELETEHANDLER
+VAR CTL_LDBLCLKHANDLER
+VAR CTL_MSLEAVEHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
 VAR CTL_BTNUPFLG
+VAR CTL_LEAVEFLG
 VAR CTL_WINDOWCTL
 VAR CTL_BUTTONCTL
 VAR CTL_TGLBTNCTL
@@ -305,7 +320,7 @@
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
  CTL_MAX=64
- CTL_HANDLER_MAX=16
+ CTL_HANDLER_MAX=17
  CTL_NAME$     =NewArray$(CTL_MAX)
  CTL_DAT       =NewArray(CTL_MAX)
  CTL_FW1       =NewArray(CTL_MAX)
@@ -341,11 +356,15 @@
  CTL_FRMMOUSEMVHANDLER=11
  CTL_CREATEHANDLER=12
  CTL_STRNOTIFHANDLER=13
+ CTL_DELETEHANDLER=14
+ CTL_LDBLCLKHANDLER=15
+ CTL_MSLEAVEHANDLER=16
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
  CTL_BTNDWNFLG=1
  CTL_BTNUPFLG=2
+ CTL_LEAVEFLG=64
 ' CTL_DRWFRMHANDLER=3
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
@@ -382,6 +401,7 @@
  OTW_CTL_LIST
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
+ CTL_CID[0]=&Hdeadbeef
 END
 DIM LISTSTR$[0]
 DIM LISTSTRNEXT[0]
@@ -403,6 +423,8 @@
  E=SetControlCreateHandler(CTL_LSTBOXCTL,"ListBoxCreate")
  E=SetControlNotifHandler(CTL_LSTBOXCTL,"ListBoxNotif")
  E=SetControlLMouseDownHandler(CTL_LSTBOXCTL,"ListBoxLMD")
+ E=SetControlLDoubleClickHandler(CTL_LSTBOXCTL,"ListBoxLMD")
+ E=SetControlDeleteHandler(CTL_LSTBOXCTL,"ListBoxDelete")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -581,6 +603,21 @@
  CTL_HANDLER$[CTL AND 4095,CTL_STRNOTIFHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlDeleteHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_DELETEHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlLDoubleClickHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_LDBLCLKHANDLER]=HANDLER$
+ RETURN 0
+END
+COMMON DEF SetControlMouseLeaveHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_MSLEAVEHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -593,6 +630,29 @@
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
+'Clipboard API
+'ClearClipboard<-じゅうよう
+'                Setしただけでは ほかの しゅるいの データが のこる
+'->ClipboardSetText
+VAR CLPBRD
+VAR CLPBRDCTXT
+VAR CLPBRD$
+VAR CLPBRD#
+VAR CLPBRDPTR
+COMMON DEF ClearClipboard
+ CLPBRDCTXT=FALSE
+END
+COMMON DEF ClipboardContainsText()
+ RETURN CLPBRDCTXT
+END
+COMMON DEF ClipboardGetText()
+ IF CLPBRDCTXT THEN RETURN CLPBRD$
+ RETURN ""
+END
+COMMON DEF ClipboardSetText V$
+ CLPBRDCTXT=1
+ CLPBRD$=V$
+END
 COMMON DEF NewImage WIDTH,HEIGHT OUT IMG,E
  IF !IMAGE_FREE THEN IMG=0:E=IMAGE_NOALLOC:RETURN
  VAR PTR=malloc(WIDTH*HEIGHT)
@@ -629,9 +689,11 @@
  MENU=MENU_FREE OR MENU_IDCNT<<12
  MENU_FREE=MENU_NEXT[MENU_FREE]
 END
-COMMON DEF SetMenuBar WND,MENU
+COMMON DEF SetMenuBar MENU,WND
+ NOIMPL FORMAT$("NOIMPL SetMenuBar %D,%D",MENU,WND)
 END
 COMMON DEF ShowMenu MENU,WND
+ NOIMPL FORMAT$("NOIMPL ShowMenu %D,%D",MENU,WND)
 END
 DEF ShowMenu_ MENU,WND,X,Y
  VAR W=WND AND NUWIDMASK
@@ -779,8 +841,9 @@
  RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
 END
 VAR WIN_ROOTWND
+VAR WIN_ROOTWND2
 COMMON DEF GetRootWND()
- RETURN WIN_ROOTWND
+ RETURN WIN_ROOTWND2
 END
 COMMON DEF CheckWindow(WND)
  RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
@@ -800,6 +863,13 @@
   CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,0,0
  ENDIF
 END
+DEF WindowOnDelete NUWID
+ VAR CTL=WIN_CTL[NUWID]
+ VAR NUCID=CTL AND 4095
+ IF LEN(CTL_HANDLER$[NUCID,CTL_DELETEHANDLER])THEN
+  CALL CTL_HANDLER$[NUCID,CTL_DELETEHANDLER],NUWIDToWND(NUWID),CTL,CTL_DELETEHANDLER,0,0
+ ENDIF
+END
 COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -861,7 +931,7 @@
      N=WIN_NEXT[N]
     WEND
    ELSE
-    WIN_CHILD[PNUWID]=N
+    WIN_CHILD[PNUWID]=NUWID
    ENDIF
    OTW_DrawMap NUWID
   ELSE
@@ -897,9 +967,19 @@
  IF PARENT==WIN_ROOTWND THEN
   SPAllocWindow WND
  ENDIF
+ WIN_BACKGND[NUWID]=RGB(224,224,224)
  WindowOnCreate WND,CTL
  VOID ActiveWindow(WND)
 END
+COMMON DEF SetWindowBackColor WND,RGB
+ IF!CheckWindow(WND)THEN RETURN
+ WIN_BACKGND[WND AND NUWIDMASK]=RGB
+ VOID RepaintWindow(WND)
+END
+COMMON DEF GetWindowBackColor(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ RETURN WIN_BACKGND[WND AND NUWIDMASK]
+END
 DEF SPAllocWindow WND
  INC OTW_TOPLEVELCNT
  VAR SP=2,NUWID=WND AND NUWIDMASK
@@ -927,6 +1007,19 @@
 COMMON DEF WindowTransStyle()
  RETURN 4
 END
+VAR WIN_TopLevelX2
+DEF IncTopLevelPos NUCID
+ INC WIN_TopLevelX,CTL_FH1[NUCID]-1
+ INC WIN_TopLevelY,CTL_FH1[NUCID]-1
+ IF WIN_TopLevelY>=240THEN
+  WIN_TopLevelY=0
+  INC WIN_TopLevelX2,CTL_FH1[NUCID]-1
+  IF WIN_TopLevelX2>=400THEN
+   WIN_TopLevelX2=0
+  ENDIF
+  WIN_TopLevelX=WIN_TopLevelX2
+ ENDIF
+END
 COMMON DEF NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,STYLE OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -940,7 +1033,13 @@
  IF STYLE AND 1THEN
   INC CTL_FH1[NUCID],10
  ENDIF
- NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,ERR
+ IF STYLE AND 2THEN
+  INC CTL_FH1[NUCID],1
+  INC CTL_FW1[NUCID],1
+  INC CTL_FH2[NUCID],1
+  INC CTL_FW2[NUCID],1
+ ENDIF
+ NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND2,WindowFrontFlag() OUT WND,ERR
  CTL_FH1[NUCID]=_H
  IF ERR THEN RETURN
  VAR NUWID=WND AND NUWIDMASK,SP
@@ -952,6 +1051,9 @@
  'RESIZABLE
  IF STYLE AND 2THEN
   WIN_STYLE[NUWID]=WIN_STYLE_RESIZ
+  DEC CTL_FW1[NUCID],1
+  DEC CTL_FH2[NUCID],1
+  DEC CTL_FW2[NUCID],1
  ENDIF
  'TRANS
  IF STYLE AND 4THEN
@@ -959,10 +1061,13 @@
   NOIMPL "TRANS
   NewImage WIDTH,HEIGHT,WIN_IMAGE[NUWID]
  ENDIF
- INC WIN_TopLevelX,CTL_FH1[NUCID]-1
- INC WIN_TopLevelY,CTL_FH1[NUCID]-1
+ IncTopLevelPos NUCID
 END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+ IF WIN_ROOTWND THEN
+  NewTopLevelStyleWindow CTL,NAME$,WIDTH,HEIGHT,0 OUT WND,ERR
+  RETURN
+ ENDIF
  IF!CheckControl(CTL)THEN
   WND=0
   ERR=CTL_INVALIDID
@@ -1011,10 +1116,11 @@
 ' SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID],1
 ' SPSHOW SP
 ' SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],1023
+  WIN_ROOTWND2=WND
   RETURN
  ENDIF
  
- VAR ROOTNUWID=WIN_ROOTWND AND NUWIDMASK
+ VAR ROOTNUWID=WIN_ROOTWND2 AND NUWIDMASK
  VAR C=WIN_CHILD[ROOTNUWID],N
  WIN_PARENT[NUWID]=ROOTNUWID
  IF!C THEN
@@ -1037,8 +1143,7 @@
  WIN_AY[NUWID]=WIN_TOPLEVELY
  WIN_X[NUWID]=WIN_TopLevelX
  WIN_Y[NUWID]=WIN_TOPLEVELY
- INC WIN_TopLevelX,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
- INC WIN_TopLevelY,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
+IncTopLevelPos NUCID
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -1075,7 +1180,7 @@
  VAR WND,E
  IF AX<0THEN AX=0
  IF AY<0THEN AY=0
- NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,E
+ NewWindow CTL,NAME$,AX,AY,WIDTH,HEIGHT,GetRootWND(),WindowFrontFlag() OUT WND,E
  IF FLAG THEN
   WIN_STYLE[WND AND NUWIDMASK]=WIN_STYLE_MODAL
  ENDIF
@@ -1099,6 +1204,7 @@
 END
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
+ WindowOnDelete NUWID
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
  WIN_STYLE[NUWID]=0
  WIN_MENU[NUWID]=0
@@ -1163,6 +1269,7 @@
   IF WIN_GROUP[NUWID]THEN 
    NOIMPL "DeleteWindow - Group"
   ENDIF
+  
  ENDIF
  RETURN 0
 END
@@ -1280,89 +1387,46 @@
 END
 COMMON DEF OTW_CLIPWindow NUWID
  VAR PNUWID=WIN_PARENT[NUWID]
- IF WIN_RFX[PNUWID]>WIN_RX[NUWID]THEN
-  WIN_RX[NUWID]=WIN_RFX[PNUWID]
-  IF WIN_RFX[PNUWID]>WIN_RFX[NUWID]THEN
-   WIN_RFX[NUWID]=WIN_RFX[PNUWID]
-  ENDIF
- ENDIF
- IF WIN_RFY[PNUWID]>WIN_RY[NUWID]THEN
-  WIN_RY[NUWID]=WIN_RFY[PNUWID]
-  IF WIN_RFY[PNUWID]>WIN_RFY[NUWID]THEN
-   WIN_RFY[NUWID]=WIN_RFY[PNUWID]
-  ENDIF
- ENDIF
- VAR E1=WIN_AX[NUWID]+WIN_WIDTH[NUWID]
- VAR E2=WIN_RX[PNUWID]+WIN_AW[PNUWID]
- 'CLIP FRAME
- IF WIN_WIDTH[PNUWID]==WIN_AW[PNUWID]THEN
-  DEC E2,WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
- ENDIF
  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
- IF E1>E2 THEN
-  DEC WIN_AW[NUWID],E1-E2
- ENDIF
- IF WIN_AX[NUWID]<WIN_RFX[PNUWID]THEN
-  WIN_AW[NUWID]=WIN_WIDTH[NUWID]
-  DEC WIN_AW[NUWID],WIN_RFX[PNUWID]-WIN_AX[NUWID]'-WIN_FW2[PNUWID]-WIN_FW1[PNUWID]
- ENDIF
- E1=WIN_RY[NUWID]+WIN_HEIGHT[NUWID]
- E2=WIN_RY[PNUWID]+WIN_AH[PNUWID]
  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
-
- 'CLIP FRAME
- IF WIN_HEIGHT[PNUWID]==WIN_AH[PNUWID]THEN
-  DEC E2,WIN_FH2[PNUWID]-WIN_FH1[PNUWID]
+ WIN_AFW[NUWID]=WIN_WIDTH[NUWID]-WIN_FW2[NUWID]
+ WIN_AFH[NUWID]=WIN_HEIGHT[NUWID]-WIN_FH2[NUWID]
+ WIN_RX[NUWID]=WIN_AX[NUWID]
+ WIN_RY[NUWID]=WIN_AY[NUWID]
+ WIN_RFX[NUWID]=WIN_FX[NUWID]
+ WIN_RFY[NUWID]=WIN_FY[NUWID]
+ 'ひだり はみで の しょり
+ IF WIN_RX[NUWID]<WIN_RFX[PNUWID]THEN
+  DEC WIN_AW[NUWID],WIN_RFX[PNUWID]-WIN_RX[NUWID]
+  WIN_RX[NUWID]=WIN_RFX[PNUWID]
  ENDIF
- IF E1>E2 THEN
-  DEC WIN_AH[NUWID],E1-E2
+ IF WIN_RFX[NUWID]<WIN_RFX[PNUWID]THEN
+  DEC WIN_AFW[NUWID],WIN_RFX[PNUWID]-WIN_RFX[NUWID]
+  WIN_RFX[NUWID]=WIN_RFX[PNUWID]
  ENDIF
- IF WIN_AY[NUWID]<WIN_RFY[PNUWID]THEN
-  WIN_AH[NUWID]=WIN_HEIGHT[NUWID]
-  DEC WIN_AH[NUWID],WIN_RFY[PNUWID]-WIN_AY[NUWID]'WIN_FH1[NUWID]
+ IF WIN_RY[NUWID]<WIN_RFY[PNUWID]THEN
+  DEC WIN_AH[NUWID],WIN_RFY[PNUWID]-WIN_RY[NUWID]
+  WIN_RY[NUWID]=WIN_RFY[PNUWID]
  ENDIF
-
- VAR W=WIN_AW[NUWID]
- VAR H=WIN_AH[NUWID]
- IF W==WIN_WIDTH[NUWID]THEN
-  DEC W,WIN_FW2[NUWID]
- ELSE
-  DEC W,WIN_FW2[NUWID]-WIN_FW1[NUWID]
+ IF WIN_RFY[NUWID]<WIN_RFY[PNUWID]THEN
+  DEC WIN_AFH[NUWID],WIN_RFY[PNUWID]-WIN_RFY[NUWID]
+  WIN_RFY[NUWID]=WIN_RFY[PNUWID]
  ENDIF
- IF H==WIN_HEIGHT[NUWID]THEN
-  DEC H,WIN_FH2[NUWID]
- ELSE
-  IF WIN_HEIGHT[NUWID]-H>=WIN_FH1[NUWID]THEN
-   IF WIN_Y[NUWID]<0THEN
-    DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
-   ELSE
-    DEC H,WIN_FH1[NUWID]'WIN_FH2[NUWID]-WIN_FH1[NUWID]
-   ENDIF
-
-'   IF WIN_RFY[NUWID]==WIN_RY[NUWID]THEN
-'    DEC H,WIN_FH1[NUWID]
-'   ELSE
-'    DEC H,WIN_FH2[NUWID]-WIN_FH1[NUWID]
-'   ENDIF
-  ELSE
-   DEC H,WIN_FH1[NUWID]-(WIN_HEIGHT[NUWID]-H)+WIN_FH2[NUWID]-WIN_FH1[NUWID]
-  ENDIF
+ 'みぎ はみで の しょり
+ IF WIN_RFX[NUWID]+WIN_AFW[NUWID]>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
+  DEC WIN_AFW[NUWID],(WIN_RFX[NUWID]+WIN_AFW[NUWID])-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
  ENDIF
- IF WIN_RFX[NUWID]+W>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
-  DEC W,(WIN_RFX[NUWID]+W)-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
- ENDIF
  IF WIN_RX[NUWID]+WIN_AW[NUWID]>WIN_RFX[PNUWID]+WIN_AFW[PNUWID]THEN
   DEC WIN_AW[NUWID],(WIN_RX[NUWID]+WIN_AW[NUWID])-(WIN_RFX[PNUWID]+WIN_AFW[PNUWID])
  ENDIF
 
- IF WIN_RFY[NUWID]+H>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
-  DEC H,(WIN_RFY[NUWID]+H)-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
+ IF WIN_RFY[NUWID]+WIN_AFH[NUWID]>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
+  DEC WIN_AFH[NUWID],(WIN_RFY[NUWID]+WIN_AFH[NUWID])-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
  ENDIF
  IF WIN_RY[NUWID]+WIN_AH[NUWID]>WIN_RFY[PNUWID]+WIN_AFH[PNUWID]THEN
   DEC WIN_AH[NUWID],(WIN_RY[NUWID]+WIN_AH[NUWID])-(WIN_RFY[PNUWID]+WIN_AFH[PNUWID])
  ENDIF
- WIN_AFW[NUWID]=W
- WIN_AFH[NUWID]=H
+
  WIN_HIDE[NUWID]=0
  IF WIN_AH[NUWID]<0THEN
   WIN_HIDE[NUWID]=1
@@ -1628,6 +1692,10 @@
 DEF MouseMoveWindow(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_MOUSEMVHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF MouseLeaveWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_MSLEAVEHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
+END
 DEF LMouseUpWindow(WND)
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LBTNUPHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
@@ -1636,6 +1704,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF LDoubleClickWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_LDBLCLKHANDLER,,JoinInt(OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID]))
+END
 DEF MouseMoveWindowOnFrame(NUWID)
  RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
@@ -1647,6 +1719,10 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
 END
+DEF MouseLeaveWindowOnFrame(WND)
+ VAR NUWID=WND AND NUWIDMASK
+ RETURN SendWindowEvent(WND,CTL_FRMMOUSEMVHANDLER,CTL_LEAVEFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
 COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL=CTL_PARENTCTL[CTL AND 4095]
@@ -2114,32 +2190,38 @@
 DEF WindowPainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
- GCLSWindow WND,RGB(224,224,224)
- GFILLWindow WND,0,-GetWindowFrameHeight(WND)+1,GetWindowFrameWidth(WND)-2,-1,RGB(0,0,255)
- GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+2,GetWindowName$(WND),15
+ VAR NUWID=WND AND NUWIDMASK
+ VAR NUCID=WIN_CTL[NUWID] AND 4095
+ VAR FW=WIN_FW1[NUWID]
+ VAR FH=WIN_FH1[NUWID]
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
+ VAR H2=WIN_HEIGHT[NUWID]-H
+ VAR SH=FH-CTL_FH1[NUCID]
+ VAR SW=WIN_FW2[NUWID]-CTL_FW1[NUCID]-CTL_FW2[NUCID]
+ IF WIN_MENU[NUWID]THEN DEC SH,10'TODO:MENU_HEIGHT
  VAR C=RGB(224,224,224)
+ DEC H,SH
+ DEC W,SW
+ GCLSWindow WND,RGB(224,224,224)
+ GFILLWindow WND,0,-H+1,W-2,-1,RGB(0,0,255)
+ GPRINTWindowCC WND,1,-H+2,GetWindowName$(WND),15
  GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
  GLINEWindow WND,-1,-1,W-2,-1,RGB(0,0,0)
-'GLINEWindow WND,W-08-1,-H+3,W-2-1,-3,C
-'GLINEWindow WND,W-7-1,-H+3,W-1-1,-3,C
-'GLINEWindow WND,W-2-1,-H+3,W-8-1,-3,C
-'GLINEWindow WND,W-1-1,-H+3,W-7-1,-3,C
  GLINEWindow WND,W-08-1,-H+3,W-2-1,-H+9,C
  GLINEWindow WND,W-7-1,-H+3,W-1-1,-H+9,C
  GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
  GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
-'GLINEWindow WND,-1,-H,W-1,-H,RGB(224,224,224)
- VAR NUWID=WND AND NUWIDMASK
- VAR H2=WIN_HEIGHT[NUWID]-H
-'GLINEWindow WND,-1,-H,-1,H2-1,RGB(224,224,224)
-'GLINEWindow WND,W-1,-H,W-1,H2,RGB(0,0,0)
-'GLINEWindow WND,-1,H2,W-1,H2,RGB(0,0,0)
-'?W
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
-' ?GetWindowName$(WND),W,W-1+2
-
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+  INC H,SH
+  GLINEWindow WND,-1,-H+1,W-2,-H+1,-1
+  GLINEWindow WND,-1,-H+1,-1,H2-2,-1
+  GLINEWindow WND,W-1,-H+1,W-1,H2-1,RGB(128,128,128)
+  GLINEWindow WND,W,-H,W,H2,RGB(0,0,0)
+  GLINEWindow WND,W-2,H2-1,-1,H2-1,RGB(128,128,128)
+  GLINEWindow WND,W,H2,-2,H2,RGB(0,0,0)
+ ENDIF
  IF WIN_MENU[NUWID]THEN
   GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
   GFILLWindow WND,0,-10,W-2,-2,RGB(224,224,224)
@@ -2153,7 +2235,6 @@
   WEND
  ENDIF
  E=ReGBeginWindow(WND)
-' E=GEndWindow(WND)
 END
 DEF WindowChFocus WND,CTL,TYPE,A1,A2
  IF A1 THEN
@@ -2215,9 +2296,55 @@
  ENDIF
 END
 DEF WindowMMoveFrame WND,CTL,TYPE,ET,XY
+ IF ET AND CTL_LEAVEFLG THEN 
+  OTW_INITSP 0
+  RETURN
+ ENDIF
  VAR X,Y
  SplitInt XY OUT X,Y
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_RESIZ THEN
+  '
+  '
+  '
+  '  
+  '   
+  IF Y<4&&X<4THEN
+   OTW_INITSP 3
+   RETURN
+  ENDIF
+  VAR EX=WIN_WIDTH[NUWID]-X
+  VAR EY=WIN_HEIGHT[NUWID]-Y
+  IF EX<4&&Y<4THEN 
+   OTW_INITSP 4
+   RETURN
+  ENDIF
+  IF EY<4&&X<4THEN
+   OTW_INITSP 4
+   RETURN
+  ENDIF
+  IF EX<4&&EX<4THEN
+   OTW_INITSP 3
+   RETURN
+  ENDIF
+  IF EY<2THEN
+   OTW_INITSP 1
+   RETURN
+  ENDIF
+  IF EX<2THEN
+   OTW_INITSP 2
+   RETURN
+  ENDIF
+  IF Y<2THEN
+   OTW_INITSP 1
+   RETURN
+  ENDIF
+  IF X<2THEN
+   OTW_INITSP 2
+   RETURN
+  ENDIF
+  OTW_INITSP 0
+ ENDIF
  IF!IsActiveWindow(WND)THEN RETURN
  IF!WIN_MENU[NUWID]THEN RETURN
  VAR C=WIN_MENU[NUWID]AND 4095
@@ -2395,7 +2522,7 @@
  VAR HE=GetWindowHeight(W)
  VAR WI=GetWindowWidth(W)
  VAR A=GetWindowVar(W,1)
- GCLSWindow W,RGB(224,224,224)
+ GCLSWindow W,GetWindowBackColor(W)
  VAR X,Y,C,I,L=LEN(NA$),HB=WI/8
  IF!HB THEN RETURN
  IF L<HB THEN
@@ -2480,6 +2607,15 @@
   VOID GEndWindow(WND)
  ENDIF
 END
+DEF ListBoxDelete WND,CT,T,A1,A2
+ VAR L=GetWindowVar(WND,1)
+ IF!L THEN RETURN
+ WHILE LISTSTRNEXT[L]
+  L=LISTSTRNEXT[L]
+ WEND
+ LISTSTRNEXT[L]=LISTSTR_FREE
+ LISTSTR_FREE=GetWindowVar(WND,1)
+END
 DEF ListBoxNotif WND,CT,T,A1,POS
  VAR OP=GetWindowVar(WND,5)
  IF OP==POS THEN RETURN
@@ -2646,24 +2782,133 @@
  ENDIF
 END
 VAR OTW_MOUSESIZE
-DEF OTW_INITSP
+VAR OTW_MOUSE_HOMEX
+VAR OTW_MOUSE_HOMEY
+'ざんてい じっそう
+DEF OTW_INITSP NUM
+ GCLIP 1
  GPSET 408,0,-1
  SPDEF 0,408,0,1,1,1
  VAR FORE=RGB(0,0,0)
  VAR BACK=RGB(255,255,255)
  GCOLOR FORE
  VAR SC#=1,B=416
- GFILL B,0,B+10*SC#,18*SC#,0
- GLINE B,0*SC#,B,14*SC#
- GLINE B,0*SC#,B+10*SC#,10*SC#
- GLINE B,14*SC#,B+3*SC#,11*SC#
- GLINE B+6*SC#,16*SC#,B+3*SC#,11*SC#
- GLINE B+10*SC#,10*SC#,B+6*SC#,10*SC#
-'GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
- GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
- GLINE B+6*SC#,16*SC#,B+7*SC#,16*SC#'7,16
- GPAINT B+1*SC#,2*SC#,BACK,FORE
- SPDEF 290,B,0,10*SC#,17*SC#
+ IF !NUM THEN
+  OTW_MOUSE_HOMEX=0
+  OTW_MOUSE_HOMEY=0
+  GFILL B,0,B+10*SC#,18*SC#,0
+  GLINE B,0*SC#,B,14*SC#
+  GLINE B,0*SC#,B+10*SC#,10*SC#
+  GLINE B,14*SC#,B+3*SC#,11*SC#
+  GLINE B+6*SC#,16*SC#,B+3*SC#,11*SC#
+  GLINE B+10*SC#,10*SC#,B+6*SC#,10*SC#
+  'GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
+  GLINE B+6*SC#,10*SC#,B+8*SC#,15*SC#
+  GLINE B+6*SC#,16*SC#,B+7*SC#,16*SC#'7,16
+  GPAINT B+1*SC#,2*SC#,BACK,FORE
+  SPDEF 290,B,0,10*SC#,17*SC#
+ ELSE
+  VAR SWPF=0,RVSF=0
+  VAR X=0,Y,D$
+  RESTORE "@"+STR$(NUM)
+  VAR W
+  WHILE 1
+   READ D$
+   IF!Y THEN
+    IF ASC(D$[0])>70THEN
+     IF D$[0]=="S"THEN SWPF=1
+     IF D$[0]=="R"THEN RVSF=1
+     READ NUM
+     RESTORE "@"+STR$(NUM)
+     CONTINUE
+    ENDIF
+    READ OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+   ENDIF
+   VAR L=LEN(D$)-1,I,X2
+   IF L==-1THEN BREAK
+   FOR I=0TO L
+    X2=I
+    IF RVSF THEN X2=L-I
+    VAR C=ASC(D$[I])-48
+    IF C<0THEN C=0
+    IF C>9THEN DEC C,7'HEX
+    IF C>9THEN IF W<X2+1 THEN W=X2+1
+    IF SWPF THEN
+     GPSET B+Y,X+X2,OTW_CONSOLEPAL[C]
+    ELSE
+     GPSET B+X+X2,Y,OTW_CONSOLEPAL[C]
+    ENDIF
+   NEXT
+   INC Y
+  WEND
+  IF SWPF THEN
+   SWAP W,Y
+   SWAP OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+  ENDIF
+  IF RVSF THEN
+   OTW_MOUSE_HOMEX=(W-1)-OTW_MOUSE_HOMEX
+  ENDIF
+  SPDEF 290,B,0,W*SC#,Y*SC#
+ ENDIF
+ GCLIP 1,0,0,400,239
+ SPCHR OTW_MOUSESP,290
+ SPVAR 0,0,1
+ SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
+ SPHOME OTW_MOUSESP,OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+ SPCOL 0,0,0,1,1
+ SPCHR OTW_SHADOWSP,290
+ SPLINK OTW_SHADOWSP,OTW_MOUSESP
+ SPOFS OTW_SHADOWSP,-2,2,-00
+ SPCOLOR OTW_SHADOWSP,RGB(128,0,0,0)
+ SPVAR OTW_SHADOWSP,0,1
+ SPHOME OTW_SHADOWSP,OTW_MOUSE_HOMEX,OTW_MOUSE_HOMEY
+ 'NORMAL CURSOR
+ @1
+ DATA "    F    
+ DATA 4,10
+ DATA "   F1F   
+ DATA "  F111F  
+ DATA " F11111F 
+ DATA "F1111111F
+ DATA "FFFF1FFFF
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "   F1F   
+ DATA "FFFF1FFFF
+ DATA "F1111111F
+ DATA " F11111F 
+ DATA "  F111F  
+ DATA "   F1F   
+ DATA "    F    
+ DATA ""
+ @2
+ DATA "S",1
+ @3
+ DATA "FFFFFFF         
+ DATA 7,7
+ DATA "F11111F         
+ DATA "F1111F          
+ DATA "F111F           
+ DATA "F11F1F          
+ DATA "F1F F1F         
+ DATA "FF   F1F        
+ DATA "      F1F       
+ DATA "       F1F   FF 
+ DATA "        F1F F1F 
+ DATA "         F1F11F 
+ DATA "          F111F 
+ DATA "         F1111F 
+ DATA "        F11111F 
+ DATA "        FFFFFFF 
+ DATA "
+ @4
+ DATA "R",3'REVERSE 3
 END
 VAR WIN_ROOTCTL
 VAR TSTWND,TSTCTL
@@ -2749,7 +2994,6 @@
  ' GCLS RGB(0,192,128)
 ' GCLS RGB(0,0,255)
 'GCLS 
-  OTW_INITSP
   GPRIO 1023
   GOTO @_
   XSCREEN 2,512,2
@@ -2814,17 +3058,10 @@
   OTW_RMOUSEUP =8
   
   '290
-  SPSET OTW_MOUSESP,290
-  SPVAR 0,0,1
-  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
-  SPHOME OTW_MOUSESP,0,0
-  SPCOL 0,0,0,1,1
-  OTW_MOVWINSP=1
-  SPSET OTW_MOVWINSP,290
-  SPLINK OTW_MOVWINSP,OTW_MOUSESP
-  SPOFS OTW_MOVWINSP,-2,2,-00
-  SPCOLOR OTW_MOVWINSP,RGB(128,0,0,0)
-  SPVAR OTW_MOVWINSP,0,1
+  SPSET OTW_MOUSESP,0
+  OTW_SHADOWSP=1
+  SPSET OTW_SHADOWSP,0
+  OTW_INITSP 0
   OTW_MOVWINSP=2
   SPSET OTW_MOVWINSP,0
   SPHIDE OTW_MOVWINSP
@@ -2862,6 +3099,7 @@
 VAR OTW_FDIFF
 VAR OTW_OLDBTN
 VAR OTW_OLDBTNF
+VAR OLDMOVEMOUSEWINDOW
 COMMON DEF L_OTW
  VAR MOVEMOUSE
  UpdateMouse
@@ -2870,12 +3108,13 @@
  VAR NUWID,E
  VAR BTN=UpdateButton()
  IF MOVEMOUSE||BTN THEN
-  IF WIN_DRAGHANDLER_USE THEN
-   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
-ENDIF
+'  IF WIN_DRAGHANDLER_USE THEN
+'   CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+'ENDIF
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
  IF BTN THEN
+  'LEFT MOUSE DOWN
   IF BTN AND OTW_LMOUSEDWN THEN
    VAR OA=WIN_ACTIVENUWID
    WIN_ACTIVENUWID=NUWID
@@ -2883,6 +3122,25 @@
     E=SendChFocusWindow(NUWIDToWND(OA),FALSE)
     E=SendChFocusWindow(NUWIDToWND(WIN_ACTIVENUWID AND 32767),TRUE)
    ENDIF
+   VAR F=MAINCNT
+   IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF THEN
+    BEEP
+    OTW_LCLKWND=0
+    IF NUWID AND WIN_FRAMEFLG THEN
+     'TODO:Double Click
+     
+     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+     WIN_ACTIVENUWID=NUWID AND 32767
+    ELSE
+     IF LEN(CTL_HANDLER$[WIN_CTL[NUWID]AND 4095,CTL_LDBLCLKHANDLER])THEN
+?"A
+     ELSE
+      E=LMouseDownWindow(NUWIDToWND(NUWID))
+     ENDIF
+    ENDIF
+   ELSE
+    OTW_LCLKWND=NUWID
+    OTW_LCLKF=F
    IF NUWID AND WIN_FRAMEFLG THEN
     E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
     
@@ -2890,6 +3148,7 @@
    ELSE
     E=LMouseDownWindow(NUWIDToWND(NUWID))
    ENDIF
+   ENDIF
   ENDIF
   IF BTN AND OTW_LMOUSEUP THEN
    IF WIN_DRAGHANDLER_USE THEN
@@ -2906,11 +3165,19 @@
   ENDIF
  ENDIF
  IF MOVEMOUSE THEN
+  IF OLDMOVEMOUSEWINDOW!=NUWID THEN
+   IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
+    E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
+   ELSE
+    E=MouseLeaveWindowOnFrame(NUWIDToWND(OLDMOVEMOUSEWINDOW AND 32767))
+   ENDIF
+  ENDIF
   IF!(NUWID AND WIN_FRAMEFLG)THEN
    E=MouseMoveWindow(NUWID)
   ELSE
    E=MouseMoveWindowOnFrame(NUWID AND 32767)
   ENDIF
+  OLDMOVEMOUSEWINDOW=NUWID
  ENDIF
 ' IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
@@ -3357,6 +3624,11 @@
 DIM TXTBOXEX_LINE[0]
 DIM TXTBOXEX_NEXT[0]
 DIM TXTBOXEX_PREV[0]
+
+VAR TXTBOXEX_MAXCTL
+VAR TXTBOXEX_CFREE
+DIM TXTBOXEX_CLINE[0]
+DIM TXTBOXEX_CNEXT[0]
 COMMON DEF GetTextBoxExControl()
  RETURN TXTBOXEXCTL
 END
@@ -3385,12 +3657,22 @@
   TXTBOXEX_NEXT=NewArray(TXTBOXEX_LINESIZ)
   TXTBOXEX_PREV=NewArray(TXTBOXEX_LINESIZ)
   TXTBOXEX_FREE=1
+  TXTBOXEX_MAXCTL=100'1024
+  TXTBOXEX_CNEXT=NewArray(TXTBOXEX_MAXCTL)
+  TXTBOXEX_CLINE=NewArray(TXTBOXEX_MAXCTL)
   VAR I
   FOR I=1TO TXTBOXEX_LINESIZ-2
    TXTBOXEX_NEXT[I]=I+1
   NEXT
  ENDIF
 END
+DEF TXTED_NewCTL(WND)
+ VAR R=TXTBOXEX_CFREE
+ IF!R THEN RETURN 0
+ TXTBOXEX_CFREE=TXTBOXEX_CNEXT[TXTBOXEX_CFREE]
+ TXTBOXEX_CLINE[R]=1
+' SetWindowVar
+END
 DEF TXTED_NewLINE(V$,P)
  VAR R=TXTBOXEX_FREE
  IF!R THEN RETURN 0
@@ -3486,7 +3768,12 @@
 END
 COMMON DEF TextBoxExRepaint WND
  VAR E=GBeginWindow(WND)
- GCLSWindow WND,RGB(255,255,255)
+ VAR SH=GetWindowVar(WND,7)<0
+ IF SH THEN
+  GCLSWindow WND,RGB(0,0,0)
+ ELSE
+  GCLSWindow WND,RGB(255,255,255)
+ ENDIF
  VAR W=GetWindowWidth(WND)
  VAR H=GetWindowHeight(WND)
  VAR L=GetWindowVar(WND,1)
@@ -3500,29 +3787,45 @@
   SetWindowVar WND,3,CX
  ENDIF
  VAR TC=RGB(0,0,0)
- VAR Y=1,X=1,PL,LC
+ IF SH THEN TC=-1
+ VAR Y=1,X=32,PL,LC
+ VAR LINE=(GetWindowVar(WND,7)AND 2147483647),_
  WHILE 1
+  INC LINE
   V$=TXTBOXEX_VAL$[L]
-  IF GetWindowVar(WND,7)<0THEN
+  _=(LINE-(LINE DIV 1000000)*1000000) DIV 10000
+  IF LINE>=1000000THEN INC _,&H64
+  IF !_ THEN _=&H6E
+  VAR LS$=CHR$(&HE100+_)
+  _=(LINE-((LINE DIV 10000)*10000))DIV 100
+  IF LINE>=10000&&_<=&H9THEN INC _,&H64
+  IF !_ THEN _=&H6E
+  INC LS$,CHR$(&HE100+_)
+  _=LINE-((LINE DIV 100)*100)
+  IF LINE>=100&&_<=&H9THEN INC _,&H64
+  IF !_ THEN _=&H6E
+  INC LS$,CHR$(&HE100+_)
+  GPRINTWindow WND,1,Y,LS$+CHR$(&HE16F),RGB(198,198,198)
+  IF SH THEN
    TXTED_PRGPRINT WND,X,Y,V$
   ELSE
    GPRINTWindow WND,X,Y,V$,TC
   ENDIF
   PL=L
   IF L==C&&IsActiveWindow(WND)THEN
-   GFILLWindow WND,X+CX*8,Y+7,X+8+CX*8,Y+6,TC
+   GFILLWindow WND,X+CX*8,Y+7,X+7+CX*8,Y+6,TC
   ENDIF
   L=TXTBOXEX_NEXT[L]
   INC Y,8
   IF Y>=H THEN BREAK
   IF!L THEN
    IF!LEN(V$)||V$[LEN(V$)-1]!=L$THEN
-    GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
+'    GPRINTWindow WND,LEN(V$)*8,Y-8,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsActiveWindow(WND)THEN
-     GFILLWindow WND,CX*8,Y-1,8+CX*8,Y-2,TC
+     GFILLWindow WND,X+CX*8,Y-1,X+7+CX*8,Y-2,TC
     ENDIF
    ELSE
-    GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
+'    GPRINTWindow WND,X,Y,"[EOF]",RGB(80,208,255)
     IF PL==C&&IsFocusWindow(WND)THEN
   '   GFILLWindow WND,CX*8,Y+7,8+CX*8,Y+6,TC
     ENDIF
@@ -3764,7 +4067,7 @@
    IF CHKVAR("RTXTED"+I$)THEN
     GPRINTWindow WND,X,Y,I$,RGB(0,198,247)
    ELSE
-    GPRINTWindow WND,X,Y,I$,RGB(0,0,0)
+    GPRINTWindow WND,X,Y,I$,-1'RGB(0,0,0)
    ENDIF
    INC X,LEN(I$)*8
    DEC I
@@ -3775,7 +4078,7 @@
    INC X,8
    FOR I=I+1 TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
+    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
     GPUTCHRWindow WND,X,Y,A,RGB(99,132,247)
     INC X,8
     IF A==_Q THEN BREAK
@@ -3787,7 +4090,7 @@
   IF A==_S THEN
    FOR I=I TO L
     A=ASC(P$[I])
-    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
+    IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,-1BREAK
     GPUTCHRWindow WND,X,Y,A,RGB(33,247,16)
     INC X,8
    NEXT
@@ -3815,7 +4118,7 @@
      FOR I=I+1 TO L
       A=ASC(P$[I])
       IF A>_1&&A<=_9 THEN
-       GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)
+       GPUTCHRWindow WND,X,Y,A,-1'RGB(0,0,0)
        INC X,8
        S=1
        CONTINUE
@@ -3847,8 +4150,8 @@
   IF A>=_0&&A<=_9 THEN
    GPUTCHRWindow WND,X,Y,A,RGB(247,69,149)
   ELSE
-   IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,184,255)BREAK
-   GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)
+   IF A==_LF THEN GPUTCHRWindow WND,X,Y,A,RGB(0,0,0)',RGB(0,184,255)BREAK
+   GPUTCHRWindow WND,X,Y,A,-1'RGV(0,0,0)
   ENDIF
   INC X,8
  NEXT
@@ -4322,9 +4625,15 @@
 VAR OTYFILLBLCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
- GCLSWindow W,RGB(224,224,224)
- IF GetWindowVar(W,1)THEN
-  IF GetWindowVar(W,1)==2THEN
+ VAR SEL=GetWindowVar(W,3)
+ IF SEL THEN
+  GCLSWindow W,RGB(0,0,255)
+ ELSE
+  GCLSWindow W,RGB(224,224,224)
+ ENDIF
+ VAR TYP=GetWindowVar(W,1)
+ IF TYP THEN
+  IF TYP==2THEN
    GLOADWindow W,0,0,16,16,OTYFILICON,1,0
    RETURN
   ENDIF
@@ -4351,12 +4660,31 @@
  S$="OK"
  NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
 END
+COMMON DEF OTYFILLMouse WND,CTL,T,A1,A2
+ SetWindowBackColor GetWindowVar(WND,1),RGB(224,224,224)
+ SetWindowVar WND,1,0
+ SetString GetWindowVar(WND,2),""
+END
 COMMON DEF OTYFILICONCTLMouse WND,CTL,T,A1,A2
-?GetWindowName$(GetWindowVar(WND,2))
-BEEP 
+ VAR W=WND
+ IF!LEN(GetWindowName$(WND))THEN
+  W=GetWindowVar(W,2)
+ ENDIF
+ VAR PW=GetParentWindow(WND)
+ VAR OLD=GetWindowVar(PW,1)
+ IF OLD==W THEN RETURN
+ IF OLD THEN
+  SetWindowBackColor OLD,RGB(224,224,224)
+ ENDIF
+ SetWindowBackColor W,RGB(0,0,255)
+ SetWindowVar PW,1,W
+ SetString GetWindowVar(PW,2),GetWindowName$(W)
 END
+COMMON DEF OTYFILDEL WND,CTL,T,A1,A2
+ FreeString GetWindowVar(WND,2)
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
- IF ID<=5THEN
+ IF ID<=6THEN
   VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
   RETURN
  ENDIF
@@ -4369,7 +4697,7 @@
  VAR BY1=(POS MOD 40)+7
  VAR BY2=(POS MOD 40)-9
  IF OTYFILESWND!=WND THEN
-  GetFiles OTYFILES$,"SYS"
+  GetFiles OTYFILES$,""
   OTYFILESWND=WND
  ENDIF
 ' ?R,C,POS,POS DIV 16,POS DIV 40,BY1
@@ -4379,14 +4707,27 @@
  VAR F
  VAR K=(POS DIV 40)*R
  VAR KL=LEN(OTYFILES$)
+ VAR N$
+ VAR SW=GetwindowVar(WND,1)
+ VAR SN$=GetString$(GetwindowVar(WND,2))
  WHILE I
-  IF J&&!(J MOD L2) THEN INC Y,40X=0
+  IF J&&!(J MOD L2) THEN INC Y,41X=0
   IF F THEN
    IF KL<=K THEN
     VOID MoveWindow2(I,-256,-256)
    ELSE
     VOID MoveWindow2(I,X,Y-BY2)
-    SetWindowName I,RIGHT$(OTYFILES$[K],LEN(OTYFILES$[K])-1)
+    N$=RIGHT$(OTYFILES$[K],LEN(OTYFILES$[K])-1)
+    IF N$==SN$THEN
+     SetWindowBackColor I,RGB(0,0,255)
+     SetWindowVar WND,1,I
+    ENDIF
+    IF SW==I THEN
+     IF N$!=SN$THEN
+      SetWindowBackColor SW,RGB(224,224,224)
+     ENDIF
+    ENDIF
+    SetWindowName I,N$
    ENDIF
    INC K
    INC X,36
@@ -4419,7 +4760,9 @@
   ExtendControl "Files",GetWindowControl() OUT OTYFILCTL,E
   ExtendControl "FilesLabel",GetLabelControl() OUT OTYFILLBLCTL,E
   E=SetControlNotifHandler(OTYFILCTL,"OTYFILNOTIF")
-  NewControl "ICON" OUT OTYFILICONCTL,E
+  E=SetControlDeleteHandler(OTYFILCTL,"OTYFILDEL")
+  E=SetControlLMouseDownHandler(OTYFILCTL,"OTYFILLMouse")
+  NewControl "OTYFILICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
   E=SetControlLMouseDownHandler(OTYFILICONCTL,"OTYFILICONCTLMouse")
   E=SetControlLMouseDownHandler(OTYFILLBLCTL,"OTYFILICONCTLMouse")
@@ -4429,20 +4772,21 @@
   E=SetControlCreateHandler(OTYFILABOUTCTL,"OTYFILABOUTCREATE")
  ENDIF
  VAR W=36*4+8,H=64,LBL
- NewTopLevelMenuWindow OTYFILCTL,"Files SYS/",W,H OUT WND,E
+ NewTopLevelMenuWindow OTYFILCTL,"Files",W,H OUT WND,E
  VAR MENU
  NewMenu OUT MENU,E
- AddMenuItem MENU,"Copy",1
- AddMenuItem MENU,"Move",2
- AddMenuItem MENU,"Delete",3
- AddMenuItem MENU,"Rename",4
+ AddMenuItem MENU,"Open",1
+ AddMenuItem MENU,"Copy",2
+ AddMenuItem MENU,"Move",3
+ AddMenuItem MENU,"Delete",4
+ AddMenuItem MENU,"Rename",5
  AddSubMenuItem GetWindowMenu(WND),"File",MENU
  NewMenu OUT MENU,E
- AddMenuItem MENU,"About",5
+ AddMenuItem MENU,"About",6
  AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR X=8,Y,I
  OTYFILES$=NewArray$(0)
- GetFiles OTYFILES$,"SYS"
+ GetFiles OTYFILES$,""
  OTYFILESWND=WND
  VAR R=W/36
  VAR C=CEIL(H/40.0)+1
@@ -4465,6 +4809,8 @@
  VAR AW=FLOOR(LEN(OTYFILES$)/OL)*20
  NewVScrollBAR WND,AW OUT SCR,E
  SetProcessVar WND
+ SetWindowVar WND,2,AllocString("")
+ OTYFILNOTIF WND,0,0,WND,0
 END
 COMMON DEF L_OTYFIL
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
@@ -4728,7 +5074,7 @@
  E=GBeginWindow(WND)
 ' DrawSquare WND,32,0,                                         0,63,                                         63,0,                                         32,63,-1
 ' DrawSquare WND,8,8,                                         0,63,                                         32,16,                                         32,63,-1
- DrawSquare WND,8,8,0,63,32,16,32,63,0
+ DrawSquare WND,8,8,0,63,32,16,32,63,-1
  E=GEndWindow(WND)
 END
 COMMON DEF I_TRIAN
@@ -4748,4 +5094,21 @@
 COMMON DEF L_TRIAN
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR ODSKCTL
+COMMON DEF I_ODSK
+IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!ODSKCTL THEN
+  ExtendControl "ODSK",GetWindowControl() OUT ODSKCTL,E
+ ENDIF
+ NewTopLevelWindow ODSKCTL,"Desktop",256,128 OUT WIN_ROOTWND2,E
+ SetProcessVar WIN_ROOTWND2
+END
+COMMON DEF L_ODSK
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
 
