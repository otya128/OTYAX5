OPTION STRICT
OPTION DEFINT
'=======================
' OTYA 3D WINDOW SYSTEM 
'=======================
'グローバルへんすうのていぎ
VAR OTW_INIT,OTW_MOUSESP
VAR OTW_MOUSEX
VAR OTW_MOUSEY
VAR OTW_MOUSEX#,OTW_MOUSEY#
'=======================
'        WINDOW         
'=======================
VAR WIN_MAX,WIN_MSGMAX
DIM WIN_NAME$  [0]
DIM WIN_WID    [0]
DIM WIN_X      [0]
DIM WIN_Y      [0]
DIM WIN_SX     [0]
DIM WIN_SY     [0]
DIM WIN_EWIDTH [0]
DIM WIN_EHEIGHT[0]
DIM WIN_WIDTH  [0]
DIM WIN_HEIGHT [0]
DIM WIN_AX     [0]
DIM WIN_AY     [0]
DIM WIN_CTL    [0]
DIM WIN_PID    [0]
DIM WIN_NUPID  [0]
DIM WIN_DATA#  [0]
DIM WIN_DATA%  [0]
DIM WIN_DATA$  [0]
DIM WIN_NEXT   [0]
DIM WIN_PREV   [0]
DIM WIN_CHILD  [0]
DIM WIN_PARENT [0]
DIM WIN_BEGIN  [0]
'QUEUE
DIM WIN_MSGS   [0]
DIM WIN_MSGE   [0]
DIM WIN_MSGBUF [0,0,0]
VAR WIN_FREE
VAR WIN_WIDCNT
VAR WIN_MSGARGSIZE
VAR WIDSHIFT
VAR NUWIDMASK
'DRAW PAGE
VAR OTW_DP
'BUFFER PAGE
VAR OTW_BP
DEF OTW_WIN_INITARRAY
 WIN_MAX=256
 WIN_MSGMAX=64
 WIN_MSGARGSIZE=3
 WIDSHIFT=12
 NUWIDMASK=4095
 OTW_DP=0
 OTW_BP=1
 WIN_NAME$     =NewArray$(WIN_MAX)
 WIN_WID       =NewArray(WIN_MAX)
 WIN_X         =NewArray(WIN_MAX)
 WIN_Y         =NewArray(WIN_MAX)
 WIN_SX        =NewArray(WIN_MAX)
 WIN_SY        =NewArray(WIN_MAX)
 WIN_EWIDTH    =NewArray(WIN_MAX)
 WIN_EHEIGHT   =NewArray(WIN_MAX)
 WIN_WIDTH     =NewArray(WIN_MAX)
 WIN_HEIGHT    =NewArray(WIN_MAX)
 WIN_AX        =NewArray(WIN_MAX)
 WIN_AY        =NewArray(WIN_MAX)
 WIN_CTL       =NewArray(WIN_MAX)
 WIN_PID       =NewArray(WIN_MAX)
 WIN_NUPID     =NewArray(WIN_MAX)
 WIN_DATA#     =NewArray#(WIN_MAX)
 WIN_DATA%     =NewArray%(WIN_MAX)
 WIN_DATA$     =NewArray$(WIN_MAX)
 WIN_NEXT      =NewArray(WIN_MAX)
 WIN_PREV      =NewArray(WIN_MAX)
 WIN_CHILD     =NewArray(WIN_MAX)
 WIN_PARENT    =NewArray(WIN_MAX)
 WIN_BEGIN     =NewArray(WIN_MAX)
 WIN_MSGS      =NewArray(WIN_MAX)
 WIN_MSGE      =NewArray(WIN_MAX)
 WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
 WIN_FREE=1
 OTW_INITLIST WIN_NEXT
END
'=======================
'CONTROL
'=======================
VAR CTL_MAX
VAR CTL_HANDLER_MAX
DIM CTL_NAME$    [0]
DIM CTL_CID      [0]
DIM CTL_REF      [0]
DIM CTL_NEXT     [0]
DIM CTL_PARENTCTL[0]
DIM CTL_HANDLER$ [0,0]
VAR CTL_FREE
VAR CTL_CIDCNT
VAR CTL_PAINTHANDLER
VAR CTL_WINDOWCTL
DEF OTW_CTL_INITARRAY
 CTL_MAX=64
 CTL_HANDLER_MAX=16
 CTL_NAME$     =NewArray$(CTL_MAX)
 CTL_CID       =NewArray(CTL_MAX)
 CTL_NEXT      =NewArray(CTL_MAX)
 CTL_PARENTCTL =NewArray(CTL_MAX)
 CTL_HANDLER$  =NewArray2$(CTL_MAX,CTL_HANDLER_MAX)
 CTL_FREE=1
 OTW_INITLIST CTL_NEXT
 VAR E
 NewControl "WINDOW" OUT CTL_WINDOWCTL,E
 CTL_PAINTHANDLER=0
 E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
END
DEF OTW_INITLIST ARY[]
 VAR I
 FOR I=1TO LEN(ARY)-1
  ARY[I]=I+1
 NEXT
END
VAR WIN_NOALLOC
VAR WIN_INVALIDID
VAR WIN_EVENTERR
VAR CTL_NOALLOC
VAR CTL_INVALIDID
DEF OTW_INIT_ERR
 WIN_NOALLOC=1
 WIN_INVALIDID=2
 WIN_EVENTERR=3
 CTL_NOALLOC=201
 CTL_INVALIDID=202
END
COMMON DEF GetWindowControl()
 RETURN CTL_WINDOWCTL
END
'CONTROL
COMMON DEF NewControl NAME$ OUT CTL,ERR
 IF!CTL_FREE THEN
  ERR=CTL_NOALLOC
  CTL=0
  RETURN
 ENDIF
 INC CTL_CIDCNT
 ERR=0
 CTL=CIDNUCIDToCTL(CTL_FREE,CTL_CIDCNT)
 CTL_FREE=CTL_NEXT[CTL_FREE]
 CTL_CID[CTL AND 4095]=CTL_CIDCNT
 CTL_NEXT[CTL AND 4095]=0
END
COMMON DEF ExtendControl NAME$,PARENT OUT CTL,ERR
 IF!CheckControl(PARENT)THEN
  CTL=0
  ERR=CTL_INVALIDID
  RETURN
 ENDIF
 NewControl NAME$ OUT CTL,ERR
 IF ERR THEN RETURN
 VAR NUCID=CTL AND 4095
 CTL_PARENTCTL[NUCID]=PARENT
 VAR I,P=PARENT AND 4095
 FOR I=0TO CTL_HANDLER_MAX-1
  CTL_HANDLER$[NUCID,I]=CTL_HANDLER$[P,I]
 NEXT
END
COMMON DEF CheckControl(CTL)
 RETURN CTL_CID[CTL AND 4095]==CTL>>12
END
COMMON DEF DeleteControl(CTL)
 IF!CheckControl(CTL) THEN RETURN CTL_INVALIDID
 VAR NUCID=CTL AND 4095,CID=CTL>>12
 CTL_NEXT[NUCID]=CTL_FREE
 CTL_FREE=NUCID
 CTL_CID[NUCID]=0
 CTL_NAME$[NUCID]=""
 VAR I
 FOR I=0TO CTL_HANDLER_MAX-1
  CTL_HANDLER$[I]=""
 NEXT
END
COMMON DEF SetControlPainter(CTL,HANDLER$)
 IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
 CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
 RETURN 0
END
DEF CIDNUCIDToCTL(CID,NUCID)
 RETURN CID<<12OR NUCID
END
'WINDOW
DEF WIDNUWIDToWND(WID,NUWID)
 RETURN WID<<12OR NUWID
END
VAR WIN_ROOTWND
COMMON DEF GetRootWND()
 RETURN WIN_ROOTWND
END
COMMON DEF CheckWindow(WND)
 RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
END
VAR WIN_TopLevelX
VAR WIN_TopLevelY
COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
 IF!CheckControl(CTL)THEN
  WND=0
  ERR=CTL_INVALIDID
  RETURN
 ENDIF
 IF!WIN_FREE THEN
  WND=0
  ERR=WIN_NOALLOC
  RETURN
 ENDIF
 ERR=0
 INC WIN_WIDCNT
 VAR NUWID,WID
 NUWID=WIN_FREE
 WIN_FREE=WIN_NEXT[WIN_FREE]
 WID=WIN_WIDCNT
 WND=WIDNUWIDToWND(WID,NUWID)
 WIN_WID[NUWID]=WID
 WIN_CTL[NUWID]=CTL
 '
 WIN_X[NUWID]=0
 WIN_Y[NUWID]=0
 
 WIN_AX[NUWID]=WIN_TopLevelX
 WIN_AY[NUWID]=WIN_TOPLEVELY
 '
 WIN_WIDTH[NUWID]=WIDTH
 WIN_HEIGHT[NUWID]=WIDTH
 VOID RepaintWindow(WND)
 IF!WIN_ROOTWND THEN WIN_NEXT[NUWID]=0RETURN
 VAR C=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
 WIN_PARENT[NUWID]=WIN_ROOTWND  AND NUWIDMASK
 WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]=NUWID
 WIN_NEXT[NUWID]=C
 WIN_PREV[C]=NUWID
 WIN_TopLevelX=WIN_TopLevelX+8
 WIN_TopLevelY=WIN_TopLevelY+8
END
COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
 IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
 VAR NUWID=WND AND NUWIDMASK
 IF(WIN_MSGS[NUWID]+1)MOD WIN_MSGMAX==WIN_MSGE[NUWID] THEN RETURN WIN_EVENTERR
 WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],0]=TYPE
 WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],1]=A1
 WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],2]=A2
 INC WIN_MSGS[NUWID]
 IF WIN_MSGS[NUWID]>=WIN_MSGMAX THEN WIN_MSGS[NUWID]=0
 RETURN 0
END
COMMON DEF RepaintWindow(WND)
 RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
END
COMMON DEF UpdateWindow(WND)
 IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
 VAR NUWID=WND AND NUWIDMASK
 IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
 VAR NUCID=WIN_CTL[NUWID] AND 4095
 VAR S=WIN_MSGS[NUWID]
 ?CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]]
 CALL CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]],WND,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
 INC WIN_MSGE[NUWID]
 IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
 RETURN 0
END
''WINDOW GRAPHIC
COMMON DEF GBEGINWindow(WND)
 IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
 VAR NUWID=WND AND NUWIDMASK
 IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
 WIN_BEGIN[NUWID]=TRUE
 VAR AX=WIN_AX[NUWID]
 VAR AY=WIN_AY[NUWID]
 VAR W=WIN_WIDTH[NUWID]
 VAR H=WIN_HEIGHT[NUWID]
 GPAGE OTW_DP,OTW_BP
 GCLIP 1,0,0,W,H
 GCLS
 RETURN 0
END
COMMON DEF GENDWindow(WND)
 IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
 VAR NUWID=WND AND NUWIDMASK
 IF!WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
 'ごうせい
 WIN_PARENT[0]=0
 WIN_NEXT[0]=0
 VAR AX=WIN_AX[NUWID]
 VAR AY=WIN_AY[NUWID]
 VAR W=WIN_WIDTH[NUWID]
 VAR H=WIN_HEIGHT[NUWID]
 VAR PNUWID
 IF WIN_CHILD[NUWID]THEN
  PNUWID=WIN_CHILD[NUWID]
  WHILE PNUWID
   GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0  
   PNUWID=WIN_NEXT[PNUWID]
  WEND
 ENDIF
 VAR _NUWID=NUWID
 PNUWID=WIN_NEXT[NUWID]
 WHILE TRUE
  IF!PNUWID THEN
   PNUWID=WIN_PARENT[_NUWID]
   IF!PNUWID THEN BREAK
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
   CONTINUE
  ENDIF
  GCOPY OTW_DP,WIN_AX[PNUWID]+AX,WIN_AY[PNUWID]+AY,WIN_AX[PNUWID]+WIN_WIDTH[PNUWID],WIN_AY[PNUWID]+WIN_HEIGHT[PNUWID],0,0,0
  _NUWID=PNUWID
  PNUWID=WIN_NEXT[PNUWID]
 WEND
 GCLIP 1
 GPAGE OTW_DP,OTW_DP
?AX,AY,W,H
 GCOPY OTW_BP,0,0,W,H,AX,AY,0
DIALOG "A"
 RETURN 0
END
COMMON DEF GPSETWindow WND,X,Y,COL
 GPSET X,Y,COL
END
COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
 GFILL X,Y,X2,Y2,COL
END
COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
 GBOX X,Y,X2,Y2,COL
END
COMMON DEF GPRINTWindow WND,X,Y,STR$,FWIDTH,FHEIGHT
 IF FWIDTH==8&&FHEIGHT==8THEN
  
 ENDIF
END
DEF DesktopPainter WND,A1,A2
 VAR E=GBEGINWindow(WND)
 IF E THEN RETURN
 GFILLWindow WND,0,0,32,32,RGB(255,0,0)
 E=GENDWindow(WND)
END
DEF WindowPainter WND,A1,A2
END
VAR WIN_ROOTCTL
  VAR TSTWND,TSTCTL
  VAR TSTWND2
COMMON DEF I_OTW
 IF!OTW_INIT THEN
  PrintConsole "====================="+LF$()
  PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
  PrintConsole "====================="+LF$()
  OTW_INIT=TRUE
  OTW_WIN_INITARRAY
  OTW_CTL_INITARRAY
  OTW_INIT_ERR
  
  VAR E
  NewControl "DESKTOP" OUT WIN_ROOTCTL,E
  E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
  NewTopLevelWindow WIN_ROOTCTL,"",400,240 OUT WIN_ROOTWND,E
  ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
  E=SetControlPainter(TSTCTL,"HELLOPainter")
  ACLS
  XSCREEN 2
  GCLS RGB(0,0,255)
 ' VISIBLE 0,1,1,1
  OTW_MOUSEX=(400-16)/2
  OTW_MOUSEY=(240-16)/2
  OTW_MOUSEX#=(400-16)/2
  OTW_MOUSEY#=(240-16)/2
 '290
  SPSET OTW_MOUSESP,290
  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
 ENDIF
RETURN
END
COMMON DEF HELLOPainter WND,A1,A2
 VAR E=GBEGINWindow(WND)
 IF E THEN RETURN
 GFILLWindow WND,0,0,64,64,RGB(255,255,0)
 GBOXWindow WND,0,0,64,64,RGB(128,128,128)
 E=GENDWindow(WND)
END
COMMON DEF L_OTW
' ?OTW_INIT
 UpdateMouse
 VOID UpdateWindow(TSTWND)
 VOID UpdateWindow(WIN_ROOTWND)
 VOID UpdateWindow(TSTWND2)
' ExitProcess 1
RETURN
END
VAR OTW_MOUSEOLDX,OTW_MOUSEOLDY,OTW_MOUSEOLDST
COMMON DEF UpdateMouse
 VAR S,X,Y
 TOUCH OUT S,X,Y
 IF OTW_MOUSEOLDST AND S THEN
  OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
  OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
   OTW_MOUSEX#=OTW_MOUSEX
   OTW_MOUSEY#=OTW_MOUSEY
 ENDIF
 OTW_MOUSEOLDX=X
 OTW_MOUSEOLDY=Y
 OTW_MOUSEOLDST=S
 IF!S THEN
  VAR X#,Y#
  STICK OUT X#,Y#
  IF X#!=0 OR Y#!=0 THEN
   OTW_MOUSEX#=OTW_MOUSEX#+X#/2
   OTW_MOUSEY#=OTW_MOUSEY#-Y#/2
   SPOFS OTW_MOUSESP,OTW_MOUSEX#,OTW_MOUSEY#
   OTW_MOUSEX=OTW_MOUSEX#
   OTW_MOUSEY=OTW_MOUSEY#
  ENDIF
 ENDIF
END
COMMON DEF OTWSAVE VER$
 SAVE"PRG1:OTW"+VER$
END

DEF OTW_LOADFONT
' READ C$
 
DATA "A"
DATA "000F0000"
DATA "00F0F000"
DATA "0F000F00"
DATA "0F000F00"
DATA "0FFFFF00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00000000"
DATA "B"
DATA "0FFFF000"
DATA "0F000F00"
DATA "0F000F00"
DATA "0FFFF000"
DATA "0F000F00"
DATA "0F000F00"
DATA "0FFFF000"
DATA "00000000"
DATA "C"
DATA "00FFF000"
DATA "0F000F00"
DATA "0F000000"
DATA "0F000000"
DATA "0F000000"
DATA "0F000F00"
DATA "00FFF000"
DATA "00000000"
DATA "D"
DATA "0FFF0000"
DATA "0F00F000"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F00F000"
DATA "0FFF0000"
DATA "00000000"
DATA "E"
DATA "0FFFFF00"
DATA "0F000000"
DATA "0F000000"
DATA "0FFFF000"
DATA "0F000000"
DATA "0F000000"
DATA "0FFFFF00"
DATA "00000000"
DATA "F"
DATA "0FFFFF00"
DATA "0F000000"
DATA "0F000000"
DATA "0FFFF000"
DATA "0F000000"
DATA "0F000000"
DATA "0F000000"
DATA "00000000"
DATA "G"
DATA "00FFFF00"
DATA "0F000000"
DATA "0F000000"
DATA "0F0FFF00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00FFFF00"
DATA "00000000"
DATA "H"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0FFFFF00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00000000"
DATA "I"
DATA "00FFF000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "00FFF000"
DATA "00000000"
DATA "J"
DATA "000FFF00"
DATA "0000F000"
DATA "0000F000"
DATA "0000F000"
DATA "0000F000"
DATA "0F00F000"
DATA "00FF0000"
DATA "00000000"
DATA "K"
DATA "0F000F00"
DATA "0F00F000"
DATA "0F0F0000"
DATA "0FF00000"
DATA "0F0F0000"
DATA "0F00F000"
DATA "0F000F00"
DATA "00000000"
DATA "L"
DATA "0F000000"
DATA "0F000000"
DATA "0F000000"
DATA "0F000000"
DATA "0F000000"
DATA "0F000000"
DATA "0FFFFF00"
DATA "00000000"
DATA "M"
DATA "0F000F00"
DATA "0FF0FF00"
DATA "0F0F0F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00000000"
DATA "N"
DATA "0F000F00"
DATA "0FF00F00"
DATA "0F0F0F00"
DATA "0F00FF00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00000000"
DATA "O"
DATA "00FFF000"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00FFF000"
DATA "00000000"
DATA "P"
DATA "0FFFF000"
DATA "0F000F00"
DATA "0F000F00"
DATA "0FFFF000"
DATA "0F000000"
DATA "0F000000"
DATA "0F000000"
DATA "00000000"
DATA "Q"
DATA "00FFF000"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F0F0F00"
DATA "0F00F000"
DATA "00FF0F00"
DATA "00000000"
DATA "R"
DATA "0FFFF000"
DATA "0R000F00"
DATA "0F000F00"
DATA "0FFFF000"
DATA "0F0F0000"
DATA "0F00F000"
DATA "0F000F00"
DATA "00000000"
DATA "S"
DATA "00FFF000"
DATA "0F000F00"
DATA "0F000000"
DATA "00FFF000"
DATA "00000F00"
DATA "0F000F00"
DATA "00FFF000"
DATA "00000000"
DATA "T"
DATA "0FFFFF00"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "00000000"
DATA "U"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00FFF000"
DATA "00000000"
DATA "V"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "00F0F000"
DATA "00F0F000"
DATA "000F0000"
DATA "000F0000"
DATA "00000000"
DATA "W"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F000F00"
DATA "0F0F0F00"
DATA "0FF0FF00"
DATA "0F000F00"
DATA "00000000"
DATA "X"
DATA "0F000F00"
DATA "0F000F00"
DATA "00F0F000"
DATA "000F0000"
DATA "00F0F000"
DATA "0F000F00"
DATA "0F000F00"
DATA "00000000"
DATA "Y"
DATA "0F000F00"
DATA "0F000F00"
DATA "00F0F000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "000F0000"
DATA "00000000"
DATA "Z"
DATA "0FFFFF00"
DATA "00000F00"
DATA "0000F000"
DATA "000F0000"
DATA "00F00000"
DATA "0F000000"
DATA "0FFFFF00"
DATA "00000000"
DATA "END"
DATA "a"
DATA "00000000"
DATA "00000000"
DATA "00000000"
DATA "00000000"
DATA "00000000"
DATA "00000000"
DATA "00000000"
DATA "00000000"

END
