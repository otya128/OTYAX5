diff -u OTW.TXT OTW2
--- OTW.TXT
+++ OTW2
@@ -24,8 +24,7 @@
 DIM WIN_HEIGHT [0]
 DIM WIN_AX     [0]
 DIM WIN_AY     [0]
-DIM WIN_CID    [0]
-DIM WIN_NUCID  [0]
+DIM WIN_CTL    [0]
 DIM WIN_PID    [0]
 DIM WIN_NUPID  [0]
 DIM WIN_DATA#  [0]
@@ -35,36 +34,46 @@
 DIM WIN_PREV   [0]
 DIM WIN_CHILD  [0]
 DIM WIN_PARENT [0]
-DIM WIN_MSGBUF [0,0]
+'QUEUE
+DIM WIN_MSGS   [0]
+DIM WIN_MSGE   [0]
+DIM WIN_MSGBUF [0,0,0]
 VAR WIN_FREE
 VAR WIN_WIDCNT
+VAR WIN_MSGARGSIZE
+VAR WIDSHIFT
+VAR NUWIDMASK
 DEF OTW_WIN_INITARRAY
  WIN_MAX=256
- WIN_MSGMAX=256
- WIN_NAME$     =NEW_ARRAY$(WIN_MAX)
- WIN_WID       =NEW_ARRAY(WIN_MAX)
- WIN_X         =NEW_ARRAY(WIN_MAX)
- WIN_Y         =NEW_ARRAY(WIN_MAX)
- WIN_SX        =NEW_ARRAY(WIN_MAX)
- WIN_SY        =NEW_ARRAY(WIN_MAX)
- WIN_EWIDTH    =NEW_ARRAY(WIN_MAX)
- WIN_EHEIGHT   =NEW_ARRAY(WIN_MAX)
- WIN_WIDTH     =NEW_ARRAY(WIN_MAX)
- WIN_HEIGHT    =NEW_ARRAY(WIN_MAX)
- WIN_AX        =NEW_ARRAY(WIN_MAX)
- WIN_AY        =NEW_ARRAY(WIN_MAX)
- WIN_CID       =NEW_ARRAY(WIN_MAX)
- WIN_NUCID     =NEW_ARRAY(WIN_MAX)
- WIN_PID       =NEW_ARRAY(WIN_MAX)
- WIN_NUPID     =NEW_ARRAY(WIN_MAX)
- WIN_DATA#     =NEW_ARRAY#(WIN_MAX)
- WIN_DATA%     =NEW_ARRAY%(WIN_MAX)
- WIN_DATA$     =NEW_ARRAY$(WIN_MAX)
- WIN_NEXT      =NEW_ARRAY(WIN_MAX)
- WIN_PREV      =NEW_ARRAY(WIN_MAX)
- WIN_CHILD     =NEW_ARRAY(WIN_MAX)
- WIN_PARENT    =NEW_ARRAY(WIN_MAX)
- WIN_MSGBUF    =NEW_ARRAY2(WIN_MAX,WIN_MSGMAX)
+ WIN_MSGMAX=64
+ WIN_MSGARGSIZE=3
+ WIDSHIFT=12
+ NUWIDMASK=4095
+ WIN_NAME$     =NewArray$(WIN_MAX)
+ WIN_WID       =NewArray(WIN_MAX)
+ WIN_X         =NewArray(WIN_MAX)
+ WIN_Y         =NewArray(WIN_MAX)
+ WIN_SX        =NewArray(WIN_MAX)
+ WIN_SY        =NewArray(WIN_MAX)
+ WIN_EWIDTH    =NewArray(WIN_MAX)
+ WIN_EHEIGHT   =NewArray(WIN_MAX)
+ WIN_WIDTH     =NewArray(WIN_MAX)
+ WIN_HEIGHT    =NewArray(WIN_MAX)
+ WIN_AX        =NewArray(WIN_MAX)
+ WIN_AY        =NewArray(WIN_MAX)
+ WIN_CTL       =NewArray(WIN_MAX)
+ WIN_PID       =NewArray(WIN_MAX)
+ WIN_NUPID     =NewArray(WIN_MAX)
+ WIN_DATA#     =NewArray#(WIN_MAX)
+ WIN_DATA%     =NewArray%(WIN_MAX)
+ WIN_DATA$     =NewArray$(WIN_MAX)
+ WIN_NEXT      =NewArray(WIN_MAX)
+ WIN_PREV      =NewArray(WIN_MAX)
+ WIN_CHILD     =NewArray(WIN_MAX)
+ WIN_PARENT    =NewArray(WIN_MAX)
+ WIN_MSGS      =NewArray(WIN_MAX)
+ WIN_MSGE      =NewArray(WIN_MAX)
+ WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
 END
@@ -77,25 +86,24 @@
 DIM CTL_CID     [0]
 DIM CTL_REF     [0]
 DIM CTL_NEXT    [0]
-DIM CTL_HANDLER$[0]
+DIM CTL_HANDLER$[0,0]
 VAR CTL_FREE
 VAR CTL_CIDCNT
 VAR CTL_PAINTHANDLER
-VAR CTL_WINDOWCID
-VAR CTL_WINDOWNUCID
+VAR CTL_WINDOWCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
  CTL_HANDLER_MAX=16
- CTL_NAME$     =NEW_ARRAY$(CTL_MAX)
- CTL_CID       =NEW_ARRAY(CTL_MAX)
- CTL_NEXT      =NEW_ARRAY(CTL_MAX)
- CTL_HANDLER$  =NEW_ARRAY2(CTL_MAX,CTL_HANDLER_MAX)
+ CTL_NAME$     =NewArray$(CTL_MAX)
+ CTL_CID       =NewArray(CTL_MAX)
+ CTL_NEXT      =NewArray(CTL_MAX)
+ CTL_HANDLER$  =NewArray2$(CTL_MAX,CTL_HANDLER_MAX)
  CTL_FREE=1
  OTW_INITLIST CTL_NEXT
  VAR E
- NewControl "WINDOW" OUT CTL_WINDOWCID,CTL_WINDOWNUCID,E
+ NewControl "WINDOW" OUT CTL_WINDOWCTL,E
  CTL_PAINTHANDLER=0
- E=SetControlPainter(CTL_WINDOWCID,CTL_WINDOWNUCID,"WindowPainter")
+ E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -105,43 +113,38 @@
 END
 VAR WIN_NOALLOC
 VAR WIN_INVALIDID
+VAR WIN_EVENTERR
 VAR CTL_NOALLOC
 VAR CTL_INVALIDID
 DEF OTW_INIT_ERR
  WIN_NOALLOC=1
  WIN_INVALIDID=2
+ WIN_EVENTERR=3
  CTL_NOALLOC=201
  CTL_INVALIDID=202
 END
-COMMON DEF GetWindowControl OUT CID,NUCID
- CID=CTL_WINDOWCID
- NUCID=CTL_WINDOWNUCID
+COMMON DEF GetWindowControl()
+ RETURN CTL_WINDOWCTL
 END
-COMMON DEF GetWindowControlCID()
- RETURN CTL_WINDOWCID
-END
-COMMON DEF GetWindowControlNUCID()
- RETURN CTL_WINDOWNUCID
-END
 'CONTROL
-COMMON DEF NewControl NAME$ OUT CID,NUCID,ERR
+COMMON DEF NewControl NAME$ OUT CTL,ERR
  IF!CTL_FREE THEN
   ERR=CTL_NOALLOC
-  CID=-1:NUCID=0
+  CTL=0
   RETURN
  ENDIF
  INC CTL_CIDCNT
  ERR=0
- NUCID=CTL_FREE
- CID=CTL_CIDCNT
- CTL_NEXT[NUCID]=0
+ CTL=CIDNUCIDToCTL(CTL_FREE,CTL_CIDCNT)
+ CTL_NEXT[CTL AND 4095]=0
  CTL_FREE=CTL_NEXT[CTL_FREE]
 END
-COMMON DEF CheckControl(CID,NUCID)
- RETURN CTL_CID[NUCID]==CID
+COMMON DEF CheckControl(CTL)
+ RETURN CTL_CID[CTL AND 4095]==CTL>>12
 END
-COMMON DEF DeleteControl(CID,NUCID)
- IF!CheckControl(CID,NUCID) THEN RETURN CTL_INVALIDID
+COMMON DEF DeleteControl(CTL)
+ IF!CheckControl(CTL) THEN RETURN CTL_INVALIDID
+ VAR NUCID=CTL AND 4095,CID=CTL>>12
  CTL_NEXT[NUCID]=CTL_FREE
  CTL_FREE=NUCID
  CTL_CID[NUCID]=0
@@ -151,59 +154,84 @@
   CTL_HANDLER$[I]=""
  NEXT
 END
-COMMON DEF SetControlPainter(CID,NUCID,HANDLER$)
- IF!CheckControl(CID,NUCID)THEN RETURN CTL_INVALIDID
- CTL_HANDLER$[NUCID,CTL_PAINTHANDLER]=HANDLER$
+COMMON DEF SetControlPainter(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_PAINTHANDLER]=HANDLER$
  RETURN 0
 END
+DEF CIDNUCIDToCTL(CID,NUCID)
+ RETURN CID<<12OR NUCID
+END
 'WINDOW
-VAR WIN_ROOTWID
-VAR WIN_ROOTNUWID
-COMMON DEF GetRootWID()
- RETURN WIN_ROOTWID
+DEF WIDNUWIDToWND(WID,NUWID)
+ RETURN WID<<12OR NUWID
 END
-COMMON DEF GetRootNUWID()
- RETURN WIN_ROOTNUWID
+VAR WIN_ROOTWND
+COMMON DEF GetRootWND()
+ RETURN WIN_ROOTWND
 END
-
-COMMON DEF NewRootWindow CID,NUCID,NAME$,WIDTH,HEIGHT OUT WID,NUWID,ERR
- IF!CheckControl(CID,NUCID)THEN
-  WID=0
-  NUWID=0
+COMMON DEF CheckWindow(WND)
+ RETURN WIN_WID[WND AND NUWIDMASK]==WND>>WIDSHIFT
+END
+COMMON DEF NewRootWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+ IF!CheckControl(CTL)THEN
+  WND=0
   ERR=CTL_INVALIDID
   RETURN
  ENDIF
  IF!WIN_FREE THEN
-  WID=0
-  NUWID=0
+  WND=0
   ERR=WIN_NOALLOC
   RETURN
  ENDIF
  ERR=0
  INC WIN_WIDCNT
+ VAR NUWID,WID
  NUWID=WIN_FREE
  WIN_FREE=WIN_NEXT[WIN_FREE]
  WID=WIN_WIDCNT
+ WND=WIDNUWIDToWND(WID,NUWID)
  WIN_WID[NUWID]=WID
- WIN_CID[NUWID]=CID
- WIN_NUCID[NUWID]=NUCID
+ WIN_CTL[NUWID]=CTL
  '
  WIN_X[NUWID]=0
  WIN_Y[NUWID]=0
  '
  WIN_WIDTH[NUWID]=WIDTH
  WIN_HEIGHT[NUWID]=WIDTH
- IF!WIN_ROOTNUWID THEN RETURN
- VAR C=WIN_CHILD[WIN_ROOTNUWID]
- WIN_CHILD[WIN_ROOTNUWID]=NUWID
+ VOID RepaintWindow(WND)
+ IF!WIN_ROOTWND THEN RETURN
+ VAR C=WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]
+ WIN_CHILD[WIN_ROOTWND AND NUWIDMASK]=NUWID
  WIN_NEXT[NUWID]=C
  WIN_PREV[C]=NUWID
 END
-
-DEF WindowPainter WID,NUWID
+COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF(WIN_MSGS[NUWID]+1)MOD WIN_MSGMAX==WIN_MSGE[NUWID] THEN RETURN WIN_EVENTERR
+ WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],0]=TYPE
+ WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],1]=A1
+ WIN_MSGBUF[NUWID,WIN_MSGS[NUWID],2]=A2
+ INC WIN_MSGS[NUWID]
+ IF WIN_MSGS[NUWID]>=WIN_MSGMAX THEN WIN_MSGS[NUWID]=0
+ RETURN 0
 END
-VAR WIN_ROOTCID
-VAR WIN_ROOTNUCID
+COMMON DEF RepaintWindow(WND)
+ RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
+END
+COMMON DEF UpdateWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
+ ?"A"
+ INC WIN_MSGE[NUWID]
+ IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
+ RETURN 0
+END
+DEF WindowPainter WND
+END
+VAR WIN_ROOTCTL
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
   PrintConsole "====================="+LF$()
@@ -215,8 +243,9 @@
   OTW_INIT_ERR
   
   VAR E
-  NewControl "DESKTOP" OUT WIN_ROOTCID,WIN_ROOTNUCID,E
-  E=SetControlPainter(WIN_ROOTCID,WIN_ROOTNUCID,"DesktopPainter")
+  NewControl "DESKTOP" OUT WIN_ROOTCTL,E
+  E=SetControlPainter(WIN_ROOTCTL,"DesktopPainter")
+  NewRootWindow WIN_ROOTCTL,"",400,240 OUT WIN_ROOTWND,E
   ACLS
   XSCREEN 2
   GCLS RGB(0,0,255)
@@ -233,7 +262,8 @@
 END
 COMMON DEF L_OTW
 ' ?OTW_INIT
-UpdateMouse
+ UpdateMouse
+ VOID UpdateWindow(WIN_ROOTWND)
 ' ExitProcess 1
 RETURN
 END
@@ -263,7 +293,7 @@
   ENDIF
  ENDIF
 END
-DEF OTWSAVE VER$
+COMMON DEF OTWSAVE VER$
  SAVE"PRG1:OTW"+VER$
 END
 
