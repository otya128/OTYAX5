diff -u OTW.TXT OTW8
--- OTW.TXT
+++ OTW8
@@ -4,7 +4,7 @@
 ' OTYA 3D WINDOW SYSTEM 
 '=======================
 'グローバルへんすうのていぎ
-VAR OTW_INIT,OTW_MOUSESP
+VAR OTW_INIT,OTW_MOUSESP,OTW_MOVWINSP
 VAR OTW_MOUSEX
 VAR OTW_MOUSEY
 VAR OTW_MOUSEX#,OTW_MOUSEY#
@@ -23,6 +23,10 @@
 DIM WIN_HEIGHT [0]
 DIM WIN_AX     [0]
 DIM WIN_AY     [0]
+DIM WIN_FX     [0]
+DIM WIN_FY     [0]
+DIM WIN_FWIDTH [0]
+DIM WIN_FHEIGHT[0]
 DIM WIN_CTL    [0]
 DIM WIN_PID    [0]
 DIM WIN_NUPID  [0]
@@ -44,17 +48,18 @@
 VAR WIN_MSGARGSIZE
 VAR WIDSHIFT
 VAR NUWIDMASK
+VAR WIN_FRAMEFLG
 'DRAW PAGE
 VAR OTW_DP
 'SHOW PAGE
 VAR OTW_SP
 'BUFFER PAGE
 VAR OTW_BP
-VAR OTW_WIN_FWIDTH
-VAR OTW_WIN_FHEIGHT
-VAR OTW_WIN_FWIDTH2
-VAR OTW_WIN_FHEIGHT2
-'
+VAR WIN_FWIDTH1
+VAR WIN_FHEIGHT1
+VAR WIN_FWIDTH2
+VAR WIN_FHEIGHT2
+'H1
 '          
 '
 '          
@@ -62,16 +67,21 @@
 '          
 '          
 '          
-'
+'H2
 '⇔⇔
+'W1         W2
 '
 DEF OTW_WIN_INITARRAY
- OTW_WIN_FHEIGHT=10
+ WIN_FWIDTH1=1
+ WIN_FHEIGHT1=10
+ WIN_FWIDTH2=1
+ WIN_FHEIGHT2=1
  WIN_MAX=256
  WIN_MSGMAX=64
  WIN_MSGARGSIZE=3
  WIDSHIFT=12
  NUWIDMASK=4095
+ WIN_FRAMEFLG=32768
  WIN_NAME$     =NewArray$(WIN_MAX)
  WIN_WID       =NewArray(WIN_MAX)
  WIN_X         =NewArray(WIN_MAX)
@@ -80,6 +90,10 @@
  WIN_HEIGHT    =NewArray(WIN_MAX)
  WIN_AX        =NewArray(WIN_MAX)
  WIN_AY        =NewArray(WIN_MAX)
+ WIN_FX        =NewArray(WIN_MAX)
+ WIN_FY        =NewArray(WIN_MAX)
+ WIN_FWIDTH    =NewArray(WIN_MAX)
+ WIN_FHEIGHT   =NewArray(WIN_MAX)
  WIN_CTL       =NewArray(WIN_MAX)
  WIN_PID       =NewArray(WIN_MAX)
  WIN_NUPID     =NewArray(WIN_MAX)
@@ -114,7 +128,14 @@
 VAR CTL_PAINTHANDLER
 VAR CTL_LBTNUPHANDLER
 VAR CTL_LBTNDWNHANDLER
+VAR CTL_RBTNUPHANDLER
+VAR CTL_RBTNDWNHANDLER
+VAR CTL_FRMBTNHANDLER
 VAR CTL_DRWFRMHANDLER
+VAR CTL_LBTNFLG
+VAR CTL_RBTNFLG
+VAR CTL_BTNDWNFLG
+VAR CTL_BTNUPFLG
 VAR CTL_WINDOWCTL
 DEF OTW_CTL_INITARRAY
  CTL_MAX=64
@@ -131,9 +152,19 @@
  CTL_PAINTHANDLER=0
  CTL_LBTNDWNHANDLER=1
  CTL_LBTNUPHANDLER=2
- CTL_DRWFRMHANDLER=3
+ CTL_RBTNUPHANDLER=3
+ CTL_RBTNDWNHANDLER=4
+
+ CTL_FRMBTNHANDLER=5
+ 'A1=,A2=bit16~31Y,Xbit0~15
+ CTL_LBTNFLG=4
+ CTL_RBTNFLG=8
+ CTL_BTNDWNFLG=1
+ CTL_BTNUPFLG=2
+' CTL_DRWFRMHANDLER=3
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
+ E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
@@ -210,6 +241,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_LBTNUPHANDLER]=HANDLER$
  RETURN 0
 END
+DEF SetControlClickFrameHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
@@ -263,6 +299,8 @@
  '
  WIN_WIDTH[NUWID]=WIDTH
  WIN_HEIGHT[NUWID]=HEIGHT
+ WIN_FWIDTH[NUWID]=WIDTH
+ WIN_FHEIGHT[NUWID]=HEIGHT
  WIN_NEXT[NUWID]=0
  GCLIP 1,0,240,400,480
  VOID RepaintWindow(WND)
@@ -307,12 +345,20 @@
  WIN_TopLevelY=WIN_TopLevelY+8
  WIN_TopLevelX=WIN_TopLevelX+8
  WIN_TopLevelY=WIN_TopLevelY+8
+ WIN_FX[NUWID]=WIN_TopLevelX
+ WIN_FY[NUWID]=WIN_TOPLEVELY
  WIN_AX[NUWID]=WIN_TopLevelX
- WIN_AY[NUWID]=WIN_TOPLEVELY
- GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
+ WIN_AY[NUWID]=WIN_TOPLEVELY-WIN_FHEIGHT1
+ 
+' WIN_WIDTH[NUWID]=WIDTH+WIN_FWIDTH+
+' WIN_HEIGHT[NUWID]=HEIGHT
+ 
+ WIN_HEIGHT[NUWID]=WIN_HEIGHT[NUWID]+WIN_FHEIGHT1
+ OTW_DrawMap
  GCLIP 1,0,0,400,240
- SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID]-OTW_WIN_FHEIGHT,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1+OTW_WIN_FHEIGHT,1
- SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID]-OTW_WIN_FHEIGHT,0
+' GFILL WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID],RGB(255,255,255)
+ SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+ SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
  SPSHOW SP
 'SPSET FRAME,0
  SPSCALE FRAME,WIN_WIDTH[NUWID]+3,WIN_HEIGHT[NUWID]+11
@@ -336,6 +382,12 @@
   NUWID=WIN_NEXT[NUWID]
  WEND
 END
+COMMON DEF OTW_DrawMap NUWID
+ GCLIP 1,0,240,400,480
+ GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(WIN_FRAMEFLG OR NUWID)
+ GFILL WIN_FX[NUWID],WIN_FY[NUWID]+240,WIN_FX[NUWID]+WIN_FWIDTH[NUWID],WIN_FY[NUWID]+WIN_FHEIGHT[NUWID]+240,ShortToRGB(NUWID)
+ GCLIP 1,0,0,400,240
+END
 COMMON DEF FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -362,9 +414,7 @@
    ENDIF
   WEND
  VOID RepaintWindow(WND)
- GCLIP 1,0,240,400,480
- GFILL WIN_AX[NUWID],WIN_AY[NUWID]+240,WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]+240,ShortToRGB(NUWID)
- GCLIP 1,0,0,400,240
+ OTW_DrawMap
  RETURN 0
 END
 COMMON DEF SendWindowEvent(WND,TYPE,A1,A2)
@@ -388,22 +438,90 @@
 COMMON DEF LMouseDownWindow(WND)
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX,OTW_MOUSEY)
 END
+DEF LMouseDownWindowOnFrame(WND)
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+END
+DEF LMouseUpWindowOnFrame(WND)
+ RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNUPFLG,JoinInt(OTW_MOUSEX,OTW_MOUSEY))
+END
+COMMON DEF CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL=CTL_PARENTCTL[CTL AND 4095]
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID 
+ CALL CTL_HANDLER$[CTL AND 4095,TYPE],WND,CTL,TYPE,A1,A2
+ RETURN 0
+END
 COMMON DEF UpdateWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  VAR NUCID=WIN_CTL[NUWID] AND 4095
  VAR S=WIN_MSGE[NUWID]
- ?"HND";CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]]
- CALL CTL_HANDLER$[NUCID,WIN_MSGBUF[NUWID,S,0]],WND,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
+ VAR TYPE=WIN_MSGBUF[NUWID,S,0]
+ CALL CTL_HANDLER$[NUCID,TYPE],WND,WIN_CTL[NUWID],TYPE,WIN_MSGBUF[NUWID,S,1],WIN_MSGBUF[NUWID,S,2]
  INC WIN_MSGE[NUWID]
  IF WIN_MSGE[NUWID]>=WIN_MSGMAX THEN WIN_MSGE[NUWID]=0
+ IF WIN_BEGIN[NUWID]THEN VOID GEndWindow(WND)
  RETURN 0
 END
+VAR WIN_DRAGHANDLER$
+VAR WIN_DRAGHANDLER_A1
+VAR WIN_DRAGHANDLER_A2
+VAR WIN_DRAGHANDLER_USE
+VAR WIN_DRAGHANDLER_WND
+VAR WIN_DRG_USE
+VAR WIN_DRG_NUSE
+DEF SetWindowDragHandler(NAME$,WND,A1,A2)
+ IF WIN_DRAGHANDLER_USE&&CheckWindow(WIN_DRAGHANDLER_WND)THEN
+  RETURN WIN_DRG_USE
+ ENDIF
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ WIN_DRAGHANDLER_USE=TRUE
+ WIN_DRAGHANDLER$=NAME$
+ WIN_DRAGHANDLER_A1=A1
+ WIN_DRAGHANDLER_A2=A2
+ WIN_DRAGHANDLER_WND=WND
+ RETURN 0
+END
+DEF ClearWindowDragHandler()
+ IF!WIN_DRAGHANDLER_USE THEN RETURN WIN_DRG_NUSE
+ WIN_DRAGHANDLER_USE=FALSE
+ WIN_DRAGHANDLER$=""
+ WIN_DRAGHANDLER_A1=0
+ WIN_DRAGHANDLER_A2=0
+ WIN_DRAGHANDLER_WND=0
+ RETURN 0
+END
 ''WINDOW GRAPHIC
 COMMON DEF GBEGINWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_BEGIN[NUWID]==1THEN RETURN WIN_EVENTERR
+ WIN_BEGIN[NUWID]=TRUE
+ VAR AX=WIN_FX[NUWID]
+ VAR AY=WIN_FY[NUWID]
+ VAR W=WIN_WIDTH[NUWID]
+ VAR H=WIN_HEIGHT[NUWID]
+ GPAGE OTW_SP,OTW_BP
+ GCLIP 1,AX,AY,AX+W,AY+H
+ GCLS
+ RETURN 0
+END
+DEF ReGBEGINWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
+ INC WIN_BEGIN[NUWID]
+ VAR AX=WIN_FX[NUWID]
+ VAR AY=WIN_FY[NUWID]
+ VAR W=WIN_WIDTH[NUWID]
+ VAR H=WIN_HEIGHT[NUWID]
+ GPAGE OTW_SP,OTW_BP
+ GCLIP 1,AX,AY,AX+W,AY+H
+ RETURN 0
+END
+DEF GBEGINFrameWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
  WIN_BEGIN[NUWID]=TRUE
  VAR AX=WIN_AX[NUWID]
@@ -459,32 +577,32 @@
   _NUWID=PNUWID
   PNUWID=WIN_NEXT[PNUWID]
  WEND
- GCLIP 1,0,0,400,240
  GPAGE OTW_SP,OTW_DP
 ?AX,AY,W,H
 ' GCOPY OTW_BP,0,0,W,H,AX,AY,0
  GCOPY OTW_BP,AX,AY,AX+W,AY+H,AX,AY,0
- DIALOG"A
+ GCLIP 1,0,0,400,240
+' DIALOG"A
  RETURN 0
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  GPSET X+AX,Y+AY,COL
 END
 COMMON DEF GFILLWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  GFILL X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GBOXWindow WND,X,Y,X2,Y2,COL
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  GBOX X+AX,Y+AY,X2+AX,Y2+AY,COL
 END
 COMMON DEF GPRINTWindow WND,X,Y,STR$
- VAR AX=WIN_AX[WND AND NUWIDMASK]
- VAR AY=WIN_AY[WND AND NUWIDMASK]
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
  X=X+AX:Y=Y+AY
  VAR L=LEN(STR$)-1,C$,A,BX,BY,I
  FOR I=0TO L
@@ -501,18 +619,66 @@
   X=X+8
  NEXT
 END
-DEF DesktopPainter WND,A1,A2
-'RETURN
+DEF DesktopPainter WND,CTL,TYPE,A1,A2
+RETURN
  VAR E=GBEGINWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,0,32,32,RGB(255,0,0)
  E=GENDWindow(WND)
 END
-DEF WindowPainter WND,A1,A2
+DEF GetWindowFrameWidth(WND)
+ RETURN WIN_WIDTH[WND AND NUWIDMASK]
 END
-DEF WindowLMouseUP WND,A1,A2
+DEF GetWindowFrameHeight(WND)
+ RETURN WIN_FHEIGHT1
+END
+common def GetWindowName$(wnd)
+ return win_name$[wnd and nuwidmask]
+end
+DEF WindowPainter WND,CTL,TYPE,A1,A2
+ VAR E=GBeginFrameWindow(WND)
+ IF E THEN RETURN
+ GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
+ GPRINTWindow WND,0,-GetWindowFrameHeight(WND),GetWindowName$(WND)
+ E=ReGBeginWindow(WND)
+' E=GEndWindow(WND)
+END
+DEF WindowLMouseUP WND,CTL,TYPE,A1,A2
  VAR E=FrontWindow(WND)
 END
+DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
+ VAR X,Y
+ SplitInt POS OUT X,Y
+ IF BTN AND CTL_LBTNFLG THEN
+  VAR NUWID=WND AND NUWIDMASK
+  IF BTN AND CTL_BTNDWNFLG THEN
+   VAR AX=WIN_AX[NUWID]
+   VAR AY=WIN_AY[NUWID]
+   IF SetWindowDragHandler("WindowDragFrame",WND,AX-X,AY-Y)THEN RETURN
+   SPSHOW OTW_MOVWINSP
+   SPSCALE OTW_MOVWINSP,WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
+   SPCOLOR OTW_MOVWINSP,RGB(128,80,208,255)
+   SPOFS OTW_MOVWINSP,AX-X,AY-Y,-256
+   SPLINK OTW_MOVWINSP,OTW_MOUSESP
+   SPVAR OTW_MOVWINSP,1,NUWID
+   SPVAR OTW_MOVWINSP,2,AX-X
+   SPVAR OTW_MOVWINSP,3,AY-Y
+  ELSE
+    ?X,Y
+   IF SPVAR(OTW_MOVWINSP,1)==NUWID THEN
+    ?X,Y
+   ENDIF
+  ENDIF
+ ENDIF
+END
+DEF WindowDragFrame WND,MX,MY,A1X,A2Y
+ 'VAR NUWID=WND AND NUWIDMASK
+ VAR X=MX+A1X
+ VAR Y=MY+A1Y
+ VAR E=MoveWindow(WND,X,Y)
+ SPHIDE OTW_MOVWINSP
+ SPUNLINK OTW_MOVWINSP
+END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
  GPSET 408,0,-1
@@ -549,11 +715,24 @@
   OTW_SP=0
   OTW_BP=1
   GPAGE OTW_SP,OTW_DP
-' GCLS RGB(0,0,255)
   GCLS 
+' GCLS RGB(0,0,255)
   OTW_INITSP
-  XSCREEN 2
-
+  XSCREEN 2,512,2
+  DISPLAY 1
+  VISIBLE 0,0,1,0
+  BGSCREEN 0,25,15
+  BGSCALE 0,20/25,1
+  VAR X,Y,I
+  FOR Y=0TO 14
+   FOR X=0TO 24
+    BGPUT 0,X,Y,I
+    INC I
+   NEXT
+  I=I+7
+  NEXT
+  BGPAGE OTW_DP
+  DISPLAY 0
   PrintConsole "====================="+LF$()
   PrintConsole "OTYA 3D WINDOW SYSTEM"+LF$()
   PrintConsole "====================="+LF$()
@@ -568,7 +747,7 @@
   ExtendControl "HELLO",GetWindowControl() OUT TSTCTL,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND,E
   NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND2,E
-'  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
+  NewTopLevelWindow TSTCTL,"HELLO",64,64 OUT TSTWND3,E
   E=SetControlPainter(TSTCTL,"HELLOPainter")
   OTW_LOADFONT
   GCLIP 1,0,0,400,240
@@ -590,16 +769,19 @@
   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY,-256
   SPHOME OTW_MOUSESP,0,0
   SPCOL 0,0,0,1,1
+  OTW_MOVWINSP=1
+  SPSET OTW_MOVWINSP,0
+  SPHIDE OTW_MOVWINSP
   CLS
   LOCATE 0,29
  ENDIF
 RETURN
 END
-COMMON DEF HELLOPainter WND,A1,A2
- VAR E=GBEGINWindow(WND)
+COMMON DEF HELLOPainter WND,CTL,TYPE,A1,A2
+ VAR E=CallBaseControlHandler(WND,CTL,TYPE,A1,A2)
+ E=GBEGINWindow(WND)
  IF E THEN RETURN
  GFILLWindow WND,0,0,64,64,RGB(0,0,0)
- GBOXWindow WND,0,0,64,64,RGB(128,128,128)
  GPRINTWindow WND,6,1,CHR$(ASC("A")+(WND AND 4095))+"HELLOOOOOOOO"
  E=GENDWindow(WND)
 END
@@ -620,12 +802,26 @@
  IF MOVEMOUSE||BTN THEN
   NUWID=OTWGetOvMouseNUWID()
  ENDIF
- IF BTN AND OTW_LMOUSEUP THEN
-  E=LMouseUpWindow(NUWIDToWND(NUWID))
-  ?SPHITSP(OTW_MOUSESP)
-  IF WIN_SP[NUWID]THEN
-   
+ IF BTN THEN
+  IF BTN AND OTW_LMOUSEDWN THEN
+   IF NUWID AND WIN_FRAMEFLG THEN
+    E=LMouseDownWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+   ELSE
+    E=LMouseDownWindow(NUWIDToWND(NUWID))
+   ENDIF
   ENDIF
+  IF BTN AND OTW_LMOUSEUP THEN
+   IF WIN_DRAGHANDLER_USE THEN
+    CALL WIN_DRAGHANDLER$,WIN_DRAGHANDLER_WND,OTW_MOUSEX,OTW_MOUSEY,WIN_DRAGHANDLER_A1,WIN_DRAGHANDLER_A2
+    E=ClearWindowDragHandler()
+   ELSE
+    IF NUWID AND WIN_FRAMEFLG THEN
+     E=LMouseUpWindowOnFrame(NUWIDToWND(NUWID AND 32767))
+    ELSE
+     E=LMouseUpWindow(NUWIDToWND(NUWID))
+    ENDIF
+   ENDIF
+  ENDIF
  ENDIF
  IF BUTTON()AND 64THEN DUMP_WND
  OTW_OLDMOUSEX=OTW_MOUSEX
@@ -633,7 +829,7 @@
  VOID UpdateWindow(WIN_ROOTWND)
  VOID UpdateWindow(TSTWND2)
  VOID UpdateWindow(TSTWND)
-' VOID UpdateWindow(TSTWND3)
+ VOID UpdateWindow(TSTWND3)
 ' ExitProcess 1
 RETURN
 END
@@ -678,10 +874,10 @@
   OTW_OLDLMOUSE=0
  ENDIF
  IF B AND OTW_MOUSERBTN THEN
-  IF!OTW_OLDRMOUSE THEN RET=OTW_RMOUSEDWN
+  IF!OTW_OLDRMOUSE THEN RET=RET OR OTW_RMOUSEDWN
   OTW_OLDRMOUSE=1
  ELSE
-  IF OTW_OLDRMOUSE THEN RET=OTW_RMOUSEUP
+  IF OTW_OLDRMOUSE THEN RET=RET OR OTW_RMOUSEUP
   OTW_OLDRMOUSE=0
  ENDIF
  RETURN RET
