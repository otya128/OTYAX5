diff -u OTW.TXT OTW2F
--- OTW.TXT
+++ OTW2F
@@ -137,6 +137,7 @@
 VAR WIN_IM$
 
 VAR WIN_STYLE_NARROW
+VAR OTW_INSPECTWIN
 DEF OTW_WIN_INITARRAY
  PrintConsoleln "Init window..."
  VAR FM=FREEMEM
@@ -519,6 +520,7 @@
  CTL_LEAVEFLG=64
 ' CTL_DRWFRMHANDLER=3
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
+'E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlFramePainter(CTL_WINDOWCTL,"WindowFramePainter")
@@ -2297,20 +2299,50 @@
  RepaintAllWindow WIN_ROOTWND,X,Y,W,H
  RETURN E
 END
+DEF OTW_CHECKWIN(N)
+ N=WIN_CHILD[N]
+ WHILE N
+  IF N&&WIN_NEXT[N]&&N!=WIN_PREV[WIN_NEXT[N]]THEN
+   RETURN 0
+  ENDIF
+  N=WIN_NEXT[N]
+ WEND
+ RETURN 1
+END
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
  WindowOnDelete NUWID
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ IF WIN_GROUP[NUWID]THEN
+  VAR G=WIN_GROUP[NUWID]
+  WHILE G
+   VAR GN=WIN_GNEXT[G]
+   VAR ERR=DeleteWindow(NUWIDToWND(G))
+   G=GN
+  WEND
+  WIN_GROUP[NUWID]=0
+ ENDIF
+ IF WIN_CHILD[NUWID]THEN
+  VAR C=WIN_CHILD[NUWID]
+  VAR D
+  WHILE C
+   D=WIN_NEXT[C]
+   E=DeleteWindowNUWID(C)
+   C=D
+  WEND
+ ENDIF
+ VOID DeleteWindowTimers(NUWIDToWND(NUWID))
  WIN_STYLE[NUWID]=0
  WIN_MENU[NUWID]=0
  WIN_WID[NUWID]=0
  WIN_MSGS[NUWID]=0
  WIN_MSGE[NUWID]=0
+
  VAR I
  FOR I=0TO 7
   WIN_VAR[NUWID,I]=0
  NEXT
- FOR I=0TO 15
+ FOR I=0TO CTL_HANDLER_MAX-1
   WIN_MSGCNT[NUWID,I]=0
  NEXT
  VAR N=WIN_NEXT[NUWID]
@@ -2318,15 +2350,6 @@
  IF WIN_CHILD[WIN_PARENT[NUWID]]==NUWID THEN
   WIN_CHILD[WIN_PARENT[NUWID]]=N
  ENDIF
- IF WIN_CHILD[NUWID]THEN
-  VAR C=WIN_CHILD[NUWID]
-  VAR D
-  WHILE C
-   D=WIN_NEXT[C]
-   E=DeleteWindowNUWID(C)
-   C=D
-  WEND
- ENDIF
  IF N THEN
   WIN_PREV[N]=P
  ENDIF
@@ -2338,10 +2361,11 @@
  WIN_PARENT[NUWID]=0
  WIN_CHILD[NUWID]=0
  WIN_FREE=NUWID
- WIN_NAME$[NUWID]=""
- IF WIN_SP[NUWID]THEN
+ VAR NULL$
+ WIN_NAME$[NUWID]=NULL$
+ IF WIN_SP[NUWID]AND 511THEN
   SPVAR WIN_SP[NUWID]AND 511,0,0
-  IF OTW_ENABLE_SHADOW&&SPVAR(WIN_SP[NUWID]AND 511,1)!=-1THEN
+  IF OTW_ENABLE_SHADOW&&SPVAR(WIN_SP[NUWID]AND 511,1)!=-1&&SPVAR(WIN_SP[NUWID]AND 511,1)!=0THEN
    SPVAR SPVAR(WIN_SP[NUWID]AND 511,1),0,0
    SPCLR SPVAR(WIN_SP[NUWID]AND 511,1)
   ENDIF
@@ -2366,17 +2390,6 @@
   WIN_GPREV[NUWID]=0
   WIN_GNEXT[NUWID]=0
  ENDIF
- IF WIN_GROUP[NUWID]THEN
-  VAR G=WIN_GROUP[NUWID]
-  WHILE G
-   VAR GN=WIN_GNEXT[G]
-   VAR ERR=DeleteWindow(NUWIDToWND(G))
-'   IF ERR THEN RETURN ERR
-   G=GN
-  WEND
-  WIN_GROUP[NUWID]=0
- ENDIF
- VOID DeleteWindowTimers(NUWIDToWND(NUWID))
  RETURN 0
 END
 
@@ -2393,7 +2406,7 @@
   ELSE
    SPSHOW WIN_SP[NUWID]AND 511
   ENDIF
-  SPOFS WIN_SP[NUWID]AND 511,,,-255+I
+  SPOFS WIN_SP[NUWID]AND 511,,,MAX(-255,-255+I)
 '  SPOFS (WIN_SP[NUWID]>>10),,,-255+I+1
   NUWID=WIN_NEXT[NUWID]
  WEND
@@ -2437,14 +2450,29 @@
  RETURN FALSE
 END
 COMMON DEF FrontWindow(WND)
+ VAR NUWID=WND AND NUWIDMASK,E
+ IF WIN_STYLE[NUWID]AND WIN_STYLE_TOOL THEN
+  E=FrontWindow(GetWindowGroupOwner(WND))
+  IF!E THEN E=_FrontWindow(WND)
+ ELSE
+  E=_FrontWindow(WND)
+ ENDIF
+ RETURN E
+END
+DEF _FrontWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  VAR N,C=WIN_NEXT[NUWID]
+ VAR MOVEF2'TOOL WINDOW
  IF C THEN
   VAR MOVEF=FALSE
   WHILE 1
    IF!WIN_NEXT[C]THEN 
-    IF WIN_NEXT[C]==NUWID THEN BREAK
+    IF (WIN_STYLE[C]AND WIN_STYLE_TOOL)&&WIN_GPARENT[C]==NUWID THEN
+     MOVEF=FALSE
+     MOVEF2=TRUE
+     BREAK
+    ENDIF
     VAR NUP=WIN_PREV[NUWID]
     VAR NUN=WIN_NEXT[NUWID]
     IF NUP THEN
@@ -2471,15 +2499,17 @@
   
  ENDIF
  VAR G=WIN_GROUP[NUWID],E
- VAR HASMODAL
- WHILE G
-  IF WIN_STYLE[G]AND WIN_STYLE_TOOL THEN
-   IF!_IsFrontWindow(NUWID,G)THEN
-    E=FrontWindow(NUWIDToWND(G))
+ IF!MOVEF2 THEN
+  WHILE G
+   IF WIN_STYLE[G]AND WIN_STYLE_TOOL THEN
+    IF!_IsFrontWindow(NUWID,G)THEN
+     E=_FrontWindow(NUWIDToWND(G))
+    ENDIF
    ENDIF
-  ENDIF
-  G=WIN_GNEXT[G]
- WEND
+   G=WIN_GNEXT[G]
+  WEND
+ ENDIF
+ VAR HASMODAL
  G=WIN_GROUP[NUWID]
  WHILE G
   IF WIN_STYLE[G]AND WIN_STYLE_MODAL THEN
@@ -2703,7 +2733,7 @@
  WIN_HIDE[NUWID]=TRUE
  WIN_STYLE[NUWID]=WIN_STYLE[NUWID] OR WIN_STYLE_HIDE
  IF WIN_SP[NUWID]THEN
-  OTW_SPHIDE NUWID 
+  OTW_SPHIDE NUWID
  ENDIF
  HideChildWindow NUWID
  RepaintAllWindow GetParentWindow(WND),WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID],WIN_HEIGHT[NUWID]
@@ -3446,11 +3476,13 @@
  PAGE2=OTW_DDRAWPAGE
 END
 COMMON DEF GEndDirect(WND)
- IF!CheckWindow(WND)THEN RETURN
- VAR NUWID=WND AND NUWIDMASK
- WIN_BEGIN[NUWID]=TRUE
- GB_WND=NUWID
- VAR E=GEndWindow(WND)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ 'VAR NUWID=WND AND NUWIDMASK
+ 'WIN_BEGIN[NUWID]=TRUE
+ 'GB_WND=NUWID
+ 'VAR E=GEndWindow(WND)
+ GPAGE OTW_SP,OTW_DP
+ GCLIP 1,0,0,399,239
  RETURN 0
 END
 COMMON DEF GCopyDirect(WND,X1,Y1,X2,Y2,X3,Y3,MODE)
@@ -3785,6 +3817,19 @@
   ENDIF
  WEND
 END
+COMMON DEF GPRINTPWindow WND,X,Y,STR$,COL
+ INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
+ INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
+ IF COL>=0THEN RETURN
+ VAR I
+ FOR I=0TO LEN(STR$)-1
+  VAR S=ASC(STR$[I])
+  GPUTCHR X,Y,S,1,1,COL
+  IF S<128THEN X=X+6 ELSE X=X+8
+  
+ NEXT
+ RETURN
+END
 COMMON DEF GPRINTWindow WND,X,Y,STR$,COL
  INC X,WING_SX'WIN_FX[WND AND NUWIDMASK]
  INC Y,WING_SY'WIN_FY[WND AND NUWIDMASK]
@@ -4718,6 +4763,7 @@
  IF X<=0||Y<=0||X>=W||Y>=H THEN RETURN
  VAR V=GetWindowVar(WND,3)
  VAR Y1=1,Y2=1,S=GetWindowVar(WND,7),F,GB
+ VAR SELFLG
  WHILE V
   INC Y2,8
   IF Y>=Y1&&Y<Y2 THEN
@@ -4727,6 +4773,7 @@
    GPRINTWindow WND,1,Y1,LISTSTR$[V],GetSelectionTextColor()
    F=1
    GB=1
+   SELFLG=TRUE
    IF!S THEN BREAK
   ELSE IF V==S THEN
    IF!GB&&GBeginWindow(WND)THEN RETURN
@@ -4747,11 +4794,14 @@
   VOID GEndWindow(WND)
  ENDIF
  IF T==CTL_LDBLCLKHANDLER THEN
-  VOID SendNotifWindow(GetOwnerWindow(WND),WND,0)
+  IF SELFLG THEN VOID SendNotifWindow(GetOwnerWindow(WND),WND,0)
  ELSEIF GetWindowVar(WND,6)THEN
-  VOID SendNotifWindow(GetOwnerWindow(WND),WND,1)
+  LISTBOX_SendChItemEvent WND
  ENDIF
 END
+DEF LISTBOX_SendChItemEvent WND
+ VOID SendNotifWindow(GetOwnerWindow(WND),WND,ListBoxChItem())
+END
 COMMON DEF ListBoxChItem()
  RETURN 1
 END
@@ -4767,7 +4817,9 @@
 DEF ClearListBox WND
  VAR L=GetWindowVar(WND,1)
  IF!L THEN RETURN
+ VAR NULL$
  WHILE LISTSTRNEXT[L]
+  LISTSTR$[L]=NULL$
   L=LISTSTRNEXT[L]
  WEND
  LISTSTRNEXT[L]=LISTSTR_FREE
@@ -4877,6 +4929,7 @@
    SetWindowVar WND,7,S
    LISTBOX_SEL WND
    ListBoxPainter WND,CTL,T,0,0
+   LISTBOX_SendChItemEvent WND
   ENDIF
  ENDIF
  IF BTN==#DOWN THEN
@@ -4885,6 +4938,7 @@
    SetWindowVar WND,7,S
    LISTBOX_SEL WND
    ListBoxPainter WND,CTL,T,0,0
+   LISTBOX_SendChItemEvent WND
   ENDIF
  ENDIF
 END
@@ -5062,7 +5116,7 @@
  VOID RepaintWindow(W)
 END
 COMMON DEF SetScrollBarPosition W,POS
- IF POS<0||POS>=GetScrollBarSize(W)THEN RETURN
+ IF POS<0||POS>GetScrollBarSize(W)THEN RETURN
  SetWindowVar W,2,POS
  VOID RepaintWindow(W)
 END
@@ -5370,6 +5424,42 @@
  IF NUWID!=(WND AND NUWIDMASK)THEN RETURN 0
  RETURN GSPOIT(X,Y)
 END
+DEF XORHLINE Y,X1,X2
+ IF X1>X2 THEN SWAP X1,X2
+ REPEAT
+  VAR R,G,B
+  RGBREAD GSPOIT(X1,Y)OUT R,G,B
+  GPSET X1,Y,RGB(R XOR 255,G XOR 255,B XOR 255)
+  X1=X1+1
+ UNTIL X1>X2
+END
+DEF XORVLINE X,Y1,Y2
+ IF Y1>Y2 THEN SWAP Y1,Y2
+ REPEAT
+  VAR R,G,B
+  RGBREAD GSPOIT(X,Y1)OUT R,G,B
+  GPSET X,Y1,RGB(R XOR 255,G XOR 255,B XOR 255)
+  Y1=Y1+1
+ UNTIL Y1>Y2
+END
+DEF XORGBOX X1,Y1,X2,Y2
+ IF X1>X2 THEN SWAP X1,X2
+ IF Y1>Y2 THEN SWAP Y1,Y2
+ XORGBOX2 X1,Y1,X2,Y2
+ XORGBOX2 X1+1,Y1+1,X2-1,Y2-1
+END
+DEF XORGBOX2 X1,Y1,X2,Y2
+ XORHLINE Y1,X1,X2
+ IF Y1==Y2 THEN RETURN
+ XORHLINE Y2,X1,X2
+ IF Y1>Y2 THEN SWAP Y1,Y2
+ IF Y1+1>=Y2 THEN RETURN
+ XORVLINE X1,Y1+1,Y2-1
+ XORVLINE X2,Y1+1,Y2-1
+END
+DEF OTW_XORWindow NUWID
+ XORGBOX WIN_AX[NUWID],WIN_AY[NUWID],WIN_AX[NUWID]+WIN_WIDTH[NUWID],WIN_AY[NUWID]+WIN_HEIGHT[NUWID]
+END
 VAR OTW_MOUSESIZE
 VAR OTW_MOUSE_HOMEX
 VAR OTW_MOUSE_HOMEY
@@ -5579,6 +5669,9 @@
 COMMON DEF S_OTW S
  BGMPLAY"L1C>B<C:1L1EDE:2L1GFG:3L1>CGC
 END
+COMMON DEF GetWinVer$()
+ RETURN "5.0 rev47"
+END
 COMMON DEF I_OTW
  IF!OTW_INIT THEN
 ' KEY 1,"KEY OFF"
@@ -5594,7 +5687,7 @@
   PrintConsole "=================="+LF$()
   PrintConsole "OTYA WINDOW SYSTEM"+LF$()
   PrintConsole "=================="+LF$()
-  PrintConsole "Ver 5.0-26"+LF$()
+  PrintConsole "Ver "+GetWinVer$()+LF$()
 ' BEEP 94,-1000
   VAR M1$,M2$,M3$,M4$,M5$,M6$,G$=@77+"V10"'34
   M1$=":1"+G$+"T140<<C8 C8&C2."
@@ -5809,7 +5902,6 @@
   
   '=====R=====
   IF BTN AND OTW_RMOUSEDWN THEN
-   CAPTURE_WND=0
    E=FocusWindow(NUWIDToWND(NUWID AND 32767))
    F=MAINCNT
    IF NUWID==OTW_LCLKWND&&F-OTW_LCLKF<=OTW_DBLCLKF&&ABS(OTW_MOUSEY-OTW_DBLCLKY)<OTW_DBLCLKXY&&ABS(OTW_MOUSEX-OTW_DBLCLKX)<OTW_DBLCLKXY THEN
@@ -5842,7 +5934,6 @@
   ENDIF
 
   IF BTN AND OTW_RMOUSEUP THEN
-    CAPTURE_WND=0
     IF NUWID AND WIN_FRAMEFLG THEN
      E=RMouseUpWindowOnFrame(NUWIDToWND(WIN_ACTIVENUWID))
      E=RMouseUpWindow(NUWIDToWND(WIN_ACTIVENUWID))
@@ -5861,6 +5952,10 @@
    E=MouseMoveWindow(CAPTURE_WND AND NUWIDMASK)
   ELSE
   IF OLDMOVEMOUSEWINDOW!=NUWID THEN
+   IF OTW_INSPECTWIN&&(OLDMOVEMOUSEWINDOW AND 32767)!=(NUWID AND 32767) THEN
+    OTW_XORWindow NUWID AND 32767
+    OTW_XORWindow OLDMOVEMOUSEWINDOW AND 32767
+   ENDIF
    IF!(OLDMOVEMOUSEWINDOW AND WIN_FRAMEFLG)THEN
     E=MouseLeaveWindow(NUWIDToWND(OLDMOVEMOUSEWINDOW))
    ELSE
@@ -6082,7 +6177,7 @@
  IF E THEN RETURN
  VAR S$="otya window"
  GPRINTWindow WND,(144-LEN(S$)*8)/2,0,S$,RGB(0,0,0)
- S$="system 5.0"
+ S$="system "+GetWinVer$()
  GPRINTWindow WND,(144-LEN(S$)*8)/2,8,S$,RGB(0,0,0)
  GLOADWindow WND,1,1,16,16,OTWLOGO,1,0
  S$="Logo designed by"
@@ -6244,35 +6339,53 @@
   GPRINTWindowCC WCLOCKWND,0,56,TIME$,1
   E=GEndWindow(WCLOCKWND)
  END
-DEF DUMP_WND
- DUMP_WND2 WIN_ROOTWND AND NUWIDMASK,""
+'DEBUG
+COMMON DEF DUMP_WND
+ COLOR #TGRAY,#TBLACK
+ LOCATE ,,-256
+ WINLIST_Add2 GetRootWindow(),"",CHR$(0)
+ COLOR #TGRAY,0
+ LOCATE ,,0
+'DUMP_WND2 WIN_ROOTWND AND NUWIDMASK,""
 END
-DEF DUMP_WND2 NUW,I$
- IF!NUW THEN RETURN
- ?I$;WIN_NAME$[NUW],NUW,WIN_WID[NUW],CTL_NAME$[WIN_CTL[NUW]AND 4095],WIN_CTL[NUW]AND 4095
-' IF CSRY==29 THEN VAR II$INPUT "";II$
- IF LEN(I$) THEN
-  VAR NM$=""
-  IF WIN_NEXT[NUW] THEN
-   NM$=""
-  ELSE
-   NM$=""
+DEF WINLIST_Add2 WND,P$,CNT$
+ WHILE WND
+  VAR C=GetChildWindow(WND)
+  VAR N=GetNextWindow(WND)
+  VAR CNT=ASC(CNT$)
+  IF CNT>=29THEN'SCREEN HEIGHT
+   ?"=== Press ENTER ===";
+   WHILE INKEY$()!=CHR$(13)VSYNC WEND
+   LOCATE 0,
+   ?CHR$(0)*LEN("=== Press ENTER ===");
+   LOCATE 0,
+   CNT=0
   ENDIF
-  IF WIN_NEXT[WIN_PARENT[NUW]]THEN
-   NM$=""+NM$
+  VAR BUF$
+  IF N THEN
+   BUF$=P$+""
   ELSE
-   NM$=" "+NM$
+   BUF$=P$+""
   ENDIF
-  DUMP_WND2 WIN_CHILD[NUW],MID$(I$,0,LEN(I$)-1)+NM$
- ELSE
-  IF WIN_CHILD[NUW]THEN
-   DUMP_WND2 WIN_CHILD[NUW],""
+  COLOR #TGRAY
+  IF N&&WND!=GetPrevWindow(N)THEN
+   COLOR #TMAROON
+   PUSH BUF$,"!broken"
+  ENDIF
+  PUSH BUF$,STR$(WND AND NUWIDMASK)
+  PUSH BUF$,","
+  PUSH BUF$,GetControlName$(GetControl(WND))+":"+GetWindowName$(WND)
+  ?BUF$
+  CNT$[0]=CHR$(CNT+LEN(BUF$) DIV 50+1)
+  IF N THEN
+   IF C THEN WINLIST_Add2 C,P$+"",CNT$
   ELSE
-   DUMP_WND2 WIN_CHILD[NUW],""
+   IF C THEN WINLIST_Add2 C,P$+" ",CNT$
   ENDIF
- ENDIF
- DUMP_WND2 WIN_NEXT[NUW],I$
+  WND=N
+ WEND
 END
+
 DEF UpdateButton()
  VAR B=BUTTON()
  IF!IM_KBDMODE THEN
@@ -6309,19 +6422,29 @@
  OTW_MOUSEX#=OTW_MOUSEX
  OTW_MOUSEY#=OTW_MOUSEY
 END
+VAR OTW_MOUSE_MODE
+
+COMMON DEF SetMouseMode MODE
+ OTW_MOUSE_MODE=MODE
+END
 COMMON DEF UpdateMouse
  VAR S,X,Y
  TOUCH OUT S,X,Y
  IF OTW_MOUSEOLDST&&S THEN
-  OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
-  OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
-   IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
-   IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
-   IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2
-   IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
-   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
-   OTW_MOUSEX#=OTW_MOUSEX
-   OTW_MOUSEY#=OTW_MOUSEY
+  IF OTW_MOUSE_MODE THEN
+   OTW_MOUSEX=X/(320/400)
+   OTW_MOUSEY=Y
+  ELSE
+   OTW_MOUSEX=OTW_MOUSEX+X-OTW_MOUSEOLDX
+   OTW_MOUSEY=OTW_MOUSEY+Y-OTW_MOUSEOLDY
+  ENDIF
+  IF OTW_MOUSEX<OTW_MOUSECLIPX THEN OTW_MOUSEX=OTW_MOUSECLIPX
+  IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
+  IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2
+  IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
+  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
+  OTW_MOUSEX#=OTW_MOUSEX
+  OTW_MOUSEY#=OTW_MOUSEY
  ELSE
   IF S&&X>=OTW_KX&&X<OTW_KX2&&Y>=OTW_KY&&Y<OTW_KY2 THEN
    BEEP 
@@ -6384,21 +6507,21 @@
 COMMON DEF CREATEOTW
  ?"OTW Develop Tool"
  VAR K$
- INC K$,"VAR _1CTL"+LF$()
- INC K$,"COMMON DEF I__1"+LF$()
- INC K$," IF!CHKCALL(_QIsWinRunning_Q)||!IsWinRunning()THEN"+LF$()
- INC K$,"  PrintConsole _QRequire window system_Q+LF$()"+LF$()
+ INC K$,"VAR \1CTL"+LF$()
+ INC K$,"COMMON DEF I_\1"+LF$()
+ INC K$," IF!CHKCALL(\QIsWinRunning\Q)||!IsWinRunning()THEN"+LF$()
+ INC K$,"  PrintConsole \QRequire window system\Q+LF$()"+LF$()
  INC K$,"  ExitProcess 1"+LF$()
  INC K$,"  RETURN"+LF$()
  INC K$," ENDIF"+LF$()
  INC K$," VAR WND,E"+LF$()
- INC K$," IF!_1CTL THEN"+LF$()
- INC K$,"  ExtendControl _Q_2_Q,GetWindowControl() OUT _1CTL,E"+LF$()
+ INC K$," IF!\1CTL THEN"+LF$()
+ INC K$,"  ExtendControl \Q\2\Q,GetWindowControl() OUT \1CTL,E"+LF$()
  INC K$," ENDIF"+LF$()
- INC K$," NewTopLevelWindow _1CTL,_Q_2_Q,_W,_H OUT WND,E"+LF$()
+ INC K$," NewTopLevelWindow \1CTL,\Q\2\Q,\W,\H OUT WND,E"+LF$()
  INC K$," SetProcessVar WND"+LF$()
  INC K$,"END"+LF$()
- INC K$,"COMMON DEF L__1"+LF$()
+ INC K$,"COMMON DEF L_\1"+LF$()
  INC K$," IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
  INC K$,"END
  VAR _1$
@@ -6408,11 +6531,11 @@
  LINPUT "WindowName?";_2$
  INPUT "Width";_W
  INPUT "Height";_H
- K$=ReplaceStr$(K$,"_1",_1$)
- K$=ReplaceStr$(K$,"_2",_2$)
- K$=ReplaceStr$(K$,"_W",STR$(_W))
- K$=ReplaceStr$(K$,"_H",STR$(_H))
- K$=ReplaceStr$(K$,"_Q",_Q$)
+ K$=ReplaceStr$(K$,"\1",_1$)
+ K$=ReplaceStr$(K$,"\2",_2$)
+ K$=ReplaceStr$(K$,"\W",STR$(_W))
+ K$=ReplaceStr$(K$,"\H",STR$(_H))
+ K$=ReplaceStr$(K$,"\Q",_Q$)
  VAR SLOT=3
  CLIPBOARD K$
 END
@@ -6594,7 +6717,8 @@
  IF P THEN
   TXTBOXEX_NEXT[P]=N
  ENDIF
- TXTBOXEX_VAL$[L]=""
+ VAR NULL$
+ TXTBOXEX_VAL$[L]=NULL$
  TXTBOXEX_NEXT[L]=TXTBOXEX_FREE
  TXTBOXEX_FREE=L
  IF P THEN RETURN P
@@ -8023,6 +8147,8 @@
  IF OTYDOC_TABLEDATA[L]THEN
   'TODO:delete table
  ENDIF
+ VAR NULL$
+ OTYDOC_VAL$[L]=NULL$
  VAR N=OTYDOC_NEXT[L]
  VAR P=OTYDOC_PREV[L]
  IF N THEN
@@ -9669,6 +9795,17 @@
  OTYDOC_AddLine D,-DL
 END
 
+DEF OTYDOC_GetNextTextPos(V$,I)
+ FOR I=I TO LEN(V$)-1
+  VAR C=ASC(V$[I])
+  IF C==&HB10BTHEN
+   I=INSTR(I,V$,CHR$(&HB10C))
+   CONTINUE
+  ENDIF
+  BREAK
+ NEXT
+ RETURN I
+END
 DEF OTYDOC_GetStyle V$,I,E,TYPE OUT S$
  VAR L=LEN(V$)-1
  S$=""
@@ -10170,7 +10307,7 @@
  VAR TYPE:FOR TYPE=0TO 2
   OTYDOC_RemoveAllStyle L$,0,LEN(L$)
  NEXT
- PUSH O$,L$+LF$()
+ PUSH O$,L$'+LF$()
 END
 'if ER=-1, ER=Row size
 'if EC=-1, EC=Col size
@@ -10245,9 +10382,11 @@
  VAR D=OTYDOC_GetData(WND)
  VAR C=OTYDOC_CurLine[D]
  VAR I,J,LF$=LF$()
+ OTYDOC_GetNextTextPos OTYDOC_VAL$[C],OTYDOC_CX[D] OUT OTYDOC_CX[D]
  VAR LST$=MID$(OTYDOC_VAL$[C],OTYDOC_CX[D],LEN(OTYDOC_VAL$[C]))
  VAR F$=LEFT$(OTYDOC_VAL$[C],OTYDOC_CX[D])
  VAR S$,TYPE,ST$
+ 
  FOR TYPE=0TO 2
   OTYDOC_GetStyle F$,0,LEN(F$),TYPE OUT S$
   PUSH ST$,S$
@@ -10455,6 +10594,7 @@
  ELSE
  OTYDOC_SERIALIZE S,SX,LEN(OTYDOC_VAL$[S]),O$
  OTYDOC_PlainText S,SX,LEN(OTYDOC_VAL$[S]),P$
+ PUSH P$,LF$()
  S=OTYDOC_NEXT[S]
  WHILE 1
   VAR NXT=OTYDOC_NEXT[S]
@@ -10466,6 +10606,7 @@
   ENDIF
   OTYDOC_SERIALIZE S,0,LEN(OTYDOC_VAL$[S]),O$
   OTYDOC_PlainText S,0,LEN(OTYDOC_VAL$[S]),P$
+  PUSH P$,LF$()
   S=NXT
  WEND
  ENDIF
@@ -11015,7 +11156,7 @@
  VAR WI=GetWindowWidth(WND)
  VAR S$="OTW Filer"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,0,LEN(S$)*8,7,WND,0 OUT W,E
- S$="Ver 5.0"
+ S$="Ver "+GetWinVer$()
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,8,LEN(S$)*8,7,WND,0 OUT W,E
  S$="© 2011-2017 otya"
  NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,16,LEN(S$)*8,7,WND,0 OUT W,E
@@ -11353,7 +11494,7 @@
    OTYFIL_NEWFOL WND,1
    RETURN
   ENDIF
-  VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND)
+  VAR E=NewModalDialogBox(OTYFILABOUTCTL,"ABOUT",128+15,40,WND)
   RETURN
  ENDIF
  OTYFILPAINT WND,CTL,T,0,0
@@ -11573,28 +11714,64 @@
 END
 'Init common dialogs
 VAR CTL_FILDIA
+VAR FILDIA_WV_LSTBOX
+VAR FILDIA_WV_ISSAVE
+VAR FILDIA_WV_TXTBOX
+VAR FILDIA_WV_ID
+VAR FILDIA_WV_DRPDWN
+
+
 DEF OTW_FileDialog
  VAR E
  ExtendControl "FileDialog",GetWindowControl()OUT CTL_FILDIA,E
  IF E THEN RETURN
  E=SetControlCreateHandler(CTL_FILDIA,"FileDialogCreate")
  E=SetControlNotifHandler(CTL_FILDIA,"FileDialogNotif")
+ FILDIA_WV_LSTBOX=0
+ FILDIA_WV_ISSAVE=1
+ FILDIA_WV_TXTBOX=2
+ FILDIA_WV_ID=3
+ FILDIA_WV_DRPDWN=4
 END
+COMMON DEF DeleteFileDialogInfo(FDINFO)
+ RETURN DeleteWindow(FDINFO)
+END
+COMMON DEF GetFileDialogInfoFile$(FDINFO)
+ VAR WND=FDINFO
+ VAR ISSAVE=GetWindowVar(WND,FILDIA_WV_ISSAVE)
+ VAR SEL$
+ IF ISSAVE THEN
+  SEL$=GetWindowName$(GetWindowVar(WND,FILDIA_WV_TXTBOX))
+  IF!LEN(SEL$)THEN RETURN""
+  IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
+   SEL$="*"+SEL$
+  ENDIF
+ ELSE
+  SEL$=GetListBoxSelectedText$(GetWindowVar(WND,0))
+  IF!LEN(SEL$)THEN RETURN""
+ ENDIF
+ VAR FILE$=MID$(SEL$,1,LEN(SEL$))
+ RETURN FILE$
+END
+COMMON DEF GetFileDialogInfoType$(FDINFO)
+ RETURN GetListBoxSelectedText$(GetDropDownListBox(GetWindowVar(FDINFO,FILDIA_WV_DRPDWN)))
+END
 COMMON DEF FileDialogNotif WND,C,T,W,__
- VAR ISSAVE=GetWindowVar(WND,1)
- IF ISSAVE&&__==ListBoxChItem()THEN
+ VAR ISSAVE=GetWindowVar(WND,FILDIA_WV_ISSAVE)
+ VAR DRPDWN=GetWindowVar(WND,FILDIA_WV_DRPDWN)
+ IF W==GetWindowVar(WND,FILDIA_WV_LSTBOX)&&ISSAVE&&__==ListBoxChItem()THEN
   VAR L$=GetListBoxSelectedText$(W)
   IF !LEN(L$)||L$[0]!="/"THEN
-   SetWindowName GetWindowVar(WND,2),L$
-   VOID RepaintWindow(GetWindowVar(WND,2))
+   SetWindowName GetWindowVar(WND,FILDIA_WV_TXTBOX),L$
+   VOID RepaintWindow(GetWindowVar(WND,FILDIA_WV_TXTBOX))
    RETURN
   ENDIF
  ENDIF
- IF GetWindowVar(WND,0)==W&&__==ListBoxChItem()THEN RETURN
+ IF GetWindowVar(WND,FILDIA_WV_LSTBOX)==W&&__==ListBoxChItem()THEN RETURN
  IF GetWindowName$(W)=="OK"||GetWindowName$(W)=="L"THEN
   VAR SEL$
   IF ISSAVE&&GetWindowName$(W)=="OK"&&__!=ListBoxChItem() THEN
-   SEL$=GetWindowName$(GetWindowVar(WND,2))
+   SEL$=GetWindowName$(GetWindowVar(WND,FILDIA_WV_TXTBOX))
    IF!LEN(SEL$)THEN RETURN
    IF SEL$[0]!=" "&&SEL$[0]!="*"THEN
     SEL$="*"+SEL$
@@ -11608,9 +11785,14 @@
    INITFILEDIALOGLISTBOX WND
    RETURN
   ENDIF
-  VAR ID=GetWindowVar(WND,3)
-  VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,MID$(SEL$,1,LEN(SEL$)))
-  VOID DeleteWindow(WND)
+  VAR FILE$=MID$(SEL$,1,LEN(SEL$))
+  VAR ID=GetWindowVar(WND,FILDIA_WV_ID)
+  IF DRPDWN THEN
+   VOID SendNotifWindow(GetWindowGroupOwner(WND),ID,WND)
+  ELSE
+   VOID SendStrNotifWindow(GetWindowGroupOwner(WND),ID,FILE$)
+   VOID DeleteWindow(WND)
+  ENDIF
  ELSE
   IF GetWindowName$(W)=="Cancel"THEN
    VOID DeleteWindow(WND)
@@ -11618,7 +11800,7 @@
  ENDIF
 END
 DEF INITFILEDIALOGLISTBOX WND
- VAR L=GetWindowVar(WND,0)'LISTBOX WND
+ VAR L=GetWindowVar(WND,FILDIA_WV_LSTBOX)'LISTBOX WND
  DIM F$[0]
  VAR E
  GetFiles "" OUT F$,E
@@ -11639,7 +11821,8 @@
  VAR E,L
  NewWindow GetListBoxControl(),"L",0,0,116,64,WND,0 OUT L,E
 
- SetWindowVar WND,0,L
+ VAR HEIGHT=GetWindowHeight(WND)
+ SetWindowVar WND,FILDIA_WV_LSTBOX,L
  IF LIST THEN
   IF 0THEN DIM LIST$[0]
   NewWindow GetDropDownListControl(),"L",0,65,116,GetDropDownListHeight(),WND,0 OUT L,E
@@ -11647,18 +11830,20 @@
   LIST$=GetSBArray(LIST)
   AddArrayListBoxItem LB,LIST$
   SelectListBoxItem LB,0
+  SetWindowVar WND,FILDIA_WV_DRPDWN,L
  ENDIF
  INITFILEDIALOGLISTBOX WND
  VAR F=LEFT$(GetWindowName$(WND),4)=="Save"
  SetWindowVar WND,1,F
  NewWindow GetButtonControl(),"OK",119,2,20,12,WND,0 OUT L,E
  NewWindow GetButtonControl(),"Cancel",119,16,50,12,WND,0 OUT L,E
+ 'SAVE DIALOG
  IF F THEN
-  NewWindow GetTextBoxControl(),"",0,65,170,9,WND,0 OUT L,E
-  SetWindowVar WND,2,L
+  NewWindow GetTextBoxControl(),"",0,HEIGHT-9,170,9,WND,0 OUT L,E
+  SetWindowVar WND,FILDIA_WV_TXTBOX,L
   SetChItemListBoxNotif WND,F
  ENDIF
- SetWindowVar WND,3,ID
+ SetWindowVar WND,FILDIA_WV_ID,ID
 END
 COMMON DEF SaveFileDialog(OWNER,TYPE$,ID)
  IF!CTL_FILDIA THEN
@@ -11680,9 +11865,6 @@
  NewDialogBoxWithArg CTL_FILDIA,"Open "+TYPE$,170,64+10,OWNER,TRUE,ID,0OUT ,E
  RETURN E
 END
-'[0]="All:*"
-'[1]="GRP:*.GRP"
-'[2]="GRPF:*.GRPF"
 COMMON DEF OpenFileDialogEx OWNER,TYPE$,ID,LIST$[] OUT E
  IF!CTL_FILDIA THEN
   OTW_FileDialog
@@ -11696,6 +11878,19 @@
  FreeSBArray ARY
  'GetWindowVar 
 END
+COMMON DEF SaveFileDialogEx(OWNER,TYPE$,ID,LIST$)
+ IF!CTL_FILDIA THEN
+  OTW_FileDialog
+ ENDIF
+ IF TYPE$!="TXT"&&TYPE$!="DAT"THEN TYPE$=""
+ VAR TITLE$=TYPE$
+ VAR E
+ VAR ARY=AllocSBArray()
+ SetSBArray ARY,LIST$
+ NewDialogBoxWithArg CTL_FILDIA,"Save "+TYPE$,170,74+GetDropDownListHeight()+1,OWNER,TRUE,ID,ARY OUT ,E
+ FreeSBArray ARY
+ RETURN E
+END
 COMMON DEF FindWindowByControl(WND,CTL,EXTEND)
  WND=GetChildWindow(WND)
  WHILE WND
@@ -12220,6 +12415,7 @@
  IF ERR THEN RETURN
  VAR I
  FOR I=0TO LEN(DIR$)-1
+  UpdateMouse
   IF DIR$[I]=="/.."THEN CONTINUE
   VAR I$=MID$(DIR$[I],1,LEN(DIR$[I]))
   VAR PATH$=CombinePath$(PRG$,I$)
@@ -12277,7 +12473,7 @@
  SetProcessVar WND
  VAR TW
  VAR TSX=24
- VAR TSKW=(SW-9-TSX) DIV 4,TC,TCM=(SW-9-TSX) DIV TSKW
+ VAR TSKW=(SW-9-TSX) DIV 8,TC,TCM=(SW-9-TSX) DIV TSKW
  TB_TASKLIST$=NewArray$(TCM)
  TB_TASKLIST_WND=NewArray(TCM)
  TB_TASKLIST_TW=NewArray(TCM)
@@ -13345,13 +13541,18 @@
   NEXT
   RETURN 0
  ENDIF
- RIM_CONVF=TRUE
- IF 0 THEN DIM A$[0],B$[0]
  IF!OTYIME_LOADED THEN
+  IF!CHKCALL("OTYIME_INIT")THEN
+   VOID MessageBox(GetRootWindow(),"IM","OTYIME is not loaded.",MessageBoxOK()OR MessageBoxError())
+   
+   RETURN 0
+  ENDIF
   OTYIME_INIT
   CLS
   OTYIME_LOADED=TRUE
  ENDIF
+ RIM_CONVF=TRUE
+ IF 0 THEN DIM A$[0],B$[0]
  'OTYIME_K2K RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
   KKC2 RIM_BUF2$+RIM_KEYBUF$ OUT A$,B$
 ' B$=NewArray$(LEN(A$))
@@ -13551,8 +13752,8 @@
  
  SetProcessVar IM
  KEY 1,"KEY OFF"
- 
- EXEC 3
+ USE 3
+ 'EXEC 3
 END
 COMMON DEF L_RIM
  VAR X,Y,MMM
@@ -13563,15 +13764,19 @@
   IF RIM_MODE==1 THEN
    SetKeyboardMode!TRUE
    KEY 1,"KEY ON"
+   SYSBEEP=TRUE
   ELSEIF RIM_MODE==2THEN
    SetKeyboardMode!TRUE
    KEY 1,"かな ON"
+   SYSBEEP=TRUE
   ELSEIF RIM_MODE==3THEN
    SetKeyboardMode!TRUE
    KEY 1,"カナ ON"
+   SYSBEEP=TRUE
   ELSE
    SetKeyboardMode TRUE
    KEY 1,"KEY OFF"
+   SYSBEEP=FALSE
   ENDIF
   BEEP 9
  ENDIF
@@ -13924,6 +14129,7 @@
    TC=GetSelectionTextColor()
   ENDIF
   GLOADImage IX+ICONSX,IY,ICON[I],FALSE
+ 'GLOADImagePalette IX+ICONSX,IY,ICON[I],ODEPAL,FALSE
   GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$))*8)DIV 2,IY+16,MID$(NAME$,0,ITW),TC
   IF LEN(NAME$)>ITW THEN
    GPUTCHR IX+(IW-MIN(ITW,LEN(NAME$)-ITW)*8)DIV 2,IY+24,MID$(NAME$,ITW,ITW),TC
@@ -13962,9 +14168,11 @@
  FOR I=0TO LEN(DIR$)-1
   ICONS[I]=ODE_IMAGE_TXT
   
+  UpdateMouse
   IF ToUpper$(GetFileExtension$(DIR$[I]))=="LNK"THEN
    VAR F$
    LoadFile CombinePath$(D$,MID$(DIR$[I],1,LEN(DIR$[I]))) OUT F$,ERR
+   UpdateMouse
    IF ERR THEN CONTINUE
    IF 0THEN DIM K$[0],V$[0]
    LoadConfigFile F$ OUT K$,V$
@@ -13972,6 +14180,7 @@
    IF I16==-1THEN CONTINUE
    VAR IMG
    LoadImage V$[I16],16,16 OUT IMG,ERR
+   UpdateMouse
    IF ERR THEN CONTINUE
    ICONS[I]=IMG
   ELSEIF DIR$[I][0]=="*"THEN
@@ -14003,10 +14212,10 @@
   IF 0THEN
    VAR I
    ODEPAL=NewArray(65536)
-   FOR I=0TO 65535
-    VAR R=((I>>11AND 31)<<3)*0
-    VAR G=((I>>6AND 31)<<3)*0
-    VAR B=((I>>1AND 31)<<3)*1
+   FOR I=1TO 65535 STEP 2
+    VAR R=((I>>11AND 31)<<3+0)XOR 255'DIV 2
+    VAR G=((I>>6AND 31)<<3+0)XOR 255'DIV 2
+    VAR B=(((I>>1AND 31)<<3))XOR 255'+255)DIV 2
     VAR A=(I AND 1)*255
     ODEPAL[I]=RGB(A,R,G,B)'R>>3<<11OR G>>3<<6OR B>>3<<1OR !!A
    NEXT
@@ -14097,11 +14306,6 @@
    M=MILLISEC+5000
    SetWindowVar WND,0,M
   ENDIF
-  IF M>=MILLISEC THEN
-   VOID RepaintWindow(WND)
-  ELSE
-   SetWindowVar WND,2,FALSE
-  ENDIF
   SetWindowVar WND,1,GetWindowVar(WND,1)+1
   IF GBeginWindow(WND)THEN RETURN
    GFILLWindow WND,RND(W+1),RND(H+1),RND(W+1),RND(H+1),RGB(RND(32)*8,RND(32)*8,RND(32)*8)
@@ -14134,7 +14338,15 @@
  SetProcessVar WND
 END
 COMMON DEF L_OTWBENCH
- IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+ VAR WND=GetProcessVar()
+  VAR M=GetWindowVar(WND,0)
+  IF M>=MILLISEC THEN
+   VOID RepaintWindow(WND)
+  ELSE
+   VOID RepaintWindow(WND)
+   SetWindowVar WND,2,FALSE
+  ENDIF
+ IF UpdateWindow(WND)THEN ExitProcess 1
 END
 VAR OTWCLOCKCTL
 COMMON DEF OTWCLOCKPAINT WND,CTL,TYP,XY,WH_
@@ -14195,6 +14407,8 @@
 
 VAR PAINTCTL
 VAR PAINTCANVASCTL
+VAR PAINTIMPORTDLGCTL
+
 VAR PAINT_IMAGE
 VAR PAINT_WND
 VAR PAINT_CANVAS
@@ -14258,6 +14472,10 @@
 VAR PAINT_MENU_ZOOMIN
 VAR PAINT_MENU_ZOOMOUT
 VAR PAINT_MENU_HAND
+VAR PAINT_MENU_PAINT
+VAR PAINT_MENU_SPOIT
+VAR PAINT_MENU_ABS
+VAR PAINT_MENU_REL
 
 DEF PAINT_GET WND OUT A
  GetSBArray GetWindowVar(WND,0) OUT A
@@ -14282,6 +14500,19 @@
   VOID RepaintWindow(WND)
  ENDIF
 END
+DEF PAINTUpdateScrollBar A
+ VAR WND=A[PAINT_CANVAS]
+ VAR SW,SH
+ SW=GetWindowWidth(WND)
+ SH=GetWindowHeight(WND)
+ VAR Z=A[PAINT_ZOOM]
+ VAR Z#=(Z/PAINT_ZOOM_BASE)
+ VAR HIMG=A[PAINT_IMAGE]
+ VAR IW=GetImageWidth(HIMG)
+ VAR IH=GetImageHeight(HIMG)
+ SetScrollBarSize A[PAINT_SCRH],MAX(0,(IW-(SW-GetScrollBarWidth()) DIV Z#))
+ SetScrollBarSize A[PAINT_SCRV],MAX(0,IH-(SH-GetScrollBarHeight()) DIV Z#)
+END
 COMMON DEF PAINTCANVASPAINT WND,CTL,TYP,XY,WH
  IF 0THEN DIM A[0]
  PAINT_GET WND OUT A
@@ -14299,13 +14530,12 @@
   W=SW
   H=SH
  ENDIF
+ PAINTUpdateScrollBar A
  VAR Z=A[PAINT_ZOOM]
  VAR Z#=(Z/PAINT_ZOOM_BASE)
  VAR HIMG=A[PAINT_IMAGE]
  VAR IW=GetImageWidth(HIMG)
  VAR IH=GetImageHeight(HIMG)
- SetScrollBarSize A[PAINT_SCRH],MAX(0,(IW-(SW-GetScrollBarWidth()) DIV Z#))
- SetScrollBarSize A[PAINT_SCRV],MAX(0,IH-(SH-GetScrollBarHeight()) DIV Z#)
  VAR PT=A[PAINT_TOOL]
  IF Z!=PAINT_ZOOM_BASE THEN
   IF 0THEN DIM IMG[0]
@@ -14330,7 +14560,7 @@
 
   IX2=MIN(IX2,IW-1)
   IY2=MIN(IY2,IH-1)
-  GCLIP 1,MAX(0,-SX*Z#),MAX(0,-SY*Z#),MAX(0,MIN(511,(IW-SX-1)*Z#)),MAX(0,MIN(511,(IH-SY-1)*Z#))
+  GCLIP 1,MAX(0,-SX*Z#),MAX(0,-SY*Z#),MAX(0,MIN(511,(IW-SX)*Z#)),MAX(0,MIN(511,(IH-SY)*Z#))
   VAR GRX=8
   VAR GRY=8
   FOR IY=SY TO IY2
@@ -14371,6 +14601,10 @@
  IF CW==WND THEN
   IF PT==PAINT_MENU_LINE THEN
    GLINEWindow WND,A[PAINT_CMOUSEX]-SX*Z#,A[PAINT_CMOUSEY]-SY*Z#,A[PAINT_CMOUSEX2]-SX*Z#,A[PAINT_CMOUSEY2]-SY*Z#,A[PAINT_COLOR]
+  ELSEIF PT==PAINT_MENU_BOX THEN
+   GBOXWindow WND,A[PAINT_CMOUSEX]-SX*Z#,A[PAINT_CMOUSEY]-SY*Z#,A[PAINT_CMOUSEX2]-SX*Z#,A[PAINT_CMOUSEY2]-SY*Z#,A[PAINT_COLOR]
+  ELSEIF PT==PAINT_MENU_FILLEDBOX THEN
+   GFILLWindow WND,A[PAINT_CMOUSEX]-SX*Z#,A[PAINT_CMOUSEY]-SY*Z#,A[PAINT_CMOUSEX2]-SX*Z#,A[PAINT_CMOUSEY2]-SY*Z#,A[PAINT_COLOR]
   ENDIF
  ENDIF
  IF GEndWindow(WND)THEN @ERR
@@ -14396,7 +14630,7 @@
  VAR X=MX+SX
  VAR Y=MY+SY
  VAR PT=A[PAINT_TOOL]
- IF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER||PT==PAINT_MENU_LINE THEN
+ IF PT==PAINT_MENU_PEN||PT==PAINT_MENU_ERASER||PT==PAINT_MENU_LINE||PT==PAINT_MENU_BOX||PT==PAINT_MENU_FILLEDBOX THEN
   A[PAINT_CMOUSEX]=X
   A[PAINT_CMOUSEY]=Y
   VOID SetCapture(WND)
@@ -14409,8 +14643,31 @@
   A[PAINT_ZOOM]=MAX(A[PAINT_ZOOM]-PAINT_ZOOM_BASE*4,PAINT_ZOOM_BASE)
   VOID RepaintWindow(WND)
  ELSEIF PT==PAINT_MENU_ZOOMIN THEN
-  INC A[PAINT_ZOOM],PAINT_ZOOM_BASE*4
+  'CLICK ちゅうしん
+  VAR Z2=A[PAINT_ZOOM]+PAINT_ZOOM_BASE*4
+  VAR Z2#=Z2/PAINT_ZOOM_BASE
+  VAR W=(GetWindowWidth(WND)-GetScrollBarWidth())DIV Z2# DIV 2
+  VAR H=(GetWindowHeight(WND)-GetScrollBarHeight())DIV Z2# DIV 2
+  X=X DIV Z#
+  Y=Y DIV Z#
+  '?X,Y,W,H
+  A[PAINT_ZOOM]=Z2
+  PAINTUpdateScrollBar A
+  X=MIN(GetScrollBarSize(A[PAINT_SCRH]),MAX(0,X-W))
+  Y=MIN(GetScrollBarSize(A[PAINT_SCRV]),MAX(0,Y-H))
+  SetScrollBarPosition A[PAINT_SCRV],Y
+  SetScrollBarPosition A[PAINT_SCRH],X
+  
   VOID RepaintWindow(WND)
+ ELSEIF PT==PAINT_MENU_PAINT THEN
+  VOID GBeginDirect(WND)
+  GLOADImage 0,0,A[PAINT_IMAGE],1
+  GPAINT X DIV Z#,Y DIV Z#,A[PAINT_COLOR]
+  GSAVEImage 0,0,A[PAINT_IMAGE]',1
+  
+  VOID GEndDirect(WND)
+  VOID RepaintWindow(WND)
+  
  ENDIF
 END
 COMMON DEF PAINTCANVASLMU WND,CTL,TYP,X,Y
@@ -14425,7 +14682,7 @@
  X=X+SX
  Y=Y+SY
  VAR PT=A[PAINT_TOOL]
- IF PT==PAINT_MENU_LINE THEN
+ IF PT==PAINT_MENU_LINE||PT==PAINT_MENU_FILLEDBOX||PT==PAINT_MENU_BOX THEN
   IF 0THEN DIM I[0]
 
   GetImageArray(A[PAINT_IMAGE]) OUT I,
@@ -14433,10 +14690,146 @@
   VAR IH=GetImageHeight(A[PAINT_IMAGE])
  
   VAR C=A[PAINT_COLOR]
-  GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  IF PT==PAINT_MENU_LINE THEN
+   GLINEArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  ELSEIF PT==PAINT_MENU_FILLEDBOX THEN
+   GFILLArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  ELSEIF PT==PAINT_MENU_BOX THEN
+   GBOXArray I,IW,IH,A[PAINT_CMOUSEX] DIV Z#,A[PAINT_CMOUSEY] DIV Z#,X DIV Z#,Y DIV Z#,C
+  ENDIF
   PAINTCANVASPAINT WND,CTL,TYP,0,0
  ENDIF
 END
+COMMON DEF GFILLArray M,W,H,X,Y,X2,Y2,COL
+ IF X2<X THEN SWAP X2,X
+ IF Y2<Y THEN SWAP Y2,Y
+ IF X2<0THEN RETURN
+ IF Y2<0THEN RETURN
+ IF X>=W THEN RETURN
+ IF Y>=H THEN RETURN
+ COL=RGBToShort(COL)
+ X=MAX(0,X)
+ X2=MIN(W-1,X2)
+ Y=MAX(0,Y)
+ Y2=MIN(H-1,Y2)
+ VAR CNT=X2-X+1
+ REPEAT
+  FILL M,COL,X+Y*W,CNT
+  Y=Y+1
+ UNTIL Y2<Y
+END
+DIM TESTM[0]
+DIM TESTCOL
+DIM TESTW
+DIM TESTH
+DEF PLOT X,Y,C#
+ IF X<0||X>=TESTW THEN RETURN
+ IF Y<0||Y>=TESTH THEN RETURN
+ TESTM[(0OR X)+(0OR Y)*TESTW]=RGBToShort(RGB((255*C#*255)DIV 255,(255*C#*255)DIV 255,(255*C#*255)DIV 255))
+END
+COMMON DEF GLINEAAArray M,W,H,X,Y,X2,Y2,COL
+' IF!(X-X2)||!(Y-Y2) THEN
+'  M[X+Y*W]=RGBToShort(COL)
+'  RETURN
+' ENDIF
+ TESTM=M
+ TESTW=W
+ TESTH=H
+ VAR STEEP=ABS(Y2-Y)>ABS(X2-X)
+ IF STEEP THEN
+  SWAP X,Y
+  SWAP X2,Y2
+ ENDIF
+ IF X>X2 THEN
+  SWAP X,X2
+  SWAP Y,Y2
+ ENDIF
+ VAR DX=X2-X
+ VAR DY=Y2-X
+ IF DX==0 THEN
+  VAR GRAD#=1
+ ELSE
+  GRAD#=DY/DX
+ ENDIF
+ VAR XEND=X
+ VAR YEND#=Y+GRAD#*(XEND-X)
+ VAR XGAP#=0.5'RFPART#(X2+0.5)
+ VAR XPXL1=XEND
+ VAR YPXL1=YEND#
+ 'RFPART=1-X#+FLOOR(X#)
+ 'RFPART=1-X+X=1
+ 'FPART=X#-FLOOR(X#)
+ 'FPART=X-X=0
+ IF STEEP THEN
+  PLOT YPXL1,XPXL1,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT YPXL1+1,XPXL1,(YEND#-FLOOR(YEND#))*XGAP#
+ ELSE
+  PLOT XPXL1,YPXL1,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT XPXL1,YPXL1+1,(YEND#-FLOOR(YEND#))*XGAP#
+ ENDIF
+ VAR INTERY#=YEND#+GRAD#
+ XEND=X2
+ YEND#=Y2+GRAD#*(XEND-X2)
+ XGAP#=0.5
+ VAR XPXL2=XEND
+ VAR YPXL2=YEND#
+ IF STEEP THEN
+  PLOT YPXL2,XPXL2,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT YPXL2+1,XPXL2,(YEND#-FLOOR(YEND#))*XGAP#
+ ELSE
+  PLOT XPXL2,YPXL2,(1-YEND#+FLOOR(YEND#))*XGAP#
+  PLOT XPXL2,YPXL2+1,(YEND#-FLOOR(YEND#))*XGAP#
+ ENDIF
+ IF STEEP THEN
+  FOR X=XPXL1+1 TO XPXL2-1
+   PLOT INTERY#,X,1-INTERY#+FLOOR(INTERY#)
+   PLOT INTERY#+1,X,INTERY#-FLOOR(INTERY#)
+   INTERY#=INTERY#+GRAD#
+  NEXT
+ ELSE
+  FOR X=XPXL1+1 TO XPXL2-1
+   PLOT X,INTERY#,1-INTERY#+FLOOR(INTERY#)
+   PLOT X,INTERY#+1,INTERY#-FLOOR(INTERY#)
+   INTERY#=INTERY#+GRAD#
+  NEXT
+ ENDIF
+END
+COMMON DEF GBOXArray M,W,H,X,Y,X2,Y2,COL
+ COL=RGBToShort(COL)
+ IF X2<X THEN SWAP X2,X
+ IF Y2<Y THEN SWAP Y2,Y
+ IF X2<0THEN RETURN
+ IF Y2<0THEN RETURN
+ IF X>=W THEN RETURN
+ IF Y>=H THEN RETURN
+ VAR CNT=MIN(W-1,X2)-MAX(X,0)+1
+ IF Y>=0THEN
+  FILL M,COL,MAX(0,X)+Y*W,CNT
+ ENDIF
+ IF Y2<H THEN
+  FILL M,COL,MAX(0,X)+Y2*W,CNT
+ ENDIF
+ Y2=MIN(H-1,Y2)
+ Y=MAX(Y,0)
+ CNT=Y2-Y+1
+ IF X>=0&&X2<W THEN
+  REPEAT
+   M[X+Y*W]=COL
+   M[X2+Y*W]=COL
+   Y=Y+1
+  UNTIL Y2<Y
+ ELSEIF X>=0THEN
+  REPEAT
+   M[X+Y*W]=COL
+   Y=Y+1
+  UNTIL Y2<Y
+ ELSEIF X2<W THEN
+  REPEAT
+   M[X2+Y*W]=COL
+   Y=Y+1
+  UNTIL Y2<Y
+ ENDIF
+END
 
 COMMON DEF PAINTCANVASMMOVE WND,CTL,TYP,OX,OY
  IF GetCapture()!=WND THEN
@@ -14462,7 +14855,7 @@
   PAINTCANVASPAINT WND,CTL,TYP,0,0
   A[PAINT_CMOUSEX]=OX DIV Z#
   A[PAINT_CMOUSEY]=OY DIV Z#
- ELSEIF PT==PAINT_MENU_LINE THEN
+ ELSEIF PT==PAINT_MENU_LINE||PT==PAINT_MENU_BOX||PT==PAINT_MENU_FILLEDBOX THEN
   A[PAINT_CMOUSEX2]=X
   A[PAINT_CMOUSEY2]=Y
   PAINTCANVASPAINT WND,CTL,TYP,0,0
@@ -14497,6 +14890,31 @@
 END
 VAR PAINTNEWDLGCTL
 VAR PAINTOFDID
+VAR PAINTSFDID
+DEF PAINT_IMPORT(WND,F$,W,H,D)
+ VAR ERR
+ GetSBFile F$ OUT F$,ERR
+ IF ERR THEN RETURN 1
+ IF MID$(F$,0,4)!="DAT:"THEN RETURN 1
+ IF D>2THEN
+  RETURN 1
+ ENDIF
+ IF 0THEN DIM IMG[0]
+ PAINT_NEW WND,W,H
+ IF 0THEN DIM A[0]
+ PAINT_GET WND OUT A
+ GetImageArray A[PAINT_IMAGE] OUT IMG,ERR
+ IF ERR THEN RETURN 1
+ IF D==2 THEN
+  DIM ARY[W,H]
+  LOAD F$,ARY,FALSE
+  COPY IMG,ARY
+  ARY=NewArray(0)
+ ELSE
+  LOAD F$,IMG,FALSE
+ ENDIF
+ RETURN 0
+END
 DEF PAINT_LOADGRP WND,F$
  VAR ERR,PAGE1,PAGE2
  GetSBFile F$ OUT F$,ERR
@@ -14505,7 +14923,9 @@
  IF GBeginDirect(WND)THEN @ERR
  GetDirectGPAGE WND OUT PAGE1,PAGE2,ERR
  IF ERR THEN @ERR
- VAR C=RGB(0,RND(16)*8,RND(32)*8,RND(32)*8)
+ REPEAT
+  VAR C=RGB(0,RND(32)*8,RND(32)*8,RND(32)*8)
+ UNTIL C!=RGB(0,0,0)'|C==
  GCLS C
  
  F$="GRP"+STR$(PAGE2)+MID$(F$,3,&H7FFFFFFF)
@@ -14532,18 +14952,31 @@
  @ERR
 END
 COMMON DEF PAINTSTRNOTIF WND,C,T,A1,A2$
- IF A1==PAINTOFDID THEN
-  VAR EXT$=GetFileExtension$(A2$)
+END
+DEF PAINT_OPENFILE WND,A1,A2
+ VAR F$=GetFileDialogInfoFile$(A2)
+ VAR T$=GetFileDialogInfoType$(A2)
+ VOID DeleteFileDialogInfo(A2)
+ IF T$=="GRP"THEN
+  PAINT_LOADGRP WND,F$
+ ELSEIF T$=="Auto"THEN
+  VAR EXT$=GetFileExtension$(F$)
   ToUpper EXT$
   IF EXT$=="GRP"||EXT$=="GRPF"THEN
    'GRP
-   PAINT_LOADGRP WND,A2$
+   PAINT_LOADGRP WND,F$
   ELSE
-   NewDialogBoxWithArg PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0 OUT ,
+   SHOW_PAINT_IMPORT_DIALOG WND,F$
   ENDIF
+ ELSE
+  SHOW_PAINT_IMPORT_DIALOG WND,F$
  ENDIF
 END
 COMMON DEF PAINTNOTIF WND,C,T,A1,A2
+ IF A1&&A1==PAINTOFDID THEN
+  PAINT_OPENFILE WND,A1,A2
+  RETURN
+ ENDIF
  IF A1==MenuNotifID()THEN
   PAINT_MENU WND,A2
  ENDIF
@@ -14551,14 +14984,14 @@
 DEF PAINT_MENU WND,A2
  IF 0THEN DIM A[0]
  PAINT_GET WND OUT A
- ON A2 GOTO @ERR,@NEW,@OPEN,@SAVE,@SAVEAS,@PEN,@ERASER,@LINE,@BOX,@FILLEDBOX,@ZOOMIN,@ZOOMOUT,@HAND
+ ON A2 GOTO @ERR,@NEW,@OPEN,@SAVE,@SAVEAS,@PEN,@ERASER,@LINE,@BOX,@FILLEDBOX,@ZOOMIN,@ZOOMOUT,@HAND,@PAINT,@SPOIT,@REL,@ABS
  @ERR
  RETURN
  @NEW
  NewDialogBoxWithArg PAINTNEWDLGCTL,"New",170,35,WND,TRUE,GetWindowVar(WND,0),0 OUT ,
  RETURN
  @OPEN
-  PAINTOFDID=1
+  PAINTOFDID=-1
   DIM LIST$[0]
   PUSH LIST$,"Auto"
   PUSH LIST$,"GRP"
@@ -14568,31 +15001,29 @@
  @SAVE
  RETURN
  @SAVEAS
+  PAINTSFDID=-2
+  DIM LIST2$[0]
+  PUSH LIST2$,"GRP"
+  VOID SaveFileDialogEx(WND,"DAT",PAINTSFDID,LIST2$)
  RETURN
  @PEN
- A[PAINT_TOOL]=A2
- RETURN
  @ERASER
- A[PAINT_TOOL]=A2
- RETURN
  @LINE
- A[PAINT_TOOL]=A2
- RETURN
  @BOX
- A[PAINT_TOOL]=A2
- RETURN
  @FILLEDBOX
- A[PAINT_TOOL]=A2
- RETURN
  @ZOOMIN
- A[PAINT_TOOL]=A2
- RETURN
  @ZOOMOUT
- A[PAINT_TOOL]=A2
- RETURN
  @HAND
+ @PAINT
+ @SPOIT
  A[PAINT_TOOL]=A2
  RETURN
+ @REL
+ SetMouseMode FALSE
+ RETURN
+ @ABS
+ SetMouseMode TRUE
+ RETURN
 END
 COMMON DEF PAINTNEWDLGCREATE WND,CTL,TYP,A1,A2
  SetWindowVar WND,0,A1
@@ -14620,7 +15051,7 @@
  IF A1==OKBTN THEN
   VAR H=VAL(GetWindowName$(HTXTBOX))
   VAR W=VAL(GetWindowName$(WTXTBOX))
-  IF H&&W THEN
+  IF H>0&&W>0 THEN
    PAINT_NEW WND,W,H
    VOID DeleteWindow(WND)
   ELSE
@@ -14813,6 +15244,29 @@
  PAINTPAL_SELECT WND,I
  VOID RepaintWindow(WND)
 END
+COMMON DEF PAINTCOLORBTN WND,CTL,TYP,BTN,A2
+ VAR SELC=GetWindowVar(WND,4)
+ VAR IX=SELC MOD 6
+ VAR IY=SELC DIV 6
+ 
+ IF BTN AND #UP THEN
+  DEC IY
+ ENDIF
+ IF BTN AND #DOWN THEN
+  INC IY
+ ENDIF
+ IF BTN AND #LEFT THEN
+  DEC IX
+ ENDIF
+ IF BTN AND #RIGHT THEN
+  INC IX
+ ENDIF
+ VAR W=GetWindowWidth(WND)
+ VAR I=IX+IY*(W DIV 10)
+ IF I<0||I>65THEN RETURN
+ PAINTPAL_SELECT WND,I
+ VOID RepaintWindow(WND)
+END
 COMMON DEF PAINTCOLORPAINTER WND,CTL,TYP,XY,WH
  IF CallBaseControlHandler(WND,CTL,TYP,XY,WH)THEN @ERR
  VAR X,Y,W,H
@@ -14880,6 +15334,124 @@
  IF GEndWindow(WND)THEN @ERR
  @ERR
 END
+DEF SHOW_PAINT_IMPORT_DIALOG WND,FILE$
+ NewDialogBoxWithArg PAINTIMPORTDLGCTL,"Import "+FILE$,170,49,WND,TRUE,GetWindowVar(WND,0),AllocString(FILE$) OUT ,
+END
+VAR PAINTIMPORT_WV_PAINT
+VAR PAINTIMPORT_WV_FILE
+VAR PAINTIMPORT_WV_OKBTN
+VAR PAINTIMPORT_WV_CANCELBTN
+VAR PAINTIMPORT_WV_WTXTBOX
+VAR PAINTIMPORT_WV_HTXTBOX
+VAR PAINTIMPORT_WV_DTXTBOX
+COMMON DEF PAINTIMPORTCREATE WND,CTL,TYP,A1,A2
+ PAINTIMPORT_WV_PAINT=0
+ PAINTIMPORT_WV_FILE=1
+ PAINTIMPORT_WV_OKBTN=2
+ PAINTIMPORT_WV_CANCELBTN=3
+ PAINTIMPORT_WV_WTXTBOX=4
+ PAINTIMPORT_WV_HTXTBOX=5
+ PAINTIMPORT_WV_DTXTBOX=6
+ VAR FILE$=GetString$(A2)
+ SetWindowVar WND,PAINTIMPORT_WV_PAINT,A1
+ VAR ROW1=9*8
+ VAR WIDTHTXTBOX,HEIGHTTXTBOX,DIMTXTBOX
+ VAR OKBTN,CANCELBTN
+ NewWindow GetLabelControl(),"Type     Raw image",0,0,18*8-1,7,WND,0 OUT ,
+ NewWindow GetLabelControl(),"Width",0,9,5*8-1,7,WND,0 OUT ,
+ NewWindow GetLabelControl(),"Height",0,19,6*8-1,7,WND,0 OUT ,
+ NewWindow GetTextBoxControl(),"",ROW1,8,10*8,8,WND,0 OUT WIDTHTXTBOX,
+ NewWindow GetTextBoxControl(),"",ROW1,18,10*8,8,WND,0 OUT HEIGHTTXTBOX,
+ NewWindow GetLabelControl(),"Dimension",0,29,9*8-1,7,WND,0 OUT ,
+ NewWindow GetTextBoxControl(),"1",ROW1,28,10*8,8,WND,0 OUT DIMTXTBOX,
+ NewWindow GetButtonControl(),"OK",1,38,20,10,WND,0 OUT OKBTN,
+ NewWindow GetButtonControl(),"Cancel",ROW1,38,8*6+4,10,WND,0 OUT CANCELBTN,
+ SetWindowVar WND,PAINTIMPORT_WV_FILE,A2
+ SetWindowVar WND,PAINTIMPORT_WV_WTXTBOX,WIDTHTXTBOX
+ SetWindowVar WND,PAINTIMPORT_WV_HTXTBOX,HEIGHTTXTBOX
+ SetWindowVar WND,PAINTIMPORT_WV_DTXTBOX,DIMTXTBOX
+ SetWindowVar WND,PAINTIMPORT_WV_OKBTN,OKBTN
+ SetWindowVar WND,PAINTIMPORT_WV_CANCELBTN,CANCELBTN
+END
+COMMON DEF PAINTIMPORTNOTIF WND,CTL,TYP,A1,A2
+ VAR OK=GetWindowVar(WND,PAINTIMPORT_WV_OKBTN)
+ IF A1==OK THEN
+  VAR W=VAL(GetWindowName$(GetWindowVar(WND,PAINTIMPORT_WV_WTXTBOX)))
+  VAR H=VAL(GetWindowName$(GetWindowVar(WND,PAINTIMPORT_WV_WTXTBOX)))
+  VAR D=VAL(GetWindowName$(GetWindowVar(WND,PAINTIMPORT_WV_DTXTBOX)))
+  IF W>0&&H>0&&D>0 THEN
+   VAR STR=GetWindowVar(WND,PAINTIMPORT_WV_FILE)
+   VAR ERR=PAINT_IMPORT(WND,GetString$(STR),W,H,D)
+   IF ERR THEN
+    VOID MessageBox(WND,"Paint","Could not import.",MessageBoxOK()OR MessageBoxError())
+    RETURN
+   ENDIF
+  ELSE
+   VOID MessageBox(WND,"Paint","Invalid size",MessageBoxOK()OR MessageBoxError())
+   RETURN
+  ENDIF
+  VOID DeleteWindow(WND)
+  RETURN
+ ENDIF
+ VAR CANCEL=GetWindowVar(WND,PAINTIMPORT_WV_CANCELBTN)
+ IF A1==CANCEL THEN
+  VOID DeleteWindow(WND)
+  RETURN
+ ENDIF
+END
+COMMON DEF PAINTIMPORTDELETE WND,CTL,TYP,A1,A2
+ VAR STR=GetWindowVar(WND,PAINTIMPORT_WV_FILE)
+ FreeString STR
+END
+DEF PAINT_IMPORTDLG_CTL_INIT OUT E
+ ExtendControl"PAINTIMPORTDLGCTL",GetWindowControl() OUT PAINTIMPORTDLGCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTIMPORTDLGCTL,"PAINTIMPORTCREATE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTIMPORTDLGCTL,"PAINTIMPORTNOTIF")THEN @ERR_CTL
+ IF SetControlDeleteHandler(PAINTIMPORTDLGCTL,"PAINTIMPORTDELETE")THEN @ERR_CTL
+ @ERR_CTL
+END
+
+DEF PAINT_CTL_INIT OUT E
+ ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlDeleteHandler(PAINTCTL,"PAINTDELETE")THEN @ERR_CTL
+ IF SetControlResizeHandler(PAINTCTL,"PAINTRESIZE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTCTL,"PAINTNOTIF")THEN @ERR_CTL
+ IF SetControlStrNotifHandler(PAINTCTL,"PAINTSTRNOTIF")THEN @ERR_CTL
+ @ERR_CTL
+END
+DEF PAINT_CANVAS_CTL_INIT OUT E
+ NewControl "PAINT_CANVAS" OUT PAINTCANVASCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTCANVASCTL,"PAINTCANVASCREATE")THEN @ERR_CTL
+ IF SetControlPainter(PAINTCANVASCTL,"PAINTCANVASPAINT")THEN @ERR_CTL
+ IF SetControlMouseMoveHandler(PAINTCANVASCTL,"PAINTCANVASMMOVE")THEN @ERR_CTL
+ IF SetControlLMouseDownHandler(PAINTCANVASCTL,"PAINTCANVASLMD")THEN @ERR_CTL
+ IF SetControlLMouseUpHandler(PAINTCANVASCTL,"PAINTCANVASLMU")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTCANVASCTL,"PAINTCANVASNOTIF")THEN @ERR_CTL
+ IF SetControlButtonHandler(PAINTCANVASCTL,"PAINTCANVASBUTTON")THEN @ERR_CTL
+ @ERR_CTL
+END
+DEF PAINT_NEWDLG_CTL_INIT OUT E
+ ExtendControl"PAINTNEWDLGCTL",GetWindowControl() OUT PAINTNEWDLGCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTNEWDLGCTL,"PAINTNEWDLGCREATE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTNEWDLGCTL,"PAINTNEWDLGNOTIF")THEN @ERR_CTL
+
+ @ERR_CTL
+END
+DEF PAINT_COLOR_CTL_INIT OUT E
+ ExtendControl"PAINTCOLORCTL",GetWindowControl() OUT PAINTCOLORCTL,E
+ IF E THEN @ERR_CTL
+ IF SetControlPainter(PAINTCOLORCTL,"PAINTCOLORPAINTER")THEN @ERR_CTL
+ IF SetControlCreateHandler(PAINTCOLORCTL,"PAINTCOLORCREATE")THEN @ERR_CTL
+ IF SetControlNotifHandler(PAINTCOLORCTL,"PAINTCOLORNOTIF")THEN @ERR_CTL
+ IF SetControlLMouseDownHandler(PAINTCOLORCTL,"PAINTCOLORLMD")THEN @ERR_CTL
+ IF SetControlMouseMoveHandler(PAINTCOLORCTL,"PAINTCOLORMM")THEN @ERR_CTL
+ IF SetControlButtonHandler(PAINTCOLORCTL,"PAINTCOLORBTN")THEN @ERR_CTL
+ @ERR_CTL
+END
 COMMON DEF I_PAINT
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
   PrintConsole "Require window system"+LF$()
@@ -14888,32 +15460,11 @@
  ENDIF
  VAR WND,E
  IF!PAINTCTL THEN
-  ExtendControl "PAINT",GetWindowControl() OUT PAINTCTL,E
-  IF E THEN @ERR_CTL
-  NewControl "PAINT_CANVAS" OUT PAINTCANVASCTL,E
-  IF E THEN @ERR_CTL
-  ExtendControl"PAINTNEWDLGCTL",GetWindowControl() OUT PAINTNEWDLGCTL,E
-  IF E THEN @ERR_CTL
-  ExtendControl"PAINTCOLORCTL",GetWindowControl() OUT PAINTCOLORCTL,E
-  IF E THEN @ERR_CTL
-  IF SetControlDeleteHandler(PAINTCTL,"PAINTDELETE")THEN @ERR_CTL
-  IF SetControlResizeHandler(PAINTCTL,"PAINTRESIZE")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTCTL,"PAINTNOTIF")THEN @ERR_CTL
-  IF SetControlStrNotifHandler(PAINTCTL,"PAINTSTRNOTIF")THEN @ERR_CTL
-  IF SetControlCreateHandler(PAINTCANVASCTL,"PAINTCANVASCREATE")THEN @ERR_CTL
-  IF SetControlPainter(PAINTCANVASCTL,"PAINTCANVASPAINT")THEN @ERR_CTL
-  IF SetControlMouseMoveHandler(PAINTCANVASCTL,"PAINTCANVASMMOVE")THEN @ERR_CTL
-  IF SetControlLMouseDownHandler(PAINTCANVASCTL,"PAINTCANVASLMD")THEN @ERR_CTL
-  IF SetControlLMouseUpHandler(PAINTCANVASCTL,"PAINTCANVASLMU")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTCANVASCTL,"PAINTCANVASNOTIF")THEN @ERR_CTL
-  IF SetControlButtonHandler(PAINTCANVASCTL,"PAINTCANVASBUTTON")THEN @ERR_CTL
-  IF SetControlCreateHandler(PAINTNEWDLGCTL,"PAINTNEWDLGCREATE")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTNEWDLGCTL,"PAINTNEWDLGNOTIF")THEN @ERR_CTL
-  IF SetControlPainter(PAINTCOLORCTL,"PAINTCOLORPAINTER")THEN @ERR_CTL
-  IF SetControlCreateHandler(PAINTCOLORCTL,"PAINTCOLORCREATE")THEN @ERR_CTL
-  IF SetControlNotifHandler(PAINTCOLORCTL,"PAINTCOLORNOTIF")THEN @ERR_CTL
-  IF SetControlLMouseDownHandler(PAINTCOLORCTL,"PAINTCOLORLMD")THEN @ERR_CTL
-  IF SetControlMouseMoveHandler(PAINTCOLORCTL,"PAINTCOLORMM")THEN @ERR_CTL
+  IF PAINT_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_CANVAS_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_NEWDLG_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_COLOR_CTL_INIT()THEN @ERR_CTL
+  IF PAINT_IMPORTDLG_CTL_INIT()THEN @ERR_CTL
  ENDIF
  VAR COLORWND
  NewStyleWindow PAINTCTL,"PAINT",0,0,300,128,GetRootWindow(),WindowFrontFlag(),WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
@@ -14965,6 +15516,10 @@
  PAINT_MENU_ZOOMIN=MI:INC MI
  PAINT_MENU_ZOOMOUT=MI:INC MI
  PAINT_MENU_HAND=MI:INC MI
+ PAINT_MENU_PAINT=MI:INC MI
+ PAINT_MENU_SPOIT=MI:INC MI
+ PAINT_MENU_REL=MI:INC MI
+ PAINT_MENU_ABS=MI:INC MI
  A[PAINT_TOOL]=PAINT_MENU_PEN
  AddMenuItem MENU,"New",PAINT_MENU_NEW
  AddMenuItem MENU,"Open",PAINT_MENU_OPEN
@@ -14981,8 +15536,14 @@
  AddRadioMenuItem MENU,"Zoom in",PAINT_MENU_ZOOMIN,FALSE
  AddRadioMenuItem MENU,"Zoom out",PAINT_MENU_ZOOMOUT,FALSE
  AddRadioMenuItem MENU,"Hand",PAINT_MENU_HAND,FALSE
+ AddRadioMenuItem MENU,"Paint",PAINT_MENU_PAINT,FALSE
+ AddRadioMenuItem MENU,"GSPOIT",PAINT_MENU_SPOIT,FALSE
  AddMenuItemSeparator MENU
  AddMenuItem MENU,"Pen",0
+ NewMenu OUT MENU,E
+ AddSubMenuItem GetWindowMenu(WND),"Mouse",MENU
+ AddRadioMenuItem MENU,"Relative",PAINT_MENU_REL,TRUE
+ AddRadioMenuItem MENU,"Absolute",PAINT_MENU_ABS,FALSE
 
  RETURN
  
@@ -14992,12 +15553,237 @@
   ExitProcess 1
   RETURN
  @ERR
-  VOID DeleteControl(WND)
-  VOID DeleteControl(COLORWND)
-  VOID DeleteControl(CWND)
+  VOID DeleteWindow(WND)
+  VOID DeleteWindow(COLORWND)
+  VOID DeleteWindow(CWND)
   ExitProcess 1
 END
 COMMON DEF L_PAINT
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR EYESCTL
+DEF DrawFilledCircle WND,X,Y,W,H,COL
+ DrawStrokedCircle WND,X,Y,W,H,MIN(W,H),COL
+END
+DEF DrawStrokedCircle WND,X,Y,W,H,S,COL
+ VAR R=180 DIV 20
+ VAR I
+ VAR X#=W/2
+ VAR Y#=H/2
+ VAR OX,OY,F
+ VAR SX#=X#-S
+ VAR SY#=Y#-S
+ VAR OX2,OY2
+' IF X#-X THEN STOP
+' W=W-(X#-X)
+ 'FOR I=90TO 270 STEP R'359 STEP R
+ FOR I=00TO 360 STEP R'359 STEP R
+  VAR NX=X+COS(RAD(I))*X#,NY=Y+SIN(RAD(I))*Y#
+  VAR NX2=X+COS(RAD(I))*SX#,NY2=Y+SIN(RAD(I))*SY#
+  IF F THEN
+'   GTRIWindow WND,NX,NY,OX,OY,NX2,NY2,COL
+'   GTRIWindow WND,NX2,NY2,OX2,OY2,OX,OY,COL
+   GTRI NX,NY,OX,OY,NX2,NY2,COL
+   GTRI NX2,NY2,OX2,OY2,OX,OY,COL
+'   GTRIWindow WND,W-NX,NY,W-OX,OY,W-NX2,NY2,COL
+'   GTRIWindow WND,W-NX2,NY2,W-OX2,OY2,W-OX,OY,COL
+  ENDIF
+  OX=NX
+  OY=NY
+  OX2=NX2
+  OY2=NY2
+  F=TRUE
+ NEXT
+END
+COMMON DEF EYESPainter WND,CTL,TYP,XY,WH
+ IF CallBaseControlHandler(WND,CTL,TYP,XY,WH)THEN @ERR
+ EYESPaint WND
+ @ERR
+END
+DEF EYESDrawEye WND,CX,CY,CW,CH
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ VAR EW=WIDTH DIV 2
 
+ VAR MIN=MIN(EW,HEIGHT)
+ VAR EYEH=MIN DIV 5
+ VAR EYEW=MIN DIV 8
+ 
+ 
+ VAR MX=GetMouseX()
+ VAR MY=GetMouseY()
+ VAR AX=GetWindowAX(WND)
+ VAR AY=GetWindowAY(WND)
+ SetWindowVar WND,0,MX
+ SetWindowVar WND,1,MY
+'VAR EYEH=MIN DIV 7
+ VAR ACX=AX+CX'absolute center
+ VAR ACY=AY+CY'absolute center
+ VAR MX#=ATAN(MY-ACY,MX-ACX)
+ VAR D#=POW(MX-ACX,2)+POW(MY-ACY,2)
+ VAR D2#=POW(COS(MX#)*CW,2)+POW(SIN(MX#)*CH,2)
+ IF D2#>D# THEN
+  DrawFilledCircle WND,MX-AX,MY-AY,EYEW,EYEH,#BLACK
+ ELSE
+  DrawFilledCircle WND,COS(MX#)*CW+CX,SIN(MX#)*CH+CY,EYEW,EYEH,#BLACK
+ ENDIF
+END
+COMMON DEF EYESPaint WND
+ VAR WIDTH=GetWindowWidth(WND)
+ VAR HEIGHT=GetWindowHeight(WND)
+ IF HEIGHT<0THEN RETURN
+ IF GBeginDirect(WND)THEN @ERR
+ 'IF GBeginWindow(WND)THEN @ERR
+ GCLIP 1,0,0,WIDTH,HEIGHT
+ GCLS GetWindowBackColor(WND)
+ VAR EW=WIDTH DIV 2
+ VAR CX=EW DIV 2
+ VAR CY=HEIGHT DIV 2
+ EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4
+
+ 
+ VAR MIN=MIN(EW,HEIGHT)
+ DrawStrokedCircle WND,CX,CY,EW,HEIGHT,MIN/10,#BLACK
+ CX=WIDTH DIV 2+EW/2
+ CY=HEIGHT/2
+ DrawStrokedCircle WND,CX,CY,EW,HEIGHT,MIN/10,#BLACK
+ EYESDrawEye WND,CX,CY,EW DIV 4,HEIGHT DIV 4
+
+ UpdateMouse
+ IF GCopyDirect(WND,0,0,WIDTH,HEIGHT,0,0,0)THEN @ERR
+ IF GEndWindow(WND)THEN @ERR
+ @ERR
+END
+COMMON DEF I_EYES
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!EYESCTL THEN
+  ExtendControl "eyes",GetWindowControl() OUT EYESCTL,E
+  SetControlPainter EYESCTL,"EYESPainter" OUT E
+ ENDIF
+ NewTopLevelStyleWindow EYESCTL,"eyes",64,64,WINDOWRESIZABLESTYLE() OUT WND,E
+ SetWindowBackColor WND,#WHITE
+ SetProcessVar WND
+END
+COMMON DEF L_EYES
+ VAR W=GetProcessVar()
+ IF GetMouseX()!=GetWindowVar(W,0)||GetMouseY()!=GetWindowVar(W,1)THEN VOID RepaintWindow(W)
+ 
+ IF UpdateWindow(W)THEN ExitProcess 1
+END
+VAR WINLISTCTL
+
+DEF WINLIST_Update LISTBOX
+ ClearListBox LISTBOX
+ VAR W=GetRootWindow()
+ WINLIST_Add LISTBOX,W,""
+END
+DEF WINLIST_Add LISTBOX,WND,P$
+ WHILE WND
+  VAR C=GetChildWindow(WND)
+  VAR N=GetNextWindow(WND)
+  IF N THEN
+   AddListBoxItem LISTBOX,P$+""+GetControlName$(GetControl(WND))+":"+GetWindowName$(WND)
+   IF C THEN WINLIST_Add LISTBOX,C,P$+""
+  ELSE
+   AddListBoxItem LISTBOX,P$+""+GetControlName$(GetControl(WND))+":"+GetWindowName$(WND)
+   IF C THEN WINLIST_Add LISTBOX,C,P$+" "
+  ENDIF
+  WND=N
+ WEND
+END
+COMMON DEF WINLISTNOTIF WND,CTL,TYP,A1,A2
+ IF A1==MenuNotifID()&&A2==1THEN
+  WINLIST_Update GetWindowVar(WND,0)
+ ENDIF
+END
+COMMON DEF WINLISTRESIZE WND,CTL,TYP,A1,A2
+ VOID ResizeWindow(GetWindowVar(WND,0),GetWindowWidth(WND),GetWindowHeight(WND))
+END
+COMMON DEF I_WINLIST
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!WINLISTCTL THEN
+  ExtendControl "Window list",GetWindowControl() OUT WINLISTCTL,E
+  IF SetControlResizeHandler(WINLISTCTL,"WINLISTRESIZE")THEN @ERR_CTL
+  IF SetControlNotifHandler(WINLISTCTL,"WINLISTNOTIF")THEN @ERR_CTL
+ ENDIF
+ NewTopLevelStyleWindow WINLISTCTL,"Window list",128,128,WINDOWRESIZABLESTYLE()OR WINDOWMENUSTYLE()OR WindowMinMaxStyle() OUT WND,E
+ SetProcessVar WND
+ VAR LB
+ NewWindow GetListBoxControl(),"",0,0,128,128,WND,0 OUT LB,E
+ WINLIST_Update LB
+ SetWindowVar WND,0,LB
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Update",1
+ AddSubMenuItem GetWindowMenu(WND),"View",MENU
+ 
+END
+COMMON DEF L_WINLIST
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+VAR OTWFREEMEMCTL
+DEF OTWFREEMEM_FORMAT$(F)
+ VAR KIB#=F/1024
+ VAR MIB#=KIB#/1024
+ IF MIB#>=1THEN
+  RETURN FORMAT$("%.2FMiB",MIB#)
+ ENDIF
+ IF KIB#>=1THEN
+  RETURN FORMAT$("%.2FKiB",KIB#)
+ ENDIF
+ RETURN FORMAT$("%DB",F)
+END
+DEF OTWFREEMEM$(FM)
+ RETURN OTWFREEMEM_FORMAT$(FM)+"/"+OTWFREEMEM_FORMAT$(GetMemorySize())
+END
+VAR OTWFMEM_WV_MEM
+VAR OTWFMEM_WV_LABEL
+COMMON DEF I_OTWFREEMEM
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTWFREEMEMCTL THEN
+  ExtendControl "FREEMEM",GetWindowControl() OUT OTWFREEMEMCTL,E
+ ENDIF
+ VAR W
+ IF HARDWARE==0||HARDWARE==1THEN
+  W=56*2-1+8'LEN("8.XXMiB")*8
+ ELSE'WiiU?
+  W=88*2-1+8'LEN("128.XXMiB")*8
+ ENDIF
+ NewTopLevelWindow OTWFREEMEMCTL,"FREEMEM",W,7 OUT WND,E
+ VAR LABEL
+ VAR FM=FREEMEM
+ NewWindow GetLabelControl(),OTWFREEMEM$(FM),0,0,W,7,WND,0 OUT LABEL,E
+ SetLabelAlignRight LABEL
+ SetProcessVar WND
+ OTWFMEM_WV_MEM=0
+ OTWFMEM_WV_LABEL=1
+ SetWindowVar WND,OTWFMEM_WV_MEM,FM
+ SetWindowVar WND,OTWFMEM_WV_LABEL,LABEL
+END
+COMMON DEF L_OTWFREEMEM
+ VAR WND=GetProcessVar()
+ IF GetWindowVar(WND,OTWFMEM_WV_MEM)!=FREEMEM THEN
+  VAR FM=FREEMEM
+  VAR L=GetWindowVar(WND,OTWFMEM_WV_LABEL)
+  SetWindowName L,OTWFREEMEM$(FM)
+  VOID RepaintWindow(L)
+  SetWindowVar WND,OTWFMEM_WV_MEM,FM
+ ENDIF
+ IF UpdateWindow(WND)THEN ExitProcess 1
+END
+

