diff -u OTW.TXT OTW19
--- OTW.TXT
+++ OTW19
@@ -49,6 +49,11 @@
 DIM WIN_PARENT [0]
 DIM WIN_BEGIN  [0]
 DIM WIN_SP     [0]
+DIM WIN_MENU   [0]
+DIM WIN_GROUP  [0]
+DIM WIN_GNEXT  [0]
+DIM WIN_GPREV  [0]
+DIM WIN_GPARENT[0]
 'QUEUE
 DIM WIN_MSGS   [0]
 DIM WIN_MSGE   [0]
@@ -133,13 +138,75 @@
  WIN_BEGIN     =NewArray(WIN_MAX)
  WIN_SP        =NewArray(WIN_MAX)
  WIN_HIDE      =NewArray(WIN_MAX)
+ WIN_MENU      =NewArray(WIN_MAX)
+ WIN_GROUP     =NewArray(WIN_MAX)
+ WIN_GNEXT     =NewArray(WIN_MAX)
+ WIN_GPREV     =NewArray(WIN_MAX)
+ WIN_GPARENT   =NewArray(WIN_MAX)
  WIN_MSGS      =NewArray(WIN_MAX)
  WIN_MSGE      =NewArray(WIN_MAX)
  WIN_MSGBUF    =NewArray3(WIN_MAX,WIN_MSGMAX,WIN_MSGARGSIZE)
  WIN_MSGCNT    =NewArray2(WIN_MAX,16)
  WIN_FREE=1
  OTW_INITLIST WIN_NEXT
+ OTW_MENU_INITARRAY
 END
+'=======================
+'MENU
+'=======================
+'Item
+DIM MENU_INAME$[0]
+DIM MENU_INEXT[0]
+DIM MENU_IPREV[0]
+DIM MENU_ICHILD[0]
+DIM MENU_IPARENT[0]
+DIM MENU_ISTYLE[0]
+DIM MENU_IVAR[0]
+VAR MENU_ITEMMAX
+VAR MENU_ITEMFREE
+
+DIM MENU_WIDTH[0]
+DIM MENU_HEIGHT[0]
+DIM MENU_NUWID[0]
+DIM MENU_OWNER[0]
+DIM MENU_ITEM[0]
+DIM MENU_SHOW[0]
+DIM MENU_NEXT[0]
+DIM MENU_LAST[0]
+'Select
+DIM MENU_SEL[0]
+DIM MENU_ID[0]
+VAR MENU_MAX
+VAR MENU_IDCNT
+VAR MENU_FREE
+VAR MENUCTL
+DEF OTW_MENU_INITARRAY
+ MENU_ITEMMAX=256
+ MENU_INAME$=NewArray$(MENU_ITEMMAX)
+ MENU_INEXT=NewArray(MENU_ITEMMAX)
+ MENU_IPREV=NewArray(MENU_ITEMMAX)
+ MENU_ICHILD=NewArray(MENU_ITEMMAX)
+ MENU_IPARENT=NewArray(MENU_ITEMMAX)
+ MENU_ISTYLE=NewArray(MENU_ITEMMAX)
+ MENU_IVAR=NewArray(MENU_ITEMMAX)
+ OTW_INITLIST MENU_INEXT
+ MENU_ITEMFREE=1
+ MENU_MAX=64
+ MENU_WIDTH=NewArray(MENU_MAX)
+ MENU_HEIGHT=NewArray(MENU_MAX)
+ MENU_NUWID=NewArray(MENU_MAX)
+ MENU_OWNER=NewArray(MENU_MAX)
+ MENU_ITEM=NewArray(MENU_MAX)
+ MENU_LAST=NewArray(MENU_MAX)
+ MENU_SEL=NewArray(MENU_MAX)
+ MENU_SHOW=NewArray(MENU_MAX)
+ MENU_IDCNT=0
+ MENU_ID=NewArray(MENU_MAX)
+ MENU_NEXT=MENU_ITEM
+ OTW_INITLIST MENU_NEXT
+ MENU_FREE=1
+ VAR E
+END
 'IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
 'ExitProcess 1
 'ENDIF
@@ -180,6 +247,8 @@
 VAR CTL_BTNHANDLER
 VAR CTL_CHFOCUSHANDLER
 VAR CTL_MOUSEMVHANDLER
+VAR CTL_FRMMOUSEMVHANDLER
+VAR CTL_CREATEHANDLER
 VAR CTL_LBTNFLG
 VAR CTL_RBTNFLG
 VAR CTL_BTNDWNFLG
@@ -225,6 +294,8 @@
  CTL_BTNHANDLER=8
  CTL_CHFOCUSHANDLER=9
  CTL_MOUSEMVHANDLER=10
+ CTL_FRMMOUSEMVHANDLER=11
+ CTL_CREATEHANDLER=12
  'A1=,A2=bit16~31Y,Xbit0~15
  CTL_LBTNFLG=4
  CTL_RBTNFLG=8
@@ -232,10 +303,12 @@
  CTL_BTNUPFLG=2
 ' CTL_DRWFRMHANDLER=3
 'E=SetControlFrameSize(CTL_WINDOWCTL,WIN_FWIDTH1,WIN_FHEIGHT1,WIN_FWIDTH2,WIN_FHEIGHT2)
- E=SetControlFrameSize(CTL_WINDOWCTL,1,11,1,1)
+ E=SetControlFrameSize(CTL_WINDOWCTL,1,12,1,1)
  E=SetControlPainter(CTL_WINDOWCTL,"WindowPainter")
  E=SetControlLMouseUpHandler(CTL_WINDOWCTL,"WindowLMouseUP")
+ E=SetControlLMouseDownHandler(CTL_WINDOWCTL,"WindowLMouseDown")
  E=SetControlClickFrameHandler(CTL_WINDOWCTL,"WindowClickFrame")
+ E=SetControlMMoveFrameHandler(CTL_WINDOWCTL,"WindowMMoveFrame")
  E=SetControlPainter(CTL_BUTTONCTL,"ButtonPainter")
  E=SetControlLMouseUpHandler(CTL_BUTTONCTL,"ButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_BUTTONCTL,"ToggleButtonLMouseDown")
@@ -255,10 +328,16 @@
  E=SetControlLMouseUpHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseUP")
  E=SetControlLMouseDownHandler(CTL_TGLBTNCTL,"ToggleButtonLMouseDown")
  INIT_TXTBOXEX
+
+ 'MENU
+ NewControl"POPUPMENU" OUT MENUCTL,E
+ E=SetControlPainter(MENUCTL,"MenuPainter")
+ E=SetControlMouseMoveHandler(MENUCTL,"MenuMouseMove")
+ E=SetControlLMouseUpHandler(MENUCTL,"MenuLMouseUp")
 END
 DEF OTW_INITLIST ARY[]
  VAR I
- FOR I=1TO LEN(ARY)-1
+ FOR I=1TO LEN(ARY)-2
   ARY[I]=I+1
  NEXT
 END
@@ -378,6 +457,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_FRMBTNHANDLER]=HANDLER$
  RETURN 0
 END
+DEF SetControlMMoveFrameHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_FRMMOUSEMVHANDLER]=HANDLER$
+ RETURN 0
+END
 COMMON DEF SetControlNotificationHandler(CTL,HANDLER$)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  CTL_HANDLER$[CTL AND 4095,CTL_NOTIFHANDLER]=HANDLER$
@@ -408,6 +492,11 @@
  CTL_HANDLER$[CTL AND 4095,CTL_MOUSEMVHANDLER]=HANDLER$
  RETURN 0
 END
+COMMON DEF SetControlCreateHandler(CTL,HANDLER$)
+ IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
+ CTL_HANDLER$[CTL AND 4095,CTL_CREATEHANDLER]=HANDLER$
+ RETURN 0
+END
 DEF SetControlFrameSize(CTL,W1,H1,W2,H2)
  IF!CheckControl(CTL)THEN RETURN CTL_INVALIDID
  VAR C=CTL AND 4095
@@ -420,6 +509,128 @@
 DEF CIDNUCIDToCTL(CID,NUCID)
  RETURN CID<<12OR NUCID
 END
+VAR MENU_NOALLOC
+COMMON DEF NewMenu OUT MENU,E
+ IF !MENU_FREE THEN MENU=0RETURN
+ INC MENU_IDCNT
+ E=0
+ MENU_ID[MENU_FREE]=MENU_IDCNT
+ MENU_HEIGHT[MENU_FREE]=1
+ MENU_WIDTH[MENU_FREE]=2
+ MENU=MENU_FREE OR MENU_IDCNT<<12
+ MENU_FREE=MENU_NEXT[MENU_FREE]
+END
+COMMON DEF SetMenuBar WND,MENU
+END
+COMMON DEF ShowMenu MENU,WND
+END
+DEF ShowMenu_ MENU,WND,X,Y
+ VAR W=WND AND NUWIDMASK
+ VAR E
+ NewWindow MENUCTL,"",WIN_AX[W]+WIN_FW1[W]+X,WIN_AY[W]+Y+WIN_FH1[W],MENU_WIDTH[MENU],MENU_HEIGHT[MENU],GetRootWND(),WindowFrontFlag()OUT MENU_NUWID[MENU],E
+ VOID JoinWindowGroup(WND,MENU_NUWID[MENU])
+ SetWindowVar MENU_NUWID[MENU],0,MENU
+ MENU_NUWID[MENU]=MENU_NUWID[MENU]AND NUWIDMASK
+ MENU_SHOW[MENU]=TRUE
+ WIN_ACTIVENUWID=MENU_NUWID[MENU]
+
+' MENU_SEL[C],WND,X-1,0
+END
+DEF NewMenuItem(STR$,PREV,STYLE)
+ VAR I=MENU_ITEMFREE
+ IF!I THEN RETURN
+ MENU_INAME$[I]=STR$
+ MENU_IPREV[I]=PREV
+ IF PREV THEN MENU_INEXT[PREV]=I
+ MENU_IPARENT[I]=PREV
+ MENU_ITEMFREE=MENU_INEXT[I]
+ MENU_INEXT[I]=0
+ RETURN I
+END
+COMMON DEF GetWindowMenu(WND)
+ RETURN WIN_MENU[WND AND NUWIDMASK]
+END
+COMMON DEF AddMenuItem MENU,STR$,IVAR
+ IF!CheckMenu(MENU)THEN RETURN
+ VAR N=MENU AND 4095
+ VAR I=NewMenuItem(STR$,MENU_LAST[N],0)
+ IF!MENU_LAST[N]THEN
+  MENU_LAST[N]=I
+  MENU_ITEM[N]=I
+ ELSE
+  MENU_LAST[N]=I
+ ENDIF
+ MENU_IVAR[I]=IVAR
+ INC MENU_HEIGHT[N],8
+ IF MENU_WIDTH[N]<LEN(STR$)*8THEN
+  MENU_WIDTH[N]=LEN(STR$)*8
+ ENDIF
+END
+COMMON DEF AddMenuItemSeparator MENU
+END
+COMMON DEF AddSubMenuItem MENU,STR$,SUBMENU
+ AddMenuItem MENU,STR$,0
+ VAR N=MENU AND 4095
+ IF!MENU_LAST[N]THEN RETURN
+ MENU_ICHILD[MENU_LAST[N]]=SUBMENU AND 4095
+END
+COMMON DEF CheckMenu(MENU)
+ RETURN MENU_ID[MENU AND 4095]==MENU>>12
+END
+DEF MenuLMouseUp WND,C,T,X,Y
+ VAR M=GetWindowVar(WND,0)
+ IF X>0&&Y>0&&X<MENU_WIDTH[M]&&Y<MENU_HEIGHT[M]THEN
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MENU_IVAR[MENU_SEL[M]],0)
+ ENDIF
+ VOID DeleteWindow(WND)
+END
+DEF MenuMouseMove WND,C,T,X,Y
+ VAR M=GetWindowVar(WND,0)
+ VAR I=MENU_ITEM[M],Y1=1,Y2=1
+ VAR OS=MENU_SEL[M]
+ VAR BEG,G
+ WHILE I
+  INC Y2,8
+  IF Y1<=Y&&Y2>Y THEN
+   IF OS!=I&&!G THEN 
+   MENU_SEL[M]=I
+   IF!BEG&&GBeginWindow(WND)THEN :'BREAK
+   BEG=1
+   GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(0,0,255)
+   GPRINTWindow WND,1,Y1,MENU_INAME$[I],-1
+   G=0
+   ENDIF
+   IF!OS THEN BREAK
+  ELSE
+   IF I==OS THEN
+    IF!BEG&&GBeginWindow(WND)THEN :'BREAK
+    GFILLWindow WND,1,Y1,MENU_WIDTH[M]-1,Y2-1,RGB(224,224,224)
+    GPRINTWindow WND,1,Y1,MENU_INAME$[I],&HFF000000
+    OS=0
+    IF BEG THEN BREAK
+    BEG=1
+   ENDIF
+  ENDIF
+  Y1=Y2
+  I=MENU_INEXT[I]
+ WEND
+ IF BEG THEN BEG=GEndWindow(WND)
+END
+DEF MenuPainter WND,C,T,XY,WH
+ IF GBeginWindow(WND)THEN RETURN
+ GCLSWindow WND,RGB(224,224,224)
+ VAR W=GetWindowWidth(WND)
+ VAR H=GetWindowHeight(WND)
+ GBOXWindow WND,0,0,W,H,&HFF000000
+ VAR M=GetWindowVar(WND,0)
+ VAR I=MENU_ITEM[M],Y=1
+ WHILE I
+  GPRINTWindow WND,1,Y,MENU_INAME$[I],&HFF000000
+  INC Y,8
+  I=MENU_INEXT[I]
+ WEND
+ VAR E=GEndWindow(WND)
+END
 'WINDOW
 DEF WIDNUWIDToWND(WID,NUWID)
  RETURN WID<<12OR NUWID
@@ -427,6 +638,28 @@
 DEF NUWIDToWND(NUWID)
  RETURN WIN_WID[NUWID]<<12OR NUWID
 END
+'WND2 Join WND Group
+COMMON DEF JoinWindowGroup(WND,WND2)
+ IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
+ IF!CheckWindow(WND2)THEN RETURN WIN_INVALIDID
+ VAR NW1=WND AND NUWIDMASK
+ VAR NW2=WND2 AND NUWIDMASK
+ IF WIN_GROUP[NW1]THEN
+  VAR NW3=WIN_GROUP[NW1]
+  WIN_GNEXT[NW2]=WIN_GROUP[NW1]
+  WIN_GPREV[NW3]=NW2
+ ENDIF
+ WIN_GPARENT[NW2]=NW1
+ WIN_GROUP[NW1]=NW2
+ RETURN 0
+END
+COMMON DEF LeaveWindowGroup WND
+ NOIMPL "LeaveWindowGroup"
+END
+COMMON DEF GetWindowGroupOwner(WND)
+ IF!CheckWindow(WND)THEN RETURN 0
+ RETURN NUWIDToWND(WIN_GPARENT[WND AND NUWIDMASK])
+END
 VAR WIN_ROOTWND
 COMMON DEF GetRootWND()
  RETURN WIN_ROOTWND
@@ -443,6 +676,12 @@
 COMMON DEF WindowFrontFlag()
  RETURN 2
 END
+DEF WindowOnCreate WND,CTL
+ VAR NUCID=CTL AND 4095
+ IF LEN(CTL_HANDLER$[NUCID,CTL_CREATEHANDLER])THEN
+  CALL CTL_HANDLER$[NUCID,CTL_CREATEHANDLER],WND,CTL,CTL_CREATEHANDLER,0,0
+ ENDIF
+END
 COMMON DEF NewWindow CTL,NAME$,X,Y,WIDTH,HEIGHT,PARENT,FLG OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -494,7 +733,7 @@
  IF PNUWID THEN 
   IF FLG AND WindowFrontFlag()THEN
    IF WIN_CHILD[PNUWID]THEN
-    VAR N
+    VAR N=WIN_CHILD[PNUWID]
     WHILE 1
      IF!WIN_NEXT[N]THEN
       WIN_NEXT[N]=NUWID
@@ -536,7 +775,46 @@
   ENDIF
  ENDIF
  VOID RepaintWindow(WND)
+ IF PARENT==WIN_ROOTWND THEN
+  SPAllocWindow WND
+ ENDIF
+ WindowOnCreate WND,CTL
 END
+DEF SPAllocWindow WND
+ INC OTW_TOPLEVELCNT
+ VAR SP=2,NUWID=WND AND NUWIDMASK
+ WHILE SPVAR(SP,0)
+  SP=(SP+1)MOD 255
+ WEND
+ WIN_SP[NUWID]=SP OR 512
+ 'SPSET SP,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
+ SPSET SP,0
+ SPOFS SP,WIN_AX[NUWID],WIN_AY[NUWID],0
+ SPSCALE SP,WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1
+ SPSHOW SP
+ SPVAR SP,0,WND
+ OTW_SPSORT
+END
+COMMON DEF NewTopLevelMenuWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
+ IF!CheckControl(CTL)THEN
+  WND=0
+  ERR=CTL_INVALIDID
+  RETURN
+ ENDIF
+ VAR NUCID=CTL AND 4095
+ INC OTW_TOPLEVELCNT
+ VAR _H=CTL_FH1[NUCID]
+ 'ごういん
+ INC CTL_FH1[NUCID],10
+ NewWindow CTL,NAME$,WIN_TopLevelX,WIN_TopLevelY,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,ERR
+ CTL_FH1[NUCID]=_H
+ IF ERR THEN RETURN
+ VAR NUWID=WND AND NUWIDMASK,SP
+ NewMenu OUT WIN_MENU[NUWID],ERR
+ WIN_MENU[NUWID]=WIN_MENU[NUWID]
+ INC WIN_TopLevelX,CTL_FH1[NUCID]-1
+ INC WIN_TopLevelY,CTL_FH1[NUCID]-1
+END
 COMMON DEF NewTopLevelWindow CTL,NAME$,WIDTH,HEIGHT OUT WND,ERR
  IF!CheckControl(CTL)THEN
   WND=0
@@ -615,8 +893,8 @@
  WIN_AY[NUWID]=WIN_TOPLEVELY
  WIN_X[NUWID]=WIN_TopLevelX
  WIN_Y[NUWID]=WIN_TOPLEVELY
- INC WIN_TopLevelX,CTL_FH1[NUCID]'WIN_FHEIGHT1
- INC WIN_TopLevelY,CTL_FH1[NUCID]'WIN_FHEIGHT1
+ INC WIN_TopLevelX,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
+ INC WIN_TopLevelY,CTL_FH1[NUCID]-1'WIN_FHEIGHT1
  WIN_RX[NUWID]=WIN_AX[NUWID]
  WIN_RY[NUWID]=WIN_AY[NUWID]
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
@@ -641,8 +919,27 @@
  SPSHOW SP
  SPVAR SP,0,WND
  OTW_SPSORT
+ WindowOnCreate WND,CTL
 END
-
+COMMON DEF NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,FLAG)
+ IF!CheckControl(CTL)THEN
+  RETURN CTL_INVALIDID
+ ENDIF
+ IF!WIN_FREE THEN
+  RETURN WIN_NOALLOC
+ ENDIF
+ VAR O=OWNER AND NUWIDMASK
+ VAR AX=WIN_AX[O]
+ VAR AY=WIN_AY[O],WND,E
+ NewWindow CTL,NAME$,AX+(WIN_WIDTH[O]-WIDTH)/2,AY+(WIN_HEIGHT[O]-HEIGHT)/2,WIDTH,HEIGHT,WIN_ROOTWND,WindowFrontFlag() OUT WND,E
+ IF E THEN RETURN E
+ E=JoinWindowGroup(OWNER,WND)
+ RETURN E
+END
+COMMON DEF NewModalDialogBox CTL,NAME$,WIDTH,HEIGHT,OWNER
+END
+COMMON DEF NewModelessDialogBox CTL,NAME$,WIDTH,HEIGHT,OWNER
+END
 COMMON DEF DeleteWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -653,6 +950,7 @@
 COMMON DEF DeleteWindowNUWID(NUWID)
  VAR E
  IF WIN_WID[NUWID]<=0THEN RETURN WIN_INVALIDID
+ WIN_MENU[NUWID]=0
  WIN_WID[NUWID]=0
  WIN_MSGS[NUWID]=0
  WIN_MSGE[NUWID]=0
@@ -693,8 +991,27 @@
   SPVAR WIN_SP[NUWID]AND 511,0,0
   SPCLR WIN_SP[NUWID]AND 511
   WIN_SP[NUWID]=0
+  DEC OTW_TOPLEVELCNT
   OTW_SPSORT
  ENDIF
+ IF WIN_GPARENT[NUWID]THEN
+  'NOIMPL "DeleteWindow - Group"
+  
+  IF WIN_GNEXT[NUWID]THEN
+   WIN_GPREV[WIN_GNEXT[NUWID]]=WIN_GPREV[NUWID]
+  ENDIF
+  IF WIN_GPREV[NUWID]THEN
+   WIN_GNEXT[WIN_GPREV[NUWID]]=WIN_GNEXT[NUWID]
+  ELSE
+   WIN_GROUP[WIN_GPARENT[NUWID]]=WIN_GNEXT[NUWID]
+  ENDIF
+  WIN_GPARENT[NUWID]=0
+  WIN_GPREV[NUWID]=0
+  WIN_GNEXT[NUWID]=0
+  IF WIN_GROUP[NUWID]THEN 
+   NOIMPL "DeleteWindow - Group"
+  ENDIF
+ ENDIF
  RETURN 0
 END
 
@@ -912,8 +1229,8 @@
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
  WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
- WIN_AX[NUWID]=WIN_AX[PNUWID]+X
- WIN_AY[NUWID]=WIN_AY[PNUWID]+Y
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+WIN_FW1[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+WIN_FH1[PNUWID]+Y
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
  WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
  WIN_RFX[NUWID]=WIN_FX[NUWID]
@@ -972,8 +1289,8 @@
  VAR PNUWID=WIN_PARENT[NUWID]
  WIN_X[NUWID]=X'INC WIN_X[NUWID],MX
  WIN_Y[NUWID]=Y'INC WIN_Y[NUWID],MY
- WIN_AX[NUWID]=WIN_AX[PNUWID]+X
- WIN_AY[NUWID]=WIN_AY[PNUWID]+Y
+ WIN_AX[NUWID]=WIN_AX[PNUWID]+WIN_FW1[PNUWID]+X
+ WIN_AY[NUWID]=WIN_AY[PNUWID]+WIN_FH1[PNUWID]+Y
  WIN_FX[NUWID]=WIN_AX[NUWID]+WIN_FW1[NUWID]
  WIN_FY[NUWID]=WIN_AY[NUWID]+WIN_FH1[NUWID]
  WIN_RFX[NUWID]=WIN_FX[NUWID]
@@ -1112,6 +1429,9 @@
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_LBTNDWNHANDLER,OTW_MOUSEX-WIN_AX[NUWID]-WIN_FW1[NUWID],OTW_MOUSEY-WIN_AY[NUWID]-WIN_FH1[NUWID])
 END
+DEF MouseMoveWindowOnFrame(NUWID)
+ RETURN SendWindowEvent(NUWIDToWND(NUWID),CTL_FRMMOUSEMVHANDLER,0,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
+END
 DEF LMouseDownWindowOnFrame(WND)
  VAR NUWID=WND AND NUWIDMASK
  RETURN SendWindowEvent(WND,CTL_FRMBTNHANDLER,CTL_LBTNFLG OR CTL_BTNDWNFLG,JoinInt(OTW_MOUSEX-WIN_AX[NUWID],OTW_MOUSEY-WIN_AY[NUWID]))
@@ -1136,6 +1456,13 @@
 COMMON DEF UpdateWindowOnly(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
+ IF WIN_GROUP[NUWID]THEN
+  VAR G=WIN_GROUP[NUWID]
+  WHILE G
+   IF UpdateWindow(G OR WIN_WID[G]<<12)THEN BREAK
+   G=WIN_GNEXT[G]
+  WEND
+ ENDIF
  IF WIN_MSGS[NUWID]==WIN_MSGE[NUWID]THEN RETURN 0
  VAR NUCID=WIN_CTL[NUWID] AND 4095
  VAR S=WIN_MSGE[NUWID]
@@ -1319,14 +1646,14 @@
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
  IF WIN_BEGIN[NUWID]THEN RETURN WIN_EVENTERR
- WIN_BEGIN[NUWID]=TRUE
+ WIN_BEGIN[NUWID]=TRUE+TRUE
  VAR AX=WIN_RX[NUWID]
  VAR AY=WIN_RY[NUWID]
  VAR W=WIN_WIDTH[NUWID]
  VAR H=WIN_HEIGHT[NUWID]
  GPAGE OTW_SP,OTW_BP
  GCLIP 1,AX,AY,AX+W,AY+H
- GCLS RGB(224,224,224)
+ GCLS' RGB(224,224,224)
  RETURN 0
 END
 COMMON DEF GEndWindow(WND)
@@ -1386,8 +1713,9 @@
  RETURN 0
 END
 DEF OTW_SPCHR NUWID
- SPCHR WIN_SP[NUWID] AND 511,WIN_AX[NUWID],WIN_AY[NUWID],WIN_WIDTH[NUWID]+1,WIN_HEIGHT[NUWID]+1,1
- SPOFS WIN_SP[NUWID] AND 511,WIN_AX[NUWID],WIN_AY[NUWID]
+ SPSCALE WIN_SP[NUWID] AND 511,1,1
+ SPCHR WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID],WIN_AW[NUWID]+1,WIN_AH[NUWID]+1,1
+ SPOFS WIN_SP[NUWID] AND 511,WIN_RX[NUWID],WIN_RY[NUWID]
 END
 COMMON DEF GPSETWindow WND,X,Y,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
@@ -1460,6 +1788,15 @@
   INC X,8
  NEXT
 END
+COMMON DEF GPRINTBWindow WND,X,Y,STR$,COL,BC
+ VAR L=LEN(STR$)-1,A,I
+ FOR I=0TO L
+  A=ASC(STR$[I])
+  IF A==10THEN Y=Y+8:X=0:CONTINUE
+  GPUTCHRBWindow WND,X,Y,A,COL,BC
+  INC X,8
+ NEXT
+END
 DIM OTW_FNTTMP[0]
 COMMON DEF GPUTCHRWindow WND,X,Y,A,COL
  VAR AX=WIN_FX[WND AND NUWIDMASK]
@@ -1471,6 +1808,16 @@
  VAR I
  GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
 END
+COMMON DEF GPUTCHRBWindow WND,X,Y,A,COL,BC
+ VAR AX=WIN_FX[WND AND NUWIDMASK]
+ VAR AY=WIN_FY[WND AND NUWIDMASK]
+ X=X+AX:Y=Y+AY
+ OTW_FNTPAL[0]=BC
+ OTW_FNTPAL[1]=COL
+ COPY OTW_FNTTMP,0,OTW_FNT,64*OTW_FNTTBL[A],64
+ VAR I
+ GLOAD X,Y,8,8,OTW_FNTTMP,OTW_FNTPAL,0
+END
 DEF DesktopPainter WND,CTL,TYPE,A1,A2
 RETURN
  VAR E=GBEGINWindow(WND)
@@ -1481,32 +1828,62 @@
 DEF WindowPainter WND,CTL,TYPE,A1,A2
  VAR E=GBeginFrameWindow(WND)
  IF E THEN RETURN
+ GCLSWindow WND,RGB(224,224,224)
  GFILLWindow WND,0,-GetWindowFrameHeight(WND),GetWindowFrameWidth(WND),-1,RGB(0,0,255)
  GPRINTWindowCC WND,1,-GetWindowFrameHeight(WND)+2,GetWindowName$(WND),15
  VAR H=GetWindowFrameHeight(WND)
  VAR W=GetWindowFrameWidth(WND)
  VAR C=RGB(224,224,224)
- GFILLWindow WND,W-09-1,-H+1,W-1,-1,RGB(224,0,0)
- GLINEWindow WND,W-08-1,-H+2+1,W-2-1,-2,C
- GLINEWindow WND,W-7-1,-H+2+1,W-1-1,-2,C
- GLINEWindow WND,W-2-1,-H+2+1,W-8-1,-2,C
- GLINEWindow WND,W-1-1,-H+2+1,W-7-1,-2,C
+ GFILLWindow WND,W-09-1,-H+1,W-1,-H+10,RGB(224,0,0)
+ GLINEWindow WND,-1,-1,W+1,-1,RGB(0,0,0)
+'GLINEWindow WND,W-08-1,-H+3,W-2-1,-3,C
+'GLINEWindow WND,W-7-1,-H+3,W-1-1,-3,C
+'GLINEWindow WND,W-2-1,-H+3,W-8-1,-3,C
+'GLINEWindow WND,W-1-1,-H+3,W-7-1,-3,C
+ GLINEWindow WND,W-08-1,-H+3,W-2-1,-H+9,C
+ GLINEWindow WND,W-7-1,-H+3,W-1-1,-H+9,C
+ GLINEWindow WND,W-2-1,-H+3,W-8-1,-H+9,C
+ GLINEWindow WND,W-1-1,-H+3,W-7-1,-H+9,C
 'GLINEWindow WND,-1,-H,W-1,-H,RGB(224,224,224)
- VAR H2=WIN_HEIGHT[WND AND NUWIDMASK]-H
+ VAR NUWID=WND AND NUWIDMASK
+ VAR H2=WIN_HEIGHT[NUWID]-H
 'GLINEWindow WND,-1,-H,-1,H2-1,RGB(224,224,224)
 'GLINEWindow WND,W-1,-H,W-1,H2,RGB(0,0,0)
 'GLINEWindow WND,-1,H2,W-1,H2,RGB(0,0,0)
  GBOXWindow WND,-1,-H,W-1,H2,RGB(0,0,0)
+ IF WIN_MENU[NUWID]THEN
+  GLINEWindow WND,0,-11,W-2,-11,RGB(0,0,0)
+  GFILLWindow WND,0,-10,W-2,-2,RGB(224,224,224)
+  C=WIN_MENU[NUWID]AND 4095
+  VAR I=MENU_ITEM[C]
+  VAR X=0
+  WHILE I
+   GPRINTWindow WND,X,-9,MENU_INAME$[I],RGB(0,0,0)
+   X=X+LEN(MENU_INAME$[I])*8+4
+   I=MENU_INEXT[I]
+  WEND
+ ENDIF
  E=ReGBeginWindow(WND)
 ' E=GEndWindow(WND)
 END
 DEF WindowLMouseUP WND,CTL,TYPE,A1,A2
+' VAR E=FrontWindow(WND)
+END
+DEF WindowLMouseDown WND,CTL,TYPE,A1,A2
  VAR E=FrontWindow(WND)
 END
 DEF WindowClickFrame WND,CTL,TYPE,BTN,POS
  VAR X,Y
  SplitInt POS OUT X,Y
  VAR W=GetWindowFrameWidth(WND)
+  VAR NUWID=WND AND NUWIDMASK
+ IF X&&Y>11&&Y<21&&WIN_MENU[NUWID]THEN
+  IF BTN AND CTL_BTNUPFLG THEN
+   VAR C=WIN_MENU[NUWID]AND 4095
+   IF MENU_ICHILD[MENU_SEL[C]]THEN ShowMenu_ MENU_ICHILD[MENU_SEL[C]],WND,X-1,0
+  ENDIF
+  RETURN
+ ENDIF
  IF X>=W-9THEN
   IF BTN AND CTL_BTNUPFLG THEN
    VAR E=DeleteWindow(WND)
@@ -1514,7 +1891,6 @@
   RETURN
  ENDIF
  IF BTN AND CTL_LBTNFLG THEN
-  VAR NUWID=WND AND NUWIDMASK
   IF BTN AND CTL_BTNDWNFLG THEN
    VAR AX=WIN_AX[NUWID]
    VAR AY=WIN_AY[NUWID]
@@ -1534,8 +1910,67 @@
   ENDIF
  ENDIF
 END
+DEF WindowMMoveFrame WND,CTL,TYPE,ET,XY
+ VAR X,Y
+ SplitInt XY OUT X,Y
+ VAR NUWID=WND AND NUWIDMASK
+ IF!WIN_MENU[NUWID]THEN RETURN
+ VAR C=WIN_MENU[NUWID]AND 4095
+ IF!(X&&Y>11&&Y<21)THEN
+  IF MENU_SEL[C]THEN X=-1 ELSE RETURN
+ ENDIF
+ IF WIN_MENU[NUWID]THEN
+  VAR I=MENU_ITEM[C]
+  VAR X2=0,X1=0
+  VAR OS=MENU_SEL[C]
+  VAR IN=0,BEG=0,FIND
+  WHILE I
+   X1=X2
+   X2=X2+LEN(MENU_INAME$[I])*8+4
+   IF X1<=X&&X2>=X THEN
+    IF OS==I THEN RETURN
+    IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
+    BEG=1
+    FIND=1
+    GFILLWindow WND,X1,-10,X2-2,-2,RGB(0,0,255)
+    GPRINTWindow WND,X1,-9,MENU_INAME$[I],-1
+    MENU_SEL[C]=I
+    IN=1
+    I=MENU_INEXT[I]
+    IF!OS THEN BREAK
+    WHILE I
+     X1=X2
+     X2=X2+LEN(MENU_INAME$[I])*8+4
+     IF I==OS THEN
+      OS=0
+      GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+      GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
+      BREAK
+     ENDIF
+     I=MENU_INEXT[I]
+    WEND
+    BREAK
+'   IF!OS THEN BREAK
+   ELSE
+    IF I==OS THEN
+     IF!BEG&&GBeginFrameWindow(WND)THEN BREAK
+     BEG=1
+     OS=0
+     GFILLWindow WND,X1,-10,X2,-2,RGB(224,224,224)
+     GPRINTWindow WND,X1,-9,MENU_INAME$[I],RGB(0,0,0)
+    IF IN THEN BREAK
+    ENDIF
+   ENDIF
+   I=MENU_INEXT[I]
+  WEND
+  IF BEG THEN BEG=GEndWindow(WND)
+  IF!FIND THEN MENU_SEL[C]=0
+ ENDIF
+END
 DEF WindowDragFrame WND,MX,MY,A1X,A2Y
- 'VAR NUWID=WND AND NUWIDMASK
+ VAR NUWID=WND AND NUWIDMASK
+ DEC MX,WIN_AX[WIN_PARENT[NUWID]]'WIN_Y[NUWID]WIN_FW1[WIN_PARENT[NUWID]]
+ DEC MY,WIN_AY[WIN_PARENT[NUWID]]'WIN_FH1[WIN_PARENT[NUWID]]
  VAR X=MX+A1X
  VAR Y=MY+A2Y
  VAR E=MoveWindow(WND,X,Y)
@@ -1746,7 +2181,7 @@
  VAR ID=GetWindowVar(W,3)
  IF ID<8THEN
   IF!ID THEN
-   ID=0
+   ID=1
    IF Y<9THEN
     ID=2
    ENDIF
@@ -1772,6 +2207,16 @@
   VSCRBARPainter W,C,0,0,0
   VOID SendNotifWindow(GetParentWindow(W),GetWindowVar(W,0),POS+1)
  ENDIF
+ IF ID==1THEN
+  VAR _Y=Y
+  Y=(Y-9)/((GetWindowHeight(W)-28)/SIZ)
+  IF Y<0THEN Y=0
+  IF Y>SIZ THEN Y=SIZ
+  IF Y==_Y THEN RETURN
+  SetWindowVar W,2,Y
+  VSCRBARPainter W,C,0,0,0
+  VOID SendNotifWindow(GetParentWindow(W),W,Y)
+ ENDIF
 END
 VAR OTW_MOUSESIZE
 DEF OTW_INITSP
@@ -2016,6 +2461,8 @@
  IF MOVEMOUSE THEN
   IF!(NUWID AND WIN_FRAMEFLG)THEN
    E=MouseMoveWindow(NUWID)
+  ELSE
+   E=MouseMoveWindowOnFrame(NUWID AND 32767)
   ENDIF
  ENDIF
 ' IF BUTTON()AND 64THEN DUMP_WND
@@ -2136,7 +2583,7 @@
  VAR E=CallBaseControlHandler(WND,CTL,T,A1,A2)
  VAR I
  FOR I=0TO LAUNCHERLEN-1
-  GPRINTWindow WND,0,I*8,LAUNCHERITEM$[I],RGB(0,0,0)
+  GPRINTWindow WND,0,I*8+1,LAUNCHERITEM$[I],RGB(0,0,0)
  NEXT
  E=GEndWindow(WND)
 END
@@ -2307,7 +2754,7 @@
    IF OTW_MOUSEY<OTW_MOUSECLIPY THEN OTW_MOUSEY=OTW_MOUSECLIPY
    IF OTW_MOUSEX>=OTW_MOUSECLIPX2 THEN OTW_MOUSEX=OTW_MOUSECLIPX2-1
    IF OTW_MOUSEY>=OTW_MOUSECLIPY2 THEN OTW_MOUSEY=OTW_MOUSECLIPY2
-  SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
+   SPOFS OTW_MOUSESP,OTW_MOUSEX,OTW_MOUSEY
    OTW_MOUSEX#=OTW_MOUSEX
    OTW_MOUSEY#=OTW_MOUSEY
  ELSE
@@ -2398,6 +2845,7 @@
  VAR E=GEndWindow(WND)
 END
 COMMON DEF PaintLDWN WND,CTL,T,X,Y
+ VAR E=CallBaseControlHandler(WND,CTL,T,X,Y)
  SetWindowVar WND,3,1
  SetWindowVar WND,0,X
  SetWindowVar WND,1,Y
@@ -3114,50 +3562,79 @@
 '===OTYA DOCUMENT EDITOR===
 DIM OTYFILICOTXT[0]
 DIM OTYFILICODAT[0]
+DIM OTYFILICON[0]
 COMMON DEF RC_OTYFIL
  DIM ICONS[512]
  LOAD"DAT:OTYFILRC",ICONS,0
  OTYFILICOTXT=NewArray(16*16)
  OTYFILICODAT=NewArray(16*16)
+ OTYFILICON=NewArray(16*16)
  COPY OTYFILICOTXT,ICONS,0,16*16
  COPY OTYFILICODAT,ICONS,16*16,16*16
+ COPY OTYFILICON,ICONS,16*16*2,16*16
 END
 VAR OTYFILCTL
 VAR OTYFILESWND
 VAR OTYFILES$[0]
 VAR OTYFILICONCTL
+VAR OTYFILABOUTCTL
 COMMON DEF OTYFILICONCTLPainter W,C,T,_,__
  IF GBeginWindow(W)THEN RETURN
  GCLSWindow W,RGB(224,224,224)
  IF GetWindowVar(W,1)THEN
+  IF GetWindowVar(W,1)==2THEN
+   GLOADWindow W,0,0,16,16,OTYFILICON,1,0
+   RETURN
+  ENDIF
   GLOADWindow W,0,0,16,16,OTYFILICODAT,1,0
  ELSE
   GLOADWindow W,0,0,16,16,OTYFILICOTXT,1,0
  ENDIF
  IF GEndWindow(W)THEN RETURN
 END
+COMMON DEF OTYFILABOUTNOTIF WND,CTL,T,_,__
+ VOID DeleteWindow(WND)
+END
+COMMON DEF OTYFILABOUTCREATE WND,CTL,T,_,__
+ VAR W,E
+ NewWindow OTYFILICONCTL,"",0,0,15,15,WND,0 OUT W,E
+ SetWindowVar W,1,2
+ VAR WI=GetWindowWidth(WND)
+ VAR S$="OTW Filer"
+ NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,0,LEN(S$)*8,7,WND,0 OUT W,E
+ S$="Ver 5.0"
+ NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,8,LEN(S$)*8,7,WND,0 OUT W,E
+ S$="© 2011-2015 otya"
+ NewWindow GetLabelControl(),S$,(WI-LEN(S$)*8)/2,16,LEN(S$)*8,7,WND,0 OUT W,E
+ S$="OK"
+ NewWindow GetButtonControl(),S$,(WI-LEN(S$)*8)/2+2,24,LEN(S$)*8+2,12,WND,0 OUT W,E
+END
 COMMON DEF OTYFILNOTIF WND,CTL,T,ID,POS
+ IF ID<=5THEN
+  VAR E=NewDialogBox(OTYFILABOUTCTL,"ABOUT",128,40,WND,0)
+  RETURN
+ ENDIF
  VAR I=GetNextWindow(GetChildWindow(WND))
  IF BeginWindowOP(WND)THEN RETURN
- POS=POS*4
+ POS=POS*2
  VAR W=36*4+8,H=64
  VAR R=W/36
  VAR C=CEIL(H/40.0)
  VAR BY1=(POS MOD 40)+7
- VAR BY2=(POS MOD 40)-10
+ VAR BY2=(POS MOD 40)-9
  IF OTYFILESWND!=WND THEN
   GetFiles OTYFILES$,"SYS"
   OTYFILESWND=WND
  ENDIF
 ' ?R,C,POS,POS DIV 16,POS DIV 40,BY1
- VAR X=1,Y=-22
+ VAR X=0,Y=7'-22
  VAR J
  VAR L2=R*2
  VAR F
  VAR K=(POS DIV 40)*R
  VAR KL=LEN(OTYFILES$)
  WHILE I
-  IF!(J MOD L2) THEN INC Y,40X=1
+  IF J&&!(J MOD L2) THEN INC Y,40X=0
   IF F THEN
    IF KL<=K THEN
     VOID MoveWindow2(I,-256,-256)
@@ -3198,9 +3675,22 @@
   NewControl "ICON" OUT OTYFILICONCTL,E
   E=SetControlPainter(OTYFILICONCTL,"OTYFILICONCTLPainter")
   RC_OTYFIL
+  ExtendControl "FilesAbout",GetWindowControl() OUT OTYFILABOUTCTL,E
+  E=SetControlNotifHandler(OTYFILABOUTCTL,"OTYFILABOUTNOTIF")
+  E=SetControlCreateHandler(OTYFILABOUTCTL,"OTYFILABOUTCREATE")
  ENDIF
  VAR W=36*4+8,H=64,LBL
- NewTopLevelWindow OTYFILCTL,"Files SYS/",W,H OUT WND,E
+ NewTopLevelMenuWindow OTYFILCTL,"Files SYS/",W,H OUT WND,E
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Copy",1
+ AddMenuItem MENU,"Move",2
+ AddMenuItem MENU,"Delete",3
+ AddMenuItem MENU,"Rename",4
+ AddSubMenuItem GetWindowMenu(WND),"File",MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"About",5
+ AddSubMenuItem GetWindowMenu(WND),"Help",MENU
  VAR X=8,Y,I
  OTYFILES$=NewArray$(0)
  GetFiles OTYFILES$,"SYS"
@@ -3220,7 +3710,7 @@
  NEXT
  VAR SCR
  VAR OL=W/36
- VAR AW=FLOOR(LEN(OTYFILES$)/OL)*10
+ VAR AW=FLOOR(LEN(OTYFILES$)/OL)*20
  NewVScrollBAR WND,AW OUT SCR,E
  SetProcessVar WND
 END
