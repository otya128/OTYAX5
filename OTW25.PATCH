diff -u OTW.TXT OTW25
--- OTW.TXT
+++ OTW25
@@ -385,6 +385,9 @@
 'CONTROL STYLE
 'クリックしてもFOCUSしない
 VAR CTL_STYLE_NCFOCUS
+
+VAR CTL_MSGBOXCTL
+
 DEF OTW_CTL_INITARRAY
  PrintConsoleln "Init control..."
  CTL_STYLE_NCFOCUS=1
@@ -486,6 +489,11 @@
 
  ExtendControl "DROPDOWNLISTBOX",GetListBoxControl() OUT CTL_DRPDWNBOXCTL,E
  E=SetControlChFocusHandler(CTL_DRPDWNBOXCTL,"DropDownListBoxChFocus")
+
+ 'MESSAGE BOX
+ ExtendControl "MESSAGEBOX",GetWindowControl() OUT CTL_MSGBOXCTL,E
+ E=SetControlCreateHandler(CTL_MSGBOXCTL,"MessageBoxOnCreate")
+ E=SetControlNotifHandler(CTL_MSGBOXCTL,"MessageBoxOnNotif")
  PrintConsoleln "Init textbox..."
  INIT_TXTBOXEX
  CTL_CID[0]=&Hdeadbeef
@@ -841,8 +849,10 @@
  MENU_ID[MENU_FREE]=MENU_IDCNT
  MENU_HEIGHT[MENU_FREE]=4
  MENU_WIDTH[MENU_FREE]=0
+ VAR M=MENU_FREE
  MENU=MENU_FREE OR MENU_IDCNT<<12
  MENU_FREE=MENU_NEXT[MENU_FREE]
+ MENU_ITEM[M]=0'(MENU_ITEM=MENU_NEXT)
 END
 COMMON DEF SetMenuBar MENU,WND
  NOIMPL FORMAT$("NOIMPL SetMenuBar %D,%D",MENU,WND)
@@ -1542,6 +1552,79 @@
 COMMON DEF NewModelessDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER)
  RETURN NewDialogBox(CTL,NAME$,WIDTH,HEIGHT,OWNER,0)
 END
+COMMON DEF MessageBoxOK()
+ RETURN 1
+END
+COMMON DEF CalcTextSize TEXT$ OUT W,H
+ VAR I,J
+ W=0H=0
+ VAR LF$=CHR$(10)
+ WHILE 1
+  J=INSTR(I,TEXT$,LF$)
+  IF J==-1THEN
+   W=MAX(W,(LEN(TEXT$)-I)*8)
+   IF I==LEN(TEXT$)-1THEN BREAK
+   INC H,8
+   BREAK
+  ENDIF
+  W=MAX(W,(J-I)*8)
+  INC H,8
+  I=J+1
+ WEND
+END
+DEF MessageBoxOnNotif WND,CTL,TYP,A1,A2
+ IF A2==0THEN
+  VOID SendNotifWindow(GetWindowGroupOwner(WND),MessageBoxNotifID(),MessageBoxNotifOK())
+  VOID DeleteWindow(WND)
+  RETURN
+ ENDIF
+END
+VAR MSGBOX_MARGIN_TOP
+VAR MSGBOX_MARGIN_LEFT
+DEF MessageBoxOnCreate WND,CTL,TYP,FLAG,TEXT
+ VAR TEXT$=GetString$(TEXT)
+ VAR TW,TH,BW,BH
+ CalcTextSize TEXT$ OUT TW,TH
+ VAR LWND,E
+ NewWindow GetLabelControl(),TEXT$,MSGBOX_MARGIN_LEFT,MSGBOX_MARGIN_TOP,TW,TH,WND,0 OUT LWND,E
+ IF FLAG==MessageBoxOK()THEN
+  CalcTextSize "OK" OUT BW,BH
+  'Button margin
+  INC BW,4
+  INC BH,4
+  NewWindow GetButtonControl(),"OK",MSGBOX_MARGIN_LEFT,TH+MSGBOX_MARGIN_LEFT*2,BW,BH,WND,0 OUT LWND,E
+ ENDIF
+END
+COMMON DEF MessageBoxNotifID()
+ RETURN &H4D534742
+END
+COMMON DEF MessageBoxNotifOK()
+ RETURN 0
+END
+COMMON DEF MessageBoxNotifCancel()
+ RETURN 1
+END
+COMMON DEF MessageBox(WND,TITLE$,TEXT$,FLAG)
+ 'CALC WIDTH
+ VAR TW,TH,BW,BH
+ CalcTextSize TEXT$ OUT TW,TH
+ IF FLAG AND MessageBoxOK()THEN
+  'OK
+  CalcTextSize "OK" OUT BW,BH
+  'Button margin
+  INC BW,4
+  INC BH,4
+ ENDIF
+ VAR W=TW+BW,H=BH+TH
+ MSGBOX_MARGIN_TOP=4
+ MSGBOX_MARGIN_LEFT=4
+ INC W,16'MARGIN
+ INC H,16'MARGIN
+ VAR TEXT=AllocString(TEXT$)
+ VAR RET=NewDialogBoxWithArg(CTL_MSGBOXCTL,TITLE$,W,H,WND,TRUE,FLAG,TEXT)
+ FreeString TEXT
+ RETURN RET
+END
 COMMON DEF DeleteWindow(WND)
  IF!CheckWindow(WND)THEN RETURN WIN_INVALIDID
  VAR NUWID=WND AND NUWIDMASK
@@ -1714,7 +1797,6 @@
 DEF RepaintAllWindow WND,X,Y,W,H
  VAR NXT=WND AND NUWIDMASK
  VAR B=NXT
-CLS
  VAR CLIPMODE=1
  IF!X&&!Y&&!W&&!H THEN CLIPMODE=0
  VAR X2=X+W
@@ -2072,7 +2154,7 @@
  IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,0,0)
 END
-DEF RepaintWindowWithARect(WND,AX,AY,AX2,AY2)
+COMMON DEF RepaintWindowWithARect(WND,AX,AY,AX2,AY2)
  IF WIN_HIDE[WND AND NUWIDMASK]THEN RETURN 0
  RETURN SendWindowEvent(WND,CTL_PAINTHANDLER,AX OR AY<<16,AX2 OR AY2<<16)
 END
@@ -4604,7 +4686,7 @@
   NewWindow GetListBoxControl(),"",0,0,80,64,WND,0 OUT WND,E
   AddArrayListBoxItem WND,LAUNCHERITEM$
  ELSE
-  LAUNCHERLEN=11
+  LAUNCHERLEN=12
   LAUNCHERITEM$=NewArray$(LAUNCHERLEN)
   LAUNCHERITEM$[0]="WCLOCK"
   LAUNCHERITEM$[1]="RUN"
@@ -4617,6 +4699,7 @@
   LAUNCHERITEM$[8]="OTYDOC"
   LAUNCHERITEM$[9]="MPLAY"
   LAUNCHERITEM$[10]="CLIPBRD"
+  LAUNCHERITEM$[11]="OTYMINE"
   ExtendControl "LAUNCHER",GetWindowControl() OUT LAUNCHERCTL,E
 '  E=SetControlPainter(LAUNCHERCTL,"LauncherPainter")
 '  E=SetControlLMouseUpHandler(LAUNCHERCTL,"LauncherLMouseUP")
@@ -4809,7 +4892,7 @@
  VAR K$
  INC K$,"VAR _1CTL"+LF$()
  INC K$,"COMMON DEF I__1"+LF$()
- INC K$, "IF!CHKCALL(_QIsWinRunning_Q)||!IsWinRunning()THEN"+LF$()
+ INC K$," IF!CHKCALL(_QIsWinRunning_Q)||!IsWinRunning()THEN"+LF$()
  INC K$,"  PrintConsole _QRequire window system_Q+LF$()"+LF$()
  INC K$,"  ExitProcess 1"+LF$()
  INC K$,"  RETURN"+LF$()
@@ -4819,10 +4902,10 @@
  INC K$,"  ExtendControl _Q_2_Q,GetWindowControl() OUT _1CTL,E"+LF$()
  INC K$," ENDIF"+LF$()
  INC K$," NewTopLevelWindow _1CTL,_Q_2_Q,_W,_H OUT WND,E"+LF$()
- INC K$,"SetProcessVar WND"+LF$()
+ INC K$," SetProcessVar WND"+LF$()
  INC K$,"END"+LF$()
  INC K$,"COMMON DEF L__1"+LF$()
- INC K$,"IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
+ INC K$," IF UpdateWindow(GetProcessVar())THEN ExitProcess 1"+LF$()
  INC K$,"END
  VAR _1$
  VAR _2$,_W,_H
@@ -7836,6 +7919,43 @@
  NEXT
  RETURN FALSE
 END
+
+VAR PRUN_CONT
+COMMON DEF __PRUN_CONT
+ PRUN_CONT=1
+ VAR P
+ FOR P=0TO 5
+  SAVE FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+ NEXT
+ DIM SP[512],I
+ FOR I=0TO 511
+  
+ NEXT
+ VAR VP,WP
+ GPAGE OUT VP,WP
+ VISIBLE 1,1,0,1
+ DIM B0[0],B1[0],B2[0],B3[0]
+ VAR BPP=BGPAGE()
+ VAR SPP=SPPAGE()
+ BGSAVE 0,B0
+ BGSAVE 1,B1
+ BGSAVE 2,B2
+ BGSAVE 3,B3
+ PRUN_RESTORE
+ OTX_CONT
+ FOR P=0TO 5
+  LOAD FORMAT$("GRP%D:@GRPPAGE%D",P,P)
+ NEXT
+ VISIBLE 1,1,1,1
+ GPAGE VP,WP
+ BGPAGE BPP
+ SPPAGE SPP
+ BGLOAD 0,B0
+ BGLOAD 1,B1
+ BGLOAD 2,B2
+ BGLOAD 3,B3
+END
+
 DEF PRUN_EDITPRG
  PRGEDIT 2,1
  VAR I,L=PRGSIZE(2)
@@ -7864,23 +7984,13 @@
  __$=PRGGET$()
  PRGINS"DEF "+H$
  PRGINS"IF BUTTON()=="+STR$(512+64)+" THEN GOTO"+CHR$(34)+"2:@"+H2$
+ PRGINS"IF BUTTON()=="+STR$(512+64+128)+" THEN __PRUN_CONT"
  PRGINS"END"
  PRGINS "@"+H2$
  PRGINS "END"
 END
-COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
- VAR TW=GetWindowVar(NDW,0)
- VAR I
- GCLIP 1
- LOCATE 0,29
- ?"Now loading..."
- LOAD"PRG2:"+GetWindowName$(TW),0
- ?"OK"
- ?"EXEC..."
- PRUN_EDITPRG
+DEF PRUN_RESTORE
  ACLS
- EXEC 2
- ACLS
  VAR NW=GetChildWindow(GetRootWND())AND NUWIDMASK
  GPAGE OTW_SP,OTW_DP
   '290
@@ -7927,6 +8037,25 @@
  OTW_SPSORT
  RepaintAllWindow WIN_ROOTWND,0,0,0,0
 END
+COMMON DEF PRUNNotificationHandler NDW,C,T,CW,_
+ IF PRUN_CONT THEN
+  OTX_BREAK
+  RETURN
+ ENDIF
+ VAR TW=GetWindowVar(NDW,0)
+ VAR I
+ GCLIP 1
+ LOCATE 0,29
+ ?"Now loading..."
+ LOAD"PRG2:"+GetWindowName$(TW),0
+ ?"OK"
+ ?"EXEC..."
+ PRUN_EDITPRG
+ ACLS
+ EXEC 2
+ PRUN_RESTORE
+ PRUN_CONT=0
+END
 VAR PRUNCTL
 COMMON DEF I_PRUN
  IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
@@ -8278,4 +8407,378 @@
 COMMON DEF L_COLOR
  IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
 END
+VAR OTYMINE_MINE
+VAR OTYMINE_FLAG
+VAR OTYMINE_UNK
+VAR OTYMINE_OPENED
+VAR OTYMINE_MISS
+VAR OTYMINE_1
 
+VAR OTYMINE_MENU_START=1
+VAR OTYMINE_MENU_EASY=2
+VAR OTYMINE_MENU_NORMAL=3
+VAR OTYMINE_MENU_HARD=4
+VAR OTYMINE_MENU_EXIT=5
+VAR OTYMINE_MENU_ABOUT=101
+
+DEF OTYMINE_INC F,X,Y,CX,CY
+ IF X<0||Y<0||X>=CX||Y>=CY THEN RETURN
+ IF F[X,Y]==OTYMINE_MINE THEN RETURN
+ IF!F[X,Y]THEN F[X,Y]=OTYMINE_1:RETURN
+ IF F[X,Y]>=OTYMINE_1 THEN
+  INC F[X,Y]
+ ENDIF
+END
+DEF OTYMINE_GENFIELD(CX,CY,CNT)
+ DIM F[CX,CY]
+ CNT=MIN(CX*CY,CNT)
+ VAR X,Y,I
+ FOR I=0TO CNT-1
+  X=RND(CX)
+  Y=RND(CY)
+  IF F[X,Y]THEN
+   DEC I
+   CONTINUE
+  ENDIF
+  F[X,Y]=OTYMINE_MINE
+ NEXT
+ FOR Y=0TO CY-1
+  FOR X=0TO CX-1
+   IF F[X,Y]==OTYMINE_MINE THEN
+    OTYMINE_INC F,X-1,Y,CX,CY
+    OTYMINE_INC F,X-1,Y+1,CX,CY
+    OTYMINE_INC F,X,Y-1,CX,CY
+    OTYMINE_INC F,X+1,Y-1,CX,CY
+    OTYMINE_INC F,X+1,Y+1,CX,CY
+    OTYMINE_INC F,X+1,Y,CX,CY
+    OTYMINE_INC F,X,Y+1,CX,CY
+    OTYMINE_INC F,X-1,Y-1,CX,CY
+   ENDIF
+  NEXT
+ NEXT
+ RETURN F
+END
+DEF OTYMINE_INIT WND
+ VAR CX=8'DEFAULT
+ VAR CY=8'DEFAULT
+ VAR CNT=10'DEFAULT
+ 
+ VAR ARY=AllocSBArray()
+ IF !ARY THEN RETURN
+ SetSBArray ARY,OTYMINE_GENFIELD(CX,CY,CNT)
+ SetWindowVar WND,0,ARY
+ SetWindowVar WND,1,CX
+ SetWindowVar WND,2,CY
+ SetWindowVar WND,3,CNT
+ SetWindowVar WND,4,0
+END
+DEF OTYMINE_RESTART WND
+ VAR CX,CY,CNT,ARY
+ GetWindowVar WND,1 OUT CX
+ GetWindowVar WND,2 OUT CY
+ GetWindowVar WND,3 OUT CNT
+ GetWindowVar WND,0 OUT ARY
+ SetSBArray ARY,OTYMINE_GENFIELD(CX,CY,CNT)
+ SetWindowVar WND,4,0
+ VOID RepaintWindow(WND)
+END
+DEF OTYMINE_CHBOARD WND,CX,CY,CNT
+ SetWindowVar WND,1,CX
+ SetWindowVar WND,2,CY
+ SetWindowVar WND,3,CNT
+ OTYMINE_RESTART WND
+END
+DEF OTYMINE_ADJUST WND
+ VAR W2=GetwindowVar(WND,0)
+ VAR CX,CY
+ GetWindowVar W2,1 OUT CX
+ GetWindowVar W2,2 OUT CY
+ VOID ResizeWindow(WND,CX*12,CY*12)
+ VOID ResizeWindow(W2,CX*12,CY*12)
+END
+VAR OTYMINE_CTBL[0]
+DEF ONOTYMINELMD WND,CTL,TYP,A1,A2
+END
+DEF OTYMINE_TOGGLEFLG FIELD,X,Y,CX,CY
+ IF X<0||Y<0||X>=CX||Y>=CY THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_OPENED THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_FLAG THEN
+  FIELD[X,Y]=FIELD[X,Y] AND NOT OTYMINE_FLAG OR OTYMINE_UNK
+  RETURN
+ ENDIF
+ IF FIELD[X,Y]AND OTYMINE_UNK THEN
+  FIELD[X,Y]=FIELD[X,Y] AND NOT OTYMINE_UNK
+  RETURN
+ ENDIF
+ FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_FLAG
+END
+DEF OTYMINE_OPENALL FIELD,CX,CY
+ VAR X,Y
+ FOR X=0TO CX-1
+  FOR Y=0TO CY-1
+   IF (FIELD[X,Y] AND &B1111)==OTYMINE_MINE THEN
+    FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_OPENED
+   ENDIF
+  NEXT
+ NEXT
+END
+DEF OTYMINE_CHECKCLEAR(FIELD,CX,CY,CNT)
+ VAR X,Y
+ VAR B=CX*CY
+ FOR X=0TO CX-1
+  FOR Y=0TO CY-1
+   IF FIELD[X,Y] AND OTYMINE_OPENED THEN
+    DEC B
+   ENDIF
+  NEXT
+ NEXT
+ RETURN B<=CNT
+END
+DEF OTYMINE_OPEN FIELD,X,Y,CX,CY
+ IF X<0||Y<0||X>=CX||Y>=CY THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_OPENED THEN RETURN
+ IF FIELD[X,Y]AND OTYMINE_FLAG THEN RETURN
+ IF (FIELD[X,Y]AND &B1111)==OTYMINE_MINE THEN RETURN
+ FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_OPENED
+ IF (FIELD[X,Y] AND &B1111)>=OTYMINE_1 THEN RETURN
+ OTYMINE_OPEN FIELD,X,Y-1,CX,CY
+ OTYMINE_OPEN FIELD,X-1,Y,CX,CY
+ OTYMINE_OPEN FIELD,X-1,Y-1,CX,CY
+ OTYMINE_OPEN FIELD,X,Y+1,CX,CY
+ OTYMINE_OPEN FIELD,X+1,Y,CX,CY
+ OTYMINE_OPEN FIELD,X+1,Y+1,CX,CY
+ OTYMINE_OPEN FIELD,X+1,Y-1,CX,CY
+ OTYMINE_OPEN FIELD,X-1,Y+1,CX,CY
+END
+DEF ONOTYMINELMU WND,CTL,TYP,X,Y
+ IF GetWindowVar(WND,4)THEN RETURN
+ X=X DIV 12
+ Y=Y DIV 12
+ VAR FIELD[0]
+ FIELD=GetSBArray(GetWindowVar(WND,0))
+ VAR CX=GetWindowVar(WND,1)
+ VAR CY=GetWindowVar(WND,2)
+ VAR CNT=GetWindowVar(WND,3)
+ IF CX<=X||CY<=Y THEN RETURN
+ IF (FIELD[X,Y]AND&B1111)==OTYMINE_MINE THEN
+  SetWindowVar WND,4,TRUE'GAMEOVER
+  FIELD[X,Y]=FIELD[X,Y] OR OTYMINE_MISS
+  OTYMINE_OPENALL FIELD,CX,CY
+ ENDIF
+ OTYMINE_OPEN FIELD,X,Y,CX,CY
+ IF (FIELD[X,Y]AND &B1111)>=OTYMINE_1 THEN
+  VOID RepaintWindowWithARect(WND,X*12,Y*12,X*12+11,Y*12+11)
+ ELSE
+  VOID RepaintWindow(WND)
+ ENDIF
+ IF!GetWindowVar(WND,4)&&OTYMINE_CHECKCLEAR(FIELD,CX,CY,CNT)THEN
+  VOID MessageBox(WND,"Minesweeper","Congratulations!",MessageBoxOK())
+  SetWindowVar WND,4,TRUE'GAMEOVER
+ ENDIF
+END
+DEF ONOTYMINERMD WND,CTL,TYP,X,Y
+ IF GetWindowVar(WND,4)THEN RETURN
+ X=X DIV 12
+ Y=Y DIV 12
+ VAR FIELD[0]
+ FIELD=GetSBArray(GetWindowVar(WND,0))
+ VAR CX=GetWindowVar(WND,1)
+ VAR CY=GetWindowVar(WND,2)
+ IF CX<=X||CY<=Y THEN RETURN
+ OTYMINE_TOGGLEFLG FIELD,X,Y,CX,CY
+ VOID RepaintWindow(WND)
+END
+DEF ONOTYMINEDEL WND,CTL,TYP,A1,A2
+ VAR ARY=GetWindowVar(WND,0)
+ FreeSBArray ARY
+END
+DEF ONOTYMINEPAINT WND,CTL,TYP,XY,WH
+ IF GBeginWindow(WND)THEN RETURN
+  VAR CX=GetWindowVar(WND,1)
+  VAR CY=GetWindowVar(WND,2)
+  IF XY&&WH THEN
+   VAR RX=XY AND 65535,RY=XY>>16
+   VAR RW=WH AND 65535,RH=WH>>16
+   GFILLWindow WND,RX,RY,RX+RW,RY+RH,RGB(192,192,192)
+   RW=CEIL((RW+RX)/12)
+   RH=CEIL((RH+RY)/12)
+   RX=RX DIV 12
+   RY=RY DIV 12
+   CX=MIN(CX,RW)
+   CY=MIN(CY,RH)
+  ELSE
+   GCLSWindow WND,RGB(192,192,192)
+  ENDIF
+  VAR FIELD[0]
+  FIELD=GetSBArray(GetWindowVar(WND,0))
+  VAR X,Y
+  FOR Y=RY TO CY-1
+   FOR X=RX TO CX-1
+    VAR F=FIELD[X,Y]
+    IF F AND OTYMINE_OPENED THEN
+     VAR F2=F
+     F=F AND &B1111
+     GLINEWindow WND,X*12,Y*12,X*12+11,Y*12,RGB(128,128,128)
+     GLINEWindow WND,X*12,Y*12,X*12,Y*12+11,RGB(128,128,128)
+     IF F>=OTYMINE_1 THEN
+      VAR C=F-OTYMINE_1+1
+      GPRINTWindow WND,X*12+2,Y*12+2,CHR$(C+48),OTYMINE_CTBL[C]
+      GPRINTWindow WND,X*12+3,Y*12+2,CHR$(C+48),OTYMINE_CTBL[C]
+      GPRINTWindow WND,X*12+4,Y*12+2,CHR$(C+48),OTYMINE_CTBL[C]
+     ENDIF
+     IF F==OTYMINE_MINE THEN
+      IF F2 AND OTYMINE_MISS THEN
+       GFILLWindow WND,X*12+1,Y*12+1,X*12+11,Y*12+11,#RED
+      ENDIF
+      GLINEWindow WND,X*12+3,Y*12+3,X*12+9,Y*12+9,#BLACK
+      GLINEWindow WND,X*12+3,Y*12+9,X*12+9,Y*12+3,#BLACK
+      GLINEWindow WND,X*12+6,Y*12+2,X*12+6,Y*12+10,#BLACK
+      GLINEWindow WND,X*12+2,Y*12+6,X*12+10,Y*12+6,#BLACK
+      GFILLWindow WND,X*12+4,Y*12+4,X*12+8,Y*12+8,#BLACK
+      GPSETWindow WND,X*12+5,Y*12+5,#WHITE
+      IF F2 AND OTYMINE_FLAG THEN
+       GLINEWindow WND,X*12+2,Y*12+2,X*12+10,Y*12+10,#RED
+       GLINEWindow WND,X*12+3,Y*12+2,X*12+11,Y*12+10,#RED
+       GLINEWindow WND,X*12+10,Y*12+2,X*12+2,Y*12+10,#RED
+       GLINEWindow WND,X*12+11,Y*12+2,X*12+3,Y*12+10,#RED
+      ENDIF
+     ENDIF
+    ELSE
+     IF F AND OTYMINE_FLAG THEN
+      GLINEWindow WND,X*12+5,Y*12+5,X*12+5,Y*12+6,RGB(0,0,0)
+      GTRIWindow WND,X*12+5,Y*12+7,X*12+3,Y*12+9,X*12+7,Y*12+9,RGB(0,0,0)
+      GTRIWindow WND,X*12+5,Y*12+3,X*12+8-6,Y*12+4,X*12+5,Y*12+5,RGB(255,0,0)
+     ENDIF
+     IF F AND OTYMINE_UNK THEN
+      GPRINTWindow WND,X*12+2,Y*12+2,"?",RGB(0,0,0)
+      GPRINTWindow WND,X*12+3,Y*12+2,"?",RGB(0,0,0)
+      GPRINTWindow WND,X*12+4,Y*12+2,"?",RGB(0,0,0)
+     ENDIF
+     F=F AND &H1111
+     GFILLWindow WND,X*12,Y*12,X*12+11,Y*12+1,-1
+     GFILLWindow WND,X*12,Y*12,X*12+1,Y*12+11,-1
+     GLINEWindow WND,X*12+11,Y*12,X*12+11,Y*12+11,RGB(128,128,128)
+     GLINEWindow WND,X*12,Y*12+11,X*12+11,Y*12+11,RGB(128,128,128)
+
+     GLINEWindow WND,X*12+10,Y*12+1,X*12+10,Y*12+11,RGB(128,128,128)
+     GLINEWindow WND,X*12+1,Y*12+10,X*12+11,Y*12+10,RGB(128,128,128)
+    ENDIF
+   NEXT
+  NEXT
+ IF GEndWindow(WND)THEN RETURN
+END
+VAR OTYMINEWNDCTL
+VAR OTYMINECTL
+VAR OTYMINEABOUTCTL
+DEF ONOTYMINENOTIF WND,CTL,TYP,A1,A2
+ IF A2==OTYMINE_MENU_START THEN 
+  OTYMINE_RESTART GetWindowVar(WND,0)
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_EASY THEN 
+  OTYMINE_CHBOARD GetWindowVar(WND,0),8,8,10
+  OTYMINE_ADJUST WND
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_NORMAL THEN 
+  OTYMINE_CHBOARD GetWindowVar(WND,0),16,16,40
+  OTYMINE_ADJUST WND
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_HARD THEN 
+  OTYMINE_CHBOARD GetWindowVar(WND,0),30,16,99
+  OTYMINE_ADJUST WND
+  RETURN
+ ENDIF
+ IF A2==OTYMINE_MENU_EXIT THEN
+  VOID DeleteWindow(WND)
+ ENDIF
+ IF A2==OTYMINE_MENU_ABOUT THEN
+  VOID NewModalDialogBox(OTYMINEABOUTCTL,"About",128,40,WND)
+  RETURN
+ ENDIF
+END
+DEF OTYMINEABOUTONONCREATE WND,CTL,TYP,A1,A2
+ VAR LWND,E
+ NewWindow GetLabelControl(),"OTW Minesweeper",0,0,15*8,8,WND,0 OUT LWND,E
+ NewWindow GetButtonControl(),"OK",(128-24)/2,14,24,12,WND,0 OUT LWND,E
+END
+DEF OTYMINEABOUTONONNOTIF WND,CTL,TYP,A1,A2
+ VOID DeleteWindow(WND)
+END
+COMMON DEF I_OTYMINE
+ OTYMINE_MINE=1
+ OTYMINE_FLAG=32
+ OTYMINE_UNK=64
+ OTYMINE_MISS=128
+ OTYMINE_OPENED=16
+ OTYMINE_1=4
+ IF!CHKCALL("IsWinRunning")||!IsWinRunning()THEN
+  PrintConsole "Require window system"+LF$()
+  ExitProcess 1
+  RETURN
+ ENDIF
+ VAR WND,E
+ IF!OTYMINECTL THEN
+  OTYMINE_CTBL=NewArray(9)
+  OTYMINE_CTBL[1]=RGB(&H00,&H00,&HFF)
+  OTYMINE_CTBL[2]=RGB(&H00,&H80,&H00)
+  OTYMINE_CTBL[3]=RGB(&HFF,&H00,&H00)
+  OTYMINE_CTBL[4]=RGB(&H00,&H00,&H80)
+  OTYMINE_CTBL[5]=RGB(&H80,&H00,&H00)
+  OTYMINE_CTBL[6]=RGB(&H00,&H80,&H80)
+  OTYMINE_CTBL[7]=RGB(&H00,&H00,&H00)
+  OTYMINE_CTBL[8]=RGB(&H80,&H80,&H80)
+  OTYMINE_MENU_START=1
+  OTYMINE_MENU_EASY=2
+  OTYMINE_MENU_NORMAL=3
+  OTYMINE_MENU_HARD=4
+  OTYMINE_MENU_EXIT=5
+  OTYMINE_MENU_ABOUT=101
+  ExtendControl "OTYMINEWND",GetWindowControl() OUT OTYMINEWNDCTL,E
+  ExtendControl "OTYMINEABOUT",GetWindowControl() OUT OTYMINEABOUTCTL,E
+  NewControl "OTYMINE" OUT OTYMINECTL,E
+  IF SetControlNotifHandler(OTYMINEWNDCTL,"ONOTYMINENOTIF")THEN @ERR
+  IF SetControlPainter(OTYMINECTL,"ONOTYMINEPAINT")THEN @ERR
+  IF SetControlLMouseDownHandler(OTYMINECTL,"ONOTYMINELMD")THEN @ERR
+  IF SetControlLMouseUpHandler(OTYMINECTL,"ONOTYMINELMU")THEN @ERR
+  IF SetControlRMouseDownHandler(OTYMINECTL,"ONOTYMINERMD")THEN @ERR
+  IF SetControlDeleteHandler(OTYMINECTL,"ONOTYMINEDEL")THEN @ERR
+  IF SetControlCreateHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONCREATE")THEN @ERR
+  IF SetControlNotifHandler(OTYMINEABOUTCTL,"OTYMINEABOUTONONNOTIF")THEN @ERR
+ ENDIF
+ NewTopLevelMenuWindow OTYMINEWNDCTL,"Minesweeper",96,96 OUT WND,E
+ IF E THEN
+  E=DeleteWindow(WND)
+  GOTO @ERR
+ ENDIF
+ SetProcessVar WND
+ VAR MENU
+ NewMenu OUT MENU,E
+ AddMenuItem MENU,"Start",OTYMINE_MENU_START
+ AddMenuItemSeparator MENU
+ AddMenuItem MENU,"Easy",OTYMINE_MENU_EASY
+ AddMenuItem MENU,"Normal",OTYMINE_MENU_NORMAL
+ AddMenuItem MENU,"Hard",OTYMINE_MENU_HARD
+ AddMenuItemSeparator MENU
+ AddMenuItem MENU,"Exit",OTYMINE_MENU_EXIT
+ AddSubMenuItem GetWindowMenu(WND),"Game",MENU NewMenu OUT MENU,E
+ AddMenuItem MENU,"About",OTYMINE_MENU_ABOUT
+ AddSubMenuItem GetWindowMenu(WND),"Help",MENU
+ VAR MWND
+ NewWindow OTYMINECTL,"",0,0,96,96,WND,0 OUT MWND,E
+ IF E THEN
+  E=DeleteWindow(GetProcessVar())
+  E=DeleteWindow(WND)
+  GOTO @ERR
+ ENDIF
+ SetwindowVar WND,0,MWND
+ OTYMINE_INIT MWND
+ RETURN
+ @ERR
+ ExitProcess 1
+END
+COMMON DEF L_OTYMINE
+ IF UpdateWindow(GetProcessVar())THEN ExitProcess 1
+END
+
